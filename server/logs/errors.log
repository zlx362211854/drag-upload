[2019-01-28 15:20:51.626] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: 
     { content: '> 这是第一篇文档\n```\nconst  schema  =  mongoose.Schema({\n\nrole:  String, // 角色\n\nname:  String, // name\n\npass:  String,\n\ntype: { type:  String }, // 类型 \'0\'：新开账号 \'1\'：密码重置\n\ndeleted: { type:  Boolean, default:  false },\n\ncreate_time: { type:  Number, default:  getTime },\n\nupdate_time:  Number,\n\ncorrelate:  ObjectId\n\n});\n```' },
    key: undefined } ] 'results'
[2019-01-28 15:20:51.668] [INFO] http - ::ffff:127.0.0.1 - - "POST /posts/create HTTP/1.1" 200 13 "http://localhost:9000/document/new" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 15:20:55.044] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 15:20:55.053] [INFO] console - [ { _id: 5c4ead5328b191293cb6ed4e,
    title: '第一篇文档',
    author: '5c4a6b17c81cb7496c3570f4',
    type: 'public',
    __v: 0,
    create_time: 1548660051637,
    deleted: false },
  { _id: 5c4ea2ca3309a7963a0151e2,
    title: 'test zlx 4',
    author: '5c4a6b17c81cb7496c3570f4',
    type: 'public',
    __v: 0,
    create_time: 1548657354136,
    deleted: false },
  { _id: 5c4ea2c63309a7963a0151e1,
    title: 'test zlx 3',
    author: '5c4a6b17c81cb7496c3570f4',
    type: 'public',
    __v: 0,
    create_time: 1548657350862,
    deleted: false },
  { _id: 5c4ea2b83309a7963a0151e0,
    title: 'test zlx 2',
    author: '5c4a6b17c81cb7496c3570f4',
    type: 'public',
    __v: 0,
    create_time: 1548657336122,
    deleted: false } ] 'docs'
[2019-01-28 15:20:55.059] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 200 676 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 15:41:27.828] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 15:41:27.845] [INFO] console - [ { _id: 5c4ead5328b191293cb6ed4e,
    title: '第一篇文档',
    author: '5c4a6b17c81cb7496c3570f4',
    type: 'public',
    __v: 0,
    create_time: 1548660051637,
    deleted: false },
  { _id: 5c4ea2ca3309a7963a0151e2,
    title: 'test zlx 4',
    author: '5c4a6b17c81cb7496c3570f4',
    type: 'public',
    __v: 0,
    create_time: 1548657354136,
    deleted: false },
  { _id: 5c4ea2c63309a7963a0151e1,
    title: 'test zlx 3',
    author: '5c4a6b17c81cb7496c3570f4',
    type: 'public',
    __v: 0,
    create_time: 1548657350862,
    deleted: false },
  { _id: 5c4ea2b83309a7963a0151e0,
    title: 'test zlx 2',
    author: '5c4a6b17c81cb7496c3570f4',
    type: 'public',
    __v: 0,
    create_time: 1548657336122,
    deleted: false } ] 'docs'
[2019-01-28 15:41:27.850] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 15:46:04.579] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 15:46:04.604] [INFO] http - ::1 - - "GET /posts/getPost?id=5c4ead5328b191293cb6ed4e HTTP/1.1" 200 480 "" "PostmanRuntime/7.1.1"
[2019-01-28 15:48:05.016] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 15:48:05.044] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 15:48:16.637] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 15:48:16.643] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 15:48:20.760] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 15:48:20.765] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 15:48:50.001] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 15:48:50.005] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 15:48:53.888] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 15:48:53.891] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 15:49:37.236] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 15:49:37.245] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 15:49:48.439] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 15:49:48.446] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 15:50:04.051] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 15:50:04.079] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 15:50:13.096] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 15:50:13.100] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c4ead5328b191293cb6ed4e HTTP/1.1" 200 480 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 15:59:24.370] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 15:59:24.373] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 16:00:14.697] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 16:00:14.712] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 16:00:28.543] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 16:00:28.554] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 16:01:42.700] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 16:01:42.704] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 16:02:00.741] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 16:02:00.744] [WARN] http - undefined - - "GET /posts/getPost?id=5c4ead5328b191293cb6ed4e HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 16:03:18.932] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 16:03:18.961] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 16:03:35.792] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 16:03:35.826] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 16:03:39.106] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 16:03:39.112] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 16:03:49.390] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 16:03:49.394] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c4ead5328b191293cb6ed4e HTTP/1.1" 200 483 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 16:04:17.136] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 16:04:17.139] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 16:04:20.959] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 16:04:20.961] [WARN] http - undefined - - "GET /posts/getPost?id=5c4ead5328b191293cb6ed4e HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 16:05:10.774] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 16:05:10.777] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 16:05:20.066] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 16:05:20.082] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c4ead5328b191293cb6ed4e HTTP/1.1" 200 482 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 16:05:39.831] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 16:05:39.835] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c4ea2ca3309a7963a0151e2 HTTP/1.1" 200 123 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 16:05:42.664] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 16:05:42.667] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c4ea2c63309a7963a0151e1 HTTP/1.1" 200 123 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 16:05:44.943] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 16:05:44.945] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c4ea2b83309a7963a0151e0 HTTP/1.1" 200 123 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 16:06:15.826] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 16:06:15.828] [WARN] http - undefined - - "GET /posts/getPost?id=5c4ead5328b191293cb6ed4e HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 16:06:41.505] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 16:06:41.517] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 16:06:42.179] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 16:06:42.182] [WARN] http - undefined - - "GET /posts/getPost?id=5c4ead5328b191293cb6ed4e HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 16:10:27.425] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 16:10:27.442] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 16:10:28.370] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 16:10:28.372] [WARN] http - undefined - - "GET /posts/getPost?id=5c4ead5328b191293cb6ed4e HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 16:13:02.085] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 16:13:02.089] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 16:13:03.353] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 16:13:03.357] [WARN] http - undefined - - "GET /posts/getPost?id=5c4ead5328b191293cb6ed4e HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 16:15:01.668] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 16:15:01.673] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 16:15:03.799] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 16:15:03.801] [WARN] http - undefined - - "GET /posts/getPost?id=5c4ead5328b191293cb6ed4e HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 16:15:05.889] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 16:15:05.891] [WARN] http - undefined - - "GET /posts/getPost?id=5c4ead5328b191293cb6ed4e HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 16:18:41.855] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 16:18:41.870] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 16:18:52.821] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 16:18:52.826] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 16:20:02.163] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 16:20:02.188] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 16:20:02.861] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 16:20:02.865] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 16:23:00.502] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 16:23:00.507] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 16:23:05.629] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 16:23:05.641] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 16:23:44.018] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 16:23:44.032] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 16:24:52.928] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 16:24:52.936] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 16:24:57.023] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 16:24:57.028] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 16:25:30.088] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 16:25:30.101] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 16:25:44.651] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 16:25:44.661] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 200 676 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 16:28:17.524] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 16:28:17.532] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 16:28:22.195] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 16:28:22.198] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 16:28:44.118] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 16:28:44.139] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 16:28:48.355] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 16:28:48.359] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 16:29:32.802] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 16:29:32.806] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 16:29:55.854] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 16:29:55.861] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 16:29:59.011] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 16:29:59.016] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c4ead5328b191293cb6ed4e HTTP/1.1" 200 482 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 16:30:16.821] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 16:30:16.826] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 16:30:18.159] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 16:30:18.162] [WARN] http - undefined - - "GET /posts/getPost?id=5c4ead5328b191293cb6ed4e HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 16:31:41.293] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 16:31:41.298] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 16:31:44.596] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 16:31:44.597] [WARN] http - undefined - - "GET /posts/getPost?id=5c4ead5328b191293cb6ed4e HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 16:32:23.768] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 16:32:23.782] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 16:32:30.780] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 16:32:30.783] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 16:32:39.862] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 16:32:39.864] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 16:32:41.174] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 16:32:41.189] [WARN] http - undefined - - "GET /posts/getPost?id=5c4ead5328b191293cb6ed4e HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 16:32:43.793] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 16:32:43.800] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c4ea2ca3309a7963a0151e2 HTTP/1.1" 200 123 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 16:32:45.939] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 16:32:45.952] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c4ea2c63309a7963a0151e1 HTTP/1.1" 200 123 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 16:32:48.475] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 16:32:48.477] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c4ea2b83309a7963a0151e0 HTTP/1.1" 200 123 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 16:32:49.428] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 16:32:49.430] [WARN] http - undefined - - "GET /posts/getPost?id=5c4ead5328b191293cb6ed4e HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 16:32:55.080] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 16:32:55.085] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 16:33:12.317] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 16:33:12.320] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 16:54:48.882] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 16:54:48.918] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 200 676 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 16:54:52.574] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 16:54:52.578] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 16:55:05.433] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 16:55:05.439] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 16:55:09.829] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 16:55:09.832] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c4ead5328b191293cb6ed4e HTTP/1.1" 200 482 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 16:55:33.349] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 16:55:33.368] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 16:55:40.985] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 16:55:40.988] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 16:55:44.800] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 16:55:44.803] [WARN] http - undefined - - "GET /posts/getPost?id=5c4ead5328b191293cb6ed4e HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 17:40:52.614] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 17:40:52.635] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 200 32 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 17:41:28.667] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: 
     { content: '\n\n# 1 Node.js模块的实现\n\n之前在网上查阅了许多介绍Node.js的文章,可惜对于Node.js的模块机制大都着墨不多。在后续介绍模块的使用之前,我认为有必要深入一下Node.js的模块机制。\n\n## 1.1 CommonJS规范\n\n早在Netscape诞生不久后,JavaScript就一直在探索本地编程的路,Rhino是其代表产物。无奈那时服务端JavaScript走的路均是参考众多服务器端语言来实现的,在这样的背景之下,一没有特色,二没有实用价值。但是随着JavaScript在前端的应用越来越广泛,以及服务端JavaScript的推动,JavaScript现有的规范十分薄弱,不利于JavaScript大规模的应用。那些以JavaScript为宿主语言的环境中,只有本身的基础原生对象和类型,更多的对象和API都取决于宿主的提供,所以,我们可以看到JavaScript缺少这些功能:\n\n*   **JavaScript没有模块系统。**没有原生的支持密闭作用域或依赖管理。\n\n*   **JavaScript没有标准库。**除了一些核心库外,没有文件系统的API,没有IO流API等。\n\n*   **JavaScript没有标准接口。**没有如Web Server或者数据库的统一接口。\n\n*   **JavaScript没有包管理系统。**不能自动加载和安装依赖。\n\n于是便有了CommonJS([http://www.commonjs.org](http://www.commonjs.org))规范的出现,其目标是为了构建JavaScript在包括Web服务器,桌面,命令行工具,及浏览器方面的生态系统。**`CommonJS其实不是一门新的语言，甚至都不能说它是一个新的解释器——实际上它只是一个概念或者是一个规范`**。\n\n在这个规范中，**`它定义了很多 API ，讲通俗点或者直截了当点就是函数啊类啊什么的，而这些 API 是为那些普通应用程序（Native App）而非浏览器应用使用`**。它的终极目标就是提供一个类似于 Python、Ruby 之类的脚本一样的标准库，开发者可以用这样的东西一样来做到 Python、Ruby 能做到的事，而非仅仅局限于网页中的效果或者功能实现，它也可以跑在本地。所以说下面的事情对于 JavaScript 来说不再是梦：\n\n> 服务端JavaScript应用\n> \n> 命令行工具\n> \n> 图形界面应用\n> \n> 混合应用（Titanium、Adobe AIR等）\n\n那么，它具体弥补了前端JavaScript 的哪些空白呢？**`其实这也涉及了很多前端JavaScript 所没有涉及的东西，如二进制、编码、IO、文件、系统、断言测试、套接字、事件队列、Worker、控制台等等`**。\n\n**`CommonJS制定了解决这些问题的一些规范,而Node.js就是这些规范的一种实现`**。**`Node.js自身实现了require方法作为其引入模块的方法,同时NPM也基于CommonJS定义的包规范,实现了依赖管理和模块自动安装等功能`**。这里我们将深入一下Node.js的require机制和NPM基于包规范的应用。\n\n## 1.2 简单模块定义和使用\n\n在Node.js中,定义一个模块十分方便。我们以计算圆形的面积和周长两个方法为例,来表现Node.js中模块的定义方式。\n\n```\n￼var PI = Math.PI; \nexports.area = function (r) {\n    return PI * r * r;     \n};\nexports.circumference = function (r) { \n    return 2 * PI * r;\n};\n```\n\n将这个文件存为circle.js,并新建一个app.js文件,并写入以下代码:\n\n```\n￼var circle = require(\'./circle.js\');\nconsole.log(\'The area of a circle of radius 4 is\' + circle.area(4));\n```\n\n可以看到模块调用也十分方便,**`只需要require需要调用的文件即可`**。\n\n**`在require了这个文件之后,定义在exports对象上的方法便可以随意调用`**。Node.js将模块的定义和调用都封装得极其简单方便,从API对用户友好这一个角度来说,Node.js的模块机制是非常优秀的。\n\n例如把我们的服务器脚本放到一个叫做 start 的函数里，然后我们会导出这个函数。代码放在server.js文件：\n\n```\nvar http = require("http");\n\nfunction start() {\n    function onRequest(request, response) {\n        console.log("Request received.");\n        response.writeHead(200, {"Content-Type": "text/plain"});\n        response.write("Hello World");\n        response.end();\n    }\n\n    http.createServer(onRequest).listen(8888);\n    console.log("Server has started.");\n}\n\nexports.start = start;\n```\n\n这样，我们现在就可以创建我们的主文件 index.js 并在其中启动我们的HTTP了，虽然服务器的代码还在 server.js 中。创建 index.js 文件并写入以下内容：\n\n```\nvar server = require("./server");\n\nserver.start();\n```\n\n## 1.3 exports与module.exports的区别\n\n上一节已经使用了用来创建函数的exports对象，来导出一个模块（假设一个名为rocker.js的文件）：\n\n```\nexports.name = function() {\n    console.log(\'My name is Lemmy Kilmister\');\n};\n```\n\n然后你在另一个文件中调用：\n\n```\nvar rocker = require(\'./rocker.js\');\nrocker.name(); // \'My name is Lemmy Kilmister\'\n```\n\n但是module.exports到底是个什么玩意儿? 它合法吗？\n\n令人吃惊的是module.exports是真实存在的东西。**`exports只是module.exports的辅助方法。你的模块最终返回module.exports给调用者，而不是exports。exports所做的事情是收集属性，如果module.exports当前没有任何属性的话，exports会把这些属性赋予module.exports。如果module.exports已经存在一些属性的话，那么exports中所用的东西都会被忽略`**。\n\n把下面的内容放到rocker.js:\n\n```\nmodule.exports = \'ROCK IT!\';\nexports.name = function() {\n    console.log(\'My name is Lemmy Kilmister\');\n};\n```\n\n然后把下面的内容放到另一个文件中，执行它：\n\n```\nvar rocker = require(\'./rocker.js\');\nrocker.name(); // TypeError: Object ROCK IT! has no method \'name\'\n```\n\n**`rocker模块完全忽略了exports.name，然后返回了一个字符串\'ROCK IT!\'`**。通过上面的例子，你可能认识到你的模块不一定非得是模块实例（module instances）。**`你的模块可以是任何合法的JavaScript对象 - boolean，number，date，JSON， string，function，array和其他`**。你的模块可以是任何你赋予module.exports的值。**`如果你没有明确的给module.exports设置任何值，那么exports中的属性会被赋给module.exports中，然后并返回它`**。\n\n**在下面的情况下，你的模块是一个类：**\n\n```\nmodule.exports = function(name, age) {\n    this.name = name;\n    this.age = age;\n    this.about = function() {\n        console.log(this.name +\' is \'+ this.age +\' years old\');\n    };\n};\n```\n\n然后你应该这样使用它：\n\n```\nvar Rocker = require(\'./rocker.js\');\nvar r = new Rocker(\'Ozzy\', 62);\nr.about(); // Ozzy is 62 years old\n```\n\n**在下面的情况下，你的模块是一个数组：**\n\n```\nmodule.exports = [\'Lemmy Kilmister\', \'Ozzy Osbourne\', \'Ronnie James Dio\', \'Steven Tyler\', \'Mick Jagger\'];\n```\n\n然后你应该这样使用它：\n\n```\nvar rocker = require(\'./rocker.js\');\nconsole.log(\'Rockin in heaven: \' + rocker[2]); //Rockin in heaven: Ronnie James Dio\n```\n\n现在你应该找到要点了 - **`如果你想要你的模块成为一个特别的对象类型，那么使用module.exports；如果你希望你的模块成为一个传统的模块实例（module instance），使用exports`**。\n\n**把属性赋予module.exports的结果与把属性赋予给exports是一样的。看下面这个例子：**\n\n```\nmodule.exports.name = function() {\n    console.log(\'My name is Lemmy Kilmister\');\n};\n```\n\n下面这个做的是一样的事情：\n\n```\nexports.name = function() {\n    console.log(\'My name is Lemmy Kilmister\');\n};\n```\n\n但是请注意，它们并不是一样的东西。**`就像我之前说的module.exports是真实存在的东西，exports只是它的辅助方法`**。话虽如此，**`exports还是推荐的对象，除非你想把你模块的对象类型从传统的模块实例（module instance）修改为其他的`**。\n\n## 1.4 模块载入策略\n\nNode.js的模块分为两类,**`一类为原生(核心)模块,一类为文件模块`**。**`原生模块在Node.js源代码编译的时候编译进了二进制执行文件,加载的速度最快`**。另一类**`文件模块是动态加载的,加载速度比原生模块慢`**。但是**`Node.js对原生模块和文件模块都进行了缓存`**,于是在第二次require时,是不会有重复开销的。**`其中原生模块都被定义在lib这个目录下面,文件模块则不定性`**。\n\n```\n￼node app.js\n```\n\n**`由于通过命令行加载启动的文件几乎都为文件模块。`**我们从Node.js如何加载文件模块开始谈起。**`加载文件模块的工作,主要由原生模块module来实现和完成,该原生模块在启动时已经被加载,进程直接调用到runMain静态方法。`**\n\n```\n￼// bootstrap main module.\nModule.runMain = function () {\n    // Load the main module--the command line arg\n    Module._load(process.argv[1], null, true); \n};\n```\n\n_load静态方法在分析文件名之后执行：\n\n```\n￼var module = new Module(id, parent);\n```\n\n并根据文件路径缓存当前模块对象,该模块实例对象则根据文件名加载。\n\n```\n￼module.load(filename);\n```\n\n**`实际上在文件模块中,又分为3类模块`**。这三类文件模块以后缀来区分,Node.js会根据后缀名来决定加载方法：\n\n> **.js。**通过fs模块同步读取js文件并编译执行。\n> \n> **.node。**通过C/C++进行编写的Addon。通过dlopen方法进行加载。 \n> \n> **.json。**读取文件,调用JSON.parse解析加载。\n\n这里我们将详细描述js后缀的编译过程。**`Node.js在编译js文件的过程中实际完成的步骤有对js文件内容进行头尾包装`**。以app.js为例,包装之后的app.js将会变成以下形式:\n\n```\n￼(function (exports, require, module, __filename, __dirname) {\n    var circle = require(\'./circle.js\');\n    console.log(\'The area of a circle of radius 4 is \' + circle.area(4));\n});\n```\n\n这段代码会**`通过vm原生模块的runInThisContext方法执行(类似eval,只是具有明确上下文,不污染全局),返回为一个具体的function对象。最后传入module对象的exports,require方法,module,文件名,目录名作为实参并执行`**。\n\n**`这就是为什么require并没有定义在app.js文件中,但是这个方法却存在的原因`**。从Node.js的API文档中**`可以看到还有__filename、__dirname、module、 exports几个没有定义但是却存在的变量`**。其中__filename和__dirname在查找文件路径的过程中分析得到后传入的。**`module变量是这个模块对象自身,exports是在module的构造函数中初始化的一个空对象({},而不是 null)`**。\n\n在这个主文件中,可以通过require方法去引入其余的模块。**`而其实这个require方法实际调用的就是load方法`**。\n\nload方法在载入、编译、缓存了module后,返回module的exports对象。**`这就是circle.js文件中只有定义在exports对象上的方法才能被外部调用的原因`**。\n\n**以上所描述的模块载入机制均定义在lib/module.js中。**\n\n## 1.5 require方法中的文件查找策略\n\n由于Node.js中存在**`4类模块(原生模块和3种文件模块)`**,尽管require方法极其简单,但是内部的加载却是十分复杂的,其加载优先级也各自不同。\n\n![image](http://upload-images.jianshu.io/upload_images/5420078-56ec0eeb8a18f5cf.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n1.  **从文件模块缓存中加载**\n\n    尽管原生模块与文件模块的优先级不同,但是**`都不会优先于从文件模块的缓存`**中加载已经存在的模块。\n\n2.  **从原生模块加载**\n\n    **`原生模块的优先级仅次于文件模块缓存的优先级。`**require方法在解析文件名之后,优先检查模块是否在原生模块列表中。以http模块为例,尽管在目录下存在一个http/http.js/http.node/http.json文件,require(“http”)都不会从这些文件中加载,而是从原生模块中加载。\n\n    **`原生模块也有一个缓存区,同样也是优先从缓存区加载。`**如果缓存区没有被加载过,则调用原生模块的加载方式进行加载和执行。\n\n3.  **从文件加载**\n\n    当文件模块缓存中不存在,而且不是原生模块的时候,**Node.js会解析require方法传入的参数,并从文件系统中加载实际的文件**,加载过程中的包装和编译细节在前一节中已经介绍过,这里我们将详细描述查找文件模块的过程,其中, 也有一些细节值得知晓。\n\n**require方法接受以下几种参数的传递:**\n\n> http、fs、path等,原生模块。\n> \n> /mod或../mod,相对路径的文件模块。 \n> \n> /pathtomodule/mod,绝对路径的文件模块。 \n> \n> mod,非原生模块的文件模块。\n\n在进入路径查找之前有必要描述一下modulepath这个Node.js中的概念。**`对于每一个被加载的文件模块,创建这个模块对象的时候,这个模块便会有一个paths属性,其值根据当前文件的路径计算得到`**。我们创建modulepath.js这样一个文件,其内容为:\n\n```\nconsole.log(module.paths);\n```\n\n我们将其放到任意一个目录中执行node modulepath.js命令,将得到以下的输出结果：\n\n```\n[\n    \'/home/jackson/research/node_modules\',\n    \'/home/jackson/node_modules\',\n    \'/home/node_modules\',\n    \'/node_modules\'\n]\n```\n\n可以看出module path的生成规则为：**`从当前文件目录开始查找node_modules目录;然后依次进入父目录,查找父目录下的node_modules目录;依次迭代, 直到根目录下的node_modules目录。`**\n\n除此之外还有一个全局module path,**`是当前node执行文件的相对目录 (../../lib/node)`。`如果在环境变量中设置了HOME目录和NODE_PATH目录的话,整个路径还包含NODE_PATH和HOME目录下的.node_libraries 与.node_modules`**。其最终值大致如下:\n\n```\n[\n    NODE_PATH,\n    HOME/.node_modules,\n    HOME/.node_libraries,\n    execPath/../../lib/node\n]\n```\n\n**下图是笔者从源代码中整理出来的整个文件查找流程：**\n\n![image](http://upload-images.jianshu.io/upload_images/5420078-1f19f476cf5e1d3d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\n\n简而言之,**`如果require绝对路径的文件,查找时不会去遍历每一个node_modules目录,其速度最快`**。其余流程如下:\n\n> 1.  从modulepath数组中取出第一个目录作为查找基准。\n>     \n>     \n>     \n> \n> 2.  直接从目录中查找该文件,如果存在,则结束查找。如果不存在,则进行下一条查找。\n>     \n>     \n>     \n> \n> 3.  尝试添加.js、.json、.node后缀后查找,如果存在文件,则结束查找。如果不存在,则进行下一条。\n>     \n>     \n>     \n> \n> 4.  尝试将require的参数作为一个包来进行查找,读取目录下的package.json文件,取得main参数指定的文件。\n>     \n>     \n>     \n> \n> 5.  尝试查找该文件,如果存在,则结束查找。如果不存在,则进行第3条查找。\n>     \n>     \n>     \n> \n> 6.  如果继续失败,则取出modulepath数组中的下一个目录作为基准查找,循环第1至5个步骤。\n>     \n>     \n>     \n> \n> 7.  如果继续失败,循环第1至6个步骤,直到modulepath中的最后一个值。\n>     \n>     \n>     \n> \n> 8.  如果仍然失败,则抛出异常。\n\n整个查找过程十分类似原型链的查找和作用域的查找。`所幸Node.js对路径查找实现了缓存机制`,否则由于每次判断路径都是同步阻塞式进行,会导致严重的性能消耗。\n\n## 1.6 包结构\n\n前面提到JavaScript缺少包结构。CommonJS致力于改变这种现状,于是定义了包的结构规范([http://wiki.commonjs.org/wiki/Packages/1.0](http://wiki.commonjs.org/wiki/Packages/1.0))。**`而NPM的出现则是为了在CommonJS规范的基础上,实现解决包的安装卸载,依赖管理,版本管理等问题`**。require的查找机制明了之后,我们来看一下包的细节。\n\n**一个符合CommonJS规范的包应该是如下这种结构:**\n\n> 一个package.json文件应该存在于包顶级目录下。\n> \n> 二进制文件应该包含在bin目录下。 \n> \n> JavaScript代码应该包含在lib目录下。 \n> \n> 文档应该在doc目录下。 \n> \n> 单元测试应该在test目录下。\n\n由上文的require的查找过程可以知道,**`Node.js在没有找到目标文件时,会将当前目录当作一个包来尝试加载,所以在package.json文件中最重要的一个字段就是main`**。而实际上,这一处是Node.js的扩展,标准定义中并不包含此字段, **`对于require,只需要main属性即可`**。但是在除此之外包需要接受安装、卸载、依赖管理,版本管理等流程,所以CommonJS为package.json文件定义了如下一些必须的字段:\n\n> name : 包名,需要在NPM上是唯一的。不能带有空格。 \n> \n> description : 包简介。通常会显示在一些列表中。 \n> \n> version : 版本号。一个语义化的版本号([http://semver.org/](http://semver.org/)),通常为x.y.z。该版本号十分重要,常常用于一些版本控制的场合。\n> \n> keywords : 关键字数组。用于NPM中的分类搜索。\n> \n> maintainers : 包维护者的数组。数组元素是一个包含name、email、web三个属性的JSON对象。\n> \n> contributors : 包贡献者的数组。第一个就是包的作者本人。在开源社区,如果提交的patch被merge进master分支的话,就应当加上这个贡献patch的人。格式包含name和email。\n> \n> ```\n>  ￼"contributors": [{\n>          "name": "Jackson Tian", "email": "mail @gmail.com"\n>      }, {\n>          "name": "fengmk2", "email": "mail2@gmail.com"\n>  }],\n> ```\n> \n> bugs : 一个可以提交bug的URL地址。可以是邮件地址 (mailto:mailxx@domain),也可以是网页地址([http://url)。](http://url)%E3%80%82)\n> \n> licenses : 包所使用的许可证。例如:\n> \n> ```\n>  ￼"licenses": [{\n>      "type": "GPLv2",\n>      "url": "http://www.example.com/licenses/gpl.html",\n>  }]\n> ```\n> \n> repositories : 托管源代码的地址数组。\n> \n> dependencies : 当前包需要的依赖。这个属性十分重要,NPM会通过这个属性,帮你自动加载依赖的包。\n\n**以下是Express框架的package.json文件,值得参考：**\n\n```\n{\n  "_args": [\n    [\n      "express@~4.13.1",\n      "/Users/TaoBangren/git@osc/king-node"\n    ]\n  ],\n  "_from": "express@>=4.13.1 <4.14.0",\n  "_id": "express@4.13.3",\n  "_inCache": true,\n  "_installable": true,\n  "_location": "/express",\n  "_npmUser": {\n    "email": "doug@somethingdoug.com",\n    "name": "dougwilson"\n  },\n  "_npmVersion": "1.4.28",\n  "_phantomChildren": {},\n  "_requested": {\n    "name": "express",\n    "raw": "express@~4.13.1",\n    "rawSpec": "~4.13.1",\n    "scope": null,\n    "spec": ">=4.13.1 <4.14.0",\n    "type": "range"\n  },\n  "_requiredBy": [\n    "/"\n  ],\n  "_resolved": "https://registry.npmjs.org/express/-/express-4.13.3.tgz",\n  "_shasum": "ddb2f1fb4502bf33598d2b032b037960ca6c80a3",\n  "_shrinkwrap": null,\n  "_spec": "express@~4.13.1",\n  "_where": "/Users/TaoBangren/git@osc/king-node",\n  "author": {\n    "email": "tj@vision-media.ca",\n    "name": "TJ Holowaychuk"\n  },\n  "bugs": {\n    "url": "https://github.com/strongloop/express/issues"\n  },\n  "contributors": [\n    {\n      "name": "Aaron Heckmann",\n      "email": "aaron.heckmann+github@gmail.com"\n    },\n    {\n      "name": "Ciaran Jessup",\n      "email": "ciaranj@gmail.com"\n    },\n    {\n      "name": "Douglas Christopher Wilson",\n      "email": "doug@somethingdoug.com"\n    },\n    {\n      "name": "Guillermo Rauch",\n      "email": "rauchg@gmail.com"\n    },\n    {\n      "name": "Jonathan Ong",\n      "email": "me@jongleberry.com"\n    },\n    {\n      "name": "Roman Shtylman",\n      "email": "shtylman+expressjs@gmail.com"\n    },\n    {\n      "name": "Young Jae Sim",\n      "email": "hanul@hanul.me"\n    }\n  ],\n  "dependencies": {\n    "accepts": "~1.2.12",\n    "array-flatten": "1.1.1",\n    "content-disposition": "0.5.0",\n    "content-type": "~1.0.1",\n    "cookie": "0.1.3",\n    "cookie-signature": "1.0.6",\n    "debug": "~2.2.0",\n    "depd": "~1.0.1",\n    "escape-html": "1.0.2",\n    "etag": "~1.7.0",\n    "finalhandler": "0.4.0",\n    "fresh": "0.3.0",\n    "merge-descriptors": "1.0.0",\n    "methods": "~1.1.1",\n    "on-finished": "~2.3.0",\n    "parseurl": "~1.3.0",\n    "path-to-regexp": "0.1.7",\n    "proxy-addr": "~1.0.8",\n    "qs": "4.0.0",\n    "range-parser": "~1.0.2",\n    "send": "0.13.0",\n    "serve-static": "~1.10.0",\n    "type-is": "~1.6.6",\n    "utils-merge": "1.0.0",\n    "vary": "~1.0.1"\n  },\n  "description": "Fast, unopinionated, minimalist web framework",\n  "devDependencies": {\n    "after": "0.8.1",\n    "body-parser": "~1.13.3",\n    "connect-redis": "~2.4.1",\n    "cookie-parser": "~1.3.5",\n    "cookie-session": "~1.2.0",\n    "ejs": "2.3.3",\n    "express-session": "~1.11.3",\n    "istanbul": "0.3.17",\n    "jade": "~1.11.0",\n    "marked": "0.3.5",\n    "method-override": "~2.3.5",\n    "mocha": "2.2.5",\n    "morgan": "~1.6.1",\n    "multiparty": "~4.1.2",\n    "should": "7.0.2",\n    "supertest": "1.0.1",\n    "vhost": "~3.0.1"\n  },\n  "directories": {},\n  "dist": {\n    "shasum": "ddb2f1fb4502bf33598d2b032b037960ca6c80a3",\n    "tarball": "http://registry.npmjs.org/express/-/express-4.13.3.tgz"\n  },\n  "engines": {\n    "node": ">= 0.10.0"\n  },\n  "files": [\n    "History.md",\n    "LICENSE",\n    "Readme.md",\n    "index.js",\n    "lib/"\n  ],\n  "gitHead": "ef7ad681b245fba023843ce94f6bcb8e275bbb8e",\n  "homepage": "http://expressjs.com/",\n  "keywords": [\n    "api",\n    "app",\n    "express",\n    "framework",\n    "rest",\n    "restful",\n    "router",\n    "sinatra",\n    "web"\n  ],\n  "license": "MIT",\n  "maintainers": [\n    {\n      "name": "tjholowaychuk",\n      "email": "tj@vision-media.ca"\n    },\n    {\n      "name": "jongleberry",\n      "email": "jonathanrichardong@gmail.com"\n    },\n    {\n      "name": "dougwilson",\n      "email": "doug@somethingdoug.com"\n    },\n    {\n      "name": "rfeng",\n      "email": "enjoyjava@gmail.com"\n    },\n    {\n      "name": "aredridel",\n      "email": "aredridel@dinhe.net"\n    },\n    {\n      "name": "strongloop",\n      "email": "callback@strongloop.com"\n    },\n    {\n      "name": "defunctzombie",\n      "email": "shtylman@gmail.com"\n    }\n  ],\n  "name": "express",\n  "optionalDependencies": {},\n  "readme": "ERROR: No README data found!",\n  "repository": {\n    "type": "git",\n    "url": "git+https://github.com/strongloop/express.git"\n  },\n  "scripts": {\n    "test": "mocha --require test/support/env --reporter spec --bail --check-leaks test/ test/acceptance/",\n    "test-ci": "istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --require test/support/env --reporter spec --check-leaks test/ test/acceptance/",\n    "test-cov": "istanbul cover node_modules/mocha/bin/_mocha -- --require test/support/env --reporter dot --check-leaks test/ test/acceptance/",\n    "test-tap": "mocha --require test/support/env --reporter tap --check-leaks test/ test/acceptance/"\n  },\n  "version": "4.13.3"\n}\n```\n\n除了前面提到的几个必选字段外,我们还发现了一些额外的字段,如bin、 scripts、engines、devDependencies、author。**`这里可以重点提及一下scripts字段。包管理器(NPM)在对包进行安装或者卸载的时候需要进行一些编译或者清除的工作,scripts字段的对象指明了在进行操作时运行哪个文件,或者执行拿条命令`**。如下为一个较全面的scripts案例:\n\n```\n￼"scripts": {\n    "install": "install.js",\n    "uninstall": "uninstall.js",\n    "build": "build.js",\n    "doc": "make-doc.js",\n    "test": "test.js"\n}\n```\n\n如果你完善了自己的JavaScript库,使之实现了CommonJS的包规范,那么你可以通过NPM来发布自己的包,为NPM上5000+的基础上再加一个模块。\n\n```\n￼npm publish <folder>\n```\n\n命令十分简单。但是在这之前你需要通过npm adduser命令在NPM上注册一个帐户,以便后续包的维护。NPM会分析该文件夹下的package.json文件,然后上传目录到NPM的站点上。用户在使用你的包时,也十分简明:\n\n```\n￼npm install <package>\n```\n\n甚至对于NPM无法安装的包(因为某些奇怪的网络原因),可以通过github手动下载其稳定版本,解压之后通过以下命令进行安装:\n\n```\n￼npm install <package.json folder>\n```\n\n**`只需将路径指向package.json存在的目录即可`**。然后在代码中require(\'package\')即可使用。\n\nNode.js中的require内部流程之复杂,而方法调用之简单,实在值得叹为观止。更多NPM使用技巧可以参见[http://www.infoq.com/cn/articles/msh-using-npm-manage-node.js-dependence](http://www.infoq.com/cn/articles/msh-using-npm-manage-node.js-dependence)。\n\n# 2 Node.js模块与前端模块的异同\n\n通常有一些模块可以同时适用于前后端,**`但是在浏览器端通过script标签的载入JavaScript文件的方式与Node.js不同`**。\n\n> Node.js在载入到最终的执行中,进行了包装,**`使得每个文件中的变量天然的形成在一个闭包之中,不会污染全局变量`**。\n> \n> **`浏览器端则通常是裸露的JavaScript代码片段`**。\n\n所以为了解决前后端一致性的问题,**`类库开发者需要将类库代码包装在一个闭包内`**。以下代码片段**`抽取自著名类库underscore的定义方式`**。\n\n```\n￼(function () {\n    // Establish the root object, `window` in the browser, or `global` on the server.\n    var root = this;\n    var _ = function (obj) {\n        return new wrapper(obj);   \n    };\n    if (typeof exports !== \'undefined\') {\n        if (typeof module !== \'undefined\' && module.exports) {\n            exports = module.exports = _;\n        }\n        exports._ = _;\n    } else if (typeof define === \'function\' && define.amd) {\n        // Register as a named module with AMD.\n        define(\'underscore\', function () {\n            return _;\n        });    \n    } else {\n        root[\'_\'] = _;        \n    }\n}).call(this);\n```\n\n首先,**`它通过function定义构建了一个闭包,将this作为上下文对象直接call调用`**,以避免内部变量污染到全局作用域。**`进而通过判断exports是否存在来决定将局部变量_绑定给exports,并且根据define变量是否存在`**,作为处理在实现了AMD规范环境([http://wiki.commonjs.org/wiki/Modules/AsynchronousDefinition](http://wiki.commonjs.org/wiki/Modules/AsynchronousDefinition))下的使用案例。**`仅只当处于浏览器的环境中的时候,this指向的是全局对象(window对象),才将_变量赋在全局对象上,作为一个全局对象的方法导出,以供外部调用`**。\n\n**所以在设计前后端通用的JavaScript类库时,都有着以下类似的判断:**\n\n```\n￼if (typeof exports !== "undefined") {\n    exports.EventProxy = EventProxy;\n} else {\n    this.EventProxy = EventProxy;\n}\n```\n\n即,**`如果exports对象存在,则将局部变量挂载在exports对象上,如果不存在,则挂载在全局对象上`**。\n\n转自作者：陶邦仁\n链接：http://www.jianshu.com/p/3cfa31ae5631\n來源：简书\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。\n' },
    key: undefined } ] 'results'
[2019-01-28 17:41:28.739] [INFO] http - ::ffff:127.0.0.1 - - "POST /posts/create HTTP/1.1" 200 13 "http://localhost:9000/document/new" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 17:41:30.425] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 17:41:30.429] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 200 208 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 17:41:31.815] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 17:41:31.819] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c4ece48a88b3def41a39e32 HTTP/1.1" 200 28519 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 17:44:13.148] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 17:44:13.165] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 17:44:16.035] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 17:44:16.040] [WARN] http - undefined - - "GET /posts/getPost?id=5c4ece48a88b3def41a39e32 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 17:45:50.382] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 17:45:50.385] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 17:46:36.223] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 17:46:36.228] [WARN] http - undefined - - "GET /posts/getPost?id=5c4ece48a88b3def41a39e32 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 17:47:25.490] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 17:47:25.493] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 17:47:33.825] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 17:47:33.830] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 17:47:37.209] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 17:47:37.213] [WARN] http - undefined - - "GET /posts/getPost?id=5c4ece48a88b3def41a39e32 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 17:47:56.774] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 17:47:56.777] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 17:48:07.080] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 17:48:07.084] [WARN] http - undefined - - "GET /posts/getPost?id=5c4ece48a88b3def41a39e32 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 17:48:47.192] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 17:48:47.198] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 17:51:23.492] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 17:51:23.494] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 17:51:26.754] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 17:51:26.756] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 17:51:33.492] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 17:51:33.494] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 200 208 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 17:51:49.908] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 17:51:49.911] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 17:52:32.360] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 17:52:32.366] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 17:53:20.889] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 17:53:20.893] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 17:53:23.681] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 17:53:23.683] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c4ece48a88b3def41a39e32 HTTP/1.1" 200 28519 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 17:53:44.620] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 17:53:44.623] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 17:53:47.404] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 17:53:47.407] [WARN] http - undefined - - "GET /posts/getPost?id=5c4ece48a88b3def41a39e32 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 17:54:43.829] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 17:54:43.835] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 17:54:44.679] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 17:54:44.681] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 17:54:46.723] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 17:54:46.725] [WARN] http - undefined - - "GET /posts/getPost?id=5c4ece48a88b3def41a39e32 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 17:54:55.940] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 17:54:55.945] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 17:54:57.910] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 17:54:57.915] [WARN] http - undefined - - "GET /posts/getPost?id=5c4ece48a88b3def41a39e32 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 17:55:39.194] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: 
     { content: '# 两封信\n\n作者： 阮一峰\n\n日期：2005年9月6日\n\n一、\n\n1791年出版的《约翰逊传》（The life of Samuel Johnson）是文学史上最重要的传记之一。最近，我就在看此书的节译本（中国社会科学出版社，2004）。\n\n这本传记收录了约翰逊的一封信，引起了我的兴趣。\n\n1747年，约翰逊想编一本英语词典，写了一份计划书交给书商。后者建议词典出版时，在前面写上献给齐斯特菲尔特伯爵（Earl of Chesterfield），以换取伯爵的资助。约翰逊同意了，他当时生活很拮据。哪知伯爵对词典根本不感兴趣，漠不关心，这令约翰逊极为不满。\n\n1754年，历经千辛万苦，词典终于编成。伯爵听说后，幻想约翰逊不改初衷，还会把这本巨著献给他，于是在报纸上撰写了两篇文章，对这本词典大加赞美。\n\n《约翰逊传》这样写道：\n\n> “如果没有过去的不愉快事件，约翰逊一定受宠若惊，欣喜异常。一般说来，约翰逊很喜欢接受别人的赞美，尤其被一个具有显赫身份以及伟大成就的人赞美，更令他心中感激不已。可是这次，伯爵圆滑的策略却没有收到预期的效果。约翰逊对伯爵的甜言蜜语完全无动于衷。”\n\n他给伯爵回了一封信。这封信非常出名，很多英语文选中都收录了它。我读后，觉得约翰逊不仅会编词典，讽刺挖苦的本领也是一流。下面就是我翻译的这封信。\n\n> 《致齐斯特菲尔特伯爵》\n>\n> 1755年2月7日\n>\n> 尊敬的伯爵阁下，\n>\n> 最近，我从《世界日报》的业主处得知，该报上两篇推荐我所著字典的文章出自您之手。能够得到您的赞扬，这真是一种荣耀，但是由于我还不适应得到伟大人物的垂青，所以我不知该如何妥善接受，或用何等言语表达我的感激之情。\n>\n> 昔日，我曾受鼓动去拜访您，像其他人一样，我也被您言辞的魅力所打动，以至我情不自禁地希望自己能自夸是世界征服者的征服者，得到全世界都为之羡慕的重视。但是，我发现我的拜见并不受到欢迎，无论是出于自尊，还是出于谦逊，都使我无法再继续拜访您了。我曾当众向您致意过一次，这已经耗尽了我这个无名且无礼的学者所拥有的全部讨好的本事了。我已经做了我能做的一切了，没有人会愿意见到自己的努力被忽视，哪怕这种努力是如此微不足道。\n>\n> 尊敬的伯爵，自从我在您的接待室中苦苦等待、并被您拒之门外以后，七年已经过去了。在这段时间中，我克服种种困难，一直在推进我的工作。现在，再抱怨那些困难是没有用的，好在我的作品终于要出版了。在这七年中，您没有给过我一次支持，一句鼓励，甚至一个赞许的微笑。我并不期待这种待遇，因为以前我从没有过赞助人（Patron）。\n>\n> 在维吉尔的作品中，牧羊人最终找到了爱神，却发现他完全是铁石心肠。\n>\n> 尊敬的伯爵，难道赞助人是这样一种人吗，当有人溺水挣扎，他无动于衷，而等落水者上岸以后，他反倒给予援助？要是您以前曾关心过我的工作，那它将让我感到温暖；可是它姗姗来迟，直到现在我终于无所谓了，对它不再有丝毫欣赏；我已经习惯孤独，（我的妻子三年前去世了），我已经无法与人共享它了；而且现在我的工作已为人所知，也不再需要它了。既然没有任何受益，我想否认得到过您的恩惠，不使公众误解您是我的赞助人，也不会太过偏激吧。上帝会同意我这样做的。\n>\n> 迄今为止，我的工作所得到的学界领袖的帮助接近于无，我对此并不失望，即使帮助变得更少（如果发生这种情况的话），我也能完成我的工作。尊敬的伯爵，我早就不做美梦了，在那些梦里，我曾一度洋洋得意的自诩为\n>\n> 您最谦卑和服从的仆人，\n>\n> 塞缪尔.约翰逊\n\n二、\n\n在翻译的过程中，我不由想到了另一封信。\n\n在罗曼·罗兰的小说《约翰.克里斯朵夫》中，少年克里斯朵夫受到了克里赫太太的轻视。他无比愤怒，提笔写下了下面这封信。\n\n> 太太，我不知是不是像你所说的，你错看了我。我只知道我错看了你，吃了大亏。\n>\n> 我以为你们是我的朋友。你也这么说，面上也做得仿佛真是我的朋友，而我爱你们还远过于我的生命。现在我知道这些都是假的，你对我的亲热完全是骗人：你利用我，把我当消遣，替你们弄弄音乐，----我是你们的仆人。哼，我可不是你们的仆人！也不是任何人的仆人！\n>\n> 你那么无情的要我知道，我没有权利爱你的女儿。可是我的心要爱什么人，世界上无论什么也阻止不了；即使我没有你的门第，我可是和你一样高贵。唯有心才能使人高贵：我尽管不是一个伯爵，我的品德也许超过多少伯爵的品德。当差的也罢，伯爵也罢，只要侮辱了我，我都瞧不起他。所有那些自命高贵而没有高贵的心灵的人，我都看做象块污泥。\n>\n> 再会吧！你看错了我，欺骗了我。我瞧不起你。\n>\n> 我是不管你怎么样，始终爱着弥娜小姐爱到死的人。----（因为她是我的，什么都不能把她从我心里夺去的。）\n\n这封信和上一封信都是一个卑微者受到侮辱以后，充满自尊和愤怒的反击。虽然两者语气有轻重之分，但都清晰地发出了内心的呐喊，不管是谁，“只要侮辱了我，我都瞧不起他”！\n\n高中里，我第一次读《约翰.克里斯朵夫》，<u>这一封信让我体会到了什么叫做高贵的人格</u>。<u>这么多年过去了，在现实的压磨之下，我自问没有勇气和自信，当面斥责那些让我们灵魂蒙羞的人和事。对不堪的现实，我早已习以为常，变得妥协、恭顺和服从了。</u>\n\n那么就让我把这两封信记录下来，当作心灵的镜子。它们至少说明了，世界上存在过这样“威武不能屈，富贵不能淫，贫贱不能移”的灵魂，从而使我们依然有所期待、有所坚持。\n\n[\n](http://www.ruanyifeng.com/road/2005/2005-08-08-lyrics.html)' },
    key: undefined } ] 'results'
[2019-01-28 17:55:39.203] [INFO] http - ::ffff:127.0.0.1 - - "POST /posts/create HTTP/1.1" 200 13 "http://localhost:9000/document/new" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 17:55:40.696] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 17:55:40.699] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 200 367 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 17:55:42.173] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 17:55:42.175] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c4ed19ba88b3def41a39e33 HTTP/1.1" 200 6558 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 17:55:48.224] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 17:55:48.226] [WARN] http - undefined - - "GET /posts/getPost?id=5c4ece48a88b3def41a39e32 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 17:55:51.525] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 17:55:51.527] [WARN] http - undefined - - "GET /posts/getPost?id=5c4ed19ba88b3def41a39e33 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 17:55:53.517] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 17:55:53.523] [WARN] http - undefined - - "GET /posts/getPost?id=5c4ece48a88b3def41a39e32 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 17:57:30.214] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 17:57:30.216] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 17:57:32.430] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 17:57:32.431] [WARN] http - undefined - - "GET /posts/getPost?id=5c4ed19ba88b3def41a39e33 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 17:57:35.291] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 17:57:35.293] [WARN] http - undefined - - "GET /posts/getPost?id=5c4ece48a88b3def41a39e32 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 17:58:22.671] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 17:58:22.676] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 17:58:23.277] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 17:58:23.281] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 17:58:26.260] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 17:58:26.263] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 17:58:40.249] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 17:58:40.251] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 17:58:43.154] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 17:58:43.156] [WARN] http - undefined - - "GET /posts/getPost?id=5c4ed19ba88b3def41a39e33 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 17:58:47.520] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 17:58:47.524] [WARN] http - undefined - - "GET /posts/getPost?id=5c4ece48a88b3def41a39e32 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 17:59:40.887] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 17:59:40.891] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 17:59:53.944] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 17:59:53.946] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 17:59:55.442] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 17:59:55.444] [WARN] http - undefined - - "GET /posts/getPost?id=5c4ed19ba88b3def41a39e33 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 17:59:58.186] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 17:59:58.190] [WARN] http - undefined - - "GET /posts/getPost?id=5c4ece48a88b3def41a39e32 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 18:00:00.888] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 18:00:00.890] [WARN] http - undefined - - "GET /posts/getPost?id=5c4ed19ba88b3def41a39e33 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 18:00:03.428] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 18:00:03.431] [WARN] http - undefined - - "GET /posts/getPost?id=5c4ece48a88b3def41a39e32 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 18:00:10.787] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 18:00:10.790] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 18:00:25.573] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 18:00:25.576] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 18:00:27.514] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 18:00:27.516] [WARN] http - undefined - - "GET /posts/getPost?id=5c4ed19ba88b3def41a39e33 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 18:00:29.629] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 18:00:29.632] [WARN] http - undefined - - "GET /posts/getPost?id=5c4ece48a88b3def41a39e32 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 18:00:36.996] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 18:00:36.998] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 18:00:37.934] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 18:00:37.937] [WARN] http - undefined - - "GET /posts/getPost?id=5c4ed19ba88b3def41a39e33 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 18:00:39.479] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 18:00:39.489] [WARN] http - undefined - - "GET /posts/getPost?id=5c4ece48a88b3def41a39e32 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 18:00:42.165] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 18:00:42.167] [WARN] http - undefined - - "GET /posts/getPost?id=5c4ed19ba88b3def41a39e33 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 18:00:43.881] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 18:00:43.883] [WARN] http - undefined - - "GET /posts/getPost?id=5c4ece48a88b3def41a39e32 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 18:00:50.284] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 18:00:50.287] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 18:00:51.322] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 18:00:51.325] [WARN] http - undefined - - "GET /posts/getPost?id=5c4ed19ba88b3def41a39e33 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 18:00:53.473] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 18:00:53.476] [WARN] http - undefined - - "GET /posts/getPost?id=5c4ece48a88b3def41a39e32 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 18:01:04.197] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 18:01:04.200] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 18:01:19.670] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 18:01:19.674] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 18:01:23.333] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 18:01:23.335] [WARN] http - undefined - - "GET /posts/getPost?id=5c4ed19ba88b3def41a39e33 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 18:01:25.278] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 18:01:25.281] [WARN] http - undefined - - "GET /posts/getPost?id=5c4ece48a88b3def41a39e32 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 18:01:28.111] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 18:01:28.117] [WARN] http - undefined - - "GET /posts/getPost?id=5c4ed19ba88b3def41a39e33 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 18:01:30.050] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 18:01:30.053] [WARN] http - undefined - - "GET /posts/getPost?id=5c4ece48a88b3def41a39e32 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 19:01:19.474] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 19:01:19.483] [WARN] http - undefined - - "GET /posts/getPost?id=5c4ece48a88b3def41a39e32 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 19:01:25.035] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 19:01:25.038] [WARN] http - undefined - - "GET /posts/getPost?id=5c4ece48a88b3def41a39e32 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 19:08:51.073] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: 
     { content: '##react组件传值，大概有下面几种方法：\n- props\n- context\n- redux\n- react-router 路由切换时通过url传值（少量非机密数据，其实也是props传）。\n\n##今天记录一下通过redux来传值的实现。\n我们先写一个createAction的函数：\n```\nexport function setAnalysisParams(params) {\n  return {\n    type: SET_ANALYSIS_PARAMS,\n    result: params\n  }\n}\n```\n在reducer里面：\n```\nexport default function reducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case SET_ANALYSIS_PARAMS:\n      return {\n        ...state,\n        params: action.result\n      };\n    default:\n      return state;\n  }\n```\n当action触发reducer时，会把action的result传给reducer的params。写好这里，我们就可以在组件中传给adction params了。\n```\n@connect(\n  () => ({\n  }),\n  {\n    setAnalysisParams\n  })\n```\n先把actionCreator拿出来。\n在组件的某个需要的地方，可以直接向它传我们要放进redux里的数据：\n```\nthis.props.setAnalysisParams({\n        someModels\n      });\n```\n这时，我们就可以在另外一个组件中取到刚刚放进去的数据。\n另外一个组件：\n```\n@connect(\n  state => ({\n    example: state.clinic.params\n  }),\n  {}\n)\n```\n把redux中的params数据映射到example上。\n下面，就可以用了：\n```\n const {someNames, ...} = this.props.example; //取出数据名\n```\n以上，就实现了redux来传值的方法。适合非父子组件且嵌套关系复杂的组件之间数据的传递。\n\n\n' },
    key: undefined } ] 'results'
[2019-01-28 19:08:51.098] [INFO] http - ::ffff:127.0.0.1 - - "POST /posts/create HTTP/1.1" 200 13 "http://localhost:9000/document/new" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 19:08:52.901] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 19:08:52.910] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 200 568 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 19:08:56.471] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 19:08:56.473] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c4ee2c3a88b3def41a39e34 HTTP/1.1" 200 1717 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 19:12:36.750] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 19:12:36.763] [WARN] http - undefined - - "GET /posts/getPost?id=5c4ed19ba88b3def41a39e33 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 19:13:08.158] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 19:13:08.164] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 19:13:12.559] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 19:13:12.562] [WARN] http - undefined - - "GET /posts/getPost?id=5c4ee2c3a88b3def41a39e34 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 19:15:16.524] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 19:15:16.532] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 19:15:32.803] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 19:15:32.808] [WARN] http - undefined - - "GET /posts/getPost?id=5c4ed19ba88b3def41a39e33 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 21:25:26.801] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 21:25:26.900] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 200 568 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 21:26:51.934] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 21:26:51.952] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 21:29:20.154] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 21:29:20.167] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 21:32:06.574] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 21:32:06.586] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 21:32:25.852] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 21:32:25.871] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 21:32:35.650] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 21:32:35.654] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 21:32:51.219] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 21:32:51.243] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c4ee2c3a88b3def41a39e34 HTTP/1.1" 200 1717 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 21:32:55.715] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 21:32:55.721] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 21:34:58.326] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 21:34:58.333] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c4ed19ba88b3def41a39e33 HTTP/1.1" 200 6558 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 21:35:01.313] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 21:35:01.315] [WARN] http - undefined - - "GET /posts/getPost?id=5c4ee2c3a88b3def41a39e34 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-28 21:35:04.488] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-28 21:35:04.491] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 08:51:47.250] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 08:51:47.281] [WARN] http - undefined - - "GET /posts/getPost?id=5c4ee2c3a88b3def41a39e34 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 10:19:56.512] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 10:19:56.544] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 200 568 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 10:20:02.717] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 10:20:02.721] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 10:20:18.318] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 10:20:18.322] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 11:43:32.978] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 11:43:32.998] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 200 568 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 11:44:44.924] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 11:44:44.928] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 11:44:45.941] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 11:44:45.947] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c4ee2c3a88b3def41a39e34 HTTP/1.1" 200 1717 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 11:45:27.497] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 11:45:27.501] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 11:49:17.206] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 11:49:17.221] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 11:49:20.029] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 11:49:20.033] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c4ed19ba88b3def41a39e33 HTTP/1.1" 200 6558 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 13:36:12.846] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 13:36:12.859] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 13:36:20.871] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 13:36:20.880] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 13:42:24.663] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 13:42:24.674] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 13:42:40.998] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 13:42:41.003] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 13:42:54.370] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 13:42:54.374] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 13:56:06.441] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 13:56:06.453] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 13:58:09.571] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 13:58:09.575] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 14:13:21.612] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 14:13:21.628] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 14:16:33.851] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 14:16:33.856] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 15:28:13.359] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 15:28:13.398] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 15:37:06.487] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/account HTTP/1.1" 200 47 "http://localhost:9000/signup" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 15:39:41.064] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { key: undefined } ] 'results'
[2019-01-29 15:39:41.070] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/account HTTP/1.1" 200 37 "http://localhost:9000/signup" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 15:43:06.509] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { key: undefined } ] 'results'
[2019-01-29 15:43:06.560] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/account HTTP/1.1" 200 13 "http://localhost:9000/signup" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 15:45:44.903] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { key: undefined } ] 'results'
[2019-01-29 15:45:44.909] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/account HTTP/1.1" 200 13 "http://localhost:9000/signup" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 15:53:37.453] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { key: undefined } ] 'results'
[2019-01-29 15:53:37.464] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/account HTTP/1.1" 200 40 "" "PostmanRuntime/7.1.1"
[2019-01-29 15:53:54.501] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 15:53:54.515] [ERROR] console - API ERROR:   [0m[97m[41mError[0m[90m:[0m[37m [0m[97m{}[0m
[0m ReferenceError: Post is not defined
    at _callee$ (/workspace/DESserver/api/actions/api/signup/login.js:7:16)
    at tryCatch (/workspace/DESserver/node_modules/regenerator-runtime/runtime.js:62:40)
    at Generator.invoke [as _invoke] (/workspace/DESserver/node_modules/regenerator-runtime/runtime.js:296:22)
    at Generator.prototype.(anonymous function) [as next] (/workspace/DESserver/node_modules/regenerator-runtime/runtime.js:114:21)
    at step (/workspace/DESserver/node_modules/babel-runtime/helpers/asyncToGenerator.js:17:30)
    at /workspace/DESserver/node_modules/babel-runtime/helpers/asyncToGenerator.js:28:13
    at <anonymous>
    at process._tickCallback (internal/process/next_tick.js:188:7)
[2019-01-29 15:53:54.517] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 58 "" "PostmanRuntime/7.1.1"
[2019-01-29 15:54:40.346] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 15:54:40.359] [INFO] console - { _id: 5c5004a874c1f7b3adbce250,
  name: '赵林肖',
  pass: '6ed7e9a926ea015b',
  type: '0',
  __v: 0,
  create_time: 1548747944905,
  deleted: false } 'user'
[2019-01-29 15:54:40.365] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 13 "" "PostmanRuntime/7.1.1"
[2019-01-29 15:55:19.668] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 15:55:19.671] [INFO] console - null 'user'
[2019-01-29 15:55:19.700] [ERROR] console - API ERROR:   [0m[97m[41mError[0m[90m:[0m[37m [0m[97m{}[0m
[0m TypeError: Cannot read property 'length' of null
    at _callee$ (/workspace/DESserver/api/actions/api/signup/login.js:14:12)
    at tryCatch (/workspace/DESserver/node_modules/regenerator-runtime/runtime.js:62:40)
    at Generator.invoke [as _invoke] (/workspace/DESserver/node_modules/regenerator-runtime/runtime.js:296:22)
    at Generator.prototype.(anonymous function) [as next] (/workspace/DESserver/node_modules/regenerator-runtime/runtime.js:114:21)
    at step (/workspace/DESserver/node_modules/babel-runtime/helpers/asyncToGenerator.js:17:30)
    at /workspace/DESserver/node_modules/babel-runtime/helpers/asyncToGenerator.js:28:13
    at <anonymous>
    at process._tickCallback (internal/process/next_tick.js:188:7)
[2019-01-29 15:55:19.702] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 58 "" "PostmanRuntime/7.1.1"
[2019-01-29 15:57:39.230] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { key: undefined } ] 'results'
[2019-01-29 15:57:39.251] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/account HTTP/1.1" 200 40 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 15:58:01.074] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 15:58:01.085] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 37 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 15:58:12.064] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 15:58:12.069] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 13 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 15:58:12.195] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 15:58:12.201] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 200 568 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 15:59:55.936] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 15:59:55.969] [WARN] http - undefined - - "GET /posts/list?author=5c4a6b17c81cb7496c3570f4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 16:00:32.216] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list HTTP/1.1" 200 49 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 16:00:49.507] [WARN] http - undefined - - "GET /posts/list HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 16:00:50.416] [WARN] http - undefined - - "GET /posts/list HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 16:01:23.217] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 16:01:23.225] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 37 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 16:01:27.380] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 16:01:27.384] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 58 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 16:01:27.475] [WARN] http - undefined - - "GET /posts/list HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 16:02:20.572] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 16:02:20.575] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c5004a874c1f7b3adbce250 HTTP/1.1" 200 32 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 16:02:21.285] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 16:02:21.288] [WARN] http - undefined - - "GET /posts/list?author=5c5004a874c1f7b3adbce250 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 16:02:49.530] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 16:02:49.532] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 58 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 16:02:49.673] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 16:02:49.676] [WARN] http - undefined - - "GET /posts/list?author=5c5004a874c1f7b3adbce250 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 16:03:15.087] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: { content: '> 测试文档' }, key: undefined } ] 'results'
[2019-01-29 16:03:15.130] [INFO] http - ::ffff:127.0.0.1 - - "POST /posts/create HTTP/1.1" 200 13 "http://localhost:9000/document/new" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 16:03:16.828] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 16:03:16.831] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c5004a874c1f7b3adbce250 HTTP/1.1" 200 187 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 16:03:18.265] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 16:03:18.267] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c5008c399d8808eaeaf39b0 HTTP/1.1" 200 110 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 16:03:58.632] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 16:03:58.635] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c5004a874c1f7b3adbce250 HTTP/1.1" 200 364 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 16:03:59.873] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 16:03:59.875] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c4ece48a88b3def41a39e32 HTTP/1.1" 200 28519 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 16:04:21.019] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 16:04:21.022] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c5004a874c1f7b3adbce250 HTTP/1.1" 200 523 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 16:04:22.418] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 16:04:22.420] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c4ed19ba88b3def41a39e33 HTTP/1.1" 200 6558 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 16:04:58.128] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 16:04:58.133] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 37 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 16:05:32.942] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { key: undefined } ] 'results'
[2019-01-29 16:05:32.951] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/account HTTP/1.1" 200 13 "http://localhost:9000/signup" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 16:05:38.411] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 16:05:38.415] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 58 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 16:05:38.530] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 16:05:38.533] [WARN] http - undefined - - "GET /posts/list?author=5c5004a874c1f7b3adbce250 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 16:05:47.318] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 16:05:47.320] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 32 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 16:10:49.585] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 16:10:49.602] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 58 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 16:10:49.689] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 16:10:49.691] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 16:10:54.972] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 16:10:54.981] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 16:14:25.184] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { key: undefined } ] 'results'
[2019-01-29 16:14:25.185] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/account HTTP/1.1" 200 40 "http://localhost:9000/signup" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 16:14:40.184] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 16:14:40.194] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 58 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 16:14:40.279] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 16:14:40.285] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 16:14:44.846] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 16:14:44.849] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 16:15:02.927] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: { content: '> this is a test post ' },
    key: undefined } ] 'results'
[2019-01-29 16:15:02.936] [INFO] http - ::ffff:127.0.0.1 - - "POST /posts/create HTTP/1.1" 200 13 "http://localhost:9000/document/new" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 16:15:06.133] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 16:15:06.136] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 191 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 16:15:07.877] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 16:15:07.881] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c500b8699d8808eaeaf39b2 HTTP/1.1" 200 122 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 16:36:31.517] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 16:36:31.529] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 16:41:52.256] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 16:41:52.274] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 16:49:40.542] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 16:49:40.569] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 58 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 16:49:40.662] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 16:49:40.673] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 16:52:03.080] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 16:52:03.085] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 17:04:25.206] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 17:04:25.234] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 17:05:04.738] [INFO] console - Session {
  cookie: 
   { path: '/',
     _expires: 2019-01-29T13:05:04.738Z,
     originalMaxAge: 14400000,
     httpOnly: true } } 'req.session'
[2019-01-29 17:05:04.740] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 17:05:04.745] [WARN] http - undefined - - "GET /posts/getPost?id=5c500b8699d8808eaeaf39b2 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 17:05:51.584] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 17:05:51.611] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 17:05:53.652] [INFO] console - Session {
  cookie: 
   { path: '/',
     _expires: 2019-01-29T09:06:53.651Z,
     originalMaxAge: 60000,
     httpOnly: true } } 'req.session'
[2019-01-29 17:05:53.653] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 17:05:53.657] [WARN] http - undefined - - "GET /posts/getPost?id=5c500b8699d8808eaeaf39b2 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 17:07:47.236] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 17:07:47.255] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 17:07:54.872] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c500b8699d8808eaeaf39b2 HTTP/1.1" 200 68 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 17:07:57.077] [WARN] http - undefined - - "GET /posts/getPost?id=5c500b8699d8808eaeaf39b2 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 17:07:58.444] [WARN] http - undefined - - "GET /posts/getPost?id=5c500b8699d8808eaeaf39b2 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 17:08:14.446] [WARN] http - undefined - - "GET /posts/getPost?id=5c500b8699d8808eaeaf39b2 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 17:09:37.971] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 17:09:37.977] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 17:09:46.024] [WARN] http - undefined - - "GET /posts/getPost?id=5c500b8699d8808eaeaf39b2 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 17:12:15.308] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 17:12:15.341] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 17:12:15.388] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 17:12:15.393] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 17:12:15.492] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 17:12:15.495] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 17:15:12.641] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 17:15:12.646] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 17:15:15.746] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 17:15:15.748] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 17:15:17.798] [WARN] http - undefined - - "GET /posts/getPost?id=5c500b8699d8808eaeaf39b2 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 17:16:21.542] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 17:16:21.567] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 58 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 17:16:21.718] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 17:16:21.729] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 17:16:23.351] [WARN] http - undefined - - "GET /posts/getPost?id=5c500b8699d8808eaeaf39b2 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 17:17:02.227] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 17:17:02.285] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 58 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 17:17:02.534] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 17:17:02.542] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 17:17:03.845] [WARN] http - undefined - - "GET /posts/getPost?id=5c500b8699d8808eaeaf39b2 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 17:18:01.600] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 17:18:01.628] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 58 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 17:18:01.745] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 17:18:01.756] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 17:18:13.681] [INFO] console - Session {
  cookie: 
   { path: '/',
     _expires: 2019-01-29T13:18:13.680Z,
     originalMaxAge: 14400000,
     httpOnly: true } } 'session'
[2019-01-29 17:18:13.686] [WARN] http - undefined - - "GET /posts/getPost?id=5c500b8699d8808eaeaf39b2 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 17:29:02.513] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 17:29:02.552] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 58 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 17:29:02.701] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 17:29:02.743] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 17:29:04.421] [INFO] console - Session {
  cookie: 
   { path: '/',
     _expires: 2019-01-29T13:29:02.540Z,
     originalMaxAge: 14400000,
     httpOnly: true },
  user: 
   { _id: '5c50094c99d8808eaeaf39b1',
     name: 'zlx',
     pass: '6ed7e9a926ea015b',
     type: '0',
     __v: 0,
     create_time: 1548749132946,
     deleted: false },
  exp: 1548755942537 } 'session'
[2019-01-29 17:29:04.423] [INFO] console - will check 1548755942537 1548754144423
[2019-01-29 17:29:04.423] [INFO] console - will update 1548755944423 1548754144423
[2019-01-29 17:29:04.451] [ERROR] console - API ERROR:   [0m[97m[41mError[0m[90m:[0m[37m [0m[97m{}[0m
[0m TypeError: Cannot read property 'length' of null
    at /workspace/DESserver/node_modules/rbac/dist/RBAC.js:602:35
    at Memory.getGrants (/workspace/DESserver/node_modules/rbac/dist/storages/Memory.js:195:16)
    at RBAC._traverseGrants (/workspace/DESserver/node_modules/rbac/dist/RBAC.js:595:20)
    at RBAC.can (/workspace/DESserver/node_modules/rbac/dist/RBAC.js:639:12)
    at /workspace/DESserver/api/actions/lib/auth.js:65:16
    at new Promise (<anonymous>)
    at new F (/workspace/DESserver/node_modules/core-js/library/modules/_export.js:36:28)
    at roleAuthPromise (/workspace/DESserver/api/actions/lib/auth.js:39:10)
    at _callee$ (/workspace/DESserver/api/actions/api/posts/getPost.js:9:9)
    at tryCatch (/workspace/DESserver/node_modules/regenerator-runtime/runtime.js:62:40)
    at Generator.invoke [as _invoke] (/workspace/DESserver/node_modules/regenerator-runtime/runtime.js:296:22)
    at Generator.prototype.(anonymous function) [as next] (/workspace/DESserver/node_modules/regenerator-runtime/runtime.js:114:21)
    at step (/workspace/DESserver/node_modules/babel-runtime/helpers/asyncToGenerator.js:17:30)
    at /workspace/DESserver/node_modules/babel-runtime/helpers/asyncToGenerator.js:35:14
    at new Promise (<anonymous>)
    at new F (/workspace/DESserver/node_modules/core-js/library/modules/_export.js:36:28)
[2019-01-29 17:29:04.454] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c500b8699d8808eaeaf39b2 HTTP/1.1" 200 58 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 17:33:00.893] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 17:33:00.921] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 58 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 17:33:01.034] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 17:33:01.049] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 17:33:02.817] [INFO] console - Session {
  cookie: 
   { path: '/',
     _expires: 2019-01-29T13:33:00.914Z,
     originalMaxAge: 14400000,
     httpOnly: true },
  user: 
   { _id: '5c50094c99d8808eaeaf39b1',
     name: 'zlx',
     role: 'superadmin',
     pass: '6ed7e9a926ea015b',
     type: '0',
     __v: 0,
     create_time: 1548749132946,
     deleted: false },
  exp: 1548756180911 } 'session'
[2019-01-29 17:33:02.819] [INFO] console - will check 1548756180911 1548754382819
[2019-01-29 17:33:02.819] [INFO] console - will update 1548756182819 1548754382819
[2019-01-29 17:33:02.822] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c500b8699d8808eaeaf39b2 HTTP/1.1" 200 40 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 17:38:54.556] [INFO] console - Session {
  cookie: 
   { path: '/',
     _expires: 2019-01-29T13:33:02.821Z,
     originalMaxAge: 14400000,
     httpOnly: true },
  user: 
   { _id: '5c50094c99d8808eaeaf39b1',
     name: 'zlx',
     role: 'superadmin',
     pass: '6ed7e9a926ea015b',
     type: '0',
     __v: 0,
     create_time: 1548749132946,
     deleted: false },
  exp: 1548756182819 } 'session'
[2019-01-29 17:38:54.560] [INFO] console - will check 1548756182819 1548754734560
[2019-01-29 17:38:54.560] [INFO] console - will update 1548756534560 1548754734560
[2019-01-29 17:38:54.569] [WARN] http - undefined - - "GET /posts/getPost?id=5c500b8699d8808eaeaf39b2 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 17:40:53.302] [INFO] console - Session {
  cookie: 
   { path: '/',
     _expires: 2019-01-29T13:38:54.563Z,
     originalMaxAge: 14400000,
     httpOnly: true },
  user: 
   { _id: '5c50094c99d8808eaeaf39b1',
     name: 'zlx',
     role: 'superadmin',
     pass: '6ed7e9a926ea015b',
     type: '0',
     __v: 0,
     create_time: 1548749132946,
     deleted: false },
  exp: 1548756534560 } 'session'
[2019-01-29 17:40:53.308] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 17:40:53.331] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c500b8699d8808eaeaf39b2 HTTP/1.1" 200 122 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 17:49:19.448] [INFO] console - Session {
  cookie: 
   { path: '/',
     _expires: 2019-01-29T13:38:54.563Z,
     originalMaxAge: 14400000,
     httpOnly: true },
  user: 
   { _id: '5c50094c99d8808eaeaf39b1',
     name: 'zlx',
     role: 'superadmin',
     pass: '6ed7e9a926ea015b',
     type: '0',
     __v: 0,
     create_time: 1548749132946,
     deleted: false },
  exp: 1548756534560 } 'session'
[2019-01-29 17:49:19.453] [INFO] console - will check 1548756534560 1548755359453
[2019-01-29 17:49:19.453] [INFO] console - will update 1548757159453 1548755359453
[2019-01-29 17:49:19.455] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 17:49:19.473] [WARN] http - undefined - - "GET /posts/getPost?id=5c500b8699d8808eaeaf39b2 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 17:50:47.877] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 17:50:47.902] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 18:07:35.746] [INFO] console - Session {
  cookie: 
   { path: '/',
     _expires: 2019-01-29T13:49:19.468Z,
     originalMaxAge: 14400000,
     httpOnly: true },
  user: 
   { _id: '5c50094c99d8808eaeaf39b1',
     name: 'zlx',
     role: 'superadmin',
     pass: '6ed7e9a926ea015b',
     type: '0',
     __v: 0,
     create_time: 1548749132946,
     deleted: false },
  exp: 1548757159453 } 'session'
[2019-01-29 18:07:35.760] [INFO] console - will check 1548757159453 1548756455759
[2019-01-29 18:07:35.760] [INFO] console - will update 1548758255759 1548756455759
[2019-01-29 18:07:35.762] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 18:07:35.801] [WARN] http - undefined - - "GET /posts/getPost?id=5c500b8699d8808eaeaf39b2 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 18:08:26.208] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: 
     { content: '#### javascript面向对象编程一直都是初学者的难点，都看过很多文章，却没有动手写过，还是理解不深刻，今天我看文章的时候手写了一个及小的插件，正好练练手。\n\n详细的js面向对象编程可以看阮一峰老师的文章 [阮一峰-面向对象编程](http://www.ruanyifeng.com/blog/2010/05/object-oriented_javascript_encapsulation.html)\n\n我正好在看文章时，动手写了一个loading的插件，也可以用在项目中去。分享出来。  [github链接](https://github.com/zlx362211854/loading)\n\n> loading效果是这样的：\n\n![效果](http://upload-images.jianshu.io/upload_images/5420078-a74df0e8c05aad5a.gif?imageMogr2/auto-orient/strip)\n\n\n直接看代码吧，执行特别简单：\n```\nvar loading = new Loading();\n\nloading.init(\'container\').start([\'#5fc6b3\', \'#d3be87\', \'#e86c73\']);\n\nsetTimeout(function () {\n    // some ajax\n       loading.end()\n}, 5000)\n```\n\n只需要事先准备好一个容器\n\n```\n<div id="container"></div>\n\n```\n\n只有三个api\n\n```\n\ninit() // 参数为容器的id （必须）\n\nstart() // 参数为由颜色组成的数组 （非必须）\n\nend() // 无参数\n```\n\n\n直接看源码吧， 简单得令人发指：\n```\n/**\n * @Author zlx\n * @Date 2018/1/17 上午10:42\n */\n\nvar Loading = function () {\n    this.color = [\'#5fc6b3\', \'#5fc6b3\', \'#5fc6b3\']; // default colors\n    this.init = function (id) {\n        var container = document.getElementById(id);\n        this.container = container;\n        return this;\n    };\n\n    this.start = function (color) {\n        if (!color) {\n            color = this.color;\n        }\n        for (var i = 0; i < 3; i++) {\n            var dot = document.createElement(\'div\');\n            dot.style.backgroundColor = color[i];\n            dot.setAttribute(\'class\', \'dot\'+(i+1));\n            this.container.appendChild(dot);\n        }\n        return this;\n    };\n\n    this.end = function () {\n        var parent = this.container.parentNode;\n        if(parent){\n            parent.removeChild(this.container);\n        }\n    }\n}\n```\n\n逐一分析：\n\n* 创建一个叫Loading的构造函数。\n* ```this.color = [\'#5fc6b3\', \'#5fc6b3\', \'#5fc6b3\']; // default colors``` 给三个小圆点定义三个默认颜色。\n\n* ```init```方法。\n```\nthis.init = function (id) {\n        var container = document.getElementById(id);\n        this.container = container;\n        return this;\n    };\n```\n根据传进来的id来获取到dom元素。并将该dom元素对象赋值给this.container，方便以后使用。最后return this，这里为了方便api实现链式调用，所以return了this。实现了如```loading.init(\'container\').start().end();```这样的链式调用，这种写法在jquery中很常见。\n\n\n* ```start```方法。\n\n```\nthis.start = function (color) {\n        if (!color) {\n            color = this.color;\n        }\n        for (var i = 0; i < 3; i++) {\n            var dot = document.createElement(\'div\');\n            dot.style.backgroundColor = color[i];\n            dot.setAttribute(\'class\', \'dot\'+(i+1));\n            this.container.appendChild(dot);\n        }\n        return this;\n    };\n```\n这里处理shart\'方法传进来的color，是一个数组，如果没有传入，则为我们默认的colors。循环创建3个div，并赋上相应的属性，再添加到container中。\n\n* ```end```方法\n\n ```\nthis.end = function () {\n        var parent = this.container.parentNode;\n        if(parent){\n            parent.removeChild(this.container);\n        }\n    }\n```\n\n最后也很简单，移除这个container。\n\n\n  [详细代码见github](https://github.com/zlx362211854/loading)\n\n这个例子很小，希望对你有帮助。' },
    key: undefined } ] 'results'
[2019-01-29 18:08:26.275] [INFO] http - ::ffff:127.0.0.1 - - "POST /posts/create HTTP/1.1" 200 13 "http://localhost:9000/document/new" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 18:08:27.774] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 18:08:27.780] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 405 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 18:08:29.280] [INFO] console - Session {
  cookie: 
   { path: '/',
     _expires: 2019-01-29T14:07:35.789Z,
     originalMaxAge: 14400000,
     httpOnly: true },
  user: 
   { _id: '5c50094c99d8808eaeaf39b1',
     name: 'zlx',
     role: 'superadmin',
     pass: '6ed7e9a926ea015b',
     type: '0',
     __v: 0,
     create_time: 1548749132946,
     deleted: false },
  exp: 1548758255759 } 'session'
[2019-01-29 18:08:29.281] [INFO] console - will check 1548758255759 1548756509281
[2019-01-29 18:08:29.281] [INFO] console - will update 1548758309281 1548756509281
[2019-01-29 18:08:29.282] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 18:08:29.285] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c50261aae5821f8b6ac923d HTTP/1.1" 200 3970 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 18:09:12.649] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 18:09:12.662] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 58 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 18:09:12.804] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 18:09:12.810] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 18:09:18.504] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 18:09:18.508] [WARN] http - undefined - - "GET /posts/list?author=5c5004a874c1f7b3adbce250 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 18:09:22.335] [INFO] console - Session {
  cookie: 
   { path: '/',
     _expires: 2019-01-29T14:09:12.661Z,
     originalMaxAge: 14400000,
     httpOnly: true },
  user: 
   { _id: '5c5004a874c1f7b3adbce250',
     name: '赵林肖',
     pass: '6ed7e9a926ea015b',
     type: '0',
     __v: 0,
     create_time: 1548747944905,
     deleted: false },
  exp: 1548758352661 } 'session'
[2019-01-29 18:09:22.335] [INFO] console - will check 1548758352661 1548756562335
[2019-01-29 18:09:22.335] [INFO] console - will update 1548758362335 1548756562335
[2019-01-29 18:09:22.336] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 18:09:22.338] [WARN] http - undefined - - "GET /posts/getPost?id=5c4ed19ba88b3def41a39e33 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 18:59:50.062] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 18:59:50.080] [WARN] http - undefined - - "GET /posts/list?author=5c5004a874c1f7b3adbce250 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 19:00:53.734] [INFO] console - will check 1548758362335 1548759653734
[2019-01-29 19:00:53.742] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c4ed19ba88b3def41a39e33 HTTP/1.1" 200 71 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 19:01:06.757] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 19:01:06.780] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 58 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 19:01:07.467] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 19:01:07.468] [INFO] console - will check 1548761466776 1548759667467
[2019-01-29 19:01:07.468] [INFO] console - will update 1548761467467 1548759667467
[2019-01-29 19:01:07.479] [WARN] http - undefined - - "GET /posts/list?author=5c5004a874c1f7b3adbce250 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 19:01:13.541] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 19:01:13.542] [INFO] console - will check 1548761467467 1548759673542
[2019-01-29 19:01:13.542] [INFO] console - will update 1548761473542 1548759673542
[2019-01-29 19:01:13.546] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 19:10:44.713] [INFO] console - will check 1548761473542 1548760244713
[2019-01-29 19:10:44.714] [INFO] console - will update 1548762044713 1548760244713
[2019-01-29 19:10:44.715] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 19:10:44.725] [WARN] http - undefined - - "GET /posts/getPost?id=5c50261aae5821f8b6ac923d HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 19:12:20.191] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 19:12:20.210] [INFO] console - will check 1548762044713 1548760340210
[2019-01-29 19:12:20.210] [INFO] console - will update 1548762140210 1548760340210
[2019-01-29 19:12:20.229] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 19:12:24.485] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 19:12:24.486] [INFO] console - will check 1548762140210 1548760344486
[2019-01-29 19:12:24.486] [INFO] console - will update 1548762144486 1548760344486
[2019-01-29 19:12:24.492] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 19:13:34.344] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 19:13:34.345] [INFO] console - will check 1548762144486 1548760414345
[2019-01-29 19:13:34.346] [INFO] console - will update 1548762214345 1548760414345
[2019-01-29 19:13:34.354] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 19:14:19.994] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 19:14:19.995] [INFO] console - will check 1548762214345 1548760459995
[2019-01-29 19:14:19.995] [INFO] console - will update 1548762259995 1548760459995
[2019-01-29 19:14:19.999] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 19:15:20.314] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 19:15:20.316] [INFO] console - will check 1548762259995 1548760520316
[2019-01-29 19:15:20.316] [INFO] console - will update 1548762320316 1548760520316
[2019-01-29 19:15:20.329] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 19:15:52.583] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 19:15:52.584] [INFO] console - will check 1548762320316 1548760552584
[2019-01-29 19:15:52.584] [INFO] console - will update 1548762352584 1548760552584
[2019-01-29 19:15:52.589] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 19:17:37.427] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 19:17:37.428] [INFO] console - will check 1548762352584 1548760657428
[2019-01-29 19:17:37.428] [INFO] console - will update 1548762457428 1548760657428
[2019-01-29 19:17:37.432] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 19:18:42.750] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 19:18:42.752] [INFO] console - will check 1548762457428 1548760722752
[2019-01-29 19:18:42.753] [INFO] console - will update 1548762522752 1548760722752
[2019-01-29 19:18:42.907] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 19:24:31.844] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 19:24:31.844] [INFO] console - will check 1548762522752 1548761071844
[2019-01-29 19:24:31.844] [INFO] console - will update 1548762871844 1548761071844
[2019-01-29 19:24:31.849] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 19:25:00.817] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 19:25:00.819] [INFO] console - will check 1548762871844 1548761100819
[2019-01-29 19:25:00.819] [INFO] console - will update 1548762900819 1548761100819
[2019-01-29 19:25:00.837] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 19:25:02.171] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 19:25:02.172] [INFO] console - will check 1548762900819 1548761102172
[2019-01-29 19:25:02.173] [INFO] console - will update 1548762902172 1548761102172
[2019-01-29 19:25:02.177] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 19:25:07.683] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 19:25:07.684] [INFO] console - will check 1548762902172 1548761107684
[2019-01-29 19:25:07.684] [INFO] console - will update 1548762907684 1548761107684
[2019-01-29 19:25:07.687] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 19:25:22.600] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 19:25:22.601] [INFO] console - will check 1548762907684 1548761122601
[2019-01-29 19:25:22.601] [INFO] console - will update 1548762922601 1548761122601
[2019-01-29 19:25:22.606] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 19:25:50.296] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 19:25:50.297] [INFO] console - will check 1548762922601 1548761150297
[2019-01-29 19:25:50.297] [INFO] console - will update 1548762950297 1548761150297
[2019-01-29 19:25:50.302] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 19:26:04.927] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 19:26:04.928] [INFO] console - will check 1548762950297 1548761164928
[2019-01-29 19:26:04.928] [INFO] console - will update 1548762964928 1548761164928
[2019-01-29 19:26:04.932] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 19:26:08.332] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 19:26:08.333] [INFO] console - will check 1548762964928 1548761168333
[2019-01-29 19:26:08.333] [INFO] console - will update 1548762968333 1548761168333
[2019-01-29 19:26:08.341] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 19:26:19.863] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 19:26:19.863] [INFO] console - will check 1548762968333 1548761179863
[2019-01-29 19:26:19.864] [INFO] console - will update 1548762979863 1548761179863
[2019-01-29 19:26:19.866] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 19:26:43.242] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 19:26:43.242] [INFO] console - will check 1548762979863 1548761203242
[2019-01-29 19:26:43.243] [INFO] console - will update 1548763003242 1548761203242
[2019-01-29 19:26:43.248] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 19:27:32.591] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 19:27:32.592] [INFO] console - will check 1548763003242 1548761252592
[2019-01-29 19:27:32.592] [INFO] console - will update 1548763052592 1548761252592
[2019-01-29 19:27:32.594] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 19:32:56.894] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 19:32:56.902] [INFO] console - will check 1548763052592 1548761576902
[2019-01-29 19:32:56.902] [INFO] console - will update 1548763376902 1548761576902
[2019-01-29 19:32:56.922] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 19:33:07.694] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 19:33:07.695] [INFO] console - will check 1548763376902 1548761587695
[2019-01-29 19:33:07.695] [INFO] console - will update 1548763387695 1548761587695
[2019-01-29 19:33:07.708] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 19:34:20.231] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 19:34:20.232] [INFO] console - will check 1548763387695 1548761660232
[2019-01-29 19:34:20.232] [INFO] console - will update 1548763460232 1548761660232
[2019-01-29 19:34:20.240] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 19:34:49.498] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 19:34:49.499] [INFO] console - will check 1548763460232 1548761689499
[2019-01-29 19:34:49.499] [INFO] console - will update 1548763489499 1548761689499
[2019-01-29 19:34:49.502] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 19:35:04.297] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 19:35:04.298] [INFO] console - will check 1548763489499 1548761704298
[2019-01-29 19:35:04.298] [INFO] console - will update 1548763504298 1548761704298
[2019-01-29 19:35:04.307] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 19:39:30.848] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 19:39:30.850] [INFO] console - will check 1548763504298 1548761970850
[2019-01-29 19:39:30.850] [INFO] console - will update 1548763770850 1548761970850
[2019-01-29 19:39:31.042] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 19:40:54.293] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 19:40:54.299] [INFO] console - will check 1548763770850 1548762054299
[2019-01-29 19:40:54.299] [INFO] console - will update 1548763854299 1548762054299
[2019-01-29 19:40:54.329] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 19:41:53.645] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 19:41:53.654] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 186 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 19:45:48.263] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 19:45:48.293] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 125 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 19:46:23.602] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 19:46:23.612] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 125 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 19:47:21.760] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 19:47:21.763] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 125 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 19:47:21.876] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 19:47:21.883] [INFO] console - will check 1548764241762 1548762441883
[2019-01-29 19:47:21.884] [INFO] console - will update 1548764241883 1548762441883
[2019-01-29 19:47:21.905] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 19:47:32.587] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 19:47:32.587] [INFO] console - will check 1548764241883 1548762452587
[2019-01-29 19:47:32.588] [INFO] console - will update 1548764252587 1548762452587
[2019-01-29 19:47:32.595] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 19:47:34.056] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 19:47:34.056] [INFO] console - will check 1548764252587 1548762454056
[2019-01-29 19:47:34.057] [INFO] console - will update 1548764254056 1548762454056
[2019-01-29 19:47:34.061] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 19:48:01.819] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 19:48:01.819] [INFO] console - will check 1548764254056 1548762481819
[2019-01-29 19:48:01.819] [INFO] console - will update 1548764281819 1548762481819
[2019-01-29 19:48:01.822] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 19:48:05.699] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 19:48:05.700] [INFO] console - will check 1548764281819 1548762485700
[2019-01-29 19:48:05.700] [INFO] console - will update 1548764285700 1548762485700
[2019-01-29 19:48:05.703] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 19:48:22.911] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 19:48:22.915] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 111 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 19:48:23.021] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 19:48:23.022] [INFO] console - will check 1548764302914 1548762503022
[2019-01-29 19:48:23.022] [INFO] console - will update 1548764303022 1548762503022
[2019-01-29 19:48:23.028] [WARN] http - undefined - - "GET /posts/list?author=5c5004a874c1f7b3adbce250 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 19:48:44.613] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 19:48:44.620] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 125 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 19:48:44.707] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 19:48:44.710] [INFO] console - will check 1548764324615 1548762524710
[2019-01-29 19:48:44.710] [INFO] console - will update 1548764324710 1548762524710
[2019-01-29 19:48:44.724] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 19:50:31.653] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 19:50:31.653] [INFO] console - will check 1548764324710 1548762631653
[2019-01-29 19:50:31.653] [INFO] console - will update 1548764431653 1548762631653
[2019-01-29 19:50:31.657] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 19:50:44.675] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 19:50:44.676] [INFO] console - will check 1548764431653 1548762644676
[2019-01-29 19:50:44.676] [INFO] console - will update 1548764444676 1548762644676
[2019-01-29 19:50:44.680] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 19:50:49.269] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 19:50:49.270] [INFO] console - will check 1548764444676 1548762649270
[2019-01-29 19:50:49.270] [INFO] console - will update 1548764449270 1548762649270
[2019-01-29 19:50:49.273] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 19:52:02.715] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 19:52:02.716] [INFO] console - will check 1548764449270 1548762722716
[2019-01-29 19:52:02.716] [INFO] console - will update 1548764522716 1548762722716
[2019-01-29 19:52:02.721] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 19:54:14.452] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 19:54:14.452] [INFO] console - will check 1548764522716 1548762854452
[2019-01-29 19:54:14.453] [INFO] console - will update 1548764654452 1548762854452
[2019-01-29 19:54:14.456] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 19:54:29.650] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 19:54:29.650] [INFO] console - will check 1548764654452 1548762869650
[2019-01-29 19:54:29.650] [INFO] console - will update 1548764669650 1548762869650
[2019-01-29 19:54:29.653] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 19:54:38.081] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 19:54:38.082] [INFO] console - will check 1548764669650 1548762878082
[2019-01-29 19:54:38.082] [INFO] console - will update 1548764678082 1548762878082
[2019-01-29 19:54:38.086] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 19:55:40.948] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 19:55:40.949] [INFO] console - will check 1548764678082 1548762940949
[2019-01-29 19:55:40.950] [INFO] console - will update 1548764740949 1548762940949
[2019-01-29 19:55:40.959] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 19:57:04.545] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 19:57:04.547] [INFO] console - will check 1548764740949 1548763024547
[2019-01-29 19:57:04.548] [INFO] console - will update 1548764824547 1548763024547
[2019-01-29 19:57:04.564] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 19:57:30.473] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 19:57:30.473] [INFO] console - will check 1548764824547 1548763050473
[2019-01-29 19:57:30.474] [INFO] console - will update 1548764850473 1548763050473
[2019-01-29 19:57:30.489] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 19:57:33.040] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 19:57:33.040] [INFO] console - will check 1548764850473 1548763053040
[2019-01-29 19:57:33.041] [INFO] console - will update 1548764853040 1548763053040
[2019-01-29 19:57:33.045] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 19:58:17.121] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 19:58:17.122] [INFO] console - will check 1548764853040 1548763097122
[2019-01-29 19:58:17.122] [INFO] console - will update 1548764897122 1548763097122
[2019-01-29 19:58:17.127] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 19:58:40.855] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 19:58:40.856] [INFO] console - will check 1548764897122 1548763120856
[2019-01-29 19:58:40.856] [INFO] console - will update 1548764920856 1548763120856
[2019-01-29 19:58:40.860] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 19:59:05.962] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 19:59:05.962] [INFO] console - will check 1548764920856 1548763145962
[2019-01-29 19:59:05.962] [INFO] console - will update 1548764945962 1548763145962
[2019-01-29 19:59:05.970] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 19:59:28.255] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 19:59:28.256] [INFO] console - will check 1548764945962 1548763168256
[2019-01-29 19:59:28.256] [INFO] console - will update 1548764968256 1548763168256
[2019-01-29 19:59:28.259] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 19:59:44.712] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 19:59:44.713] [INFO] console - will check 1548764968256 1548763184713
[2019-01-29 19:59:44.713] [INFO] console - will update 1548764984713 1548763184713
[2019-01-29 19:59:44.720] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 20:05:28.990] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 20:05:28.999] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 125 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 20:05:29.172] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 20:05:29.173] [INFO] console - will check 1548765328997 1548763529173
[2019-01-29 20:05:29.174] [INFO] console - will update 1548765329173 1548763529173
[2019-01-29 20:05:29.190] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 20:05:44.171] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 20:05:44.176] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 125 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 20:05:44.255] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 20:05:44.255] [INFO] console - will check 1548765344175 1548763544255
[2019-01-29 20:05:44.256] [INFO] console - will update 1548765344255 1548763544255
[2019-01-29 20:05:44.302] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 20:05:54.413] [INFO] console - will check 1548765344255 1548763554413
[2019-01-29 20:05:54.413] [INFO] console - will update 1548765354413 1548763554413
[2019-01-29 20:05:54.414] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 20:05:54.422] [WARN] http - undefined - - "GET /posts/getPost?id=5c50261aae5821f8b6ac923d HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 20:08:30.997] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 20:08:30.998] [INFO] console - will check 1548765354413 1548763710998
[2019-01-29 20:08:30.998] [INFO] console - will update 1548765510998 1548763710998
[2019-01-29 20:08:31.001] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 20:08:32.832] [INFO] console - will check 1548765510998 1548763712832
[2019-01-29 20:08:32.832] [INFO] console - will update 1548765512832 1548763712832
[2019-01-29 20:08:32.832] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 20:08:32.835] [WARN] http - undefined - - "GET /posts/getPost?id=5c50261aae5821f8b6ac923d HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 20:09:04.155] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 20:09:04.157] [INFO] console - will check 1548765512832 1548763744157
[2019-01-29 20:09:04.157] [INFO] console - will update 1548765544157 1548763744157
[2019-01-29 20:09:04.168] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 20:09:05.245] [INFO] console - will check 1548765544157 1548763745245
[2019-01-29 20:09:05.246] [INFO] console - will update 1548765545245 1548763745245
[2019-01-29 20:09:05.246] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 20:09:05.248] [WARN] http - undefined - - "GET /posts/getPost?id=5c50261aae5821f8b6ac923d HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 20:10:36.046] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 20:10:36.047] [INFO] console - will check 1548765545245 1548763836047
[2019-01-29 20:10:36.047] [INFO] console - will update 1548765636047 1548763836047
[2019-01-29 20:10:36.050] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 20:10:38.581] [INFO] console - will check 1548765636047 1548763838581
[2019-01-29 20:10:38.582] [INFO] console - will update 1548765638581 1548763838581
[2019-01-29 20:10:38.582] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 20:10:38.584] [WARN] http - undefined - - "GET /posts/getPost?id=5c50261aae5821f8b6ac923d HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 20:11:59.744] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 20:11:59.746] [INFO] console - will check 1548765638581 1548763919746
[2019-01-29 20:11:59.746] [INFO] console - will update 1548765719746 1548763919746
[2019-01-29 20:11:59.756] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 20:12:06.656] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 20:12:06.656] [INFO] console - will check 1548765719746 1548763926656
[2019-01-29 20:12:06.656] [INFO] console - will update 1548765726656 1548763926656
[2019-01-29 20:12:06.663] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 405 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 20:12:07.899] [INFO] console - will check 1548765726656 1548763927899
[2019-01-29 20:12:07.899] [INFO] console - will update 1548765727899 1548763927899
[2019-01-29 20:12:07.900] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 20:12:07.904] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c50261aae5821f8b6ac923d HTTP/1.1" 200 3970 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 20:12:26.746] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 20:12:26.747] [INFO] console - will check 1548765727899 1548763946747
[2019-01-29 20:12:26.747] [INFO] console - will update 1548765746747 1548763946747
[2019-01-29 20:12:26.751] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 20:12:28.553] [INFO] console - will check 1548765746747 1548763948553
[2019-01-29 20:12:28.553] [INFO] console - will update 1548765748553 1548763948553
[2019-01-29 20:12:28.554] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 20:12:28.558] [WARN] http - undefined - - "GET /posts/getPost?id=5c50261aae5821f8b6ac923d HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 20:12:55.523] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 20:12:55.524] [INFO] console - will check 1548765748553 1548763975524
[2019-01-29 20:12:55.524] [INFO] console - will update 1548765775524 1548763975524
[2019-01-29 20:12:55.610] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 20:20:36.289] [INFO] console - will check 1548765775524 1548764436289
[2019-01-29 20:20:36.290] [INFO] console - will update 1548766236289 1548764436289
[2019-01-29 20:20:36.292] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 20:20:36.303] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c500b8699d8808eaeaf39b2 HTTP/1.1" 200 122 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 20:20:39.497] [INFO] console - will check 1548766236289 1548764439497
[2019-01-29 20:20:39.497] [INFO] console - will update 1548766239497 1548764439497
[2019-01-29 20:20:39.498] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 20:20:39.501] [WARN] http - undefined - - "GET /posts/getPost?id=5c50261aae5821f8b6ac923d HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 21:06:31.434] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 21:06:31.436] [INFO] console - will check 1548766239497 1548767191436
[2019-01-29 21:06:31.476] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 71 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 21:06:35.714] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 21:06:35.720] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 125 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 21:06:35.799] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 21:06:35.800] [INFO] console - will check 1548768995719 1548767195800
[2019-01-29 21:06:35.801] [INFO] console - will update 1548768995800 1548767195800
[2019-01-29 21:06:35.804] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 405 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 21:06:38.049] [INFO] console - will check 1548768995800 1548767198049
[2019-01-29 21:06:38.051] [INFO] console - will update 1548768998049 1548767198049
[2019-01-29 21:06:38.052] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 21:06:38.055] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c500b8699d8808eaeaf39b2 HTTP/1.1" 200 122 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 21:06:39.746] [INFO] console - will check 1548768998049 1548767199746
[2019-01-29 21:06:39.746] [INFO] console - will update 1548768999746 1548767199746
[2019-01-29 21:06:39.746] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 21:06:39.750] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c50261aae5821f8b6ac923d HTTP/1.1" 200 3970 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 21:17:00.057] [INFO] console - will check 1548768999746 1548767820057
[2019-01-29 21:17:00.057] [INFO] console - will update 1548769620057 1548767820057
[2019-01-29 21:17:00.059] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 21:17:00.070] [WARN] http - undefined - - "GET /posts/getPost?id=5c500b8699d8808eaeaf39b2 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 21:44:32.873] [INFO] console - will check 1548769620057 1548769472873
[2019-01-29 21:44:32.874] [INFO] console - will update 1548771272873 1548769472873
[2019-01-29 21:44:32.875] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 21:44:32.890] [WARN] http - undefined - - "GET /posts/getPost?id=5c50261aae5821f8b6ac923d HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 21:59:16.195] [INFO] console - will check 1548771272873 1548770356195
[2019-01-29 21:59:16.195] [INFO] console - will update 1548772156195 1548770356195
[2019-01-29 21:59:16.196] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 21:59:16.205] [WARN] http - undefined - - "GET /posts/getPost?id=5c500b8699d8808eaeaf39b2 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 22:43:31.314] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 22:43:31.316] [INFO] console - will check 1548772156195 1548773011316
[2019-01-29 22:43:31.335] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 71 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 22:43:50.984] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 22:43:51.000] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 125 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 22:43:51.134] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 22:43:51.136] [INFO] console - will check 1548774830995 1548773031136
[2019-01-29 22:43:51.136] [INFO] console - will update 1548774831136 1548773031136
[2019-01-29 22:43:51.216] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 405 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 22:44:41.770] [INFO] console - will check 1548774831136 1548773081770
[2019-01-29 22:44:41.772] [INFO] console - will update 1548774881770 1548773081770
[2019-01-29 22:44:41.772] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 22:44:41.776] [WARN] http - undefined - - "GET /posts/getPost?id=5c50261aae5821f8b6ac923d HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 22:45:28.383] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 22:45:28.384] [INFO] console - will check 1548774881770 1548773128384
[2019-01-29 22:45:28.384] [INFO] console - will update 1548774928384 1548773128384
[2019-01-29 22:45:28.394] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 22:45:39.854] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 22:45:39.854] [INFO] console - will check 1548774928384 1548773139854
[2019-01-29 22:45:39.855] [INFO] console - will update 1548774939854 1548773139854
[2019-01-29 22:45:39.859] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 22:45:42.993] [INFO] console - will check 1548774939854 1548773142993
[2019-01-29 22:45:42.993] [INFO] console - will update 1548774942993 1548773142993
[2019-01-29 22:45:42.993] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 22:45:42.996] [WARN] http - undefined - - "GET /posts/getPost?id=5c50261aae5821f8b6ac923d HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 22:46:21.284] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 22:46:21.285] [INFO] console - will check 1548774942993 1548773181285
[2019-01-29 22:46:21.285] [INFO] console - will update 1548774981285 1548773181285
[2019-01-29 22:46:21.297] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 22:46:23.984] [INFO] console - will check 1548774981285 1548773183984
[2019-01-29 22:46:23.985] [INFO] console - will update 1548774983984 1548773183984
[2019-01-29 22:46:23.986] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 22:46:23.993] [WARN] http - undefined - - "GET /posts/getPost?id=5c50261aae5821f8b6ac923d HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 22:47:05.853] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 22:47:05.854] [INFO] console - will check 1548774983984 1548773225854
[2019-01-29 22:47:05.854] [INFO] console - will update 1548775025854 1548773225854
[2019-01-29 22:47:05.857] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 22:48:35.956] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 22:48:35.957] [INFO] console - will check 1548775025854 1548773315957
[2019-01-29 22:48:35.957] [INFO] console - will update 1548775115957 1548773315957
[2019-01-29 22:48:35.961] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 22:50:06.464] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 22:50:06.464] [INFO] console - will check 1548775115957 1548773406464
[2019-01-29 22:50:06.464] [INFO] console - will update 1548775206464 1548773406464
[2019-01-29 22:50:06.469] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 22:50:19.796] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 22:50:19.797] [INFO] console - will check 1548775206464 1548773419797
[2019-01-29 22:50:19.797] [INFO] console - will update 1548775219797 1548773419797
[2019-01-29 22:50:19.804] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 22:50:40.518] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 22:50:40.518] [INFO] console - will check 1548775219797 1548773440518
[2019-01-29 22:50:40.518] [INFO] console - will update 1548775240518 1548773440518
[2019-01-29 22:50:40.521] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 22:51:49.158] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 22:51:49.158] [INFO] console - will check 1548775240518 1548773509158
[2019-01-29 22:51:49.158] [INFO] console - will update 1548775309158 1548773509158
[2019-01-29 22:51:49.162] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 22:52:16.447] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 22:52:16.448] [INFO] console - will check 1548775309158 1548773536448
[2019-01-29 22:52:16.448] [INFO] console - will update 1548775336448 1548773536448
[2019-01-29 22:52:16.453] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 22:52:18.045] [INFO] console - will check 1548775336448 1548773538045
[2019-01-29 22:52:18.045] [INFO] console - will update 1548775338045 1548773538045
[2019-01-29 22:52:18.046] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 22:52:18.057] [WARN] http - undefined - - "GET /posts/getPost?id=5c50261aae5821f8b6ac923d HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 22:52:45.330] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 22:52:45.331] [INFO] console - will check 1548775338045 1548773565331
[2019-01-29 22:52:45.331] [INFO] console - will update 1548775365331 1548773565331
[2019-01-29 22:52:45.333] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 22:52:46.101] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 22:52:46.102] [INFO] console - will check 1548775365331 1548773566102
[2019-01-29 22:52:46.102] [INFO] console - will update 1548775366102 1548773566102
[2019-01-29 22:52:46.104] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 22:52:51.901] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 22:52:51.902] [INFO] console - will check 1548775366102 1548773571902
[2019-01-29 22:52:51.902] [INFO] console - will update 1548775371902 1548773571902
[2019-01-29 22:52:51.914] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 22:53:01.400] [INFO] console - will check 1548775371902 1548773581400
[2019-01-29 22:53:01.400] [INFO] console - will update 1548775381400 1548773581400
[2019-01-29 22:53:01.402] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 22:53:01.404] [WARN] http - undefined - - "GET /posts/getPost?id=5c50261aae5821f8b6ac923d HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 22:55:01.777] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 22:55:01.777] [INFO] console - will check 1548775381400 1548773701777
[2019-01-29 22:55:01.777] [INFO] console - will update 1548775501777 1548773701777
[2019-01-29 22:55:01.781] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 22:55:12.782] [INFO] console - will check 1548775501777 1548773712782
[2019-01-29 22:55:12.782] [INFO] console - will update 1548775512782 1548773712782
[2019-01-29 22:55:12.783] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 22:55:12.785] [WARN] http - undefined - - "GET /posts/getPost?id=5c50261aae5821f8b6ac923d HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 22:55:32.139] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 22:55:32.143] [INFO] console - will check 1548775512782 1548773732143
[2019-01-29 22:55:32.144] [INFO] console - will update 1548775532143 1548773732143
[2019-01-29 22:55:32.162] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 22:55:34.962] [INFO] console - will check 1548775532143 1548773734962
[2019-01-29 22:55:34.967] [INFO] console - will update 1548775534962 1548773734962
[2019-01-29 22:55:34.967] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 22:55:34.971] [WARN] http - undefined - - "GET /posts/getPost?id=5c50261aae5821f8b6ac923d HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 22:57:30.184] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 22:57:30.186] [INFO] console - will check 1548775534962 1548773850186
[2019-01-29 22:57:30.186] [INFO] console - will update 1548775650186 1548773850186
[2019-01-29 22:57:30.201] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 22:57:30.287] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 22:57:30.288] [INFO] console - will check 1548775650186 1548773850288
[2019-01-29 22:57:30.288] [INFO] console - will update 1548775650288 1548773850288
[2019-01-29 22:57:30.293] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 22:57:35.114] [INFO] console - will check 1548775650288 1548773855114
[2019-01-29 22:57:35.114] [INFO] console - will update 1548775655114 1548773855114
[2019-01-29 22:57:35.114] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 22:57:35.116] [WARN] http - undefined - - "GET /posts/getPost?id=5c50261aae5821f8b6ac923d HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 22:57:56.502] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 22:57:56.503] [INFO] console - will check 1548775655114 1548773876503
[2019-01-29 22:57:56.503] [INFO] console - will update 1548775676503 1548773876503
[2019-01-29 22:57:56.515] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 22:59:11.778] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 22:59:11.778] [INFO] console - will check 1548775676503 1548773951778
[2019-01-29 22:59:11.779] [INFO] console - will update 1548775751778 1548773951778
[2019-01-29 22:59:11.782] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 23:00:15.889] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 23:00:15.889] [INFO] console - will check 1548775751778 1548774015889
[2019-01-29 23:00:15.890] [INFO] console - will update 1548775815889 1548774015889
[2019-01-29 23:00:15.898] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 23:00:40.505] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 23:00:40.505] [INFO] console - will check 1548775815889 1548774040505
[2019-01-29 23:00:40.506] [INFO] console - will update 1548775840505 1548774040505
[2019-01-29 23:00:40.513] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 23:01:13.487] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 23:01:13.488] [INFO] console - will check 1548775840505 1548774073488
[2019-01-29 23:01:13.488] [INFO] console - will update 1548775873488 1548774073488
[2019-01-29 23:01:13.523] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 23:01:13.729] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 23:01:13.730] [INFO] console - will check 1548775873488 1548774073730
[2019-01-29 23:01:13.730] [INFO] console - will update 1548775873730 1548774073730
[2019-01-29 23:01:13.754] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 23:01:21.037] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 23:01:21.037] [INFO] console - will check 1548775873730 1548774081037
[2019-01-29 23:01:21.037] [INFO] console - will update 1548775881037 1548774081037
[2019-01-29 23:01:21.042] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 23:02:17.859] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 23:02:17.859] [INFO] console - will check 1548775881037 1548774137859
[2019-01-29 23:02:17.860] [INFO] console - will update 1548775937859 1548774137859
[2019-01-29 23:02:17.863] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 23:03:50.786] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 23:03:50.786] [INFO] console - will check 1548775937859 1548774230786
[2019-01-29 23:03:50.787] [INFO] console - will update 1548776030786 1548774230786
[2019-01-29 23:03:50.794] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 23:04:37.153] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 23:04:37.154] [INFO] console - will check 1548776030786 1548774277154
[2019-01-29 23:04:37.154] [INFO] console - will update 1548776077154 1548774277154
[2019-01-29 23:04:37.162] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 23:05:58.443] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 23:05:58.443] [INFO] console - will check 1548776077154 1548774358443
[2019-01-29 23:05:58.443] [INFO] console - will update 1548776158443 1548774358443
[2019-01-29 23:05:58.452] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 23:07:32.519] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 23:07:32.520] [INFO] console - will check 1548776158443 1548774452520
[2019-01-29 23:07:32.520] [INFO] console - will update 1548776252520 1548774452520
[2019-01-29 23:07:32.530] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 23:08:22.620] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 23:08:22.621] [INFO] console - will check 1548776252520 1548774502621
[2019-01-29 23:08:22.621] [INFO] console - will update 1548776302621 1548774502621
[2019-01-29 23:08:22.628] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 23:10:00.363] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 23:10:00.364] [INFO] console - will check 1548776302621 1548774600364
[2019-01-29 23:10:00.365] [INFO] console - will update 1548776400364 1548774600364
[2019-01-29 23:10:00.369] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 23:10:09.665] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 23:10:09.666] [INFO] console - will check 1548776400364 1548774609666
[2019-01-29 23:10:09.666] [INFO] console - will update 1548776409666 1548774609666
[2019-01-29 23:10:09.670] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 23:10:21.567] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 23:10:21.567] [INFO] console - will check 1548776409666 1548774621567
[2019-01-29 23:10:21.567] [INFO] console - will update 1548776421567 1548774621567
[2019-01-29 23:10:21.573] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 23:11:08.537] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 23:11:08.537] [INFO] console - will check 1548776421567 1548774668537
[2019-01-29 23:11:08.537] [INFO] console - will update 1548776468537 1548774668537
[2019-01-29 23:11:08.545] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 23:11:33.165] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 23:11:33.165] [INFO] console - will check 1548776468537 1548774693165
[2019-01-29 23:11:33.165] [INFO] console - will update 1548776493165 1548774693165
[2019-01-29 23:11:33.175] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 23:11:38.613] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 23:11:38.613] [INFO] console - will check 1548776493165 1548774698613
[2019-01-29 23:11:38.613] [INFO] console - will update 1548776498613 1548774698613
[2019-01-29 23:11:38.616] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 23:12:12.497] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 23:12:12.498] [INFO] console - will check 1548776498613 1548774732498
[2019-01-29 23:12:12.498] [INFO] console - will update 1548776532498 1548774732498
[2019-01-29 23:12:12.500] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 23:12:49.706] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 23:12:49.707] [INFO] console - will check 1548776532498 1548774769707
[2019-01-29 23:12:49.707] [INFO] console - will update 1548776569707 1548774769707
[2019-01-29 23:12:49.711] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 23:13:00.530] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 23:13:00.530] [INFO] console - will check 1548776569707 1548774780530
[2019-01-29 23:13:00.530] [INFO] console - will update 1548776580530 1548774780530
[2019-01-29 23:13:00.535] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 405 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 23:13:07.040] [INFO] console - will check 1548776580530 1548774787040
[2019-01-29 23:13:07.040] [INFO] console - will update 1548776587040 1548774787040
[2019-01-29 23:13:07.040] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 23:13:07.046] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c50261aae5821f8b6ac923d HTTP/1.1" 200 3970 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 23:14:00.896] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 23:14:00.898] [INFO] console - will check 1548776587040 1548774840898
[2019-01-29 23:14:00.898] [INFO] console - will update 1548776640898 1548774840898
[2019-01-29 23:14:00.904] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 23:14:19.787] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 23:14:19.787] [INFO] console - will check 1548776640898 1548774859787
[2019-01-29 23:14:19.787] [INFO] console - will update 1548776659787 1548774859787
[2019-01-29 23:14:19.792] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 23:14:23.454] [INFO] console - will check 1548776659787 1548774863454
[2019-01-29 23:14:23.454] [INFO] console - will update 1548776663454 1548774863454
[2019-01-29 23:14:23.454] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 23:14:23.456] [WARN] http - undefined - - "GET /posts/getPost?id=5c50261aae5821f8b6ac923d HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 23:15:22.911] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 23:15:22.912] [INFO] console - will check 1548776663454 1548774922912
[2019-01-29 23:15:22.912] [INFO] console - will update 1548776722912 1548774922912
[2019-01-29 23:15:22.917] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 23:16:57.014] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 23:16:57.014] [INFO] console - will check 1548776722912 1548775017014
[2019-01-29 23:16:57.014] [INFO] console - will update 1548776817014 1548775017014
[2019-01-29 23:16:57.021] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 23:17:09.388] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 23:17:09.389] [INFO] console - will check 1548776817014 1548775029388
[2019-01-29 23:17:09.389] [INFO] console - will update 1548776829388 1548775029388
[2019-01-29 23:17:09.393] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 23:17:21.701] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 23:17:21.713] [INFO] console - will check 1548776829388 1548775041713
[2019-01-29 23:17:21.713] [INFO] console - will update 1548776841713 1548775041713
[2019-01-29 23:17:21.715] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 23:17:36.049] [INFO] console - will check 1548776841713 1548775056049
[2019-01-29 23:17:36.049] [INFO] console - will update 1548776856049 1548775056049
[2019-01-29 23:17:36.049] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 23:17:36.052] [WARN] http - undefined - - "GET /posts/getPost?id=5c50261aae5821f8b6ac923d HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 23:17:47.670] [INFO] console - will check 1548776856049 1548775067670
[2019-01-29 23:17:47.671] [INFO] console - will update 1548776867670 1548775067670
[2019-01-29 23:17:47.671] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 23:17:47.676] [WARN] http - undefined - - "GET /posts/getPost?id=5c50261aae5821f8b6ac923d HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 23:17:53.739] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 23:17:53.739] [INFO] console - will check 1548776867670 1548775073739
[2019-01-29 23:17:53.739] [INFO] console - will update 1548776873739 1548775073739
[2019-01-29 23:17:53.744] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 23:17:55.960] [INFO] console - will check 1548776873739 1548775075960
[2019-01-29 23:17:55.962] [INFO] console - will update 1548776875960 1548775075960
[2019-01-29 23:17:55.962] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 23:17:55.965] [WARN] http - undefined - - "GET /posts/getPost?id=5c50261aae5821f8b6ac923d HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 23:18:49.219] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 23:18:49.220] [INFO] console - will check 1548776875960 1548775129220
[2019-01-29 23:18:49.220] [INFO] console - will update 1548776929220 1548775129220
[2019-01-29 23:18:49.253] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 23:19:00.547] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 23:19:00.547] [INFO] console - will check 1548776929220 1548775140547
[2019-01-29 23:19:00.547] [INFO] console - will update 1548776940547 1548775140547
[2019-01-29 23:19:00.552] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 23:22:34.608] [INFO] console - will check 1548776940547 1548775354608
[2019-01-29 23:22:34.608] [INFO] console - will update 1548777154608 1548775354608
[2019-01-29 23:22:34.609] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 23:22:34.612] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c500b8699d8808eaeaf39b2 HTTP/1.1" 200 122 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 23:28:12.637] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 23:28:12.639] [INFO] console - will check 1548777154608 1548775692639
[2019-01-29 23:28:12.639] [INFO] console - will update 1548777492639 1548775692639
[2019-01-29 23:28:12.650] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 23:29:50.974] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 23:29:50.975] [INFO] console - will check 1548777492639 1548775790975
[2019-01-29 23:29:50.975] [INFO] console - will update 1548777590975 1548775790975
[2019-01-29 23:29:50.981] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 23:29:54.174] [INFO] console - will check 1548777590975 1548775794174
[2019-01-29 23:29:54.175] [INFO] console - will update 1548777594174 1548775794174
[2019-01-29 23:29:54.176] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 23:29:54.179] [WARN] http - undefined - - "GET /posts/getPost?id=5c500b8699d8808eaeaf39b2 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 23:30:12.111] [ERROR] http - undefined - - "POST /posts/update HTTP/1.1" 404 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 23:32:37.966] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 23:32:37.972] [INFO] console - will check 1548777594174 1548775957972
[2019-01-29 23:32:37.972] [INFO] console - will update 1548777757972 1548775957972
[2019-01-29 23:32:38.040] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 23:32:40.039] [INFO] console - will check 1548777757972 1548775960039
[2019-01-29 23:32:40.040] [INFO] console - will update 1548777760039 1548775960039
[2019-01-29 23:32:40.040] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 23:32:40.046] [WARN] http - undefined - - "GET /posts/getPost?id=5c500b8699d8808eaeaf39b2 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 23:32:50.866] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { key: undefined } ] 'results'
[2019-01-29 23:32:50.890] [INFO] http - ::ffff:127.0.0.1 - - "POST /posts/update HTTP/1.1" 200 13 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 23:33:01.166] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 23:33:01.166] [INFO] console - will check 1548777760039 1548775981166
[2019-01-29 23:33:01.166] [INFO] console - will update 1548777781166 1548775981166
[2019-01-29 23:33:01.171] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 23:33:02.479] [INFO] console - will check 1548777781166 1548775982479
[2019-01-29 23:33:02.479] [INFO] console - will update 1548777782479 1548775982479
[2019-01-29 23:33:02.479] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 23:33:02.483] [WARN] http - undefined - - "GET /posts/getPost?id=5c500b8699d8808eaeaf39b2 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 23:39:56.487] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 23:39:56.490] [INFO] console - will check 1548777782479 1548776396490
[2019-01-29 23:39:56.490] [INFO] console - will update 1548778196490 1548776396490
[2019-01-29 23:39:56.522] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 23:40:00.700] [INFO] console - will check 1548778196490 1548776400700
[2019-01-29 23:40:00.700] [INFO] console - will update 1548778200700 1548776400700
[2019-01-29 23:40:00.701] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 23:40:00.709] [WARN] http - undefined - - "GET /posts/getPost?id=5c500b8699d8808eaeaf39b2 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 23:40:17.546] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { key: undefined } ] 'results'
[2019-01-29 23:40:17.562] [INFO] console - { _id: 5c500b8699d8808eaeaf39b2,
  title: 'zlx post 1',
  author: '5c50094c99d8808eaeaf39b1',
  content: '> this is a test post ',
  type: 'public',
  __v: 0,
  create_time: 1548749702930,
  deleted: false } 'update'
[2019-01-29 23:40:17.565] [INFO] http - ::ffff:127.0.0.1 - - "POST /posts/update HTTP/1.1" 200 13 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 23:40:53.449] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 23:40:53.449] [INFO] console - will check 1548778200700 1548776453449
[2019-01-29 23:40:53.449] [INFO] console - will update 1548778253449 1548776453449
[2019-01-29 23:40:53.456] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 406 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 23:42:25.332] [INFO] console - will check 1548778253449 1548776545332
[2019-01-29 23:42:25.333] [INFO] console - will update 1548778345332 1548776545332
[2019-01-29 23:42:25.336] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 23:42:25.356] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c500b8699d8808eaeaf39b2 HTTP/1.1" 200 103 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 23:42:27.610] [INFO] console - will check 1548778345332 1548776547610
[2019-01-29 23:42:27.611] [INFO] console - will update 1548778347610 1548776547610
[2019-01-29 23:42:27.611] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 23:42:27.616] [WARN] http - undefined - - "GET /posts/getPost?id=5c500b8699d8808eaeaf39b2 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 23:42:32.751] [INFO] console - will check 1548778347610 1548776552751
[2019-01-29 23:42:32.752] [INFO] console - will update 1548778352751 1548776552751
[2019-01-29 23:42:32.752] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 23:42:32.757] [WARN] http - undefined - - "GET /posts/getPost?id=5c500b8699d8808eaeaf39b2 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 23:42:55.115] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 23:42:55.115] [INFO] console - will check 1548778352751 1548776575115
[2019-01-29 23:42:55.115] [INFO] console - will update 1548778375115 1548776575115
[2019-01-29 23:42:55.122] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 23:42:56.886] [INFO] console - will check 1548778375115 1548776576886
[2019-01-29 23:42:56.886] [INFO] console - will update 1548778376886 1548776576886
[2019-01-29 23:42:56.886] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 23:42:56.889] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c500b8699d8808eaeaf39b2 HTTP/1.1" 200 109 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 23:43:11.380] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: { content: '> this is a test' }, key: undefined } ] 'results'
[2019-01-29 23:43:11.392] [INFO] http - ::ffff:127.0.0.1 - - "POST /posts/update HTTP/1.1" 200 202 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 23:44:06.605] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 23:44:06.606] [INFO] console - will check 1548778376886 1548776646606
[2019-01-29 23:44:06.606] [INFO] console - will update 1548778446606 1548776646606
[2019-01-29 23:44:06.609] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 407 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 23:44:08.469] [INFO] console - will check 1548778446606 1548776648469
[2019-01-29 23:44:08.470] [INFO] console - will update 1548778448469 1548776648469
[2019-01-29 23:44:08.470] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 23:44:08.473] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c500b8699d8808eaeaf39b2 HTTP/1.1" 200 118 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 23:46:57.985] [INFO] console - will check 1548778448469 1548776817985
[2019-01-29 23:46:57.985] [INFO] console - will update 1548778617985 1548776817985
[2019-01-29 23:46:57.985] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 23:46:57.988] [WARN] http - undefined - - "GET /posts/getPost?id=5c500b8699d8808eaeaf39b2 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 23:47:07.122] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: { content: '> this is a test aaaa' }, key: undefined } ] 'results'
[2019-01-29 23:47:07.132] [INFO] http - ::ffff:127.0.0.1 - - "POST /posts/update HTTP/1.1" 200 211 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 23:50:48.144] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 23:50:48.148] [INFO] console - will check 1548778617985 1548777048148
[2019-01-29 23:50:48.148] [INFO] console - will update 1548778848148 1548777048148
[2019-01-29 23:50:48.268] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 23:50:50.590] [INFO] console - will check 1548778848148 1548777050590
[2019-01-29 23:50:50.590] [INFO] console - will update 1548778850590 1548777050590
[2019-01-29 23:50:50.591] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 23:50:50.601] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c500b8699d8808eaeaf39b2 HTTP/1.1" 200 123 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 23:50:59.631] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: { content: '> this is a test aaaabbb' },
    key: undefined } ] 'results'
[2019-01-29 23:50:59.643] [INFO] http - ::ffff:127.0.0.1 - - "POST /posts/update HTTP/1.1" 200 219 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 23:52:43.036] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 23:52:43.039] [INFO] console - will check 1548778850590 1548777163039
[2019-01-29 23:52:43.039] [INFO] console - will update 1548778963039 1548777163039
[2019-01-29 23:52:43.070] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 23:52:44.465] [INFO] console - will check 1548778963039 1548777164465
[2019-01-29 23:52:44.466] [INFO] console - will update 1548778964465 1548777164465
[2019-01-29 23:52:44.466] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 23:52:44.472] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c500b8699d8808eaeaf39b2 HTTP/1.1" 200 126 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 23:52:51.255] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: { content: '> this is a test aaaabbbcccc' },
    key: undefined } ] 'results'
[2019-01-29 23:52:51.266] [INFO] http - ::ffff:127.0.0.1 - - "POST /posts/update HTTP/1.1" 200 155 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 23:54:29.968] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 23:54:29.973] [INFO] console - will check 1548778964465 1548777269973
[2019-01-29 23:54:29.974] [INFO] console - will update 1548779069973 1548777269973
[2019-01-29 23:54:30.014] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 23:54:38.408] [INFO] console - will check 1548779069973 1548777278408
[2019-01-29 23:54:38.408] [INFO] console - will update 1548779078408 1548777278408
[2019-01-29 23:54:38.409] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 23:54:38.414] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c500b8699d8808eaeaf39b2 HTTP/1.1" 200 130 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 23:55:59.359] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 23:55:59.360] [INFO] console - will check 1548779078408 1548777359360
[2019-01-29 23:55:59.360] [INFO] console - will update 1548779159360 1548777359360
[2019-01-29 23:55:59.369] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 23:56:01.036] [INFO] console - will check 1548779159360 1548777361036
[2019-01-29 23:56:01.036] [INFO] console - will update 1548779161036 1548777361036
[2019-01-29 23:56:01.036] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 23:56:01.040] [WARN] http - undefined - - "GET /posts/getPost?id=5c500b8699d8808eaeaf39b2 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 23:56:28.318] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: { content: '> this is a test aaaabbbcccc多多岛' },
    key: undefined } ] 'results'
[2019-01-29 23:56:28.330] [INFO] http - ::ffff:127.0.0.1 - - "POST /posts/update HTTP/1.1" 200 179 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 23:56:32.606] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 23:56:32.607] [INFO] console - will check 1548779161036 1548777392607
[2019-01-29 23:56:32.607] [INFO] console - will update 1548779192607 1548777392607
[2019-01-29 23:56:32.611] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 422 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-29 23:56:33.732] [INFO] console - will check 1548779192607 1548777393732
[2019-01-29 23:56:33.733] [INFO] console - will update 1548779193732 1548777393732
[2019-01-29 23:56:33.733] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-29 23:56:33.736] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c500b8699d8808eaeaf39b2 HTTP/1.1" 200 154 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 00:00:48.269] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 00:00:48.271] [INFO] console - will check 1548779193732 1548777648271
[2019-01-30 00:00:48.271] [INFO] console - will update 1548779448271 1548777648271
[2019-01-30 00:00:48.281] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 00:00:53.256] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 00:00:53.257] [INFO] console - will check 1548779448271 1548777653257
[2019-01-30 00:00:53.257] [INFO] console - will update 1548779453257 1548777653257
[2019-01-30 00:00:53.262] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 00:00:54.741] [INFO] console - will check 1548779453257 1548777654741
[2019-01-30 00:00:54.741] [INFO] console - will update 1548779454741 1548777654741
[2019-01-30 00:00:54.741] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 00:00:54.743] [WARN] http - undefined - - "GET /posts/getPost?id=5c500b8699d8808eaeaf39b2 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 00:01:00.560] [INFO] console - will check 1548779454741 1548777660560
[2019-01-30 00:01:00.560] [INFO] console - will update 1548779460560 1548777660560
[2019-01-30 00:01:00.560] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 00:01:00.564] [WARN] http - undefined - - "GET /posts/getPost?id=5c50261aae5821f8b6ac923d HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 00:01:07.318] [INFO] console - will check 1548779460560 1548777667318
[2019-01-30 00:01:07.318] [INFO] console - will update 1548779467318 1548777667318
[2019-01-30 00:01:07.319] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 00:01:07.321] [WARN] http - undefined - - "GET /posts/getPost?id=5c500b8699d8808eaeaf39b2 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 00:01:08.987] [INFO] console - will check 1548779467318 1548777668987
[2019-01-30 00:01:08.987] [INFO] console - will update 1548779468987 1548777668987
[2019-01-30 00:01:08.987] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 00:01:08.989] [WARN] http - undefined - - "GET /posts/getPost?id=5c50261aae5821f8b6ac923d HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 00:01:12.805] [INFO] console - will check 1548779468987 1548777672805
[2019-01-30 00:01:12.806] [INFO] console - will update 1548779472805 1548777672805
[2019-01-30 00:01:12.806] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 00:01:12.809] [WARN] http - undefined - - "GET /posts/getPost?id=5c50261aae5821f8b6ac923d HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 00:01:13.361] [INFO] console - will check 1548779472805 1548777673361
[2019-01-30 00:01:13.362] [INFO] console - will update 1548779473361 1548777673361
[2019-01-30 00:01:13.362] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 00:01:13.364] [WARN] http - undefined - - "GET /posts/getPost?id=5c500b8699d8808eaeaf39b2 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 00:01:15.339] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 00:01:15.339] [INFO] console - will check 1548779473361 1548777675339
[2019-01-30 00:01:15.339] [INFO] console - will update 1548779475339 1548777675339
[2019-01-30 00:01:15.341] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 13:31:59.826] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 13:31:59.869] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 125 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 13:32:00.034] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 13:32:00.036] [INFO] console - will check 1548828119856 1548826320036
[2019-01-30 13:32:00.036] [INFO] console - will update 1548828120036 1548826320036
[2019-01-30 13:32:00.060] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 13:32:02.127] [INFO] console - will check 1548828120036 1548826322127
[2019-01-30 13:32:02.127] [INFO] console - will update 1548828122127 1548826322127
[2019-01-30 13:32:02.127] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 13:32:02.131] [WARN] http - undefined - - "GET /posts/getPost?id=5c500b8699d8808eaeaf39b2 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 13:32:14.434] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: { content: '> this is a test aaaabbbcccc多多岛 123' },
    key: undefined } ] 'results'
[2019-01-30 13:32:14.442] [INFO] http - ::ffff:127.0.0.1 - - "POST /posts/update HTTP/1.1" 200 169 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 13:32:17.367] [INFO] console - will check 1548828122127 1548826337367
[2019-01-30 13:32:17.367] [INFO] console - will update 1548828137367 1548826337367
[2019-01-30 13:32:17.370] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 13:32:17.382] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c500b8699d8808eaeaf39b2 HTTP/1.1" 200 144 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 13:32:18.613] [INFO] console - will check 1548828137367 1548826338613
[2019-01-30 13:32:18.613] [INFO] console - will update 1548828138613 1548826338613
[2019-01-30 13:32:18.613] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 13:32:18.616] [WARN] http - undefined - - "GET /posts/getPost?id=5c50261aae5821f8b6ac923d HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 13:32:20.885] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 13:32:20.885] [INFO] console - will check 1548828138613 1548826340885
[2019-01-30 13:32:20.885] [INFO] console - will update 1548828140885 1548826340885
[2019-01-30 13:32:20.888] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 408 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 13:32:22.108] [INFO] console - will check 1548828140885 1548826342108
[2019-01-30 13:32:22.108] [INFO] console - will update 1548828142108 1548826342108
[2019-01-30 13:32:22.109] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 13:32:22.111] [WARN] http - undefined - - "GET /posts/getPost?id=5c500b8699d8808eaeaf39b2 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 13:32:58.454] [INFO] console - will check 1548828142108 1548826378454
[2019-01-30 13:32:58.455] [INFO] console - will update 1548828178454 1548826378454
[2019-01-30 13:32:58.455] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 13:32:58.457] [WARN] http - undefined - - "GET /posts/getPost?id=5c50261aae5821f8b6ac923d HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 13:33:36.002] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 13:33:36.003] [INFO] console - will check 1548828178454 1548826416003
[2019-01-30 13:33:36.003] [INFO] console - will update 1548828216003 1548826416003
[2019-01-30 13:33:36.015] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 13:33:40.789] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 13:33:40.789] [INFO] console - will check 1548828216003 1548826420789
[2019-01-30 13:33:40.789] [INFO] console - will update 1548828220789 1548826420789
[2019-01-30 13:33:40.792] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 13:34:14.958] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 13:34:14.959] [INFO] console - will check 1548828220789 1548826454959
[2019-01-30 13:34:14.959] [INFO] console - will update 1548828254959 1548826454959
[2019-01-30 13:34:14.964] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 13:34:17.560] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 13:34:17.560] [INFO] console - will check 1548828254959 1548826457560
[2019-01-30 13:34:17.560] [INFO] console - will update 1548828257560 1548826457560
[2019-01-30 13:34:17.563] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 13:34:29.868] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 13:34:29.868] [INFO] console - will check 1548828257560 1548826469868
[2019-01-30 13:34:29.868] [INFO] console - will update 1548828269868 1548826469868
[2019-01-30 13:34:29.875] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 13:34:31.392] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 13:34:31.393] [INFO] console - will check 1548828269868 1548826471393
[2019-01-30 13:34:31.393] [INFO] console - will update 1548828271393 1548826471393
[2019-01-30 13:34:31.395] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 13:34:55.313] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 13:34:55.313] [INFO] console - will check 1548828271393 1548826495313
[2019-01-30 13:34:55.313] [INFO] console - will update 1548828295313 1548826495313
[2019-01-30 13:34:55.317] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 13:35:38.926] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 13:35:38.926] [INFO] console - will check 1548828295313 1548826538926
[2019-01-30 13:35:38.927] [INFO] console - will update 1548828338926 1548826538926
[2019-01-30 13:35:38.929] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 13:35:42.090] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 13:35:42.091] [INFO] console - will check 1548828338926 1548826542091
[2019-01-30 13:35:42.091] [INFO] console - will update 1548828342091 1548826542091
[2019-01-30 13:35:42.096] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 13:35:43.781] [INFO] console - will check 1548828342091 1548826543781
[2019-01-30 13:35:43.782] [INFO] console - will update 1548828343781 1548826543781
[2019-01-30 13:35:43.782] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 13:35:43.784] [WARN] http - undefined - - "GET /posts/getPost?id=5c50261aae5821f8b6ac923d HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 13:35:46.294] [INFO] console - will check 1548828343781 1548826546294
[2019-01-30 13:35:46.295] [INFO] console - will update 1548828346294 1548826546294
[2019-01-30 13:35:46.295] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 13:35:46.299] [WARN] http - undefined - - "GET /posts/getPost?id=5c500b8699d8808eaeaf39b2 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 13:35:50.320] [INFO] console - will check 1548828346294 1548826550320
[2019-01-30 13:35:50.321] [INFO] console - will update 1548828350320 1548826550320
[2019-01-30 13:35:50.322] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 13:35:50.333] [WARN] http - undefined - - "GET /posts/getPost?id=5c50261aae5821f8b6ac923d HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 13:35:52.062] [INFO] console - will check 1548828350320 1548826552062
[2019-01-30 13:35:52.062] [INFO] console - will update 1548828352062 1548826552062
[2019-01-30 13:35:52.063] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 13:35:52.065] [WARN] http - undefined - - "GET /posts/getPost?id=5c50261aae5821f8b6ac923d HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 13:36:09.986] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 13:36:09.987] [INFO] console - will check 1548828352062 1548826569987
[2019-01-30 13:36:09.987] [INFO] console - will update 1548828369987 1548826569987
[2019-01-30 13:36:09.990] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 13:36:14.024] [INFO] console - will check 1548828369987 1548826574024
[2019-01-30 13:36:14.024] [INFO] console - will update 1548828374024 1548826574024
[2019-01-30 13:36:14.025] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 13:36:14.030] [WARN] http - undefined - - "GET /posts/getPost?id=5c50261aae5821f8b6ac923d HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 13:36:25.782] [INFO] console - will check 1548828374024 1548826585782
[2019-01-30 13:36:25.782] [INFO] console - will update 1548828385782 1548826585782
[2019-01-30 13:36:25.783] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 13:36:25.785] [WARN] http - undefined - - "GET /posts/getPost?id=5c500b8699d8808eaeaf39b2 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 13:36:43.793] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 13:36:43.793] [INFO] console - will check 1548828385782 1548826603793
[2019-01-30 13:36:43.793] [INFO] console - will update 1548828403793 1548826603793
[2019-01-30 13:36:43.797] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 13:37:06.002] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 13:37:06.002] [INFO] console - will check 1548828403793 1548826626002
[2019-01-30 13:37:06.002] [INFO] console - will update 1548828426002 1548826626002
[2019-01-30 13:37:06.008] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 13:37:10.664] [INFO] console - will check 1548828426002 1548826630664
[2019-01-30 13:37:10.664] [INFO] console - will update 1548828430664 1548826630664
[2019-01-30 13:37:10.665] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 13:37:10.668] [WARN] http - undefined - - "GET /posts/getPost?id=5c50261aae5821f8b6ac923d HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 13:37:17.037] [INFO] console - will check 1548828430664 1548826637037
[2019-01-30 13:37:17.037] [INFO] console - will update 1548828437037 1548826637037
[2019-01-30 13:37:17.038] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 13:37:17.040] [WARN] http - undefined - - "GET /posts/getPost?id=5c500b8699d8808eaeaf39b2 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 13:37:53.083] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 13:37:53.083] [INFO] console - will check 1548828437037 1548826673083
[2019-01-30 13:37:53.083] [INFO] console - will update 1548828473083 1548826673083
[2019-01-30 13:37:53.098] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 13:38:12.839] [INFO] console - will check 1548828473083 1548826692839
[2019-01-30 13:38:12.839] [INFO] console - will update 1548828492839 1548826692839
[2019-01-30 13:38:12.840] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 13:38:12.842] [WARN] http - undefined - - "GET /posts/getPost?id=5c50261aae5821f8b6ac923d HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 13:38:25.371] [INFO] console - will check 1548828492839 1548826705371
[2019-01-30 13:38:25.371] [INFO] console - will update 1548828505371 1548826705371
[2019-01-30 13:38:25.371] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 13:38:25.375] [WARN] http - undefined - - "GET /posts/getPost?id=5c500b8699d8808eaeaf39b2 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 13:40:03.435] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 13:40:03.436] [INFO] console - will check 1548828505371 1548826803436
[2019-01-30 13:40:03.436] [INFO] console - will update 1548828603436 1548826803436
[2019-01-30 13:40:03.442] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 13:40:07.782] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 13:40:07.783] [INFO] console - will check 1548828603436 1548826807783
[2019-01-30 13:40:07.783] [INFO] console - will update 1548828607783 1548826807783
[2019-01-30 13:40:07.797] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 408 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 13:40:10.314] [INFO] console - will check 1548828607783 1548826810314
[2019-01-30 13:40:10.314] [INFO] console - will update 1548828610314 1548826810314
[2019-01-30 13:40:10.314] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 13:40:10.316] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c50261aae5821f8b6ac923d HTTP/1.1" 200 3970 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 13:40:17.715] [INFO] console - will check 1548828610314 1548826817715
[2019-01-30 13:40:17.715] [INFO] console - will update 1548828617715 1548826817715
[2019-01-30 13:40:17.716] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 13:40:17.719] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c500b8699d8808eaeaf39b2 HTTP/1.1" 200 144 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 13:40:44.854] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 13:40:44.854] [INFO] console - will check 1548828617715 1548826844854
[2019-01-30 13:40:44.854] [INFO] console - will update 1548828644854 1548826844854
[2019-01-30 13:40:44.859] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 13:40:50.059] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 13:40:50.060] [INFO] console - will check 1548828644854 1548826850060
[2019-01-30 13:40:50.060] [INFO] console - will update 1548828650060 1548826850060
[2019-01-30 13:40:50.064] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 408 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 13:40:52.436] [INFO] console - will check 1548828650060 1548826852436
[2019-01-30 13:40:52.436] [INFO] console - will update 1548828652436 1548826852436
[2019-01-30 13:40:52.436] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 13:40:52.438] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c50261aae5821f8b6ac923d HTTP/1.1" 200 3970 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 13:40:59.594] [INFO] console - will check 1548828652436 1548826859594
[2019-01-30 13:40:59.594] [INFO] console - will update 1548828659594 1548826859594
[2019-01-30 13:40:59.595] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 13:40:59.598] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c500b8699d8808eaeaf39b2 HTTP/1.1" 200 144 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 13:41:24.667] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 13:41:24.668] [INFO] console - will check 1548828659594 1548826884668
[2019-01-30 13:41:24.668] [INFO] console - will update 1548828684668 1548826884668
[2019-01-30 13:41:24.671] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 13:41:28.408] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 13:41:28.408] [INFO] console - will check 1548828684668 1548826888408
[2019-01-30 13:41:28.409] [INFO] console - will update 1548828688408 1548826888408
[2019-01-30 13:41:28.423] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 13:41:30.057] [INFO] console - will check 1548828688408 1548826890057
[2019-01-30 13:41:30.058] [INFO] console - will update 1548828690057 1548826890057
[2019-01-30 13:41:30.058] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 13:41:30.061] [WARN] http - undefined - - "GET /posts/getPost?id=5c50261aae5821f8b6ac923d HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 13:41:36.747] [INFO] console - will check 1548828690057 1548826896747
[2019-01-30 13:41:36.747] [INFO] console - will update 1548828696747 1548826896747
[2019-01-30 13:41:36.749] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 13:41:36.751] [WARN] http - undefined - - "GET /posts/getPost?id=5c500b8699d8808eaeaf39b2 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 13:42:25.333] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 13:42:25.334] [INFO] console - will check 1548828696747 1548826945334
[2019-01-30 13:42:25.334] [INFO] console - will update 1548828745334 1548826945334
[2019-01-30 13:42:25.337] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 13:44:24.375] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 13:44:24.375] [INFO] console - will check 1548828745334 1548827064375
[2019-01-30 13:44:24.375] [INFO] console - will update 1548828864375 1548827064375
[2019-01-30 13:44:24.378] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 13:44:34.306] [INFO] console - will check 1548828864375 1548827074306
[2019-01-30 13:44:34.306] [INFO] console - will update 1548828874306 1548827074306
[2019-01-30 13:44:34.306] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 13:44:34.309] [WARN] http - undefined - - "GET /posts/getPost?id=5c50261aae5821f8b6ac923d HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 13:44:42.811] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 13:44:42.811] [INFO] console - will check 1548828874306 1548827082811
[2019-01-30 13:44:42.811] [INFO] console - will update 1548828882811 1548827082811
[2019-01-30 13:44:42.814] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 13:44:48.829] [INFO] console - will check 1548828882811 1548827088829
[2019-01-30 13:44:48.829] [INFO] console - will update 1548828888829 1548827088829
[2019-01-30 13:44:48.829] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 13:44:48.832] [WARN] http - undefined - - "GET /posts/getPost?id=5c50261aae5821f8b6ac923d HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 13:44:54.590] [INFO] console - will check 1548828888829 1548827094590
[2019-01-30 13:44:54.590] [INFO] console - will update 1548828894590 1548827094590
[2019-01-30 13:44:54.590] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 13:44:54.592] [WARN] http - undefined - - "GET /posts/getPost?id=5c500b8699d8808eaeaf39b2 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 13:44:59.813] [INFO] console - will check 1548828894590 1548827099813
[2019-01-30 13:44:59.813] [INFO] console - will update 1548828899813 1548827099813
[2019-01-30 13:44:59.814] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 13:44:59.816] [WARN] http - undefined - - "GET /posts/getPost?id=5c50261aae5821f8b6ac923d HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 13:45:16.386] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 13:45:16.387] [INFO] console - will check 1548828899813 1548827116387
[2019-01-30 13:45:16.388] [INFO] console - will update 1548828916387 1548827116387
[2019-01-30 13:45:16.402] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 13:45:59.710] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 13:45:59.714] [INFO] console - will check 1548828916387 1548827159714
[2019-01-30 13:45:59.714] [INFO] console - will update 1548828959714 1548827159714
[2019-01-30 13:45:59.737] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 13:46:06.327] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 13:46:06.328] [INFO] console - will check 1548828959714 1548827166328
[2019-01-30 13:46:06.328] [INFO] console - will update 1548828966328 1548827166328
[2019-01-30 13:46:06.331] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 13:46:08.799] [INFO] console - will check 1548828966328 1548827168799
[2019-01-30 13:46:08.800] [INFO] console - will update 1548828968799 1548827168799
[2019-01-30 13:46:08.800] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 13:46:08.802] [WARN] http - undefined - - "GET /posts/getPost?id=5c50261aae5821f8b6ac923d HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 13:46:11.596] [INFO] console - will check 1548828968799 1548827171596
[2019-01-30 13:46:11.596] [INFO] console - will update 1548828971596 1548827171596
[2019-01-30 13:46:11.596] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 13:46:11.599] [WARN] http - undefined - - "GET /posts/getPost?id=5c500b8699d8808eaeaf39b2 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 13:46:18.738] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: { content: '> this is a test aaaabbbcccc多多' },
    key: undefined } ] 'results'
[2019-01-30 13:46:18.750] [INFO] http - ::ffff:127.0.0.1 - - "POST /posts/update HTTP/1.1" 200 162 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 13:48:12.607] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 13:48:12.609] [INFO] console - will check 1548828971596 1548827292609
[2019-01-30 13:48:12.609] [INFO] console - will update 1548829092609 1548827292609
[2019-01-30 13:48:12.613] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 13:48:16.653] [INFO] console - will check 1548829092609 1548827296653
[2019-01-30 13:48:16.653] [INFO] console - will update 1548829096653 1548827296653
[2019-01-30 13:48:16.653] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 13:48:16.655] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c500b8699d8808eaeaf39b2 HTTP/1.1" 200 137 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 13:48:26.060] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: { content: '> this is a test aaaabb' },
    key: undefined } ] 'results'
[2019-01-30 13:48:26.064] [INFO] http - ::ffff:127.0.0.1 - - "POST /posts/update HTTP/1.1" 200 151 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 13:48:45.231] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 13:48:45.232] [INFO] console - will check 1548829096653 1548827325232
[2019-01-30 13:48:45.232] [INFO] console - will update 1548829125232 1548827325232
[2019-01-30 13:48:45.235] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 13:48:45.887] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 13:48:45.887] [INFO] console - will check 1548829125232 1548827325887
[2019-01-30 13:48:45.887] [INFO] console - will update 1548829125887 1548827325887
[2019-01-30 13:48:45.890] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 13:48:48.191] [INFO] console - will check 1548829125887 1548827328191
[2019-01-30 13:48:48.191] [INFO] console - will update 1548829128191 1548827328191
[2019-01-30 13:48:48.191] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 13:48:48.193] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c500b8699d8808eaeaf39b2 HTTP/1.1" 200 126 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 13:48:55.911] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: { content: '> this is a test aaaavvvvv' },
    key: undefined } ] 'results'
[2019-01-30 13:48:55.916] [INFO] http - ::ffff:127.0.0.1 - - "POST /posts/update HTTP/1.1" 200 154 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 14:10:36.247] [INFO] console - will check 1548829128191 1548828636247
[2019-01-30 14:10:36.248] [INFO] console - will update 1548830436247 1548828636247
[2019-01-30 14:10:36.249] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 14:10:36.256] [WARN] http - undefined - - "GET /posts/getPost?id=5c50261aae5821f8b6ac923d HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 14:10:54.079] [INFO] console - will check 1548830436247 1548828654079
[2019-01-30 14:10:54.079] [INFO] console - will update 1548830454079 1548828654079
[2019-01-30 14:10:54.079] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 14:10:54.082] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c500b8699d8808eaeaf39b2 HTTP/1.1" 200 129 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 14:11:25.550] [INFO] console - will check 1548830454079 1548828685550
[2019-01-30 14:11:25.553] [INFO] console - will update 1548830485550 1548828685550
[2019-01-30 14:11:25.555] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 14:11:25.564] [WARN] http - undefined - - "GET /posts/getPost?id=5c50261aae5821f8b6ac923d HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 14:13:56.828] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 14:13:56.830] [INFO] console - will check 1548830485550 1548828836830
[2019-01-30 14:13:56.830] [INFO] console - will update 1548830636830 1548828836830
[2019-01-30 14:13:56.843] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 14:14:01.868] [INFO] console - will check 1548830636830 1548828841868
[2019-01-30 14:14:01.869] [INFO] console - will update 1548830641868 1548828841868
[2019-01-30 14:14:01.869] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 14:14:01.872] [WARN] http - undefined - - "GET /posts/getPost?id=5c50261aae5821f8b6ac923d HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 14:19:30.827] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 14:19:30.829] [INFO] console - will check 1548830641868 1548829170829
[2019-01-30 14:19:30.833] [INFO] console - will update 1548830970829 1548829170829
[2019-01-30 14:19:30.958] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 14:19:32.479] [INFO] console - will check 1548830970829 1548829172479
[2019-01-30 14:19:32.479] [INFO] console - will update 1548830972479 1548829172479
[2019-01-30 14:19:32.479] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 14:19:32.482] [WARN] http - undefined - - "GET /posts/getPost?id=5c50261aae5821f8b6ac923d HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 14:19:42.690] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 14:19:42.690] [INFO] console - will check 1548830972479 1548829182690
[2019-01-30 14:19:42.690] [INFO] console - will update 1548830982690 1548829182690
[2019-01-30 14:19:42.692] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 14:19:44.637] [INFO] console - will check 1548830982690 1548829184636
[2019-01-30 14:19:44.637] [INFO] console - will update 1548830984636 1548829184636
[2019-01-30 14:19:44.637] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 14:19:44.639] [WARN] http - undefined - - "GET /posts/getPost?id=5c50261aae5821f8b6ac923d HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 14:22:16.799] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 14:22:16.800] [INFO] console - will check 1548830984636 1548829336800
[2019-01-30 14:22:16.800] [INFO] console - will update 1548831136800 1548829336800
[2019-01-30 14:22:16.806] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 14:22:18.704] [INFO] console - will check 1548831136800 1548829338704
[2019-01-30 14:22:18.704] [INFO] console - will update 1548831138704 1548829338704
[2019-01-30 14:22:18.704] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 14:22:18.706] [WARN] http - undefined - - "GET /posts/getPost?id=5c50261aae5821f8b6ac923d HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 14:24:31.053] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 14:24:31.055] [INFO] console - will check 1548831138704 1548829471055
[2019-01-30 14:24:31.055] [INFO] console - will update 1548831271055 1548829471055
[2019-01-30 14:24:31.066] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 14:24:32.915] [INFO] console - will check 1548831271055 1548829472915
[2019-01-30 14:24:32.916] [INFO] console - will update 1548831272915 1548829472915
[2019-01-30 14:24:32.916] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 14:24:32.919] [WARN] http - undefined - - "GET /posts/getPost?id=5c500b8699d8808eaeaf39b2 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 14:24:40.318] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 14:24:40.334] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 125 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 14:24:40.461] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 14:24:40.462] [INFO] console - will check 1548831280329 1548829480462
[2019-01-30 14:24:40.462] [INFO] console - will update 1548831280462 1548829480462
[2019-01-30 14:24:40.467] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 14:24:42.068] [INFO] console - will check 1548831280462 1548829482068
[2019-01-30 14:24:42.069] [INFO] console - will update 1548831282068 1548829482068
[2019-01-30 14:24:42.069] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 14:24:42.071] [WARN] http - undefined - - "GET /posts/getPost?id=5c500b8699d8808eaeaf39b2 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 14:25:14.488] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 14:25:14.489] [INFO] console - will check 1548831282068 1548829514489
[2019-01-30 14:25:14.489] [INFO] console - will update 1548831314489 1548829514489
[2019-01-30 14:25:14.492] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 14:25:18.213] [INFO] console - will check 1548831314489 1548829518213
[2019-01-30 14:25:18.214] [INFO] console - will update 1548831318213 1548829518213
[2019-01-30 14:25:18.215] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 14:25:18.218] [WARN] http - undefined - - "GET /posts/getPost?id=5c500b8699d8808eaeaf39b2 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 14:25:26.941] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 14:25:26.947] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 125 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 14:25:27.046] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 14:25:27.052] [INFO] console - will check 1548831326945 1548829527052
[2019-01-30 14:25:27.053] [INFO] console - will update 1548831327052 1548829527052
[2019-01-30 14:25:27.069] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 14:25:28.186] [INFO] console - will check 1548831327052 1548829528186
[2019-01-30 14:25:28.189] [INFO] console - will update 1548831328186 1548829528186
[2019-01-30 14:25:28.189] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 14:25:28.193] [WARN] http - undefined - - "GET /posts/getPost?id=5c500b8699d8808eaeaf39b2 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 14:27:19.810] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 14:27:19.812] [INFO] console - will check 1548831328186 1548829639812
[2019-01-30 14:27:19.812] [INFO] console - will update 1548831439812 1548829639812
[2019-01-30 14:27:19.827] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 408 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 14:27:26.017] [INFO] console - will check 1548831439812 1548829646017
[2019-01-30 14:27:26.018] [INFO] console - will update 1548831446017 1548829646017
[2019-01-30 14:27:26.018] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 14:27:26.020] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c500b8699d8808eaeaf39b2 HTTP/1.1" 200 129 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 14:28:59.800] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 14:28:59.804] [INFO] console - will check 1548831446017 1548829739804
[2019-01-30 14:28:59.823] [INFO] console - will update 1548831539804 1548829739804
[2019-01-30 14:28:59.916] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 408 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 14:29:01.474] [INFO] console - will check 1548831539804 1548829741474
[2019-01-30 14:29:01.476] [INFO] console - will update 1548831541474 1548829741474
[2019-01-30 14:29:01.477] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 14:29:01.480] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c500b8699d8808eaeaf39b2 HTTP/1.1" 200 129 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 14:29:51.147] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 14:29:51.150] [INFO] console - will check 1548831541474 1548829791150
[2019-01-30 14:29:51.151] [INFO] console - will update 1548831591150 1548829791150
[2019-01-30 14:29:51.162] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 14:29:56.818] [INFO] console - will check 1548831591150 1548829796818
[2019-01-30 14:29:56.819] [INFO] console - will update 1548831596818 1548829796818
[2019-01-30 14:29:56.820] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 14:29:56.822] [WARN] http - undefined - - "GET /posts/getPost?id=5c500b8699d8808eaeaf39b2 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 14:31:24.838] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 14:31:24.839] [INFO] console - will check 1548831596818 1548829884839
[2019-01-30 14:31:24.840] [INFO] console - will update 1548831684839 1548829884839
[2019-01-30 14:31:24.880] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 14:31:26.421] [INFO] console - will check 1548831684839 1548829886421
[2019-01-30 14:31:26.421] [INFO] console - will update 1548831686421 1548829886421
[2019-01-30 14:31:26.421] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 14:31:26.424] [WARN] http - undefined - - "GET /posts/getPost?id=5c500b8699d8808eaeaf39b2 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 14:32:22.223] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 14:32:22.223] [INFO] console - will check 1548831686421 1548829942223
[2019-01-30 14:32:22.223] [INFO] console - will update 1548831742223 1548829942223
[2019-01-30 14:32:22.227] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 14:32:25.920] [INFO] console - will check 1548831742223 1548829945920
[2019-01-30 14:32:25.921] [INFO] console - will update 1548831745920 1548829945920
[2019-01-30 14:32:25.921] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 14:32:25.923] [WARN] http - undefined - - "GET /posts/getPost?id=5c500b8699d8808eaeaf39b2 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 14:32:59.767] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 14:32:59.771] [INFO] console - will check 1548831745920 1548829979771
[2019-01-30 14:32:59.772] [INFO] console - will update 1548831779771 1548829979771
[2019-01-30 14:32:59.806] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 14:33:01.600] [INFO] console - will check 1548831779771 1548829981600
[2019-01-30 14:33:01.601] [INFO] console - will update 1548831781600 1548829981600
[2019-01-30 14:33:01.601] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 14:33:01.604] [WARN] http - undefined - - "GET /posts/getPost?id=5c500b8699d8808eaeaf39b2 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 14:33:39.625] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 14:33:39.627] [INFO] console - will check 1548831781600 1548830019627
[2019-01-30 14:33:39.627] [INFO] console - will update 1548831819627 1548830019627
[2019-01-30 14:33:39.639] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 14:33:44.905] [INFO] console - will check 1548831819627 1548830024905
[2019-01-30 14:33:44.905] [INFO] console - will update 1548831824905 1548830024905
[2019-01-30 14:33:44.905] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 14:33:44.907] [WARN] http - undefined - - "GET /posts/getPost?id=5c500b8699d8808eaeaf39b2 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 14:34:24.286] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 14:34:24.289] [INFO] console - will check 1548831824905 1548830064289
[2019-01-30 14:34:24.289] [INFO] console - will update 1548831864289 1548830064289
[2019-01-30 14:34:24.317] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 14:34:25.605] [INFO] console - will check 1548831864289 1548830065605
[2019-01-30 14:34:25.605] [INFO] console - will update 1548831865605 1548830065605
[2019-01-30 14:34:25.606] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 14:34:25.610] [WARN] http - undefined - - "GET /posts/getPost?id=5c500b8699d8808eaeaf39b2 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 14:35:24.290] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 14:35:24.293] [INFO] console - will check 1548831865605 1548830124293
[2019-01-30 14:35:24.294] [INFO] console - will update 1548831924293 1548830124293
[2019-01-30 14:35:24.305] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 14:35:27.973] [INFO] console - will check 1548831924293 1548830127973
[2019-01-30 14:35:27.975] [INFO] console - will update 1548831927973 1548830127973
[2019-01-30 14:35:27.976] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 14:35:27.979] [WARN] http - undefined - - "GET /posts/getPost?id=5c500b8699d8808eaeaf39b2 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 14:35:28.285] [INFO] console - will check 1548831927973 1548830128285
[2019-01-30 14:35:28.286] [INFO] console - will update 1548831928285 1548830128285
[2019-01-30 14:35:28.286] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 14:35:28.289] [WARN] http - undefined - - "GET /posts/getPost?id=5c500b8699d8808eaeaf39b2 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 14:36:05.996] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 14:36:05.999] [INFO] console - will check 1548831928285 1548830165999
[2019-01-30 14:36:05.999] [INFO] console - will update 1548831965999 1548830165999
[2019-01-30 14:36:06.007] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 14:36:12.157] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 14:36:12.159] [INFO] console - will check 1548831965999 1548830172159
[2019-01-30 14:36:12.159] [INFO] console - will update 1548831972159 1548830172159
[2019-01-30 14:36:12.162] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 14:36:13.879] [INFO] console - will check 1548831972159 1548830173879
[2019-01-30 14:36:13.879] [INFO] console - will update 1548831973879 1548830173879
[2019-01-30 14:36:13.879] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 14:36:13.890] [WARN] http - undefined - - "GET /posts/getPost?id=5c500b8699d8808eaeaf39b2 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 14:36:42.718] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 14:36:42.720] [INFO] console - will check 1548831973879 1548830202720
[2019-01-30 14:36:42.722] [INFO] console - will update 1548832002720 1548830202720
[2019-01-30 14:36:42.731] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 14:36:44.324] [INFO] console - will check 1548832002720 1548830204324
[2019-01-30 14:36:44.331] [INFO] console - will update 1548832004324 1548830204324
[2019-01-30 14:36:44.332] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 14:36:44.335] [WARN] http - undefined - - "GET /posts/getPost?id=5c500b8699d8808eaeaf39b2 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 14:37:06.356] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 14:37:06.358] [INFO] console - will check 1548832004324 1548830226358
[2019-01-30 14:37:06.358] [INFO] console - will update 1548832026358 1548830226358
[2019-01-30 14:37:06.372] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 14:40:10.269] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 14:40:10.276] [INFO] console - will check 1548832026358 1548830410276
[2019-01-30 14:40:10.276] [INFO] console - will update 1548832210276 1548830410276
[2019-01-30 14:40:10.291] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 14:40:53.349] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 14:40:53.350] [INFO] console - will check 1548832210276 1548830453350
[2019-01-30 14:40:53.350] [INFO] console - will update 1548832253350 1548830453350
[2019-01-30 14:40:53.354] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 14:40:54.309] [INFO] console - will check 1548832253350 1548830454309
[2019-01-30 14:40:54.310] [INFO] console - will update 1548832254309 1548830454309
[2019-01-30 14:40:54.314] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 14:40:54.317] [WARN] http - undefined - - "GET /posts/getPost?id=5c500b8699d8808eaeaf39b2 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 14:42:08.189] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 14:42:08.190] [INFO] console - will check 1548832254309 1548830528190
[2019-01-30 14:42:08.190] [INFO] console - will update 1548832328190 1548830528190
[2019-01-30 14:42:08.192] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 14:42:08.945] [INFO] console - will check 1548832328190 1548830528945
[2019-01-30 14:42:08.946] [INFO] console - will update 1548832328945 1548830528945
[2019-01-30 14:42:08.946] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 14:42:08.948] [WARN] http - undefined - - "GET /posts/getPost?id=5c500b8699d8808eaeaf39b2 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 14:51:15.749] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 14:51:15.749] [INFO] console - will check 1548832328945 1548831075749
[2019-01-30 14:51:15.749] [INFO] console - will update 1548832875749 1548831075749
[2019-01-30 14:51:15.752] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 14:51:20.617] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 14:51:20.618] [INFO] console - will check 1548832875749 1548831080618
[2019-01-30 14:51:20.618] [INFO] console - will update 1548832880618 1548831080618
[2019-01-30 14:51:20.625] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 14:51:34.727] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 14:51:34.727] [INFO] console - will check 1548832880618 1548831094727
[2019-01-30 14:51:34.728] [INFO] console - will update 1548832894727 1548831094727
[2019-01-30 14:51:34.731] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 14:51:55.237] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 14:51:55.238] [INFO] console - will check 1548832894727 1548831115238
[2019-01-30 14:51:55.238] [INFO] console - will update 1548832915238 1548831115238
[2019-01-30 14:51:55.243] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 14:51:56.708] [INFO] console - will check 1548832915238 1548831116708
[2019-01-30 14:51:56.708] [INFO] console - will update 1548832916708 1548831116708
[2019-01-30 14:51:56.709] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 14:51:56.713] [WARN] http - undefined - - "GET /posts/getPost?id=5c500b8699d8808eaeaf39b2 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 14:52:26.557] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 14:52:26.557] [INFO] console - will check 1548832916708 1548831146557
[2019-01-30 14:52:26.557] [INFO] console - will update 1548832946557 1548831146557
[2019-01-30 14:52:26.562] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 14:52:29.037] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 14:52:29.038] [INFO] console - will check 1548832946557 1548831149038
[2019-01-30 14:52:29.038] [INFO] console - will update 1548832949038 1548831149038
[2019-01-30 14:52:29.040] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 14:52:30.683] [INFO] console - will check 1548832949038 1548831150683
[2019-01-30 14:52:30.684] [INFO] console - will update 1548832950683 1548831150683
[2019-01-30 14:52:30.684] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 14:52:30.687] [WARN] http - undefined - - "GET /posts/getPost?id=5c500b8699d8808eaeaf39b2 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 14:55:32.537] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 14:55:32.538] [INFO] console - will check 1548832950683 1548831332538
[2019-01-30 14:55:32.538] [INFO] console - will update 1548833132538 1548831332538
[2019-01-30 14:55:32.582] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 14:56:12.988] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 14:56:12.989] [INFO] console - will check 1548833132538 1548831372989
[2019-01-30 14:56:12.989] [INFO] console - will update 1548833172989 1548831372989
[2019-01-30 14:56:12.995] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 14:57:28.232] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 14:57:28.234] [INFO] console - will check 1548833172989 1548831448234
[2019-01-30 14:57:28.234] [INFO] console - will update 1548833248234 1548831448234
[2019-01-30 14:57:28.237] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 14:58:10.347] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 14:58:10.348] [INFO] console - will check 1548833248234 1548831490348
[2019-01-30 14:58:10.348] [INFO] console - will update 1548833290348 1548831490348
[2019-01-30 14:58:10.365] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 14:58:38.709] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 14:58:38.710] [INFO] console - will check 1548833290348 1548831518710
[2019-01-30 14:58:38.710] [INFO] console - will update 1548833318710 1548831518710
[2019-01-30 14:58:38.717] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 14:58:46.289] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 14:58:46.289] [INFO] console - will check 1548833318710 1548831526289
[2019-01-30 14:58:46.290] [INFO] console - will update 1548833326289 1548831526289
[2019-01-30 14:58:46.298] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 14:59:10.579] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 14:59:10.581] [INFO] console - will check 1548833326289 1548831550581
[2019-01-30 14:59:10.581] [INFO] console - will update 1548833350581 1548831550581
[2019-01-30 14:59:10.589] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 15:00:41.433] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 15:00:41.433] [INFO] console - will check 1548833350581 1548831641433
[2019-01-30 15:00:41.434] [INFO] console - will update 1548833441433 1548831641433
[2019-01-30 15:00:41.436] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 15:01:15.717] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 15:01:15.717] [INFO] console - will check 1548833441433 1548831675717
[2019-01-30 15:01:15.717] [INFO] console - will update 1548833475717 1548831675717
[2019-01-30 15:01:15.734] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 15:01:15.786] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 15:01:15.787] [INFO] console - will check 1548833475717 1548831675787
[2019-01-30 15:01:15.788] [INFO] console - will update 1548833475787 1548831675787
[2019-01-30 15:01:15.790] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 15:01:16.731] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 15:01:16.732] [INFO] console - will check 1548833475787 1548831676732
[2019-01-30 15:01:16.732] [INFO] console - will update 1548833476732 1548831676732
[2019-01-30 15:01:16.734] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 15:01:16.753] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 15:01:16.753] [INFO] console - will check 1548833476732 1548831676753
[2019-01-30 15:01:16.753] [INFO] console - will update 1548833476753 1548831676753
[2019-01-30 15:01:16.756] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 15:01:20.982] [INFO] console - will check 1548833476753 1548831680982
[2019-01-30 15:01:20.982] [INFO] console - will update 1548833480982 1548831680982
[2019-01-30 15:01:20.983] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 15:01:20.985] [WARN] http - undefined - - "GET /posts/getPost?id=5c500b8699d8808eaeaf39b2 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 15:01:40.240] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 15:01:40.241] [INFO] console - will check 1548833480982 1548831700241
[2019-01-30 15:01:40.241] [INFO] console - will update 1548833500241 1548831700241
[2019-01-30 15:01:40.245] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 15:01:42.640] [INFO] console - will check 1548833500241 1548831702640
[2019-01-30 15:01:42.640] [INFO] console - will update 1548833502640 1548831702640
[2019-01-30 15:01:42.640] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 15:01:42.644] [WARN] http - undefined - - "GET /posts/getPost?id=5c500b8699d8808eaeaf39b2 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 15:01:59.847] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 15:01:59.848] [INFO] console - will check 1548833502640 1548831719848
[2019-01-30 15:01:59.848] [INFO] console - will update 1548833519848 1548831719848
[2019-01-30 15:01:59.852] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 15:03:01.015] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 15:03:01.016] [INFO] console - will check 1548833519848 1548831781016
[2019-01-30 15:03:01.016] [INFO] console - will update 1548833581016 1548831781016
[2019-01-30 15:03:01.020] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 15:03:01.050] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 15:03:01.050] [INFO] console - will check 1548833581016 1548831781050
[2019-01-30 15:03:01.050] [INFO] console - will update 1548833581050 1548831781050
[2019-01-30 15:03:01.067] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 15:03:06.101] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 15:03:06.102] [INFO] console - will check 1548833581050 1548831786102
[2019-01-30 15:03:06.102] [INFO] console - will update 1548833586102 1548831786102
[2019-01-30 15:03:06.106] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 15:03:06.112] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 15:03:06.113] [INFO] console - will check 1548833586102 1548831786113
[2019-01-30 15:03:06.113] [INFO] console - will update 1548833586113 1548831786113
[2019-01-30 15:03:06.118] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 15:03:08.371] [INFO] console - will check 1548833586113 1548831788371
[2019-01-30 15:03:08.372] [INFO] console - will update 1548833588371 1548831788371
[2019-01-30 15:03:08.372] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 15:03:08.374] [WARN] http - undefined - - "GET /posts/getPost?id=5c500b8699d8808eaeaf39b2 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 15:03:37.277] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: { content: '> some day you can do' }, key: undefined } ] 'results'
[2019-01-30 15:03:37.291] [INFO] http - ::ffff:127.0.0.1 - - "POST /posts/update HTTP/1.1" 200 149 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 15:09:21.941] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: { content: '> sdmsflds' }, key: undefined } ] 'results'
[2019-01-30 15:09:21.960] [INFO] http - ::ffff:127.0.0.1 - - "POST /posts/update HTTP/1.1" 200 138 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 15:10:28.603] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: { content: '> 写点什么呢？\n> ' }, key: undefined } ] 'results'
[2019-01-30 15:10:28.680] [INFO] http - ::ffff:127.0.0.1 - - "POST /posts/create HTTP/1.1" 200 13 "http://localhost:9000/document/new" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 15:10:32.109] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 15:10:32.110] [INFO] console - will check 1548833588371 1548832232110
[2019-01-30 15:10:32.110] [INFO] console - will update 1548834032110 1548832232110
[2019-01-30 15:10:32.115] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 570 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 15:10:33.998] [INFO] console - will check 1548834032110 1548832233998
[2019-01-30 15:10:33.999] [INFO] console - will update 1548834033998 1548832233998
[2019-01-30 15:10:33.999] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 15:10:34.002] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c514de45c10eaa2f3c041e1 HTTP/1.1" 200 126 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 15:11:26.567] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 15:11:26.568] [INFO] console - will check 1548834033998 1548832286568
[2019-01-30 15:11:26.568] [INFO] console - will update 1548834086568 1548832286568
[2019-01-30 15:11:26.575] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 15:12:02.908] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: { content: '> document here...' }, key: undefined } ] 'results'
[2019-01-30 15:12:02.914] [INFO] http - ::ffff:127.0.0.1 - - "POST /posts/create HTTP/1.1" 200 13 "http://localhost:9000/document/new" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 15:12:31.558] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: { content: '>posts here' }, key: undefined } ] 'results'
[2019-01-30 15:12:31.562] [INFO] http - ::ffff:127.0.0.1 - - "POST /posts/create HTTP/1.1" 200 13 "http://localhost:9000/document/new" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 15:12:31.655] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 15:12:31.655] [INFO] console - will check 1548834086568 1548832351655
[2019-01-30 15:12:31.655] [INFO] console - will update 1548834151655 1548832351655
[2019-01-30 15:12:31.667] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 888 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 15:12:35.331] [INFO] console - will check 1548834151655 1548832355331
[2019-01-30 15:12:35.331] [INFO] console - will update 1548834155331 1548832355331
[2019-01-30 15:12:35.332] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 15:12:35.334] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c514e5f5c10eaa2f3c041e3 HTTP/1.1" 200 107 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 15:12:54.090] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: { content: '>posts here' }, key: undefined } ] 'results'
[2019-01-30 15:12:54.093] [INFO] http - ::ffff:127.0.0.1 - - "POST /posts/update HTTP/1.1" 200 142 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 15:13:00.427] [INFO] console - will check 1548834155331 1548832380427
[2019-01-30 15:13:00.427] [INFO] console - will update 1548834180427 1548832380427
[2019-01-30 15:13:00.428] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 15:13:00.429] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c514e5f5c10eaa2f3c041e3 HTTP/1.1" 200 117 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 15:13:06.399] [INFO] console - will check 1548834180427 1548832386399
[2019-01-30 15:13:06.399] [INFO] console - will update 1548834186399 1548832386399
[2019-01-30 15:13:06.400] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 15:13:06.402] [WARN] http - undefined - - "GET /posts/getPost?id=5c514e5f5c10eaa2f3c041e3 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 15:13:08.567] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 15:13:08.568] [INFO] console - will check 1548834186399 1548832388568
[2019-01-30 15:13:08.568] [INFO] console - will update 1548834188568 1548832388568
[2019-01-30 15:13:08.571] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 898 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 15:14:40.463] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 15:14:40.464] [INFO] console - will check 1548834188568 1548832480464
[2019-01-30 15:14:40.464] [INFO] console - will update 1548834280464 1548832480464
[2019-01-30 15:14:40.468] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 15:14:46.940] [INFO] console - will check 1548834280464 1548832486940
[2019-01-30 15:14:46.941] [INFO] console - will update 1548834286940 1548832486940
[2019-01-30 15:14:46.941] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 15:14:46.943] [WARN] http - undefined - - "GET /posts/getPost?id=5c514e5f5c10eaa2f3c041e3 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 15:14:54.289] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: { content: '>posts here 01' }, key: undefined } ] 'results'
[2019-01-30 15:14:54.293] [INFO] http - ::ffff:127.0.0.1 - - "POST /posts/update HTTP/1.1" 200 148 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 15:14:54.353] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 15:14:54.354] [INFO] console - will check 1548834286940 1548832494354
[2019-01-30 15:14:54.354] [INFO] console - will update 1548834294354 1548832494354
[2019-01-30 15:14:54.366] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 901 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 15:15:07.898] [INFO] console - will check 1548834294354 1548832507898
[2019-01-30 15:15:07.898] [INFO] console - will update 1548834307898 1548832507898
[2019-01-30 15:15:07.898] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 15:15:07.902] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c500b8699d8808eaeaf39b2 HTTP/1.1" 200 113 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 15:15:11.732] [INFO] console - will check 1548834307898 1548832511732
[2019-01-30 15:15:11.732] [INFO] console - will update 1548834311732 1548832511732
[2019-01-30 15:15:11.732] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 15:15:11.735] [WARN] http - undefined - - "GET /posts/getPost?id=5c514de45c10eaa2f3c041e1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 15:15:14.607] [INFO] console - will check 1548834311732 1548832514607
[2019-01-30 15:15:14.607] [INFO] console - will update 1548834314607 1548832514607
[2019-01-30 15:15:14.608] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 15:15:14.610] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c50261aae5821f8b6ac923d HTTP/1.1" 200 3970 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 15:15:17.903] [INFO] console - will check 1548834314607 1548832517903
[2019-01-30 15:15:17.903] [INFO] console - will update 1548834317903 1548832517903
[2019-01-30 15:15:17.904] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 15:15:17.906] [WARN] http - undefined - - "GET /posts/getPost?id=5c514de45c10eaa2f3c041e1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 15:15:47.832] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: { content: 'test' }, key: undefined } ] 'results'
[2019-01-30 15:15:47.839] [INFO] http - ::ffff:127.0.0.1 - - "POST /posts/create HTTP/1.1" 200 13 "http://localhost:9000/document/new" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 15:15:47.931] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 15:15:47.931] [INFO] console - will check 1548834317903 1548832547931
[2019-01-30 15:15:47.931] [INFO] console - will update 1548834347931 1548832547931
[2019-01-30 15:15:47.979] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 1057 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 15:15:57.574] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: { content: 'sda' }, key: undefined } ] 'results'
[2019-01-30 15:15:57.578] [INFO] http - ::ffff:127.0.0.1 - - "POST /posts/create HTTP/1.1" 200 13 "http://localhost:9000/document/new" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 15:15:57.666] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 15:15:57.667] [INFO] console - will check 1548834347931 1548832557667
[2019-01-30 15:15:57.667] [INFO] console - will update 1548834357667 1548832557667
[2019-01-30 15:15:57.706] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 1213 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 15:16:04.090] [INFO] http - ::ffff:127.0.0.1 - - "POST /posts/create HTTP/1.1" 200 48 "http://localhost:9000/document/new" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 15:16:08.898] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: { content: 'test03' }, key: undefined } ] 'results'
[2019-01-30 15:16:08.902] [INFO] http - ::ffff:127.0.0.1 - - "POST /posts/create HTTP/1.1" 200 13 "http://localhost:9000/document/new" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 15:16:08.971] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 15:16:08.971] [INFO] console - will check 1548834357667 1548832568971
[2019-01-30 15:16:08.971] [INFO] console - will update 1548834368971 1548832568971
[2019-01-30 15:16:08.975] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 1369 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 15:16:20.162] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: { content: 'test04' }, key: undefined } ] 'results'
[2019-01-30 15:16:20.175] [INFO] http - ::ffff:127.0.0.1 - - "POST /posts/create HTTP/1.1" 200 13 "http://localhost:9000/document/new" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 15:16:20.263] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 15:16:20.264] [INFO] console - will check 1548834368971 1548832580264
[2019-01-30 15:16:20.264] [INFO] console - will update 1548834380264 1548832580264
[2019-01-30 15:16:20.289] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 1525 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 15:16:28.588] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: { content: 'test05' }, key: undefined } ] 'results'
[2019-01-30 15:16:28.594] [INFO] http - ::ffff:127.0.0.1 - - "POST /posts/create HTTP/1.1" 200 13 "http://localhost:9000/document/new" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 15:16:28.690] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 15:16:28.692] [INFO] console - will check 1548834380264 1548832588692
[2019-01-30 15:16:28.692] [INFO] console - will update 1548834388692 1548832588692
[2019-01-30 15:16:28.705] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 1681 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 15:16:31.906] [INFO] console - will check 1548834388692 1548832591906
[2019-01-30 15:16:31.907] [INFO] console - will update 1548834391906 1548832591906
[2019-01-30 15:16:31.907] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 15:16:31.909] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c514f445c10eaa2f3c041e7 HTTP/1.1" 200 102 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 15:18:31.417] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 15:18:31.418] [INFO] console - will check 1548834391906 1548832711418
[2019-01-30 15:18:31.418] [INFO] console - will update 1548834511418 1548832711418
[2019-01-30 15:18:31.422] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 15:21:30.776] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 15:21:30.777] [INFO] console - will check 1548834511418 1548832890777
[2019-01-30 15:21:30.777] [INFO] console - will update 1548834690777 1548832890777
[2019-01-30 15:21:30.786] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 15:22:15.864] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 15:22:15.866] [INFO] console - will check 1548834690777 1548832935866
[2019-01-30 15:22:15.866] [INFO] console - will update 1548834735866 1548832935866
[2019-01-30 15:22:15.872] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 15:28:48.347] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 15:28:48.348] [INFO] console - will check 1548834735866 1548833328348
[2019-01-30 15:28:48.349] [INFO] console - will update 1548835128348 1548833328348
[2019-01-30 15:28:48.355] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 15:28:52.272] [INFO] console - will check 1548835128348 1548833332272
[2019-01-30 15:28:52.277] [INFO] console - will update 1548835132272 1548833332272
[2019-01-30 15:28:52.277] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 15:28:52.280] [WARN] http - undefined - - "GET /posts/getPost?id=5c50261aae5821f8b6ac923d HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 15:41:51.126] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: { content: 'jjjj' }, key: undefined } ] 'results'
[2019-01-30 15:41:51.138] [INFO] http - ::ffff:127.0.0.1 - - "POST /posts/create HTTP/1.1" 200 13 "http://localhost:9000/document/new" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 15:41:52.834] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-30 15:41:52.835] [INFO] console - will check 1548835132272 1548834112835
[2019-01-30 15:41:52.835] [INFO] console - will update 1548835912835 1548834112835
[2019-01-30 15:41:52.841] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 1837 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 15:57:41.043] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { key: undefined },
  { key: undefined } ] 'results'
[2019-01-30 15:57:41.122] [INFO] http - ::ffff:127.0.0.1 - - "POST /groups/create HTTP/1.1" 200 13 "" "PostmanRuntime/7.1.1"
[2019-01-30 16:15:40.815] [INFO] console - will check 1548835912835 1548836140815
[2019-01-30 16:15:40.823] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c514f4c5c10eaa2f3c041e8 HTTP/1.1" 200 71 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 16:16:04.498] [INFO] console - will check 1548835912835 1548836164498
[2019-01-30 16:16:04.500] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c51553f5c10eaa2f3c041e9 HTTP/1.1" 200 71 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-30 18:17:38.235] [INFO] http - ::ffff:127.0.0.1 - - "POST /groups/create HTTP/1.1" 200 48 "" "PostmanRuntime/7.1.1"
[2019-01-30 18:19:41.280] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { key: undefined },
  { key: undefined } ] 'results'
[2019-01-30 18:19:41.325] [INFO] http - ::ffff:127.0.0.1 - - "POST /groups/create HTTP/1.1" 200 13 "" "PostmanRuntime/7.1.1"
[2019-01-30 18:20:01.663] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { key: undefined },
  { key: undefined } ] 'results'
[2019-01-30 18:20:01.679] [ERROR] console - API ERROR:   [0m[97m[41mError[0m[90m:[0m[37m [0m[97m{"message":"Cast to ObjectId failed for value \"5c50094c99d8808eaeaf39b\" at path \"_id\"","name":"CastError","kind":"ObjectId","value":"5c50094c99d8808eaeaf39b","path[0m  [0m[97m":"_id"}[0m
[0m { CastError: Cast to ObjectId failed for value "5c50094c99d8808eaeaf39b" at path "_id"
    at new CastError (/workspace/DESserver/node_modules/mongoose/lib/error/cast.js:19:11)
    at ObjectId.cast (/workspace/DESserver/node_modules/mongoose/lib/schema/objectid.js:147:13)
    at ObjectId.castForQuery (/workspace/DESserver/node_modules/mongoose/lib/schema/objectid.js:187:15)
    at cast (/workspace/DESserver/node_modules/mongoose/lib/cast.js:182:32)
    at model.Query.Query.cast (/workspace/DESserver/node_modules/mongoose/lib/query.js:2650:10)
    at model.Query.Query.findOne (/workspace/DESserver/node_modules/mongoose/lib/query.js:1281:10)
    at /workspace/DESserver/node_modules/mongoose/lib/query.js:2227:21
    at new Promise (<anonymous>)
    at model.Query.exec (/workspace/DESserver/node_modules/mongoose/lib/query.js:2220:10)
    at model.Query.Query.then (/workspace/DESserver/node_modules/mongoose/lib/query.js:2250:15)
    at process._tickCallback (internal/process/next_tick.js:188:7)
  message: 'Cast to ObjectId failed for value "5c50094c99d8808eaeaf39b" at path "_id"',
  name: 'CastError',
  kind: 'ObjectId',
  value: '5c50094c99d8808eaeaf39b',
  path: '_id',
  reason: undefined }
[2019-01-30 18:20:01.681] [INFO] http - ::ffff:127.0.0.1 - - "POST /groups/create HTTP/1.1" 200 58 "" "PostmanRuntime/7.1.1"
[2019-01-30 18:20:41.129] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { key: undefined },
  { key: undefined } ] 'results'
[2019-01-30 18:20:41.144] [ERROR] console - API ERROR:   [0m[97m[41mError[0m[90m:[0m[37m [0m[97m{"message":"Cast to ObjectId failed for value \"5c50094c99d8808eaeaf39b\" at path \"_id\"","name":"CastError","kind":"ObjectId","value":"5c50094c99d8808eaeaf39b","path[0m  [0m[97m":"_id"}[0m
[0m { CastError: Cast to ObjectId failed for value "5c50094c99d8808eaeaf39b" at path "_id"
    at new CastError (/workspace/DESserver/node_modules/mongoose/lib/error/cast.js:19:11)
    at ObjectId.cast (/workspace/DESserver/node_modules/mongoose/lib/schema/objectid.js:147:13)
    at ObjectId.castForQuery (/workspace/DESserver/node_modules/mongoose/lib/schema/objectid.js:187:15)
    at cast (/workspace/DESserver/node_modules/mongoose/lib/cast.js:182:32)
    at model.Query.Query.cast (/workspace/DESserver/node_modules/mongoose/lib/query.js:2650:10)
    at model.Query.Query.findOne (/workspace/DESserver/node_modules/mongoose/lib/query.js:1281:10)
    at /workspace/DESserver/node_modules/mongoose/lib/query.js:2227:21
    at new Promise (<anonymous>)
    at model.Query.exec (/workspace/DESserver/node_modules/mongoose/lib/query.js:2220:10)
    at model.Query.Query.then (/workspace/DESserver/node_modules/mongoose/lib/query.js:2250:15)
    at process._tickCallback (internal/process/next_tick.js:188:7)
  message: 'Cast to ObjectId failed for value "5c50094c99d8808eaeaf39b" at path "_id"',
  name: 'CastError',
  kind: 'ObjectId',
  value: '5c50094c99d8808eaeaf39b',
  path: '_id',
  reason: undefined }
[2019-01-30 18:20:41.149] [INFO] http - ::ffff:127.0.0.1 - - "POST /groups/create HTTP/1.1" 200 58 "" "PostmanRuntime/7.1.1"
[2019-01-30 18:20:50.819] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { key: undefined },
  { key: undefined } ] 'results'
[2019-01-30 18:20:50.822] [ERROR] console - API ERROR:   [0m[97m[41mError[0m[90m:[0m[37m [0m[97m{"message":"Cast to ObjectId failed for value \"5c50094c99d8808eaeaf39b\" at path \"_id\"","name":"CastError","kind":"ObjectId","value":"5c50094c99d8808eaeaf39b","path[0m  [0m[97m":"_id"}[0m
[0m { CastError: Cast to ObjectId failed for value "5c50094c99d8808eaeaf39b" at path "_id"
    at new CastError (/workspace/DESserver/node_modules/mongoose/lib/error/cast.js:19:11)
    at ObjectId.cast (/workspace/DESserver/node_modules/mongoose/lib/schema/objectid.js:147:13)
    at ObjectId.castForQuery (/workspace/DESserver/node_modules/mongoose/lib/schema/objectid.js:187:15)
    at cast (/workspace/DESserver/node_modules/mongoose/lib/cast.js:182:32)
    at model.Query.Query.cast (/workspace/DESserver/node_modules/mongoose/lib/query.js:2650:10)
    at model.Query.Query.findOne (/workspace/DESserver/node_modules/mongoose/lib/query.js:1281:10)
    at /workspace/DESserver/node_modules/mongoose/lib/query.js:2227:21
    at new Promise (<anonymous>)
    at model.Query.exec (/workspace/DESserver/node_modules/mongoose/lib/query.js:2220:10)
    at model.Query.Query.then (/workspace/DESserver/node_modules/mongoose/lib/query.js:2250:15)
    at process._tickCallback (internal/process/next_tick.js:188:7)
  message: 'Cast to ObjectId failed for value "5c50094c99d8808eaeaf39b" at path "_id"',
  name: 'CastError',
  kind: 'ObjectId',
  value: '5c50094c99d8808eaeaf39b',
  path: '_id',
  reason: undefined }
[2019-01-30 18:20:50.824] [INFO] http - ::ffff:127.0.0.1 - - "POST /groups/create HTTP/1.1" 200 58 "" "PostmanRuntime/7.1.1"
[2019-01-30 18:21:15.958] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { key: undefined },
  { key: undefined } ] 'results'
[2019-01-30 18:21:15.976] [ERROR] console - API ERROR:   [0m[97m[41mError[0m[90m:[0m[37m [0m[97m{"message":"Cast to ObjectId failed for value \"5c50094c99d8808eaeaf39b\" at path \"_id\"","name":"CastError","kind":"ObjectId","value":"5c50094c99d8808eaeaf39b","path[0m  [0m[97m":"_id"}[0m
[0m { CastError: Cast to ObjectId failed for value "5c50094c99d8808eaeaf39b" at path "_id"
    at new CastError (/workspace/DESserver/node_modules/mongoose/lib/error/cast.js:19:11)
    at ObjectId.cast (/workspace/DESserver/node_modules/mongoose/lib/schema/objectid.js:147:13)
    at ObjectId.castForQuery (/workspace/DESserver/node_modules/mongoose/lib/schema/objectid.js:187:15)
    at cast (/workspace/DESserver/node_modules/mongoose/lib/cast.js:182:32)
    at model.Query.Query.cast (/workspace/DESserver/node_modules/mongoose/lib/query.js:2650:10)
    at model.Query.Query.findOne (/workspace/DESserver/node_modules/mongoose/lib/query.js:1281:10)
    at /workspace/DESserver/node_modules/mongoose/lib/query.js:2227:21
    at new Promise (<anonymous>)
    at model.Query.exec (/workspace/DESserver/node_modules/mongoose/lib/query.js:2220:10)
    at model.Query.Query.then (/workspace/DESserver/node_modules/mongoose/lib/query.js:2250:15)
    at process._tickCallback (internal/process/next_tick.js:188:7)
  message: 'Cast to ObjectId failed for value "5c50094c99d8808eaeaf39b" at path "_id"',
  name: 'CastError',
  kind: 'ObjectId',
  value: '5c50094c99d8808eaeaf39b',
  path: '_id',
  reason: undefined }
[2019-01-30 18:21:15.982] [INFO] http - ::ffff:127.0.0.1 - - "POST /groups/create HTTP/1.1" 200 58 "" "PostmanRuntime/7.1.1"
[2019-01-30 18:21:59.792] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { key: undefined },
  { key: undefined } ] 'results'
[2019-01-30 18:21:59.808] [ERROR] console - API ERROR:   [0m[97m[41mError[0m[90m:[0m[37m [0m[97m{"message":"Cast to ObjectId failed for value \"5c50094c99d8808eaeaf39b\" at path \"_id\"","name":"CastError","kind":"ObjectId","value":"5c50094c99d8808eaeaf39b","path[0m  [0m[97m":"_id"}[0m
[0m { CastError: Cast to ObjectId failed for value "5c50094c99d8808eaeaf39b" at path "_id"
    at new CastError (/workspace/DESserver/node_modules/mongoose/lib/error/cast.js:19:11)
    at ObjectId.cast (/workspace/DESserver/node_modules/mongoose/lib/schema/objectid.js:147:13)
    at ObjectId.castForQuery (/workspace/DESserver/node_modules/mongoose/lib/schema/objectid.js:187:15)
    at cast (/workspace/DESserver/node_modules/mongoose/lib/cast.js:182:32)
    at model.Query.Query.cast (/workspace/DESserver/node_modules/mongoose/lib/query.js:2650:10)
    at model.Query.Query.findOne (/workspace/DESserver/node_modules/mongoose/lib/query.js:1281:10)
    at /workspace/DESserver/node_modules/mongoose/lib/query.js:2227:21
    at new Promise (<anonymous>)
    at model.Query.exec (/workspace/DESserver/node_modules/mongoose/lib/query.js:2220:10)
    at _callee$ (/workspace/DESserver/api/actions/api/groups/create.js:14:71)
    at tryCatch (/workspace/DESserver/node_modules/regenerator-runtime/runtime.js:62:40)
    at Generator.invoke [as _invoke] (/workspace/DESserver/node_modules/regenerator-runtime/runtime.js:296:22)
    at Generator.prototype.(anonymous function) [as next] (/workspace/DESserver/node_modules/regenerator-runtime/runtime.js:114:21)
    at step (/workspace/DESserver/node_modules/babel-runtime/helpers/asyncToGenerator.js:17:30)
    at /workspace/DESserver/node_modules/babel-runtime/helpers/asyncToGenerator.js:28:13
    at <anonymous>
  message: 'Cast to ObjectId failed for value "5c50094c99d8808eaeaf39b" at path "_id"',
  name: 'CastError',
  kind: 'ObjectId',
  value: '5c50094c99d8808eaeaf39b',
  path: '_id',
  reason: undefined }
[2019-01-30 18:21:59.813] [INFO] http - ::ffff:127.0.0.1 - - "POST /groups/create HTTP/1.1" 200 58 "" "PostmanRuntime/7.1.1"
[2019-01-30 18:22:11.939] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { key: undefined },
  { key: undefined } ] 'results'
[2019-01-30 18:22:11.950] [ERROR] console - API ERROR:   [0m[97m[41mError[0m[90m:[0m[37m [0m[97m{"message":"Cast to ObjectId failed for value \"5c50094c99d8808eaeaf39b\" at path \"_id\"","name":"CastError","kind":"ObjectId","value":"5c50094c99d8808eaeaf39b","path[0m  [0m[97m":"_id"}[0m
[0m { CastError: Cast to ObjectId failed for value "5c50094c99d8808eaeaf39b" at path "_id"
    at new CastError (/workspace/DESserver/node_modules/mongoose/lib/error/cast.js:19:11)
    at ObjectId.cast (/workspace/DESserver/node_modules/mongoose/lib/schema/objectid.js:147:13)
    at ObjectId.castForQuery (/workspace/DESserver/node_modules/mongoose/lib/schema/objectid.js:187:15)
    at cast (/workspace/DESserver/node_modules/mongoose/lib/cast.js:182:32)
    at model.Query.Query.cast (/workspace/DESserver/node_modules/mongoose/lib/query.js:2650:10)
    at model.Query.Query.findOne (/workspace/DESserver/node_modules/mongoose/lib/query.js:1281:10)
    at /workspace/DESserver/node_modules/mongoose/lib/query.js:2227:21
    at new Promise (<anonymous>)
    at model.Query.exec (/workspace/DESserver/node_modules/mongoose/lib/query.js:2220:10)
    at _callee$ (/workspace/DESserver/api/actions/api/groups/create.js:14:71)
    at tryCatch (/workspace/DESserver/node_modules/regenerator-runtime/runtime.js:62:40)
    at Generator.invoke [as _invoke] (/workspace/DESserver/node_modules/regenerator-runtime/runtime.js:296:22)
    at Generator.prototype.(anonymous function) [as next] (/workspace/DESserver/node_modules/regenerator-runtime/runtime.js:114:21)
    at step (/workspace/DESserver/node_modules/babel-runtime/helpers/asyncToGenerator.js:17:30)
    at /workspace/DESserver/node_modules/babel-runtime/helpers/asyncToGenerator.js:28:13
    at <anonymous>
  message: 'Cast to ObjectId failed for value "5c50094c99d8808eaeaf39b" at path "_id"',
  name: 'CastError',
  kind: 'ObjectId',
  value: '5c50094c99d8808eaeaf39b',
  path: '_id',
  reason: undefined }
[2019-01-30 18:22:11.952] [INFO] http - ::ffff:127.0.0.1 - - "POST /groups/create HTTP/1.1" 200 58 "" "PostmanRuntime/7.1.1"
[2019-01-30 18:22:30.474] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { key: undefined },
  { key: undefined } ] 'results'
[2019-01-30 18:22:30.488] [ERROR] console - API ERROR:   [0m[97m[41mError[0m[90m:[0m[37m [0m[97m{"message":"Cast to ObjectId failed for value \"5c50094c99d8808eaeaf39b\" at path \"_id\"","name":"CastError","kind":"ObjectId","value":"5c50094c99d8808eaeaf39b","path[0m  [0m[97m":"_id"}[0m
[0m { CastError: Cast to ObjectId failed for value "5c50094c99d8808eaeaf39b" at path "_id"
    at new CastError (/workspace/DESserver/node_modules/mongoose/lib/error/cast.js:19:11)
    at ObjectId.cast (/workspace/DESserver/node_modules/mongoose/lib/schema/objectid.js:147:13)
    at ObjectId.castForQuery (/workspace/DESserver/node_modules/mongoose/lib/schema/objectid.js:187:15)
    at cast (/workspace/DESserver/node_modules/mongoose/lib/cast.js:182:32)
    at model.Query.Query.cast (/workspace/DESserver/node_modules/mongoose/lib/query.js:2650:10)
    at model.Query.Query.findOne (/workspace/DESserver/node_modules/mongoose/lib/query.js:1281:10)
    at /workspace/DESserver/node_modules/mongoose/lib/query.js:2227:21
    at new Promise (<anonymous>)
    at model.Query.exec (/workspace/DESserver/node_modules/mongoose/lib/query.js:2220:10)
    at model.Query.Query.then (/workspace/DESserver/node_modules/mongoose/lib/query.js:2250:15)
    at process._tickCallback (internal/process/next_tick.js:188:7)
  message: 'Cast to ObjectId failed for value "5c50094c99d8808eaeaf39b" at path "_id"',
  name: 'CastError',
  kind: 'ObjectId',
  value: '5c50094c99d8808eaeaf39b',
  path: '_id',
  reason: undefined }
[2019-01-30 18:22:30.493] [INFO] http - ::ffff:127.0.0.1 - - "POST /groups/create HTTP/1.1" 200 58 "" "PostmanRuntime/7.1.1"
[2019-01-30 18:22:33.868] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { key: undefined },
  { key: undefined } ] 'results'
[2019-01-30 18:22:33.891] [INFO] http - ::ffff:127.0.0.1 - - "POST /groups/create HTTP/1.1" 200 13 "" "PostmanRuntime/7.1.1"
[2019-01-31 09:55:20.569] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-31 09:55:20.601] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 125 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-31 09:55:20.730] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-31 09:55:20.732] [INFO] console - will check 1548901520588 1548899720732
[2019-01-31 09:55:20.732] [INFO] console - will update 1548901520732 1548899720732
[2019-01-31 09:55:20.747] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-31 09:55:22.183] [INFO] console - will check 1548901520732 1548899722183
[2019-01-31 09:55:22.183] [INFO] console - will update 1548901522183 1548899722183
[2019-01-31 09:55:22.184] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-31 09:55:22.189] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c514f4c5c10eaa2f3c041e8 HTTP/1.1" 200 102 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-31 10:12:16.405] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-31 10:12:16.409] [INFO] console - will check 1548901522183 1548900736409
[2019-01-31 10:12:16.410] [INFO] console - will update 1548902536409 1548900736409
[2019-01-31 10:12:16.448] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-31 10:17:18.302] [INFO] console - undefined '\n' undefined
[2019-01-31 10:17:25.494] [INFO] console - undefined '\n' undefined
[2019-01-31 10:17:36.096] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-31 10:17:36.098] [INFO] console - will check 1548902536409 1548901056098
[2019-01-31 10:17:36.099] [INFO] console - will update 1548902856098 1548901056098
[2019-01-31 10:17:36.148] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-31 10:17:45.947] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-31 10:17:45.947] [INFO] console - will check 1548902856098 1548901065947
[2019-01-31 10:17:45.947] [INFO] console - will update 1548902865947 1548901065947
[2019-01-31 10:17:45.952] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-31 10:17:47.024] [INFO] console - will check 1548902865947 1548901067024
[2019-01-31 10:17:47.025] [INFO] console - will update 1548902867024 1548901067024
[2019-01-31 10:17:47.025] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-31 10:17:47.031] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c51553f5c10eaa2f3c041e9 HTTP/1.1" 200 100 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-31 10:17:48.898] [INFO] console - will check 1548902867024 1548901068898
[2019-01-31 10:17:48.898] [INFO] console - will update 1548902868898 1548901068898
[2019-01-31 10:17:48.899] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-31 10:17:48.901] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c514f2d5c10eaa2f3c041e5 HTTP/1.1" 200 99 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-31 10:17:50.881] [INFO] console - will check 1548902868898 1548901070881
[2019-01-31 10:17:50.881] [INFO] console - will update 1548902870881 1548901070881
[2019-01-31 10:17:50.881] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-31 10:17:50.883] [WARN] http - undefined - - "GET /posts/getPost?id=5c514de45c10eaa2f3c041e1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-31 10:33:08.182] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { key: undefined },
  { key: undefined } ] 'results'
[2019-01-31 10:33:08.219] [INFO] http - ::ffff:127.0.0.1 - - "POST /groups/create HTTP/1.1" 200 13 "" "PostmanRuntime/7.1.1"
[2019-01-31 17:57:18.882] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-31 17:57:18.912] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 125 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-31 17:57:19.047] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-31 17:57:19.050] [INFO] console - will check 1548930438899 1548928639050
[2019-01-31 17:57:19.050] [INFO] console - will update 1548930439050 1548928639050
[2019-01-31 17:57:19.061] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 1837 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-31 17:57:24.339] [INFO] console - will check 1548930439050 1548928644339
[2019-01-31 17:57:24.339] [INFO] console - will update 1548930444339 1548928644339
[2019-01-31 17:57:24.339] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-31 17:57:24.344] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c514e5f5c10eaa2f3c041e3 HTTP/1.1" 200 123 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-31 17:59:45.284] [INFO] console - will check 1548930444339 1548928785284
[2019-01-31 17:59:45.284] [INFO] console - will update 1548930585284 1548928785284
[2019-01-31 17:59:45.284] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-31 17:59:45.287] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c50261aae5821f8b6ac923d HTTP/1.1" 200 3970 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-31 17:59:45.518] [INFO] console - will check 1548930585284 1548928785518
[2019-01-31 17:59:45.519] [INFO] console - will update 1548930585518 1548928785518
[2019-01-31 17:59:45.519] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-31 17:59:45.522] [WARN] http - undefined - - "GET /posts/getPost?id=5c50261aae5821f8b6ac923d HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-31 18:03:34.397] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-31 18:03:34.398] [INFO] console - will check 1548930585518 1548929014398
[2019-01-31 18:03:34.398] [INFO] console - will update 1548930814398 1548929014398
[2019-01-31 18:03:34.415] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-31 18:04:28.252] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-31 18:04:28.252] [INFO] console - will check 1548930814398 1548929068252
[2019-01-31 18:04:28.252] [INFO] console - will update 1548930868252 1548929068252
[2019-01-31 18:04:28.258] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-01-31 18:05:04.816] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-01-31 18:05:04.816] [INFO] console - will check 1548930868252 1548929104816
[2019-01-31 18:05:04.816] [INFO] console - will update 1548930904816 1548929104816
[2019-01-31 18:05:04.825] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-12 16:59:30.372] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-12 16:59:30.402] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 125 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-12 16:59:30.550] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-12 16:59:30.553] [INFO] console - will check 1549963770392 1549961970553
[2019-02-12 16:59:30.553] [INFO] console - will update 1549963770553 1549961970553
[2019-02-12 16:59:30.566] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 1837 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-12 16:59:35.386] [INFO] console - will check 1549963770553 1549961975386
[2019-02-12 16:59:35.387] [INFO] console - will update 1549963775386 1549961975386
[2019-02-12 16:59:35.388] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-12 16:59:35.395] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c514f445c10eaa2f3c041e7 HTTP/1.1" 200 102 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-12 17:50:23.859] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-12 17:50:23.861] [INFO] console - will check 1549963775386 1549965023861
[2019-02-12 17:50:23.874] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 71 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-12 17:50:28.884] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-12 17:50:28.898] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 125 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-12 17:50:28.990] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-12 17:50:28.991] [INFO] console - will check 1549966828896 1549965028991
[2019-02-12 17:50:28.991] [INFO] console - will update 1549966828991 1549965028991
[2019-02-12 17:50:29.005] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 1837 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-13 14:29:02.603] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-13 14:29:02.640] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 125 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-13 14:29:02.902] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-13 14:29:02.904] [INFO] console - will check 1550041142628 1550039342904
[2019-02-13 14:29:02.905] [INFO] console - will update 1550041142904 1550039342904
[2019-02-13 14:29:02.918] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-13 14:29:16.111] [INFO] console - will check 1550041142904 1550039356111
[2019-02-13 14:29:16.111] [INFO] console - will update 1550041156111 1550039356111
[2019-02-13 14:29:16.111] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-13 14:29:16.117] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c50261aae5821f8b6ac923d HTTP/1.1" 200 3970 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-13 14:33:48.056] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-13 14:33:48.057] [INFO] console - will check 1550041156111 1550039628057
[2019-02-13 14:33:48.058] [INFO] console - will update 1550041428057 1550039628057
[2019-02-13 14:33:48.075] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-13 14:48:40.687] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-13 14:48:40.689] [INFO] console - will check 1550041428057 1550040520689
[2019-02-13 14:48:40.689] [INFO] console - will update 1550042320689 1550040520689
[2019-02-13 14:48:40.701] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-13 14:58:00.217] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { key: undefined },
  { key: undefined } ] 'results'
[2019-02-13 14:58:00.267] [INFO] http - ::1 - - "POST /groups/create HTTP/1.1" 200 13 "" "PostmanRuntime/7.1.1"
[2019-02-13 15:09:23.305] [ERROR] http - ::1 - - "POST /groups/list HTTP/1.1" 404 - "" "PostmanRuntime/7.1.1"
[2019-02-13 15:09:41.160] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-13 15:09:41.183] [INFO] http - ::1 - - "POST /groups/list HTTP/1.1" 200 889 "" "PostmanRuntime/7.1.1"
[2019-02-13 15:12:29.288] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-13 15:12:29.305] [INFO] http - ::1 - - "POST /groups/list HTTP/1.1" 200 59 "" "PostmanRuntime/7.1.1"
[2019-02-13 15:12:33.134] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-13 15:12:33.142] [INFO] http - ::1 - - "POST /groups/list HTTP/1.1" 200 889 "" "PostmanRuntime/7.1.1"
[2019-02-13 15:18:31.134] [ERROR] http - undefined - - "GET /project/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 404 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-13 15:18:31.196] [ERROR] http - undefined - - "GET /project/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 404 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-13 15:18:36.548] [ERROR] http - undefined - - "GET /project/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 404 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-13 15:19:08.063] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-13 15:19:08.162] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 877 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-13 15:19:12.022] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-13 15:19:12.031] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-13 15:20:43.699] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-13 15:20:43.703] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 903 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-13 15:21:28.445] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-13 15:21:28.452] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 929 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-13 15:30:30.459] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-13 15:30:30.514] [ERROR] console - API ERROR:   [0m[97m[41mError[0m[90m:[0m[37m [0m[97m{}[0m
[0m TypeError: Cannot read property 'forEach' of undefined
    at _callee$ (/workspace/DESserver/api/actions/api/groups/list.js:18:13)
    at tryCatch (/workspace/DESserver/node_modules/regenerator-runtime/runtime.js:62:40)
    at Generator.invoke [as _invoke] (/workspace/DESserver/node_modules/regenerator-runtime/runtime.js:296:22)
    at Generator.prototype.(anonymous function) [as next] (/workspace/DESserver/node_modules/regenerator-runtime/runtime.js:114:21)
    at step (/workspace/DESserver/node_modules/babel-runtime/helpers/asyncToGenerator.js:17:30)
    at /workspace/DESserver/node_modules/babel-runtime/helpers/asyncToGenerator.js:35:14
    at new Promise (<anonymous>)
    at new F (/workspace/DESserver/node_modules/core-js/library/modules/_export.js:36:28)
    at /workspace/DESserver/node_modules/babel-runtime/helpers/asyncToGenerator.js:14:12
    at getMemberNames (/workspace/DESserver/api/actions/api/groups/list.js:7:16)
    at _callee2$ (/workspace/DESserver/api/actions/api/groups/list.js:27:29)
    at tryCatch (/workspace/DESserver/node_modules/regenerator-runtime/runtime.js:62:40)
    at Generator.invoke [as _invoke] (/workspace/DESserver/node_modules/regenerator-runtime/runtime.js:296:22)
    at Generator.prototype.(anonymous function) [as next] (/workspace/DESserver/node_modules/regenerator-runtime/runtime.js:114:21)
    at step (/workspace/DESserver/node_modules/babel-runtime/helpers/asyncToGenerator.js:17:30)
    at /workspace/DESserver/node_modules/babel-runtime/helpers/asyncToGenerator.js:28:13
[2019-02-13 15:30:30.686] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 58 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-13 15:31:01.137] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-13 15:31:01.162] [INFO] console - [ { _id: 5c525e646578b02d1482f09a,
    creator_id: '5c50094c99d8808eaeaf39b1',
    group_name: '工作文档3',
    creator_name: 'zlx',
    __v: 0,
    create_time: 1548901988197,
    deleted: false,
    members: [],
    posts: [ '5c51553f5c10eaa2f3c041e9' ] },
  { _id: 5c517ae9e15b754405b3c66a,
    creator_id: '5c50094c99d8808eaeaf39b1',
    group_name: '工作文档2',
    creator_name: 'zlx',
    __v: 0,
    create_time: 1548843753879,
    deleted: false,
    members: [],
    posts: [] },
  { _id: 5c517a3db5372b15050f423f,
    creator_id: '5c50094c99d8808eaeaf39b1',
    group_name: '工作文档1',
    creator_name: 'zlx',
    __v: 0,
    create_time: 1548843581298,
    deleted: false,
    members: [],
    posts: [] } ] 'groups'
[2019-02-13 15:31:01.194] [ERROR] console - API ERROR:   [0m[97m[41mError[0m[90m:[0m[37m [0m[97m{}[0m
[0m TypeError: Cannot read property 'forEach' of undefined
    at _callee$ (/workspace/DESserver/api/actions/api/groups/list.js:19:13)
    at tryCatch (/workspace/DESserver/node_modules/regenerator-runtime/runtime.js:62:40)
    at Generator.invoke [as _invoke] (/workspace/DESserver/node_modules/regenerator-runtime/runtime.js:296:22)
    at Generator.prototype.(anonymous function) [as next] (/workspace/DESserver/node_modules/regenerator-runtime/runtime.js:114:21)
    at step (/workspace/DESserver/node_modules/babel-runtime/helpers/asyncToGenerator.js:17:30)
    at /workspace/DESserver/node_modules/babel-runtime/helpers/asyncToGenerator.js:35:14
    at new Promise (<anonymous>)
    at new F (/workspace/DESserver/node_modules/core-js/library/modules/_export.js:36:28)
    at /workspace/DESserver/node_modules/babel-runtime/helpers/asyncToGenerator.js:14:12
    at getMemberNames (/workspace/DESserver/api/actions/api/groups/list.js:7:16)
    at _callee2$ (/workspace/DESserver/api/actions/api/groups/list.js:28:29)
    at tryCatch (/workspace/DESserver/node_modules/regenerator-runtime/runtime.js:62:40)
    at Generator.invoke [as _invoke] (/workspace/DESserver/node_modules/regenerator-runtime/runtime.js:296:22)
    at Generator.prototype.(anonymous function) [as next] (/workspace/DESserver/node_modules/regenerator-runtime/runtime.js:114:21)
    at step (/workspace/DESserver/node_modules/babel-runtime/helpers/asyncToGenerator.js:17:30)
    at /workspace/DESserver/node_modules/babel-runtime/helpers/asyncToGenerator.js:28:13
[2019-02-13 15:31:01.219] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-13 15:31:56.358] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-13 15:31:56.388] [INFO] console - [ { _id: 5c525e646578b02d1482f09a,
    creator_id: '5c50094c99d8808eaeaf39b1',
    group_name: '工作文档3',
    creator_name: 'zlx',
    __v: 0,
    create_time: 1548901988197,
    deleted: false,
    members: [],
    posts: [ '5c51553f5c10eaa2f3c041e9' ] },
  { _id: 5c517ae9e15b754405b3c66a,
    creator_id: '5c50094c99d8808eaeaf39b1',
    group_name: '工作文档2',
    creator_name: 'zlx',
    __v: 0,
    create_time: 1548843753879,
    deleted: false,
    members: [],
    posts: [] },
  { _id: 5c517a3db5372b15050f423f,
    creator_id: '5c50094c99d8808eaeaf39b1',
    group_name: '工作文档1',
    creator_name: 'zlx',
    __v: 0,
    create_time: 1548843581298,
    deleted: false,
    members: [],
    posts: [] } ] 'groups'
[2019-02-13 15:31:56.465] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 929 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-13 15:33:29.526] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-13 15:33:29.548] [INFO] console - [ { _id: 5c525e646578b02d1482f09a,
    creator_id: '5c50094c99d8808eaeaf39b1',
    group_name: '工作文档3',
    creator_name: 'zlx',
    __v: 0,
    create_time: 1548901988197,
    deleted: false,
    members: [],
    posts: [ '5c51553f5c10eaa2f3c041e9' ] },
  { _id: 5c517ae9e15b754405b3c66a,
    creator_id: '5c50094c99d8808eaeaf39b1',
    group_name: '工作文档2',
    creator_name: 'zlx',
    __v: 0,
    create_time: 1548843753879,
    deleted: false,
    members: [],
    posts: [] },
  { _id: 5c517a3db5372b15050f423f,
    creator_id: '5c50094c99d8808eaeaf39b1',
    group_name: '工作文档1',
    creator_name: 'zlx',
    __v: 0,
    create_time: 1548843581298,
    deleted: false,
    members: [],
    posts: [] } ] 'groups'
[2019-02-13 15:33:29.559] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-13 15:33:58.222] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-13 15:33:58.252] [INFO] console - [ { _id: 5c525e646578b02d1482f09a,
    creator_id: '5c50094c99d8808eaeaf39b1',
    group_name: '工作文档3',
    creator_name: 'zlx',
    __v: 0,
    create_time: 1548901988197,
    deleted: false,
    members: [],
    posts: [ '5c51553f5c10eaa2f3c041e9' ] },
  { _id: 5c517ae9e15b754405b3c66a,
    creator_id: '5c50094c99d8808eaeaf39b1',
    group_name: '工作文档2',
    creator_name: 'zlx',
    __v: 0,
    create_time: 1548843753879,
    deleted: false,
    members: [],
    posts: [] },
  { _id: 5c517a3db5372b15050f423f,
    creator_id: '5c50094c99d8808eaeaf39b1',
    group_name: '工作文档1',
    creator_name: 'zlx',
    __v: 0,
    create_time: 1548843581298,
    deleted: false,
    members: [],
    posts: [] } ] 'groups'
[2019-02-13 15:33:58.253] [INFO] console - [ { _id: 5c525e646578b02d1482f09a,
    creator_id: '5c50094c99d8808eaeaf39b1',
    group_name: '工作文档3',
    creator_name: 'zlx',
    __v: 0,
    create_time: 1548901988197,
    deleted: false,
    members: [],
    posts: [ '5c51553f5c10eaa2f3c041e9' ] },
  { _id: 5c517ae9e15b754405b3c66a,
    creator_id: '5c50094c99d8808eaeaf39b1',
    group_name: '工作文档2',
    creator_name: 'zlx',
    __v: 0,
    create_time: 1548843753879,
    deleted: false,
    members: [],
    posts: [] },
  { _id: 5c517a3db5372b15050f423f,
    creator_id: '5c50094c99d8808eaeaf39b1',
    group_name: '工作文档1',
    creator_name: 'zlx',
    __v: 0,
    create_time: 1548843581298,
    deleted: false,
    members: [],
    posts: [] } ] 'myGroupsNew'
[2019-02-13 15:33:58.274] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-13 15:37:02.611] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-13 15:37:02.634] [INFO] console - [ { _id: 5c525e646578b02d1482f09a,
    creator_id: '5c50094c99d8808eaeaf39b1',
    group_name: '工作文档3',
    creator_name: 'zlx',
    __v: 0,
    create_time: 1548901988197,
    deleted: false,
    members: [],
    posts: [ '5c51553f5c10eaa2f3c041e9' ] },
  { _id: 5c517ae9e15b754405b3c66a,
    creator_id: '5c50094c99d8808eaeaf39b1',
    group_name: '工作文档2',
    creator_name: 'zlx',
    __v: 0,
    create_time: 1548843753879,
    deleted: false,
    members: [],
    posts: [] },
  { _id: 5c517a3db5372b15050f423f,
    creator_id: '5c50094c99d8808eaeaf39b1',
    group_name: '工作文档1',
    creator_name: 'zlx',
    __v: 0,
    create_time: 1548843581298,
    deleted: false,
    members: [],
    posts: [] } ] 'groups'
[2019-02-13 15:37:02.636] [INFO] console - [ { '$__': 
     InternalCache {
       strictMode: true,
       selected: undefined,
       shardval: undefined,
       saveError: undefined,
       validationError: undefined,
       adhocPaths: undefined,
       removing: undefined,
       inserting: undefined,
       version: undefined,
       getters: {},
       _id: undefined,
       populate: undefined,
       populated: undefined,
       wasPopulated: false,
       scope: undefined,
       activePaths: [Object],
       ownerDocument: undefined,
       fullPath: undefined,
       emitter: [Object] },
    isNew: false,
    errors: undefined,
    _doc: 
     { posts: ["5c51553f5c10eaa2f3c041e9"],
       members: [],
       deleted: false,
       create_time: 1548901988197,
       __v: 0,
       creator_name: 'zlx',
       group_name: '工作文档3',
       creator_id: '5c50094c99d8808eaeaf39b1',
       _id: 5c525e646578b02d1482f09a },
    '$__original_save': { [Function] numAsyncPres: 1 },
    save: [Function: wrappedPointCut],
    _pres: 
     { '$__original_save': [Array],
       '$__original_validate': [Array],
       '$__original_remove': [Array] },
    _posts: 
     { '$__original_save': [],
       '$__original_validate': [],
       '$__original_remove': [] },
    '$__original_validate': { [Function] numAsyncPres: 1 },
    validate: [Function: wrappedPointCut],
    '$__original_remove': { [Function] numAsyncPres: 1 },
    remove: [Function: wrappedPointCut],
    members: [] },
  { '$__': 
     InternalCache {
       strictMode: true,
       selected: undefined,
       shardval: undefined,
       saveError: undefined,
       validationError: undefined,
       adhocPaths: undefined,
       removing: undefined,
       inserting: undefined,
       version: undefined,
       getters: {},
       _id: undefined,
       populate: undefined,
       populated: undefined,
       wasPopulated: false,
       scope: undefined,
       activePaths: [Object],
       ownerDocument: undefined,
       fullPath: undefined,
       emitter: [Object] },
    isNew: false,
    errors: undefined,
    _doc: 
     { posts: [],
       members: [],
       deleted: false,
       create_time: 1548843753879,
       __v: 0,
       creator_name: 'zlx',
       group_name: '工作文档2',
       creator_id: '5c50094c99d8808eaeaf39b1',
       _id: 5c517ae9e15b754405b3c66a },
    '$__original_save': { [Function] numAsyncPres: 1 },
    save: [Function: wrappedPointCut],
    _pres: 
     { '$__original_save': [Array],
       '$__original_validate': [Array],
       '$__original_remove': [Array] },
    _posts: 
     { '$__original_save': [],
       '$__original_validate': [],
       '$__original_remove': [] },
    '$__original_validate': { [Function] numAsyncPres: 1 },
    validate: [Function: wrappedPointCut],
    '$__original_remove': { [Function] numAsyncPres: 1 },
    remove: [Function: wrappedPointCut],
    members: [] },
  { '$__': 
     InternalCache {
       strictMode: true,
       selected: undefined,
       shardval: undefined,
       saveError: undefined,
       validationError: undefined,
       adhocPaths: undefined,
       removing: undefined,
       inserting: undefined,
       version: undefined,
       getters: {},
       _id: undefined,
       populate: undefined,
       populated: undefined,
       wasPopulated: false,
       scope: undefined,
       activePaths: [Object],
       ownerDocument: undefined,
       fullPath: undefined,
       emitter: [Object] },
    isNew: false,
    errors: undefined,
    _doc: 
     { posts: [],
       members: [],
       deleted: false,
       create_time: 1548843581298,
       __v: 0,
       creator_name: 'zlx',
       group_name: '工作文档1',
       creator_id: '5c50094c99d8808eaeaf39b1',
       _id: 5c517a3db5372b15050f423f },
    '$__original_save': { [Function] numAsyncPres: 1 },
    save: [Function: wrappedPointCut],
    _pres: 
     { '$__original_save': [Array],
       '$__original_validate': [Array],
       '$__original_remove': [Array] },
    _posts: 
     { '$__original_save': [],
       '$__original_validate': [],
       '$__original_remove': [] },
    '$__original_validate': { [Function] numAsyncPres: 1 },
    validate: [Function: wrappedPointCut],
    '$__original_remove': { [Function] numAsyncPres: 1 },
    remove: [Function: wrappedPointCut],
    members: [] } ] 'myGroupsNew'
[2019-02-13 15:37:02.647] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 3347 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-13 15:38:20.313] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-13 15:38:20.334] [INFO] console - [ { _id: 5c525e646578b02d1482f09a,
    creator_id: '5c50094c99d8808eaeaf39b1',
    group_name: '工作文档3',
    creator_name: 'zlx',
    __v: 0,
    create_time: 1548901988197,
    deleted: false,
    members: [],
    posts: [ '5c51553f5c10eaa2f3c041e9' ] },
  { _id: 5c517ae9e15b754405b3c66a,
    creator_id: '5c50094c99d8808eaeaf39b1',
    group_name: '工作文档2',
    creator_name: 'zlx',
    __v: 0,
    create_time: 1548843753879,
    deleted: false,
    members: [],
    posts: [] },
  { _id: 5c517a3db5372b15050f423f,
    creator_id: '5c50094c99d8808eaeaf39b1',
    group_name: '工作文档1',
    creator_name: 'zlx',
    __v: 0,
    create_time: 1548843581298,
    deleted: false,
    members: [],
    posts: [] } ] 'groups'
[2019-02-13 15:38:20.337] [INFO] console - [ { _id: 5c525e646578b02d1482f09a,
    creator_id: '5c50094c99d8808eaeaf39b1',
    group_name: '工作文档3',
    creator_name: 'zlx',
    __v: 0,
    create_time: 1548901988197,
    deleted: false,
    members: [],
    posts: [ '5c51553f5c10eaa2f3c041e9' ] },
  { _id: 5c517ae9e15b754405b3c66a,
    creator_id: '5c50094c99d8808eaeaf39b1',
    group_name: '工作文档2',
    creator_name: 'zlx',
    __v: 0,
    create_time: 1548843753879,
    deleted: false,
    members: [],
    posts: [] },
  { _id: 5c517a3db5372b15050f423f,
    creator_id: '5c50094c99d8808eaeaf39b1',
    group_name: '工作文档1',
    creator_name: 'zlx',
    __v: 0,
    create_time: 1548843581298,
    deleted: false,
    members: [],
    posts: [] } ] 'myGroupsNew'
[2019-02-13 15:38:20.346] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 929 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-13 15:40:17.772] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-13 15:40:17.793] [INFO] console - [ { _id: 5c525e646578b02d1482f09a,
    creator_id: '5c50094c99d8808eaeaf39b1',
    group_name: '工作文档3',
    creator_name: 'zlx',
    __v: 0,
    create_time: 1548901988197,
    deleted: false,
    members: [],
    posts: [ '5c51553f5c10eaa2f3c041e9' ] },
  { _id: 5c517ae9e15b754405b3c66a,
    creator_id: '5c50094c99d8808eaeaf39b1',
    group_name: '工作文档2',
    creator_name: 'zlx',
    __v: 0,
    create_time: 1548843753879,
    deleted: false,
    members: [],
    posts: [] },
  { _id: 5c517a3db5372b15050f423f,
    creator_id: '5c50094c99d8808eaeaf39b1',
    group_name: '工作文档1',
    creator_name: 'zlx',
    __v: 0,
    create_time: 1548843581298,
    deleted: false,
    members: [],
    posts: [] } ] 'groups'
[2019-02-13 15:40:17.797] [INFO] console - [ { _id: 5c525e646578b02d1482f09a,
    creator_id: '5c50094c99d8808eaeaf39b1',
    group_name: '工作文档3',
    creator_name: 'zlx',
    __v: 0,
    create_time: 1548901988197,
    deleted: false,
    members: [],
    posts: [ '5c51553f5c10eaa2f3c041e9' ] },
  { _id: 5c517ae9e15b754405b3c66a,
    creator_id: '5c50094c99d8808eaeaf39b1',
    group_name: '工作文档2',
    creator_name: 'zlx',
    __v: 0,
    create_time: 1548843753879,
    deleted: false,
    members: [],
    posts: [] },
  { _id: 5c517a3db5372b15050f423f,
    creator_id: '5c50094c99d8808eaeaf39b1',
    group_name: '工作文档1',
    creator_name: 'zlx',
    __v: 0,
    create_time: 1548843581298,
    deleted: false,
    members: [],
    posts: [] } ] 'myGroupsNew'
[2019-02-13 15:40:17.806] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-13 15:40:40.037] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-13 15:40:40.066] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-13 15:41:00.391] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-13 15:41:00.410] [INFO] console - [ { _id: 5c525e646578b02d1482f09a,
    creator_id: '5c50094c99d8808eaeaf39b1',
    group_name: '工作文档3',
    creator_name: 'zlx',
    __v: 0,
    create_time: 1548901988197,
    deleted: false,
    members: [],
    posts: [ '5c51553f5c10eaa2f3c041e9' ] },
  { _id: 5c517ae9e15b754405b3c66a,
    creator_id: '5c50094c99d8808eaeaf39b1',
    group_name: '工作文档2',
    creator_name: 'zlx',
    __v: 0,
    create_time: 1548843753879,
    deleted: false,
    members: [],
    posts: [] },
  { _id: 5c517a3db5372b15050f423f,
    creator_id: '5c50094c99d8808eaeaf39b1',
    group_name: '工作文档1',
    creator_name: 'zlx',
    __v: 0,
    create_time: 1548843581298,
    deleted: false,
    members: [],
    posts: [] } ] 'groups'
[2019-02-13 15:41:00.421] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-13 15:41:34.700] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-13 15:41:34.722] [INFO] console - [ { _id: 5c525e646578b02d1482f09a,
    creator_id: '5c50094c99d8808eaeaf39b1',
    group_name: '工作文档3',
    creator_name: 'zlx',
    __v: 0,
    create_time: 1548901988197,
    deleted: false,
    members: [],
    posts: [ '5c51553f5c10eaa2f3c041e9' ] },
  { _id: 5c517ae9e15b754405b3c66a,
    creator_id: '5c50094c99d8808eaeaf39b1',
    group_name: '工作文档2',
    creator_name: 'zlx',
    __v: 0,
    create_time: 1548843753879,
    deleted: false,
    members: [],
    posts: [] },
  { _id: 5c517a3db5372b15050f423f,
    creator_id: '5c50094c99d8808eaeaf39b1',
    group_name: '工作文档1',
    creator_name: 'zlx',
    __v: 0,
    create_time: 1548843581298,
    deleted: false,
    members: [],
    posts: [] } ] 'groups'
[2019-02-13 15:41:34.726] [INFO] console - [ { _id: 5c63bff8973b939cd9d2bfbe,
    creator_id: '5c4a6c2548c1d7686ca5e112',
    group_name: '工作文档hsq',
    creator_name: 'hsq',
    __v: 0,
    create_time: 1550041080228,
    deleted: false,
    members: [ '5c50094c99d8808eaeaf39b1' ],
    posts: [ '5c51553f5c10eaa2f3c041e9' ] } ] 'groups'
[2019-02-13 15:41:34.729] [INFO] console - Query {
  _mongooseOptions: {},
  mongooseCollection: 
   NativeCollection {
     collection: Collection { s: [Object] },
     opts: { bufferCommands: true, capped: false },
     name: 'signups',
     collectionName: 'signups',
     conn: 
      NativeConnection {
        base: [Object],
        collections: [Object],
        models: [Object],
        config: [Object],
        replica: false,
        hosts: null,
        host: '127.0.0.1',
        port: 27017,
        user: undefined,
        pass: undefined,
        name: 'DES',
        options: [Object],
        otherDbs: [],
        _readyState: 1,
        _closeCalled: false,
        _hasOpened: true,
        _listening: false,
        db: [Object] },
     queue: [],
     buffer: false,
     emitter: 
      EventEmitter {
        domain: null,
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined } },
  model: 
   { [Function: model]
     hooks: Kareem { _pres: {}, _posts: {} },
     base: 
      Mongoose {
        connections: [Array],
        plugins: [],
        models: [Object],
        modelSchemas: [Object],
        options: [Object] },
     modelName: 'Signup',
     model: [Function: model],
     db: 
      NativeConnection {
        base: [Object],
        collections: [Object],
        models: [Object],
        config: [Object],
        replica: false,
        hosts: null,
        host: '127.0.0.1',
        port: 27017,
        user: undefined,
        pass: undefined,
        name: 'DES',
        options: [Object],
        otherDbs: [],
        _readyState: 1,
        _closeCalled: false,
        _hasOpened: true,
        _listening: false,
        db: [Object] },
     discriminators: undefined,
     schema: 
      Schema {
        paths: [Object],
        subpaths: {},
        virtuals: [Object],
        singleNestedPaths: {},
        nested: {},
        inherits: {},
        callQueue: [Array],
        _indexes: [],
        methods: {},
        statics: {},
        tree: [Object],
        _requiredpaths: undefined,
        discriminatorMapping: undefined,
        _indexedpaths: undefined,
        query: {},
        childSchemas: [],
        s: [Object],
        options: [Object],
        '$globalPluginsApplied': true },
     collection: 
      NativeCollection {
        collection: [Object],
        opts: [Object],
        name: 'signups',
        collectionName: 'signups',
        conn: [Object],
        queue: [],
        buffer: false,
        emitter: [Object] },
     Query: { [Function] base: [Object] },
     '$__insertMany': [Function],
     insertMany: [Function] },
  schema: 
   Schema {
     paths: 
      { role: [Object],
        name: [Object],
        pass: [Object],
        type: [Object],
        deleted: [Object],
        create_time: [Object],
        update_time: [Object],
        correlate: [Object],
        _id: [Object],
        __v: [Object] },
     subpaths: {},
     virtuals: { id: [Object] },
     singleNestedPaths: {},
     nested: {},
     inherits: {},
     callQueue: [ [Array], [Array], [Array], [Array] ],
     _indexes: [],
     methods: {},
     statics: {},
     tree: 
      { role: [Function: String],
        name: [Function: String],
        pass: [Function: String],
        type: [Object],
        deleted: [Object],
        create_time: [Object],
        update_time: [Function: Number],
        correlate: [Object],
        _id: [Object],
        id: [Object],
        __v: [Function: Number] },
     _requiredpaths: undefined,
     discriminatorMapping: undefined,
     _indexedpaths: undefined,
     query: {},
     childSchemas: [],
     s: { hooks: [Object], kareemHooks: [Object] },
     options: 
      { typeKey: 'type',
        id: true,
        noVirtualId: false,
        _id: true,
        noId: false,
        validateBeforeSave: true,
        read: null,
        shardKey: null,
        autoIndex: null,
        minimize: true,
        discriminatorKey: '__t',
        versionKey: '__v',
        capped: false,
        bufferCommands: true,
        strict: true,
        pluralization: true },
     '$globalPluginsApplied': true },
  op: 'findOne',
  options: {},
  _conditions: { _id: 5c50094c99d8808eaeaf39b1 },
  _fields: undefined,
  _update: undefined,
  _path: undefined,
  _distinct: undefined,
  _collection: 
   NodeCollection {
     collection: 
      NativeCollection {
        collection: [Object],
        opts: [Object],
        name: 'signups',
        collectionName: 'signups',
        conn: [Object],
        queue: [],
        buffer: false,
        emitter: [Object] },
     collectionName: 'signups' },
  _traceFunction: undefined,
  _castError: null,
  _count: [Function],
  _execUpdate: [Function],
  _find: [Function],
  _findOne: [Function],
  _findOneAndRemove: [Function],
  _findOneAndUpdate: [Function] } 'membermember'
[2019-02-13 15:41:34.760] [ERROR] console - API ERROR:   [0m[97m[41mError[0m[90m:[0m[37m [0m[97m{}[0m
[0m TypeError: Converting circular structure to JSON
    at JSON.stringify (<anonymous>)
    at stringify (/workspace/DESserver/node_modules/express/lib/response.js:1119:12)
    at ServerResponse.json (/workspace/DESserver/node_modules/express/lib/response.js:260:14)
    at /workspace/DESserver/api/api.js:94:17
    at <anonymous>
    at process._tickCallback (internal/process/next_tick.js:188:7)
[2019-02-13 15:41:34.772] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 58 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-13 15:43:07.599] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-13 15:43:07.620] [INFO] console - [ { _id: 5c525e646578b02d1482f09a,
    creator_id: '5c50094c99d8808eaeaf39b1',
    group_name: '工作文档3',
    creator_name: 'zlx',
    __v: 0,
    create_time: 1548901988197,
    deleted: false,
    members: [],
    posts: [ '5c51553f5c10eaa2f3c041e9' ] },
  { _id: 5c517ae9e15b754405b3c66a,
    creator_id: '5c50094c99d8808eaeaf39b1',
    group_name: '工作文档2',
    creator_name: 'zlx',
    __v: 0,
    create_time: 1548843753879,
    deleted: false,
    members: [],
    posts: [] },
  { _id: 5c517a3db5372b15050f423f,
    creator_id: '5c50094c99d8808eaeaf39b1',
    group_name: '工作文档1',
    creator_name: 'zlx',
    __v: 0,
    create_time: 1548843581298,
    deleted: false,
    members: [],
    posts: [] } ] 'groups'
[2019-02-13 15:43:07.625] [INFO] console - [ { _id: 5c63bff8973b939cd9d2bfbe,
    creator_id: '5c4a6c2548c1d7686ca5e112',
    group_name: '工作文档hsq',
    creator_name: 'hsq',
    __v: 0,
    create_time: 1550041080228,
    deleted: false,
    members: [ '5c50094c99d8808eaeaf39b1' ],
    posts: [ '5c51553f5c10eaa2f3c041e9' ] } ] 'groups'
[2019-02-13 15:43:07.627] [INFO] console - Query {
  _mongooseOptions: {},
  mongooseCollection: 
   NativeCollection {
     collection: Collection { s: [Object] },
     opts: { bufferCommands: true, capped: false },
     name: 'signups',
     collectionName: 'signups',
     conn: 
      NativeConnection {
        base: [Object],
        collections: [Object],
        models: [Object],
        config: [Object],
        replica: false,
        hosts: null,
        host: '127.0.0.1',
        port: 27017,
        user: undefined,
        pass: undefined,
        name: 'DES',
        options: [Object],
        otherDbs: [],
        _readyState: 1,
        _closeCalled: false,
        _hasOpened: true,
        _listening: false,
        db: [Object] },
     queue: [],
     buffer: false,
     emitter: 
      EventEmitter {
        domain: null,
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined } },
  model: 
   { [Function: model]
     hooks: Kareem { _pres: {}, _posts: {} },
     base: 
      Mongoose {
        connections: [Array],
        plugins: [],
        models: [Object],
        modelSchemas: [Object],
        options: [Object] },
     modelName: 'Signup',
     model: [Function: model],
     db: 
      NativeConnection {
        base: [Object],
        collections: [Object],
        models: [Object],
        config: [Object],
        replica: false,
        hosts: null,
        host: '127.0.0.1',
        port: 27017,
        user: undefined,
        pass: undefined,
        name: 'DES',
        options: [Object],
        otherDbs: [],
        _readyState: 1,
        _closeCalled: false,
        _hasOpened: true,
        _listening: false,
        db: [Object] },
     discriminators: undefined,
     schema: 
      Schema {
        paths: [Object],
        subpaths: {},
        virtuals: [Object],
        singleNestedPaths: {},
        nested: {},
        inherits: {},
        callQueue: [Array],
        _indexes: [],
        methods: {},
        statics: {},
        tree: [Object],
        _requiredpaths: undefined,
        discriminatorMapping: undefined,
        _indexedpaths: undefined,
        query: {},
        childSchemas: [],
        s: [Object],
        options: [Object],
        '$globalPluginsApplied': true },
     collection: 
      NativeCollection {
        collection: [Object],
        opts: [Object],
        name: 'signups',
        collectionName: 'signups',
        conn: [Object],
        queue: [],
        buffer: false,
        emitter: [Object] },
     Query: { [Function] base: [Object] },
     '$__insertMany': [Function],
     insertMany: [Function] },
  schema: 
   Schema {
     paths: 
      { role: [Object],
        name: [Object],
        pass: [Object],
        type: [Object],
        deleted: [Object],
        create_time: [Object],
        update_time: [Object],
        correlate: [Object],
        _id: [Object],
        __v: [Object] },
     subpaths: {},
     virtuals: { id: [Object] },
     singleNestedPaths: {},
     nested: {},
     inherits: {},
     callQueue: [ [Array], [Array], [Array], [Array] ],
     _indexes: [],
     methods: {},
     statics: {},
     tree: 
      { role: [Function: String],
        name: [Function: String],
        pass: [Function: String],
        type: [Object],
        deleted: [Object],
        create_time: [Object],
        update_time: [Function: Number],
        correlate: [Object],
        _id: [Object],
        id: [Object],
        __v: [Function: Number] },
     _requiredpaths: undefined,
     discriminatorMapping: undefined,
     _indexedpaths: undefined,
     query: {},
     childSchemas: [],
     s: { hooks: [Object], kareemHooks: [Object] },
     options: 
      { typeKey: 'type',
        id: true,
        noVirtualId: false,
        _id: true,
        noId: false,
        validateBeforeSave: true,
        read: null,
        shardKey: null,
        autoIndex: null,
        minimize: true,
        discriminatorKey: '__t',
        versionKey: '__v',
        capped: false,
        bufferCommands: true,
        strict: true,
        pluralization: true },
     '$globalPluginsApplied': true },
  op: 'findOne',
  options: {},
  _conditions: { _id: 5c50094c99d8808eaeaf39b1 },
  _fields: { _id: 1, name: 1 },
  _update: undefined,
  _path: undefined,
  _distinct: undefined,
  _collection: 
   NodeCollection {
     collection: 
      NativeCollection {
        collection: [Object],
        opts: [Object],
        name: 'signups',
        collectionName: 'signups',
        conn: [Object],
        queue: [],
        buffer: false,
        emitter: [Object] },
     collectionName: 'signups' },
  _traceFunction: undefined,
  _castError: null,
  _count: [Function],
  _execUpdate: [Function],
  _find: [Function],
  _findOne: [Function],
  _findOneAndRemove: [Function],
  _findOneAndUpdate: [Function] } 'membermember'
[2019-02-13 15:43:07.656] [ERROR] console - API ERROR:   [0m[97m[41mError[0m[90m:[0m[37m [0m[97m{}[0m
[0m TypeError: Converting circular structure to JSON
    at JSON.stringify (<anonymous>)
    at stringify (/workspace/DESserver/node_modules/express/lib/response.js:1119:12)
    at ServerResponse.json (/workspace/DESserver/node_modules/express/lib/response.js:260:14)
    at /workspace/DESserver/api/api.js:94:17
    at <anonymous>
    at process._tickCallback (internal/process/next_tick.js:188:7)
[2019-02-13 15:43:07.671] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-13 15:44:31.867] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-13 15:44:31.902] [INFO] console - [ { _id: 5c525e646578b02d1482f09a,
    creator_id: '5c50094c99d8808eaeaf39b1',
    group_name: '工作文档3',
    creator_name: 'zlx',
    __v: 0,
    create_time: 1548901988197,
    deleted: false,
    members: [],
    posts: [ '5c51553f5c10eaa2f3c041e9' ] },
  { _id: 5c517ae9e15b754405b3c66a,
    creator_id: '5c50094c99d8808eaeaf39b1',
    group_name: '工作文档2',
    creator_name: 'zlx',
    __v: 0,
    create_time: 1548843753879,
    deleted: false,
    members: [],
    posts: [] },
  { _id: 5c517a3db5372b15050f423f,
    creator_id: '5c50094c99d8808eaeaf39b1',
    group_name: '工作文档1',
    creator_name: 'zlx',
    __v: 0,
    create_time: 1548843581298,
    deleted: false,
    members: [],
    posts: [] } ] 'groups'
[2019-02-13 15:44:31.905] [INFO] console - [ { _id: 5c63bff8973b939cd9d2bfbe,
    creator_id: '5c4a6c2548c1d7686ca5e112',
    group_name: '工作文档hsq',
    creator_name: 'hsq',
    __v: 0,
    create_time: 1550041080228,
    deleted: false,
    members: [ '5c50094c99d8808eaeaf39b1' ],
    posts: [ '5c51553f5c10eaa2f3c041e9' ] } ] 'groups'
[2019-02-13 15:44:31.921] [INFO] console - Query {
  _mongooseOptions: {},
  mongooseCollection: 
   NativeCollection {
     collection: Collection { s: [Object] },
     opts: { bufferCommands: true, capped: false },
     name: 'signups',
     collectionName: 'signups',
     conn: 
      NativeConnection {
        base: [Object],
        collections: [Object],
        models: [Object],
        config: [Object],
        replica: false,
        hosts: null,
        host: '127.0.0.1',
        port: 27017,
        user: undefined,
        pass: undefined,
        name: 'DES',
        options: [Object],
        otherDbs: [],
        _readyState: 1,
        _closeCalled: false,
        _hasOpened: true,
        _listening: false,
        db: [Object] },
     queue: [],
     buffer: false,
     emitter: 
      EventEmitter {
        domain: null,
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined } },
  model: 
   { [Function: model]
     hooks: Kareem { _pres: {}, _posts: {} },
     base: 
      Mongoose {
        connections: [Array],
        plugins: [],
        models: [Object],
        modelSchemas: [Object],
        options: [Object] },
     modelName: 'Signup',
     model: [Function: model],
     db: 
      NativeConnection {
        base: [Object],
        collections: [Object],
        models: [Object],
        config: [Object],
        replica: false,
        hosts: null,
        host: '127.0.0.1',
        port: 27017,
        user: undefined,
        pass: undefined,
        name: 'DES',
        options: [Object],
        otherDbs: [],
        _readyState: 1,
        _closeCalled: false,
        _hasOpened: true,
        _listening: false,
        db: [Object] },
     discriminators: undefined,
     schema: 
      Schema {
        paths: [Object],
        subpaths: {},
        virtuals: [Object],
        singleNestedPaths: {},
        nested: {},
        inherits: {},
        callQueue: [Array],
        _indexes: [],
        methods: {},
        statics: {},
        tree: [Object],
        _requiredpaths: undefined,
        discriminatorMapping: undefined,
        _indexedpaths: undefined,
        query: {},
        childSchemas: [],
        s: [Object],
        options: [Object],
        '$globalPluginsApplied': true },
     collection: 
      NativeCollection {
        collection: [Object],
        opts: [Object],
        name: 'signups',
        collectionName: 'signups',
        conn: [Object],
        queue: [],
        buffer: false,
        emitter: [Object] },
     Query: { [Function] base: [Object] },
     '$__insertMany': [Function],
     insertMany: [Function] },
  schema: 
   Schema {
     paths: 
      { role: [Object],
        name: [Object],
        pass: [Object],
        type: [Object],
        deleted: [Object],
        create_time: [Object],
        update_time: [Object],
        correlate: [Object],
        _id: [Object],
        __v: [Object] },
     subpaths: {},
     virtuals: { id: [Object] },
     singleNestedPaths: {},
     nested: {},
     inherits: {},
     callQueue: [ [Array], [Array], [Array], [Array] ],
     _indexes: [],
     methods: {},
     statics: {},
     tree: 
      { role: [Function: String],
        name: [Function: String],
        pass: [Function: String],
        type: [Object],
        deleted: [Object],
        create_time: [Object],
        update_time: [Function: Number],
        correlate: [Object],
        _id: [Object],
        id: [Object],
        __v: [Function: Number] },
     _requiredpaths: undefined,
     discriminatorMapping: undefined,
     _indexedpaths: undefined,
     query: {},
     childSchemas: [],
     s: { hooks: [Object], kareemHooks: [Object] },
     options: 
      { typeKey: 'type',
        id: true,
        noVirtualId: false,
        _id: true,
        noId: false,
        validateBeforeSave: true,
        read: null,
        shardKey: null,
        autoIndex: null,
        minimize: true,
        discriminatorKey: '__t',
        versionKey: '__v',
        capped: false,
        bufferCommands: true,
        strict: true,
        pluralization: true },
     '$globalPluginsApplied': true },
  op: 'findOne',
  options: {},
  _conditions: { _id: 5c50094c99d8808eaeaf39b1 },
  _fields: { _id: 1, name: 1 },
  _update: undefined,
  _path: undefined,
  _distinct: undefined,
  _collection: 
   NodeCollection {
     collection: 
      NativeCollection {
        collection: [Object],
        opts: [Object],
        name: 'signups',
        collectionName: 'signups',
        conn: [Object],
        queue: [],
        buffer: false,
        emitter: [Object] },
     collectionName: 'signups' },
  _traceFunction: undefined,
  _castError: null,
  _count: [Function],
  _execUpdate: [Function],
  _find: [Function],
  _findOne: [Function],
  _findOneAndRemove: [Function],
  _findOneAndUpdate: [Function] } 'membermember'
[2019-02-13 15:44:32.020] [ERROR] console - API ERROR:   [0m[97m[41mError[0m[90m:[0m[37m [0m[97m{}[0m
[0m TypeError: Converting circular structure to JSON
    at JSON.stringify (<anonymous>)
    at stringify (/workspace/DESserver/node_modules/express/lib/response.js:1119:12)
    at ServerResponse.json (/workspace/DESserver/node_modules/express/lib/response.js:260:14)
    at /workspace/DESserver/api/api.js:94:17
    at <anonymous>
    at process._tickCallback (internal/process/next_tick.js:188:7)
[2019-02-13 15:44:32.034] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-13 15:49:30.654] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-13 15:49:30.672] [INFO] console - [ { _id: 5c525e646578b02d1482f09a,
    creator_id: '5c50094c99d8808eaeaf39b1',
    group_name: '工作文档3',
    creator_name: 'zlx',
    __v: 0,
    create_time: 1548901988197,
    deleted: false,
    members: [],
    posts: [ '5c51553f5c10eaa2f3c041e9' ] },
  { _id: 5c517ae9e15b754405b3c66a,
    creator_id: '5c50094c99d8808eaeaf39b1',
    group_name: '工作文档2',
    creator_name: 'zlx',
    __v: 0,
    create_time: 1548843753879,
    deleted: false,
    members: [],
    posts: [] },
  { _id: 5c517a3db5372b15050f423f,
    creator_id: '5c50094c99d8808eaeaf39b1',
    group_name: '工作文档1',
    creator_name: 'zlx',
    __v: 0,
    create_time: 1548843581298,
    deleted: false,
    members: [],
    posts: [] } ] 'groups'
[2019-02-13 15:49:30.676] [INFO] console - [ { _id: 5c63bff8973b939cd9d2bfbe,
    creator_id: '5c4a6c2548c1d7686ca5e112',
    group_name: '工作文档hsq',
    creator_name: 'hsq',
    __v: 0,
    create_time: 1550041080228,
    deleted: false,
    members: [ '5c50094c99d8808eaeaf39b1' ],
    posts: [ '5c51553f5c10eaa2f3c041e9' ] } ] 'groups'
[2019-02-13 15:49:30.681] [INFO] console - { _id: 5c50094c99d8808eaeaf39b1, name: 'zlx' } 'membermember'
[2019-02-13 15:49:30.691] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 950 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-13 15:52:58.001] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-13 15:52:58.102] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 1212 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-13 15:53:17.573] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-13 15:53:17.631] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 1208 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-13 15:54:27.351] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-13 15:54:27.398] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 1000 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-13 15:59:15.323] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-13 15:59:15.378] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-13 15:59:45.850] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-13 15:59:45.878] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-13 16:03:33.236] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-13 16:03:33.249] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-13 16:03:47.926] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-13 16:03:47.938] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-13 16:04:22.968] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-13 16:04:22.980] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-13 16:05:07.668] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-13 16:05:07.679] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-13 16:05:29.947] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-13 16:05:29.956] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-13 16:06:37.413] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-13 16:06:37.426] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-13 16:07:40.394] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-13 16:07:40.403] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-13 16:08:39.630] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-13 16:08:39.645] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-13 16:08:41.176] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-13 16:08:41.198] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-13 16:09:42.202] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-13 16:09:42.216] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-13 16:10:44.245] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-13 16:10:44.252] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-13 16:10:50.643] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-13 16:10:50.661] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-13 16:12:15.879] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-13 16:12:15.888] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-13 16:12:21.865] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-13 16:12:21.872] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-13 16:13:13.733] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-13 16:13:13.744] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-13 16:13:55.929] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-13 16:13:55.957] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-13 16:15:30.960] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-13 16:15:30.979] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-13 16:16:30.210] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-13 16:16:30.218] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-13 16:22:13.546] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-13 16:22:13.554] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-13 16:23:51.620] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-13 16:23:51.633] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-13 16:24:09.794] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-13 16:24:09.806] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-13 16:25:42.084] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-13 16:25:42.097] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-13 16:26:16.942] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-13 16:26:16.956] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-13 16:26:25.229] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-13 16:26:25.237] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-13 16:28:39.886] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-13 16:28:39.921] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-13 16:29:36.309] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-13 16:29:36.315] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-13 16:30:10.782] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-13 16:30:10.792] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-13 16:33:21.034] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-13 16:33:21.044] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-13 17:20:03.612] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-13 17:20:03.630] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-13 17:20:26.139] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-13 17:20:26.153] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-13 17:20:36.587] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-13 17:20:36.600] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-13 17:21:01.558] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-13 17:21:01.567] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-13 17:21:48.963] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-13 17:21:48.973] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 09:49:46.142] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 09:49:46.277] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 09:52:49.013] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 09:52:49.061] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 09:53:11.545] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 09:53:11.556] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 09:53:30.830] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 09:53:30.843] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 09:53:54.818] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 09:53:54.828] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 09:54:32.570] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 09:54:32.578] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 09:54:38.360] [ERROR] http - ::ffff:127.0.0.1 - - "GET /groups/detial HTTP/1.1" 404 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 09:54:50.757] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 09:54:50.769] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 09:55:24.402] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 09:55:24.414] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 09:55:45.231] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 09:55:45.242] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 09:55:51.632] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 09:55:51.634] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/detail?_id=5c525e646578b02d1482f09a HTTP/1.1" 200 258 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 09:56:11.819] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 09:56:11.836] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/detail?_id=5c525e646578b02d1482f09a HTTP/1.1" 200 247 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 09:59:06.958] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 09:59:07.017] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 09:59:10.505] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 09:59:10.509] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/detail?_id=5c525e646578b02d1482f09a HTTP/1.1" 200 274 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 09:59:22.169] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 09:59:22.177] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/detail?_id=5c63bff8973b939cd9d2bfbe HTTP/1.1" 200 323 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 10:01:53.224] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 10:01:53.254] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 10:01:57.504] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 10:01:57.510] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/detail?_id=5c63bff8973b939cd9d2bfbe HTTP/1.1" 200 321 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 10:05:13.129] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 10:05:13.170] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 1000 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 10:05:17.826] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 10:05:17.831] [WARN] http - undefined - - "GET /groups/detail?_id=5c63bff8973b939cd9d2bfbe HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 10:05:30.559] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 10:05:30.562] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 68 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 10:05:32.557] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 10:05:32.569] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 125 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 10:05:32.673] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 10:05:32.674] [INFO] console - will check 1550111732561 1550109932674
[2019-02-14 10:05:32.674] [INFO] console - will update 1550111732674 1550109932674
[2019-02-14 10:05:32.689] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 1837 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 10:05:39.410] [INFO] console - will check 1550111732674 1550109939410
[2019-02-14 10:05:39.410] [INFO] console - will update 1550111739410 1550109939410
[2019-02-14 10:05:39.410] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 10:05:39.413] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c51553f5c10eaa2f3c041e9 HTTP/1.1" 200 100 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 10:06:02.051] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: { content: '## jjjj\n> this is a title' },
    key: undefined } ] 'results'
[2019-02-14 10:06:02.077] [INFO] http - ::ffff:127.0.0.1 - - "POST /posts/update HTTP/1.1" 200 147 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 10:06:02.200] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 10:06:02.201] [INFO] console - will check 1550111739410 1550109962200
[2019-02-14 10:06:02.201] [INFO] console - will update 1550111762200 1550109962200
[2019-02-14 10:06:02.207] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 10:06:08.736] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 10:06:08.749] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 10:08:46.326] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 10:08:46.350] [WARN] http - undefined - - "GET /groups/detail?_id=5c63bff8973b939cd9d2bfbe HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 10:09:43.606] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 10:09:43.632] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 10:10:05.070] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 10:10:05.082] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 10:12:22.261] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 10:12:22.277] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 10:14:48.726] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 10:14:48.735] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 10:20:00.104] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 10:20:00.962] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 10:20:00.971] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 1000 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 10:20:27.205] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 10:20:27.213] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 10:20:31.454] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 10:20:31.462] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 10:21:04.949] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 10:21:05.033] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 10:21:33.544] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 10:21:33.565] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 10:21:52.602] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 10:21:52.606] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/detail?_id=5c525e646578b02d1482f09a HTTP/1.1" 200 272 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 10:57:52.485] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 10:57:52.544] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 10:57:55.970] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 10:57:55.974] [WARN] http - undefined - - "GET /groups/detail?_id=5c63bff8973b939cd9d2bfbe HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 11:12:35.808] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 11:12:35.965] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 11:13:17.718] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 11:13:17.744] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 11:15:00.661] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 11:15:00.671] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 11:15:00.799] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 11:15:00.806] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 11:15:00.923] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 11:15:00.931] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 11:15:09.186] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 11:15:09.197] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 11:15:23.462] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 11:15:23.472] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 11:16:33.807] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 11:16:33.824] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 11:17:49.840] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 11:17:49.850] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 11:18:17.912] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 11:18:17.923] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 11:18:28.619] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 11:18:28.627] [WARN] http - undefined - - "GET /groups/detail?_id=5c63bff8973b939cd9d2bfbe HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 11:19:06.560] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 11:19:06.736] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 11:19:09.352] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 11:19:09.357] [WARN] http - undefined - - "GET /groups/detail?_id=5c63bff8973b939cd9d2bfbe HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 11:19:58.011] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 11:19:58.022] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 11:20:04.656] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 11:20:04.660] [WARN] http - undefined - - "GET /groups/detail?_id=5c63bff8973b939cd9d2bfbe HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 11:25:24.568] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 11:25:24.602] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 11:25:27.572] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 11:25:27.581] [WARN] http - undefined - - "GET /groups/detail?_id=5c63bff8973b939cd9d2bfbe HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 11:26:35.914] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 11:26:35.929] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 11:26:39.710] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 11:26:39.714] [WARN] http - undefined - - "GET /groups/detail?_id=5c63bff8973b939cd9d2bfbe HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 11:28:23.832] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 11:28:23.856] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 11:28:28.420] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 11:28:28.431] [WARN] http - undefined - - "GET /groups/detail?_id=5c63bff8973b939cd9d2bfbe HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 11:28:41.315] [INFO] console - will check 1550111762200 1550114921315
[2019-02-14 11:28:41.327] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c51553f5c10eaa2f3c041e9 HTTP/1.1" 200 71 "http://localhost:9000/project/detail" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 11:28:43.060] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 11:28:43.066] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 125 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 11:28:43.184] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 11:28:43.184] [INFO] console - will check 1550116723062 1550114923184
[2019-02-14 11:28:43.185] [INFO] console - will update 1550116723184 1550114923184
[2019-02-14 11:28:43.204] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 11:28:47.032] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 11:28:47.041] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 11:28:49.431] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 11:28:49.434] [WARN] http - undefined - - "GET /groups/detail?_id=5c63bff8973b939cd9d2bfbe HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 11:28:51.904] [INFO] console - will check 1550116723184 1550114931904
[2019-02-14 11:28:51.904] [INFO] console - will update 1550116731904 1550114931904
[2019-02-14 11:28:51.905] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 11:28:51.907] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c51553f5c10eaa2f3c041e9 HTTP/1.1" 200 122 "http://localhost:9000/project/detail" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 11:29:45.578] [INFO] console - will check 1550116731904 1550114985578
[2019-02-14 11:29:45.578] [INFO] console - will update 1550116785578 1550114985578
[2019-02-14 11:29:45.579] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 11:29:45.582] [WARN] http - undefined - - "GET /posts/getPost?id=5c51553f5c10eaa2f3c041e9 HTTP/1.1" 304 - "http://localhost:9000/project/detail" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 11:30:10.294] [INFO] console - will check 1550116785578 1550115010294
[2019-02-14 11:30:10.294] [INFO] console - will update 1550116810294 1550115010294
[2019-02-14 11:30:10.295] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 11:30:10.299] [WARN] http - undefined - - "GET /posts/getPost?id=5c51553f5c10eaa2f3c041e9 HTTP/1.1" 304 - "http://localhost:9000/project/detail" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 11:30:24.273] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: { content: '## jjjj\n> this is a title' },
    key: undefined } ] 'results'
[2019-02-14 11:30:24.331] [INFO] http - ::ffff:127.0.0.1 - - "POST /posts/update HTTP/1.1" 200 152 "http://localhost:9000/project/detail" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 11:37:22.709] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 11:37:22.742] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 1010 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 11:37:26.466] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 11:37:26.483] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/detail?_id=5c63bff8973b939cd9d2bfbe HTTP/1.1" 200 326 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 11:37:33.018] [INFO] console - will check 1550116810294 1550115453018
[2019-02-14 11:37:33.019] [INFO] console - will update 1550117253018 1550115453018
[2019-02-14 11:37:33.020] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 11:37:33.025] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c51553f5c10eaa2f3c041e9 HTTP/1.1" 200 127 "http://localhost:9000/project/detail" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 11:37:45.323] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: { content: '## jjjj\n> this is a title' },
    key: undefined } ] 'results'
[2019-02-14 11:37:45.331] [INFO] http - ::ffff:127.0.0.1 - - "POST /posts/update HTTP/1.1" 200 154 "http://localhost:9000/project/detail" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 11:37:45.410] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 11:37:45.410] [INFO] console - will check 1550117253018 1550115465410
[2019-02-14 11:37:45.410] [INFO] console - will update 1550117265410 1550115465410
[2019-02-14 11:37:45.476] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 1844 "http://localhost:9000/project/detail" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 11:38:20.697] [INFO] console - will check 1550117265410 1550115500697
[2019-02-14 11:38:20.697] [INFO] console - will update 1550117300697 1550115500697
[2019-02-14 11:38:20.697] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 11:38:20.700] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c51553f5c10eaa2f3c041e9 HTTP/1.1" 200 129 "http://localhost:9000/project/detail" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 11:38:36.592] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: { content: '## jjjj\n> this is a title' },
    key: undefined } ] 'results'
[2019-02-14 11:38:36.600] [INFO] http - ::ffff:127.0.0.1 - - "POST /posts/update HTTP/1.1" 200 158 "http://localhost:9000/project/detail" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 11:38:36.672] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 11:38:36.673] [INFO] console - will check 1550117300697 1550115516673
[2019-02-14 11:38:36.673] [INFO] console - will update 1550117316673 1550115516673
[2019-02-14 11:38:36.739] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 1848 "http://localhost:9000/project/detail" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 11:39:18.435] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: { content: '## jjjj\n> this is a title sndkad' },
    key: undefined } ] 'results'
[2019-02-14 11:39:18.438] [INFO] http - ::ffff:127.0.0.1 - - "POST /posts/update HTTP/1.1" 200 165 "http://localhost:9000/project/detail" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 11:39:18.592] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 11:39:18.593] [INFO] console - will check 1550117316673 1550115558593
[2019-02-14 11:39:18.593] [INFO] console - will update 1550117358593 1550115558593
[2019-02-14 11:39:18.600] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/detail" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 11:41:45.114] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 11:41:45.156] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 1022 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 11:41:47.082] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 11:41:47.099] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 11:42:11.200] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 11:42:11.228] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 11:42:13.147] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 11:42:13.152] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/detail?_id=5c63bff8973b939cd9d2bfbe HTTP/1.1" 200 332 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 11:42:15.999] [INFO] console - will check 1550117358593 1550115735999
[2019-02-14 11:42:15.999] [INFO] console - will update 1550117535999 1550115735999
[2019-02-14 11:42:15.999] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 11:42:16.003] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c51553f5c10eaa2f3c041e9 HTTP/1.1" 200 140 "http://localhost:9000/project/detail" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 11:42:26.203] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: { content: '## jjjj\n> this is a title sndkad' },
    key: undefined } ] 'results'
[2019-02-14 11:42:26.210] [INFO] http - ::ffff:127.0.0.1 - - "POST /posts/update HTTP/1.1" 200 159 "http://localhost:9000/project/detail" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 11:43:13.224] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 11:43:13.241] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 1010 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 11:43:15.035] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 11:43:15.039] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/detail?_id=5c63bff8973b939cd9d2bfbe HTTP/1.1" 200 326 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 11:43:16.953] [INFO] console - will check 1550117535999 1550115796953
[2019-02-14 11:43:16.953] [INFO] console - will update 1550117596953 1550115796953
[2019-02-14 11:43:16.953] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 11:43:16.957] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c51553f5c10eaa2f3c041e9 HTTP/1.1" 200 134 "http://localhost:9000/project/detail" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 11:43:25.132] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: { content: '## jjjj\n> this is a title sndkad' },
    key: undefined } ] 'results'
[2019-02-14 11:43:25.140] [INFO] http - ::ffff:127.0.0.1 - - "POST /posts/update HTTP/1.1" 200 165 "http://localhost:9000/project/detail" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 11:43:32.996] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 11:43:33.012] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 1022 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 11:43:34.885] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 11:43:34.894] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/detail?_id=5c63bff8973b939cd9d2bfbe HTTP/1.1" 200 332 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 11:44:56.022] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 11:44:56.053] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 11:44:58.794] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 11:44:58.799] [WARN] http - undefined - - "GET /groups/detail?_id=5c63bff8973b939cd9d2bfbe HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 11:45:01.622] [INFO] console - will check 1550117596953 1550115901622
[2019-02-14 11:45:01.623] [INFO] console - will update 1550117701622 1550115901622
[2019-02-14 11:45:01.624] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 11:45:01.626] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c51553f5c10eaa2f3c041e9 HTTP/1.1" 200 140 "http://localhost:9000/project/detail" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 11:45:08.110] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: { content: '## jjjj\n> this is a title sndkad' },
    key: undefined } ] 'results'
[2019-02-14 11:45:08.116] [INFO] http - ::ffff:127.0.0.1 - - "POST /posts/update HTTP/1.1" 200 159 "http://localhost:9000/project/detail" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 11:50:39.622] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 11:50:39.636] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 1010 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 11:50:41.662] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 11:50:41.676] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/detail?_id=5c63bff8973b939cd9d2bfbe HTTP/1.1" 200 326 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 11:50:44.070] [INFO] console - will check 1550117701622 1550116244070
[2019-02-14 11:50:44.071] [INFO] console - will update 1550118044070 1550116244070
[2019-02-14 11:50:44.072] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 11:50:44.075] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c51553f5c10eaa2f3c041e9 HTTP/1.1" 200 134 "http://localhost:9000/project/detail" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 11:50:51.941] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: { content: '## jjjj\n> this is a title sndkad' },
    key: undefined } ] 'results'
[2019-02-14 11:50:51.948] [INFO] http - ::ffff:127.0.0.1 - - "POST /posts/update HTTP/1.1" 200 162 "http://localhost:9000/project/detail" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-14 11:50:58.449] [INFO] console - will check 1550118044070 1550116258449
[2019-02-14 11:50:58.450] [INFO] console - will update 1550118058449 1550116258449
[2019-02-14 11:50:58.451] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-14 11:50:58.453] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c51553f5c10eaa2f3c041e9 HTTP/1.1" 200 137 "http://localhost:9000/project/detail" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
[2019-02-22 10:16:43.967] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-22 10:16:43.993] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 125 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.109 Safari/537.36"
[2019-02-22 10:16:44.150] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-22 10:16:44.152] [INFO] console - will check 1550803603985 1550801804152
[2019-02-22 10:16:44.152] [INFO] console - will update 1550803604152 1550801804152
[2019-02-22 10:16:44.166] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 1845 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.109 Safari/537.36"
[2019-02-22 10:16:48.578] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-22 10:16:48.604] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 1016 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.109 Safari/537.36"
[2019-02-22 10:16:50.413] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-22 10:16:50.421] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/detail?_id=5c63bff8973b939cd9d2bfbe HTTP/1.1" 200 329 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.109 Safari/537.36"
[2019-02-22 10:16:51.840] [INFO] console - will check 1550803604152 1550801811840
[2019-02-22 10:16:51.840] [INFO] console - will update 1550803611840 1550801811840
[2019-02-22 10:16:51.840] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-22 10:16:51.843] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c51553f5c10eaa2f3c041e9 HTTP/1.1" 200 137 "http://localhost:9000/project/detail" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.109 Safari/537.36"
[2019-02-22 10:16:53.944] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-22 10:16:53.963] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.109 Safari/537.36"
[2019-02-22 10:17:51.942] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-22 10:17:51.965] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.109 Safari/537.36"
[2019-02-22 10:18:17.748] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-22 10:18:17.762] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.109 Safari/537.36"
[2019-02-22 10:18:46.027] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-22 10:18:46.030] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/detail?_id=5c517ae9e15b754405b3c66a HTTP/1.1" 200 221 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.109 Safari/537.36"
[2019-02-22 10:18:50.414] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-22 10:18:50.423] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.109 Safari/537.36"
[2019-02-22 10:19:51.693] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-22 10:19:51.696] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/detail?_id=5c525e646578b02d1482f09a HTTP/1.1" 200 280 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.109 Safari/537.36"
[2019-02-22 10:19:53.470] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-22 10:19:53.477] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.109 Safari/537.36"
[2019-02-22 10:22:09.516] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-22 10:22:09.518] [INFO] console - will check 1550803611840 1550802129518
[2019-02-22 10:22:09.518] [INFO] console - will update 1550803929518 1550802129518
[2019-02-22 10:22:09.538] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.109 Safari/537.36"
[2019-02-22 10:22:14.109] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-22 10:22:14.115] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 246 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.109 Safari/537.36"
[2019-02-22 10:22:25.794] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-22 10:22:25.796] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/detail?_id=5c517a3db5372b15050f423f HTTP/1.1" 200 220 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.109 Safari/537.36"
[2019-02-22 10:22:27.219] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-22 10:22:27.224] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.109 Safari/537.36"
[2019-02-22 10:22:47.349] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-22 10:22:47.353] [WARN] http - undefined - - "GET /groups/detail?_id=5c517a3db5372b15050f423f HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.109 Safari/537.36"
[2019-02-22 10:22:48.920] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-22 10:22:48.926] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.109 Safari/537.36"
[2019-02-22 10:24:08.142] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-22 10:24:08.147] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.109 Safari/537.36"
[2019-02-22 10:24:08.243] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-22 10:24:08.246] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.109 Safari/537.36"
[2019-02-22 10:24:36.781] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-22 10:24:36.785] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.109 Safari/537.36"
[2019-02-22 10:24:43.797] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/detail HTTP/1.1" 200 46 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.109 Safari/537.36"
[2019-02-22 10:25:32.811] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-22 10:25:32.819] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.109 Safari/537.36"
[2019-02-22 10:26:01.465] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-22 10:26:01.470] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.109 Safari/537.36"
[2019-02-22 10:27:27.595] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-22 10:27:27.601] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.109 Safari/537.36"
[2019-02-22 10:29:21.145] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-22 10:29:21.150] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.109 Safari/537.36"
[2019-02-22 10:30:03.818] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-22 10:30:03.821] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.109 Safari/537.36"
[2019-02-22 10:30:42.128] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-22 10:30:42.134] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.109 Safari/537.36"
[2019-02-22 10:32:17.017] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-22 10:32:17.022] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.109 Safari/537.36"
[2019-02-22 10:32:42.978] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-22 10:32:42.982] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.109 Safari/537.36"
[2019-02-22 10:32:57.691] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-22 10:32:57.696] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.109 Safari/537.36"
[2019-02-22 10:33:07.589] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-22 10:33:07.592] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.109 Safari/537.36"
[2019-02-22 10:33:20.850] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-22 10:33:20.856] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.109 Safari/537.36"
[2019-02-22 10:36:10.841] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-22 10:36:10.847] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.109 Safari/537.36"
[2019-02-22 10:36:22.120] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-22 10:36:22.130] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.109 Safari/537.36"
[2019-02-22 10:36:52.663] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-22 10:36:52.671] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.109 Safari/537.36"
[2019-02-22 10:36:58.421] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-22 10:36:58.429] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.109 Safari/537.36"
[2019-02-22 10:37:04.974] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-22 10:37:04.978] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.109 Safari/537.36"
[2019-02-22 10:37:11.545] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-22 10:37:11.554] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.109 Safari/537.36"
[2019-02-22 10:37:13.511] [WARN] http - undefined - - "GET /groups/detail HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.109 Safari/537.36"
[2019-02-22 10:37:43.039] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-22 10:37:43.048] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.109 Safari/537.36"
[2019-02-25 10:22:55.218] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 10:22:55.253] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 125 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 10:22:55.368] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 10:22:55.370] [INFO] console - will check 1551063175239 1551061375370
[2019-02-25 10:22:55.370] [INFO] console - will update 1551063175370 1551061375370
[2019-02-25 10:22:55.383] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 1845 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 10:22:59.303] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 10:22:59.315] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 246 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 10:23:55.861] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 10:23:55.910] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 10:24:32.074] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 10:24:32.079] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 10:26:06.557] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 10:26:06.565] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 10:28:59.913] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 10:28:59.929] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 10:29:10.255] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 10:29:10.263] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 10:29:16.988] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 10:29:16.993] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 10:29:22.326] [INFO] http - ::ffff:127.0.0.1 - - "POST /groups/create HTTP/1.1" 200 53 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 10:39:58.524] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 10:39:58.538] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 10:39:59.283] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 10:39:59.290] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 10:41:26.361] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 10:41:26.370] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 10:41:35.988] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 10:41:35.992] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 10:41:39.454] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 10:41:39.460] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 10:45:27.780] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 10:45:27.817] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 10:55:16.865] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 10:55:16.870] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 10:55:16.921] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 10:55:16.925] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 10:55:17.009] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 10:55:17.016] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 10:55:17.109] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 10:55:17.113] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 10:55:17.191] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 10:55:17.195] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 10:55:17.274] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 10:55:17.279] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 10:55:17.334] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 10:55:17.342] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 10:55:17.406] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 10:55:17.410] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 10:55:17.605] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 10:55:17.609] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 10:55:17.679] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 10:55:17.684] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 10:55:31.790] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 10:55:31.793] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 10:56:25.869] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 10:56:25.894] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 10:56:56.089] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 10:56:56.093] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 11:05:01.899] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 11:05:01.924] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 11:05:43.300] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 11:05:43.307] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 11:05:44.112] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 11:05:44.117] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 11:05:48.945] [INFO] http - ::ffff:127.0.0.1 - - "GET /signup/search HTTP/1.1" 200 47 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 11:06:48.450] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 11:06:48.461] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 11:07:02.623] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 11:07:02.634] [INFO] http - ::ffff:127.0.0.1 - - "GET /signup/search?name=z HTTP/1.1" 200 70 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 11:07:34.009] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 11:07:34.014] [INFO] http - ::ffff:127.0.0.1 - - "GET /signup/search?name=h HTTP/1.1" 200 119 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 11:09:18.320] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 11:09:18.325] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 11:09:33.837] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 11:09:33.851] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 11:09:39.954] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 11:09:39.956] [WARN] http - undefined - - "GET /signup/search?name=h HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 11:09:58.205] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 11:09:58.215] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 11:10:00.644] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 11:10:00.648] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 11:10:03.830] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 11:10:03.834] [WARN] http - undefined - - "GET /signup/search?name=z HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 11:10:05.407] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 11:10:05.410] [INFO] http - ::ffff:127.0.0.1 - - "GET /signup/search?name= HTTP/1.1" 200 221 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 11:10:05.962] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 11:10:05.965] [WARN] http - undefined - - "GET /signup/search?name=h HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 11:10:15.362] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 11:10:15.365] [WARN] http - undefined - - "GET /signup/search?name=h HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 11:10:44.710] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 11:10:44.715] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 11:10:55.172] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 11:10:55.175] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 11:11:50.606] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 11:11:50.609] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 11:15:25.030] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 11:15:25.041] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 11:15:25.884] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 11:15:25.898] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 11:15:51.073] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 11:15:51.086] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 11:15:55.407] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 11:15:55.409] [WARN] http - undefined - - "GET /signup/search?name=z HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 11:17:05.763] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 11:17:05.771] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 11:17:25.650] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 11:17:25.653] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 11:17:37.431] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 11:17:37.436] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 11:18:55.989] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 11:18:55.992] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 11:19:26.893] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 11:19:26.896] [WARN] http - undefined - - "GET /signup/search?name=h HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 11:19:31.059] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 11:19:31.062] [WARN] http - undefined - - "GET /signup/search?name=h HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 11:20:20.104] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 11:20:20.107] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 11:20:49.916] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 11:20:49.923] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 11:20:53.962] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 11:20:53.969] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 11:21:04.372] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 11:21:04.375] [WARN] http - undefined - - "GET /signup/search?name=h HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 11:21:08.609] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 11:21:08.612] [WARN] http - undefined - - "GET /signup/search?name=h HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 11:23:49.776] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 11:23:49.781] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 11:24:09.682] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 11:24:09.687] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 11:24:14.968] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 11:24:14.969] [WARN] http - undefined - - "GET /signup/search?name=h HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 11:24:38.717] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 11:24:38.722] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 11:24:46.655] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 11:24:46.657] [WARN] http - undefined - - "GET /signup/search?name=h HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 11:24:49.582] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 11:24:49.585] [WARN] http - undefined - - "GET /signup/search?name=h HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 11:26:02.440] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 11:26:02.443] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 11:26:06.641] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 11:26:06.643] [WARN] http - undefined - - "GET /signup/search?name=h HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 11:26:33.500] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 11:26:33.505] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 11:26:44.670] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 11:26:44.672] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 11:26:51.865] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 11:26:51.867] [WARN] http - undefined - - "GET /signup/search?name=h HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 11:27:13.398] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 11:27:13.401] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 11:28:12.890] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 11:28:12.900] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 11:28:30.437] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 11:28:30.440] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 11:28:35.887] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 11:28:35.944] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 11:28:44.583] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 11:28:44.585] [WARN] http - undefined - - "GET /signup/search?name=h HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 11:29:37.578] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 11:29:37.584] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 11:29:45.098] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 11:29:45.100] [WARN] http - undefined - - "GET /signup/search?name=h HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 11:29:48.283] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 11:29:48.285] [WARN] http - undefined - - "GET /signup/search?name=h HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 11:29:50.506] [INFO] http - ::ffff:127.0.0.1 - - "POST /groups/create HTTP/1.1" 200 53 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 11:31:23.584] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 11:31:23.588] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 11:31:27.299] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 11:31:27.305] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 11:31:37.674] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 11:31:37.678] [WARN] http - undefined - - "GET /signup/search?name=h HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 11:31:39.842] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 11:31:39.845] [WARN] http - undefined - - "GET /signup/search?name=h HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 11:31:42.297] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { key: undefined },
  { object: { members: [Array] }, key: undefined } ] 'results'
[2019-02-25 11:31:42.337] [INFO] http - ::ffff:127.0.0.1 - - "POST /groups/create HTTP/1.1" 200 13 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 11:32:07.453] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 11:32:07.460] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 542 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 11:33:06.805] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 11:33:06.815] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 11:33:11.583] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 11:33:11.592] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 11:34:00.534] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 11:34:00.542] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 11:34:37.236] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 11:34:37.244] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 11:34:59.705] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 11:34:59.707] [WARN] http - undefined - - "GET /signup/search?name=h HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 11:35:02.934] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 11:35:02.937] [WARN] http - undefined - - "GET /signup/search?name=z HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 11:35:04.926] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { key: undefined },
  { object: { members: [Array] }, key: undefined } ] 'results'
[2019-02-25 11:35:04.932] [INFO] http - ::ffff:127.0.0.1 - - "POST /groups/create HTTP/1.1" 200 13 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 11:35:08.772] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 11:35:08.890] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 1131 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 11:35:49.324] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 11:35:49.337] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 11:35:52.002] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 11:35:52.022] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 11:36:12.181] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 11:36:12.184] [WARN] http - undefined - - "GET /signup/search?name=h HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 11:36:14.036] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { key: undefined },
  { object: { members: [Array] }, key: undefined } ] 'results'
[2019-02-25 11:36:14.041] [INFO] http - ::ffff:127.0.0.1 - - "POST /groups/create HTTP/1.1" 200 13 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 11:36:14.070] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 11:36:14.092] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 1384 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 11:36:32.623] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 11:36:32.626] [WARN] http - undefined - - "GET /signup/search?name=z HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 11:36:34.709] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { key: undefined },
  { object: { members: [Array] }, key: undefined } ] 'results'
[2019-02-25 11:36:34.712] [INFO] http - ::ffff:127.0.0.1 - - "POST /groups/create HTTP/1.1" 200 13 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 11:36:34.752] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 11:36:34.795] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 1992 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 11:36:43.836] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 11:36:43.841] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/detail?_id=5c7362c283b2c2f5139ebffc HTTP/1.1" 200 324 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 11:36:45.458] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 11:36:45.480] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 11:39:59.661] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 11:39:59.687] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 11:42:18.698] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 11:42:18.738] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 1392 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 11:42:33.891] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 11:42:33.982] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 11:43:48.591] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 11:43:48.620] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 11:43:51.915] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 11:43:51.982] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 11:44:03.407] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 11:44:03.419] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 11:47:14.570] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 11:47:14.588] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 11:49:03.704] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 11:49:03.752] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-02-25 11:49:08.827] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-02-25 11:49:08.885] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 10:18:32.457] [INFO] console - redis server connect success!
[2019-03-01 10:18:32.459] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-01 10:25:58.418] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 10:25:58.470] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 125 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 10:25:58.667] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 10:25:58.669] [INFO] console - will check 1551408958453 1551407158669
[2019-03-01 10:25:58.669] [INFO] console - will update 1551408958669 1551407158669
[2019-03-01 10:25:58.685] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 349 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 10:26:01.324] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 10:26:01.369] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 1988 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 10:26:07.612] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 10:26:07.623] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/detail?_id=5c749de259acefef3fdecb24 HTTP/1.1" 200 318 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 10:26:31.329] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 10:26:31.497] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 1988 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 10:26:45.146] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 10:26:45.171] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 10:26:52.988] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 10:26:53.011] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 10:26:57.707] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 10:26:57.736] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 10:29:18.577] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 10:29:18.600] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 10:29:20.707] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 10:29:20.740] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 10:29:39.525] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 10:29:39.545] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 10:29:48.407] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 10:29:48.444] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 10:30:59.989] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 10:31:00.008] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 10:31:00.782] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 10:31:00.806] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 10:31:19.681] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 10:31:19.715] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 10:37:10.096] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 10:37:10.125] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 10:38:31.815] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 10:38:31.878] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 10:43:51.080] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 10:43:51.109] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 10:44:56.761] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 10:44:56.778] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 10:45:06.341] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 10:45:06.367] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 10:45:10.906] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 10:45:10.933] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 10:45:25.785] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 10:45:25.796] [INFO] http - ::ffff:127.0.0.1 - - "GET /signup/search?name=z HTTP/1.1" 200 70 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 10:45:28.844] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 10:45:28.847] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/search?author=5c50094c99d8808eaeaf39b1&title=1 HTTP/1.1" 200 74 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 10:45:31.226] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: { posts: [Array] }, key: undefined },
  { object: { members: [Array] }, key: undefined } ] 'results'
[2019-03-01 10:45:31.285] [INFO] http - ::ffff:127.0.0.1 - - "POST /groups/create HTTP/1.1" 200 13 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 10:45:31.337] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 10:45:31.373] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 2568 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 10:48:02.542] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 10:48:02.575] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 10:49:00.213] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 10:49:00.239] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 10:50:21.785] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 10:50:21.819] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 10:50:25.775] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 10:50:25.984] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 10:52:53.218] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 10:52:53.360] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 2568 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 10:53:17.793] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 10:53:17.814] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 10:53:22.624] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 10:53:22.633] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/detail?_id=5c789ccba2ec2521a902b70d HTTP/1.1" 200 310 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 10:53:25.070] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 10:53:25.099] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 10:53:35.042] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 10:53:35.046] [INFO] http - ::ffff:127.0.0.1 - - "GET /signup/search?name=z HTTP/1.1" 200 70 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 10:53:36.877] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 10:53:36.880] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/search?author=5c50094c99d8808eaeaf39b1&title=z HTTP/1.1" 200 23 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 10:53:39.204] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 10:53:39.212] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/search?author=5c50094c99d8808eaeaf39b1&title= HTTP/1.1" 200 132 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 10:53:39.395] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 10:53:39.397] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/search?author=5c50094c99d8808eaeaf39b1&title=1 HTTP/1.1" 200 74 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 10:53:41.964] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: { posts: [Array] }, key: undefined },
  { object: { members: [Array] }, key: undefined } ] 'results'
[2019-03-01 10:53:41.969] [INFO] http - ::ffff:127.0.0.1 - - "POST /groups/create HTTP/1.1" 200 13 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 10:53:42.058] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 10:53:42.141] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 3142 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 10:54:44.305] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 10:54:44.445] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 10:55:00.179] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 10:55:00.209] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 10:55:49.474] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 10:55:49.507] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 10:55:56.659] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 10:55:56.663] [WARN] http - undefined - - "GET /signup/search?name=z HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 10:55:58.528] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 10:55:58.531] [WARN] http - undefined - - "GET /posts/search?author=5c50094c99d8808eaeaf39b1&title=z HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 10:56:03.492] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 10:56:03.495] [WARN] http - undefined - - "GET /posts/search?author=5c50094c99d8808eaeaf39b1&title= HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 10:56:05.800] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 10:56:05.802] [WARN] http - undefined - - "GET /posts/search?author=5c50094c99d8808eaeaf39b1&title=1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 10:56:08.395] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: { posts: [Array] }, key: undefined },
  { object: { members: [Array] }, key: undefined } ] 'results'
[2019-03-01 10:56:08.401] [INFO] http - ::ffff:127.0.0.1 - - "POST /groups/create HTTP/1.1" 200 13 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 10:56:08.456] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 10:56:08.522] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 3722 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 10:57:30.945] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 10:57:30.979] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 10:58:17.822] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 10:58:17.959] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 10:58:20.752] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 10:58:20.930] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 11:00:47.585] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 11:00:47.801] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 11:02:44.671] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 11:02:45.111] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 11:02:49.751] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 11:02:49.784] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 11:02:56.252] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 11:02:56.256] [INFO] http - ::ffff:127.0.0.1 - - "GET /signup/search?name=1 HTTP/1.1" 200 23 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 11:02:58.426] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 11:02:58.429] [INFO] http - ::ffff:127.0.0.1 - - "GET /signup/search?name= HTTP/1.1" 200 221 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 11:03:01.696] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 11:03:01.698] [WARN] http - undefined - - "GET /signup/search?name=z HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 11:03:04.626] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 11:03:04.629] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/search?author=5c50094c99d8808eaeaf39b1&title=2 HTTP/1.1" 200 23 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 11:03:05.571] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 11:03:05.573] [WARN] http - undefined - - "GET /posts/search?author=5c50094c99d8808eaeaf39b1&title= HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 11:03:05.825] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 11:03:05.828] [WARN] http - undefined - - "GET /posts/search?author=5c50094c99d8808eaeaf39b1&title=1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 11:03:08.146] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: { posts: [Array] }, key: undefined },
  { object: { members: [Array] }, key: undefined } ] 'results'
[2019-03-01 11:03:08.150] [INFO] http - ::ffff:127.0.0.1 - - "POST /groups/create HTTP/1.1" 200 13 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 11:03:08.201] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 11:03:08.254] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 4298 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 11:04:56.166] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 11:04:56.309] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 11:05:08.148] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 11:05:08.151] [WARN] http - undefined - - "GET /signup/search?name=z HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 11:05:10.517] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 11:05:10.519] [WARN] http - undefined - - "GET /posts/search?author=5c50094c99d8808eaeaf39b1&title=2 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 11:05:11.975] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 11:05:11.977] [WARN] http - undefined - - "GET /posts/search?author=5c50094c99d8808eaeaf39b1&title= HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 11:05:12.411] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 11:05:12.414] [WARN] http - undefined - - "GET /posts/search?author=5c50094c99d8808eaeaf39b1&title=1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 11:05:14.386] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: { posts: [Array] }, key: undefined },
  { object: { members: [Array] }, key: undefined } ] 'results'
[2019-03-01 11:05:14.390] [INFO] http - ::ffff:127.0.0.1 - - "POST /groups/create HTTP/1.1" 200 13 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 11:05:14.450] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 11:05:14.519] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 4878 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 11:05:52.701] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 11:05:52.735] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 11:06:55.458] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 11:06:55.490] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 11:06:57.392] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 11:06:57.435] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 11:07:04.225] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 11:07:04.229] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/detail?_id=5c78a16aa2ec2521a902b711 HTTP/1.1" 200 310 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 11:07:05.969] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 11:07:06.020] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 11:07:13.237] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 11:07:13.366] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 11:20:07.850] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 11:20:08.051] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 11:21:16.700] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 11:21:16.751] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 11:21:21.012] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 11:21:21.283] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 11:22:01.673] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 11:22:01.760] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 11:22:03.876] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 11:22:04.014] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 11:22:50.168] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 11:22:51.169] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 11:22:51.283] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 4878 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 11:23:06.011] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 11:23:06.091] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 11:23:28.528] [INFO] console - redis server connect success!
[2019-03-01 11:23:28.530] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-01 11:27:30.026] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 11:27:30.156] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 11:29:05.536] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 11:29:05.646] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 11:31:47.458] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 11:31:47.541] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 11:31:49.295] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 11:31:49.488] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 11:36:30.939] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 11:36:31.021] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 11:36:32.547] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 11:36:32.689] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 11:36:52.114] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 11:36:52.276] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 11:37:33.909] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 11:37:33.964] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 11:39:36.159] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 11:39:36.324] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 11:39:36.361] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 11:39:36.430] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 11:39:37.248] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 11:39:37.309] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 11:39:43.077] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 11:39:43.084] [INFO] http - ::ffff:127.0.0.1 - - "GET /signup/search?name=s HTTP/1.1" 200 119 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 11:39:43.112] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 11:39:43.119] [INFO] http - ::ffff:127.0.0.1 - - "GET /signup/search?name=sd HTTP/1.1" 200 23 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 11:39:43.274] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 11:39:43.280] [INFO] http - ::ffff:127.0.0.1 - - "GET /signup/search?name=sds HTTP/1.1" 200 23 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 11:39:43.326] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 11:39:43.328] [INFO] http - ::ffff:127.0.0.1 - - "GET /signup/search?name=sdsa HTTP/1.1" 200 23 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 11:39:43.391] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 11:39:43.395] [INFO] http - ::ffff:127.0.0.1 - - "GET /signup/search?name=sdsad HTTP/1.1" 200 23 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 11:40:33.912] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 11:40:33.981] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 11:40:35.356] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 11:40:35.564] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 11:48:01.682] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 11:48:01.815] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 11:48:22.279] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 11:48:22.340] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 13:51:35.218] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 13:51:35.421] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 13:52:07.219] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 13:52:07.396] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 13:52:11.789] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 13:52:12.062] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 13:53:56.950] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 13:53:57.116] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 13:53:58.304] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 13:53:58.311] [WARN] http - undefined - - "GET /groups/detail?_id=5c78a16aa2ec2521a902b711 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 13:53:59.622] [INFO] console - will check 1551408958669 1551419639622
[2019-03-01 13:53:59.633] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c514f235c10eaa2f3c041e4 HTTP/1.1" 200 71 "http://localhost:9000/project/detail" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 13:54:01.916] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 13:54:01.920] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 125 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 13:54:02.017] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 13:54:02.017] [INFO] console - will check 1551421441918 1551419642017
[2019-03-01 13:54:02.017] [INFO] console - will update 1551421442017 1551419642017
[2019-03-01 13:54:02.031] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 349 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 13:54:04.322] [INFO] console - will check 1551421442017 1551419644322
[2019-03-01 13:54:04.322] [INFO] console - will update 1551421444322 1551419644322
[2019-03-01 13:54:04.322] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 13:54:04.325] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c514de45c10eaa2f3c041e1 HTTP/1.1" 200 136 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 13:54:10.884] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 13:54:10.884] [INFO] console - will check 1551421444322 1551419650884
[2019-03-01 13:54:10.884] [INFO] console - will update 1551421450884 1551419650884
[2019-03-01 13:54:10.896] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 349 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 13:54:12.310] [INFO] console - will check 1551421450884 1551419652310
[2019-03-01 13:54:12.310] [INFO] console - will update 1551421452310 1551419652310
[2019-03-01 13:54:12.310] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 13:54:12.312] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c514de45c10eaa2f3c041e1 HTTP/1.1" 200 136 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 14:26:33.294] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 14:26:33.379] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 4878 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 14:26:37.371] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 14:26:37.659] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 14:26:48.765] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 14:26:48.770] [INFO] http - ::ffff:127.0.0.1 - - "GET /signup/search?name=w HTTP/1.1" 200 23 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 14:26:48.796] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 14:26:48.799] [INFO] http - ::ffff:127.0.0.1 - - "GET /signup/search?name=we HTTP/1.1" 200 23 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 14:26:49.738] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 14:26:49.744] [INFO] http - ::ffff:127.0.0.1 - - "GET /signup/search?name= HTTP/1.1" 200 221 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 14:26:51.438] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 14:26:51.441] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/search?author=5c50094c99d8808eaeaf39b1&title=1 HTTP/1.1" 200 74 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 14:26:53.346] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: { posts: [Array] }, key: undefined },
  { object: { members: [Array] }, key: undefined } ] 'results'
[2019-03-01 14:26:53.378] [INFO] http - ::ffff:127.0.0.1 - - "POST /groups/create HTTP/1.1" 200 13 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 14:26:53.423] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 14:26:53.490] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 5454 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 15:12:25.869] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 15:12:25.948] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-01 15:13:58.279] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-01 15:13:58.415] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 09:37:08.836] [INFO] console - redis server connect success!
[2019-03-05 09:37:08.837] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-05 09:40:43.202] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 09:40:43.243] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 125 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 09:40:43.359] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 09:40:43.362] [INFO] console - will check 1551751843229 1551750043362
[2019-03-05 09:40:43.362] [INFO] console - will update 1551751843362 1551750043362
[2019-03-05 09:40:43.391] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 349 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 13:35:09.277] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 13:35:09.279] [INFO] console - will check 1551751843362 1551764109279
[2019-03-05 13:35:09.289] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 71 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 13:40:05.582] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 13:40:05.598] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 125 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 13:40:05.787] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 13:40:05.788] [INFO] console - will check 1551766205596 1551764405788
[2019-03-05 13:40:05.788] [INFO] console - will update 1551766205788 1551764405788
[2019-03-05 13:40:05.799] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 349 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 13:40:08.843] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 13:40:08.964] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 5454 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 13:40:33.783] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 13:40:33.791] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/detail?_id=5c78d0ad82b7ac34add6ab22 HTTP/1.1" 200 308 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 13:40:35.226] [INFO] console - will check 1551766205788 1551764435226
[2019-03-05 13:40:35.226] [INFO] console - will update 1551766235226 1551764435226
[2019-03-05 13:40:35.226] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 13:40:35.229] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c514f235c10eaa2f3c041e4 HTTP/1.1" 200 100 "http://localhost:9000/project/detail" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 13:40:43.125] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: { content: '> sjndie' }, key: undefined } ] 'results'
[2019-03-05 13:40:43.144] [INFO] http - ::ffff:127.0.0.1 - - "POST /posts/update HTTP/1.1" 200 129 "http://localhost:9000/project/detail" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 13:40:45.036] [INFO] console - will check 1551766235226 1551764445036
[2019-03-05 13:40:45.036] [INFO] console - will update 1551766245036 1551764445036
[2019-03-05 13:40:45.037] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 13:40:45.039] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c514f235c10eaa2f3c041e4 HTTP/1.1" 200 104 "http://localhost:9000/project/detail" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 13:40:45.907] [INFO] console - will check 1551766245036 1551764445907
[2019-03-05 13:40:45.907] [INFO] console - will update 1551766245907 1551764445907
[2019-03-05 13:40:45.907] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 13:40:45.910] [WARN] http - undefined - - "GET /posts/getPost?id=5c514f235c10eaa2f3c041e4 HTTP/1.1" 304 - "http://localhost:9000/project/detail" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 13:40:46.613] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 13:40:46.662] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 13:41:09.943] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 13:41:09.944] [INFO] console - will check 1551766245907 1551764469944
[2019-03-05 13:41:09.944] [INFO] console - will update 1551766269944 1551764469944
[2019-03-05 13:41:09.948] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 13:41:12.915] [INFO] console - will check 1551766269944 1551764472915
[2019-03-05 13:41:12.916] [INFO] console - will update 1551766272915 1551764472915
[2019-03-05 13:41:12.916] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 13:41:12.919] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c514de45c10eaa2f3c041e1 HTTP/1.1" 200 136 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 13:41:21.204] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 13:41:21.264] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 13:42:08.262] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 13:42:08.269] [WARN] http - undefined - - "GET /groups/detail?_id=5c78d0ad82b7ac34add6ab22 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 13:42:09.766] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 13:42:09.820] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 13:47:34.707] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 13:47:34.708] [INFO] console - will check 1551766272915 1551764854708
[2019-03-05 13:47:34.708] [INFO] console - will update 1551766654708 1551764854708
[2019-03-05 13:47:34.712] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 13:47:36.815] [INFO] console - will check 1551766654708 1551764856815
[2019-03-05 13:47:36.816] [INFO] console - will update 1551766656815 1551764856815
[2019-03-05 13:47:36.816] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 13:47:36.824] [WARN] http - undefined - - "GET /posts/getPost?id=5c514de45c10eaa2f3c041e1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 13:49:11.931] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 13:49:11.932] [INFO] console - will check 1551766656815 1551764951932
[2019-03-05 13:49:11.932] [INFO] console - will update 1551766751932 1551764951932
[2019-03-05 13:49:11.945] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 13:49:12.134] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 13:49:12.134] [INFO] console - will check 1551766751932 1551764952134
[2019-03-05 13:49:12.134] [INFO] console - will update 1551766752134 1551764952134
[2019-03-05 13:49:12.136] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 13:49:12.279] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 13:49:12.280] [INFO] console - will check 1551766752134 1551764952280
[2019-03-05 13:49:12.280] [INFO] console - will update 1551766752280 1551764952280
[2019-03-05 13:49:12.295] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 13:49:14.703] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 13:49:14.757] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 13:49:15.885] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 13:49:15.890] [WARN] http - undefined - - "GET /groups/detail?_id=5c78d0ad82b7ac34add6ab22 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 13:49:17.548] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 13:49:17.603] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 13:52:16.845] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 13:52:16.918] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 13:53:52.385] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 13:53:52.390] [WARN] http - undefined - - "GET /groups/detail?_id=5c78d0ad82b7ac34add6ab22 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 13:53:53.810] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 13:53:53.865] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 13:54:56.381] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 13:54:56.450] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 13:55:14.644] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 13:55:14.814] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 13:55:15.554] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 13:55:15.678] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 13:55:35.569] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 13:55:35.636] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 13:55:38.385] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 13:55:38.389] [WARN] http - undefined - - "GET /groups/detail?_id=5c78d0ad82b7ac34add6ab22 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 13:55:39.703] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 13:55:39.749] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 13:56:09.088] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 13:56:09.093] [WARN] http - undefined - - "GET /groups/detail?_id=5c78d0ad82b7ac34add6ab22 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 13:56:10.576] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 13:56:10.649] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 13:57:31.329] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 13:57:31.385] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 13:57:38.886] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 13:57:38.946] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 14:11:02.357] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 14:11:02.420] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 14:12:18.469] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 14:12:18.728] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 14:17:06.243] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 14:17:06.277] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 14:17:06.305] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 14:17:06.392] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 14:17:06.396] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 14:17:06.428] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 14:17:45.216] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 14:17:45.250] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 14:22:32.074] [INFO] console - redis server connect success!
[2019-03-05 14:22:32.076] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-05 14:22:36.683] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 14:22:36.770] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 5454 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 14:22:43.393] [INFO] console - will check 1551766752280 1551766963393
[2019-03-05 14:22:43.396] [INFO] http - ::ffff:127.0.0.1 - - "POST /groups/remove HTTP/1.1" 200 71 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 14:22:45.381] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 14:22:45.387] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 125 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 14:22:45.503] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 14:22:45.504] [INFO] console - will check 1551768765384 1551766965504
[2019-03-05 14:22:45.505] [INFO] console - will update 1551768765504 1551766965504
[2019-03-05 14:22:45.509] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 14:22:48.461] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 14:22:48.523] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 14:22:54.916] [INFO] console - will check 1551768765504 1551766974916
[2019-03-05 14:22:54.916] [INFO] console - will update 1551768774916 1551766974916
[2019-03-05 14:22:54.917] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 14:22:54.924] [INFO] http - ::ffff:127.0.0.1 - - "POST /groups/remove HTTP/1.1" 200 46 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 14:22:54.934] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 14:22:55.007] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 4878 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 14:23:08.127] [INFO] console - will check 1551768774916 1551766988127
[2019-03-05 14:23:08.128] [INFO] console - will update 1551768788127 1551766988127
[2019-03-05 14:23:08.128] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 14:23:08.132] [INFO] http - ::ffff:127.0.0.1 - - "POST /groups/remove HTTP/1.1" 200 46 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 14:23:08.144] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 14:23:08.226] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 4298 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 14:23:11.190] [INFO] console - will check 1551768788127 1551766991190
[2019-03-05 14:23:11.190] [INFO] console - will update 1551768791190 1551766991190
[2019-03-05 14:23:11.190] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 14:23:11.196] [INFO] http - ::ffff:127.0.0.1 - - "POST /groups/remove HTTP/1.1" 200 46 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 14:23:11.214] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 14:23:11.296] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 3722 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 14:23:14.095] [INFO] console - will check 1551768791190 1551766994095
[2019-03-05 14:23:14.095] [INFO] console - will update 1551768794095 1551766994095
[2019-03-05 14:23:14.095] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 14:23:14.098] [INFO] http - ::ffff:127.0.0.1 - - "POST /groups/remove HTTP/1.1" 200 46 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 14:23:14.119] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 14:23:14.212] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 3142 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 14:23:17.197] [INFO] console - will check 1551768794095 1551766997197
[2019-03-05 14:23:17.198] [INFO] console - will update 1551768797197 1551766997197
[2019-03-05 14:23:17.199] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 14:23:17.201] [INFO] http - ::ffff:127.0.0.1 - - "POST /groups/remove HTTP/1.1" 200 46 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 14:23:17.214] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 14:23:17.297] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 2568 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 14:23:19.790] [INFO] console - will check 1551768797197 1551766999790
[2019-03-05 14:23:19.791] [INFO] console - will update 1551768799790 1551766999790
[2019-03-05 14:23:19.791] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 14:23:19.793] [INFO] http - ::ffff:127.0.0.1 - - "POST /groups/remove HTTP/1.1" 200 46 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 14:23:19.802] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 14:23:19.849] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 1988 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 14:24:46.549] [INFO] console - will check 1551768799790 1551767086549
[2019-03-05 14:24:46.549] [INFO] console - will update 1551768886549 1551767086549
[2019-03-05 14:24:46.550] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 14:24:46.558] [INFO] http - ::ffff:127.0.0.1 - - "POST /groups/remove HTTP/1.1" 200 46 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 14:24:46.569] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 14:24:46.587] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 1392 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 14:24:54.853] [INFO] console - will check 1551768886549 1551767094853
[2019-03-05 14:24:54.853] [INFO] console - will update 1551768894853 1551767094853
[2019-03-05 14:24:54.853] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 14:24:54.860] [INFO] http - ::ffff:127.0.0.1 - - "POST /groups/remove HTTP/1.1" 200 46 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 14:24:54.873] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 14:24:54.883] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 803 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 14:25:00.151] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 14:25:00.157] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 14:36:18.985] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 14:36:19.005] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 14:37:19.014] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 14:37:19.031] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 14:37:44.744] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 14:37:44.753] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 14:38:11.708] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 14:38:11.717] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 14:47:39.708] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 14:47:39.751] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 14:47:39.836] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 14:47:39.848] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 14:47:46.318] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 14:47:46.332] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 15:44:58.117] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 15:44:58.145] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 15:45:50.444] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 15:45:50.456] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 15:45:51.200] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 15:45:51.209] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 15:46:36.439] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 15:46:36.452] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 15:46:37.205] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 15:46:37.216] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 15:46:39.621] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 15:46:39.633] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 15:47:31.290] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 15:47:31.298] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 15:47:31.988] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 15:47:31.994] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 15:48:47.613] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 15:48:47.631] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 15:48:48.373] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 15:48:48.379] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 15:49:12.231] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 15:49:12.236] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 15:50:29.028] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 15:50:29.046] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 15:50:55.424] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 15:50:55.436] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 15:50:56.148] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 15:50:56.160] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 15:51:18.866] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 15:51:18.874] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 15:51:19.615] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 15:51:19.641] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 15:51:38.328] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 15:51:38.350] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 15:51:39.132] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 15:51:39.146] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 15:52:26.065] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 15:52:26.075] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 15:52:26.799] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 15:52:26.805] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 15:53:59.443] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 15:53:59.457] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 15:54:33.834] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 15:54:33.842] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 15:54:42.407] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 15:54:42.416] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 15:55:19.965] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 15:55:19.981] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 15:55:23.534] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 15:55:23.541] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 15:55:46.031] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 15:55:46.045] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 15:55:47.204] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 15:55:47.216] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 15:56:25.079] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 15:56:25.234] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 15:56:25.997] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 15:56:26.005] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 16:06:18.419] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 16:06:18.439] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 16:06:24.203] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 16:06:24.213] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 16:06:57.857] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 16:06:57.874] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 16:06:57.954] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 16:06:57.971] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 16:07:01.851] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 16:07:01.856] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 16:08:50.775] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 16:08:50.783] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 16:09:04.987] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 16:09:04.996] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 16:09:05.868] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 16:09:05.874] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 16:17:12.676] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 16:17:12.696] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 16:17:12.731] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 16:17:12.739] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 16:17:24.533] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 16:17:24.538] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 16:18:35.575] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 16:18:35.739] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 16:19:22.910] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 16:19:23.056] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 16:19:54.946] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 16:19:55.067] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 16:20:28.686] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 16:20:28.702] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 16:20:36.412] [INFO] console - will check 1551768894853 1551774036412
[2019-03-05 16:20:36.421] [INFO] http - ::ffff:127.0.0.1 - - "POST /groups/remove HTTP/1.1" 200 71 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 16:21:28.790] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 16:21:28.800] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 125 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 16:21:28.941] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 16:21:28.945] [INFO] console - will check 1551775888794 1551774088945
[2019-03-05 16:21:28.945] [INFO] console - will update 1551775888945 1551774088945
[2019-03-05 16:21:28.950] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 16:21:30.751] [INFO] console - will check 1551775888945 1551774090751
[2019-03-05 16:21:30.752] [INFO] console - will update 1551775890751 1551774090751
[2019-03-05 16:21:30.752] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 16:21:30.758] [WARN] http - undefined - - "GET /posts/getPost?id=5c514f235c10eaa2f3c041e4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 16:21:32.719] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 16:21:32.729] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 16:21:53.908] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 16:21:53.968] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 16:22:54.705] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 16:22:54.709] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 16:24:26.741] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 16:24:26.748] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 16:24:44.465] [INFO] console - will check 1551775890751 1551774284465
[2019-03-05 16:24:44.466] [INFO] console - will update 1551776084465 1551774284465
[2019-03-05 16:24:44.467] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 16:24:44.482] [INFO] http - ::ffff:127.0.0.1 - - "POST /groups/remove HTTP/1.1" 200 46 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 16:24:44.500] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 16:24:44.517] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 542 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 16:25:42.998] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 16:25:43.020] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 16:27:02.308] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 16:27:02.321] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 16:27:13.463] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 16:27:13.472] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 16:27:35.668] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 16:27:35.826] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 542 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 16:28:27.510] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 16:28:27.516] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 16:29:06.252] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 16:29:06.265] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 16:29:34.458] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 16:29:34.464] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 16:29:44.646] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 16:29:44.652] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 16:29:51.889] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 16:29:51.898] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 16:30:12.790] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 16:30:12.797] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 16:31:43.316] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 16:31:43.322] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 16:31:54.857] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 16:31:54.863] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 542 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 16:32:11.612] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 16:32:11.617] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 16:32:52.971] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 16:32:53.003] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 16:33:50.500] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 16:33:50.644] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 16:33:59.967] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 16:33:59.972] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 16:34:04.967] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 16:34:04.973] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 16:34:33.317] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 16:34:33.322] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 16:34:57.288] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 16:34:57.300] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 16:35:23.499] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 16:35:23.505] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 16:35:53.851] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 16:35:53.857] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 16:36:16.891] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 16:36:16.934] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 16:36:20.531] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 16:36:20.539] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 16:36:54.379] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 16:36:54.387] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 16:36:57.678] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 16:36:57.684] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 16:37:27.810] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 16:37:27.817] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 16:37:28.663] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 16:37:28.668] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 16:37:44.272] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 16:37:44.280] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 16:38:01.357] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 16:38:01.364] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 16:38:27.686] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 16:38:27.692] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 16:39:03.006] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 16:39:03.012] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 16:39:11.396] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 16:39:11.402] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 16:39:38.097] [INFO] console - redis server connect success!
[2019-03-05 16:39:38.099] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-05 16:41:18.824] [INFO] console - redis server connect success!
[2019-03-05 16:41:18.826] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-05 16:41:25.254] [INFO] console - redis server connect success!
[2019-03-05 16:41:25.255] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-05 16:41:31.723] [INFO] console - redis server connect success!
[2019-03-05 16:41:31.725] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-05 16:41:41.795] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 16:41:41.820] [INFO] http - ::ffff:127.0.0.1 - - "POST /groups/rename HTTP/1.1" 200 49 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 16:41:41.837] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 16:41:41.859] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 545 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 16:43:14.380] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 16:43:14.415] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 16:43:18.309] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 16:43:18.323] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 17:14:52.453] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 17:14:52.473] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 125 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 17:14:52.573] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 17:14:52.578] [INFO] console - will check 1551779092465 1551777292578
[2019-03-05 17:14:52.578] [INFO] console - will update 1551779092578 1551777292578
[2019-03-05 17:14:52.586] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 349 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 17:14:55.810] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 17:14:55.823] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 17:15:14.009] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 17:15:14.012] [INFO] http - ::ffff:127.0.0.1 - - "POST /groups/rename HTTP/1.1" 200 49 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 17:15:14.043] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 17:15:14.056] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 542 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:09:59.235] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 19:09:59.267] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:23:44.732] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 19:23:44.778] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:25:40.762] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 19:25:40.771] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:25:56.900] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 19:25:56.906] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:27:23.798] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 19:27:23.804] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:39:57.233] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 19:39:57.236] [INFO] console - will check 1551779092578 1551785997236
[2019-03-05 19:39:57.249] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 71 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:39:59.373] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 19:39:59.385] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 125 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:39:59.485] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 19:39:59.485] [INFO] console - will check 1551787799383 1551785999485
[2019-03-05 19:39:59.485] [INFO] console - will update 1551787799485 1551785999485
[2019-03-05 19:39:59.491] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 349 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:40:02.051] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 19:40:02.051] [INFO] console - will check 1551787799485 1551786002051
[2019-03-05 19:40:02.052] [INFO] console - will update 1551787802051 1551786002051
[2019-03-05 19:40:02.057] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:40:12.301] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 19:40:12.310] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:50:03.227] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 19:50:03.228] [INFO] console - will check 1551787802051 1551786603228
[2019-03-05 19:50:03.228] [INFO] console - will update 1551788403228 1551786603228
[2019-03-05 19:50:03.236] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:50:05.005] [INFO] console - will check 1551788403228 1551786605005
[2019-03-05 19:50:05.006] [INFO] console - will update 1551788405005 1551786605005
[2019-03-05 19:50:05.006] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 19:50:05.010] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c514f235c10eaa2f3c041e4 HTTP/1.1" 200 104 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:50:06.892] [INFO] console - will check 1551788405005 1551786606892
[2019-03-05 19:50:06.892] [INFO] console - will update 1551788406892 1551786606892
[2019-03-05 19:50:06.893] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 19:50:06.895] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c514de45c10eaa2f3c041e1 HTTP/1.1" 200 136 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:50:12.314] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { key: undefined } ] 'results'
[2019-03-05 19:50:12.333] [INFO] http - ::ffff:127.0.0.1 - - "POST /posts/update HTTP/1.1" 200 129 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:50:12.357] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 19:50:12.358] [INFO] console - will check 1551788406892 1551786612358
[2019-03-05 19:50:12.359] [INFO] console - will update 1551788412358 1551786612358
[2019-03-05 19:50:12.363] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:50:14.656] [INFO] console - will check 1551788412358 1551786614656
[2019-03-05 19:50:14.656] [INFO] console - will update 1551788414656 1551786614656
[2019-03-05 19:50:14.657] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 19:50:14.659] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c514de45c10eaa2f3c041e1 HTTP/1.1" 200 104 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:50:15.484] [INFO] console - will check 1551788414656 1551786615484
[2019-03-05 19:50:15.484] [INFO] console - will update 1551788415484 1551786615484
[2019-03-05 19:50:15.485] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 19:50:15.488] [WARN] http - undefined - - "GET /posts/getPost?id=5c514f235c10eaa2f3c041e4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:50:16.041] [INFO] console - will check 1551788415484 1551786616041
[2019-03-05 19:50:16.042] [INFO] console - will update 1551788416041 1551786616041
[2019-03-05 19:50:16.042] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 19:50:16.046] [WARN] http - undefined - - "GET /posts/getPost?id=5c514de45c10eaa2f3c041e1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:50:18.183] [INFO] console - will check 1551788416041 1551786618183
[2019-03-05 19:50:18.183] [INFO] console - will update 1551788418183 1551786618183
[2019-03-05 19:50:18.184] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 19:50:18.186] [WARN] http - undefined - - "GET /posts/getPost?id=5c514de45c10eaa2f3c041e1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:50:22.054] [INFO] console - will check 1551788418183 1551786622054
[2019-03-05 19:50:22.054] [INFO] console - will update 1551788422054 1551786622054
[2019-03-05 19:50:22.054] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 19:50:22.057] [WARN] http - undefined - - "GET /posts/getPost?id=5c514f235c10eaa2f3c041e4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:50:23.223] [INFO] console - will check 1551788422054 1551786623223
[2019-03-05 19:50:23.223] [INFO] console - will update 1551788423223 1551786623223
[2019-03-05 19:50:23.224] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 19:50:23.229] [WARN] http - undefined - - "GET /posts/getPost?id=5c514de45c10eaa2f3c041e1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:50:24.752] [INFO] console - will check 1551788423223 1551786624752
[2019-03-05 19:50:24.752] [INFO] console - will update 1551788424752 1551786624752
[2019-03-05 19:50:24.752] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 19:50:24.758] [WARN] http - undefined - - "GET /posts/getPost?id=5c514de45c10eaa2f3c041e1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:50:25.857] [INFO] console - will check 1551788424752 1551786625857
[2019-03-05 19:50:25.858] [INFO] console - will update 1551788425857 1551786625857
[2019-03-05 19:50:25.858] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 19:50:25.860] [WARN] http - undefined - - "GET /posts/getPost?id=5c514de45c10eaa2f3c041e1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:50:27.315] [INFO] console - will check 1551788425857 1551786627315
[2019-03-05 19:50:27.316] [INFO] console - will update 1551788427315 1551786627315
[2019-03-05 19:50:27.316] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 19:50:27.318] [WARN] http - undefined - - "GET /posts/getPost?id=5c514f235c10eaa2f3c041e4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:50:30.381] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { key: undefined } ] 'results'
[2019-03-05 19:50:30.385] [INFO] http - ::ffff:127.0.0.1 - - "POST /posts/update HTTP/1.1" 200 123 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:50:30.411] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 19:50:30.412] [INFO] console - will check 1551788427315 1551786630412
[2019-03-05 19:50:30.412] [INFO] console - will update 1551788430412 1551786630412
[2019-03-05 19:50:30.422] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:50:31.383] [INFO] console - will check 1551788430412 1551786631383
[2019-03-05 19:50:31.383] [INFO] console - will update 1551788431383 1551786631383
[2019-03-05 19:50:31.384] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 19:50:31.388] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c514f235c10eaa2f3c041e4 HTTP/1.1" 200 98 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:50:32.135] [INFO] console - will check 1551788431383 1551786632135
[2019-03-05 19:50:32.135] [INFO] console - will update 1551788432135 1551786632135
[2019-03-05 19:50:32.135] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 19:50:32.138] [WARN] http - undefined - - "GET /posts/getPost?id=5c514de45c10eaa2f3c041e1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:50:35.039] [INFO] console - will check 1551788432135 1551786635039
[2019-03-05 19:50:35.040] [INFO] console - will update 1551788435039 1551786635039
[2019-03-05 19:50:35.040] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 19:50:35.043] [WARN] http - undefined - - "GET /posts/getPost?id=5c514f235c10eaa2f3c041e4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:50:37.450] [INFO] console - will check 1551788435039 1551786637450
[2019-03-05 19:50:37.450] [INFO] console - will update 1551788437450 1551786637450
[2019-03-05 19:50:37.450] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 19:50:37.456] [WARN] http - undefined - - "GET /posts/getPost?id=5c514f235c10eaa2f3c041e4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:50:37.943] [INFO] console - will check 1551788437450 1551786637943
[2019-03-05 19:50:37.943] [INFO] console - will update 1551788437943 1551786637943
[2019-03-05 19:50:37.943] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 19:50:37.945] [WARN] http - undefined - - "GET /posts/getPost?id=5c514de45c10eaa2f3c041e1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:50:42.604] [INFO] console - will check 1551788437943 1551786642604
[2019-03-05 19:50:42.606] [INFO] console - will update 1551788442604 1551786642604
[2019-03-05 19:50:42.607] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 19:50:42.620] [INFO] http - ::ffff:127.0.0.1 - - "POST /posts/remove HTTP/1.1" 200 46 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:50:42.643] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 19:50:42.644] [INFO] console - will check 1551788442604 1551786642644
[2019-03-05 19:50:42.644] [INFO] console - will update 1551788442644 1551786642644
[2019-03-05 19:50:42.647] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 187 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:50:43.501] [INFO] console - will check 1551788442644 1551786643501
[2019-03-05 19:50:43.502] [INFO] console - will update 1551788443501 1551786643501
[2019-03-05 19:50:43.502] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 19:50:43.504] [WARN] http - undefined - - "GET /posts/getPost?id=5c514f235c10eaa2f3c041e4 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:50:46.251] [INFO] console - will check 1551788443501 1551786646251
[2019-03-05 19:50:46.251] [INFO] console - will update 1551788446251 1551786646251
[2019-03-05 19:50:46.252] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 19:50:46.257] [INFO] http - ::ffff:127.0.0.1 - - "POST /posts/remove HTTP/1.1" 200 46 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:50:46.290] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 19:50:46.290] [INFO] console - will check 1551788446251 1551786646290
[2019-03-05 19:50:46.291] [INFO] console - will update 1551788446290 1551786646290
[2019-03-05 19:50:46.294] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 32 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:50:51.398] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 19:50:51.398] [INFO] console - will check 1551788446290 1551786651398
[2019-03-05 19:50:51.399] [INFO] console - will update 1551788451398 1551786651398
[2019-03-05 19:50:51.400] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:51:19.095] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: { content: '> test 123\n\n# sfdbfs\n\n## dfbss\n### dbfdsfsf' },
    key: undefined } ] 'results'
[2019-03-05 19:51:19.153] [INFO] http - ::ffff:127.0.0.1 - - "POST /posts/create HTTP/1.1" 200 13 "http://localhost:9000/document/new" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:51:20.117] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 19:51:20.117] [INFO] console - will check 1551788451398 1551786680117
[2019-03-05 19:51:20.117] [INFO] console - will update 1551788480117 1551786680117
[2019-03-05 19:51:20.120] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 186 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:51:21.238] [INFO] console - will check 1551788480117 1551786681238
[2019-03-05 19:51:21.239] [INFO] console - will update 1551788481238 1551786681238
[2019-03-05 19:51:21.239] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 19:51:21.241] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c7e62b74018ef371601e302 HTTP/1.1" 200 143 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:52:14.472] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { key: undefined } ] 'results'
[2019-03-05 19:52:14.479] [INFO] http - ::ffff:127.0.0.1 - - "POST /posts/update HTTP/1.1" 200 123 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:52:14.510] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 19:52:14.511] [INFO] console - will check 1551788481238 1551786734511
[2019-03-05 19:52:14.511] [INFO] console - will update 1551788534511 1551786734511
[2019-03-05 19:52:14.514] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 187 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:52:15.597] [INFO] console - will check 1551788534511 1551786735597
[2019-03-05 19:52:15.597] [INFO] console - will update 1551788535597 1551786735597
[2019-03-05 19:52:15.598] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 19:52:15.600] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c7e62b74018ef371601e302 HTTP/1.1" 200 98 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:52:16.175] [INFO] console - will check 1551788535597 1551786736175
[2019-03-05 19:52:16.175] [INFO] console - will update 1551788536175 1551786736175
[2019-03-05 19:52:16.175] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 19:52:16.177] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e62b74018ef371601e302 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:52:16.456] [INFO] console - will check 1551788536175 1551786736456
[2019-03-05 19:52:16.457] [INFO] console - will update 1551788536456 1551786736456
[2019-03-05 19:52:16.457] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 19:52:16.460] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e62b74018ef371601e302 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:53:36.000] [INFO] console - will check 1551788536456 1551786816000
[2019-03-05 19:53:36.002] [INFO] console - will update 1551788616000 1551786816000
[2019-03-05 19:53:36.002] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 19:53:36.007] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e62b74018ef371601e302 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:53:36.075] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 19:53:36.075] [INFO] console - will check 1551788616000 1551786816075
[2019-03-05 19:53:36.076] [INFO] console - will update 1551788616075 1551786816075
[2019-03-05 19:53:36.085] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:53:42.261] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 19:53:42.262] [INFO] console - will check 1551788616075 1551786822262
[2019-03-05 19:53:42.263] [INFO] console - will update 1551788622262 1551786822262
[2019-03-05 19:53:42.284] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:53:45.233] [INFO] console - will check 1551788622262 1551786825233
[2019-03-05 19:53:45.233] [INFO] console - will update 1551788625233 1551786825233
[2019-03-05 19:53:45.233] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 19:53:45.236] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e62b74018ef371601e302 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:53:49.630] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 19:53:49.630] [INFO] console - will check 1551788625233 1551786829630
[2019-03-05 19:53:49.630] [INFO] console - will update 1551788629630 1551786829630
[2019-03-05 19:53:49.633] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:53:51.075] [INFO] console - will check 1551788629630 1551786831075
[2019-03-05 19:53:51.076] [INFO] console - will update 1551788631075 1551786831075
[2019-03-05 19:53:51.076] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 19:53:51.078] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e62b74018ef371601e302 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:53:53.510] [INFO] console - will check 1551788631075 1551786833510
[2019-03-05 19:53:53.511] [INFO] console - will update 1551788633510 1551786833510
[2019-03-05 19:53:53.511] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 19:53:53.513] [INFO] http - ::ffff:127.0.0.1 - - "POST /posts/remove HTTP/1.1" 200 46 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:53:53.526] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 19:53:53.527] [INFO] console - will check 1551788633510 1551786833527
[2019-03-05 19:53:53.527] [INFO] console - will update 1551788633527 1551786833527
[2019-03-05 19:53:53.529] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 32 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:54:06.365] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: { content: '> skdnsdf\n\n# djfbd' }, key: undefined } ] 'results'
[2019-03-05 19:54:06.369] [INFO] http - ::ffff:127.0.0.1 - - "POST /posts/create HTTP/1.1" 200 13 "http://localhost:9000/document/new" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:54:08.064] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 19:54:08.064] [INFO] console - will check 1551788633527 1551786848064
[2019-03-05 19:54:08.064] [INFO] console - will update 1551788648064 1551786848064
[2019-03-05 19:54:08.068] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 187 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:54:10.536] [INFO] console - will check 1551788648064 1551786850536
[2019-03-05 19:54:10.536] [INFO] console - will update 1551788650536 1551786850536
[2019-03-05 19:54:10.537] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 19:54:10.539] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c7e635e4018ef371601e303 HTTP/1.1" 200 116 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:54:22.500] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 19:54:22.500] [INFO] console - will check 1551788650536 1551786862500
[2019-03-05 19:54:22.500] [INFO] console - will update 1551788662500 1551786862500
[2019-03-05 19:54:22.503] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:54:24.648] [INFO] console - will check 1551788662500 1551786864648
[2019-03-05 19:54:24.648] [INFO] console - will update 1551788664648 1551786864648
[2019-03-05 19:54:24.650] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 19:54:24.653] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e635e4018ef371601e303 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:54:42.449] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 19:54:42.450] [INFO] console - will check 1551788664648 1551786882450
[2019-03-05 19:54:42.450] [INFO] console - will update 1551788682450 1551786882450
[2019-03-05 19:54:42.460] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:54:46.267] [INFO] console - will check 1551788682450 1551786886267
[2019-03-05 19:54:46.267] [INFO] console - will update 1551788686267 1551786886267
[2019-03-05 19:54:46.267] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 19:54:46.270] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e635e4018ef371601e303 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:55:27.419] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 19:55:27.419] [INFO] console - will check 1551788686267 1551786927419
[2019-03-05 19:55:27.419] [INFO] console - will update 1551788727419 1551786927419
[2019-03-05 19:55:27.422] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:55:30.139] [INFO] console - will check 1551788727419 1551786930139
[2019-03-05 19:55:30.141] [INFO] console - will update 1551788730139 1551786930139
[2019-03-05 19:55:30.141] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 19:55:30.144] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e635e4018ef371601e303 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:55:32.753] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: { content: '> skdnsdf\n\n# djfbd' }, key: undefined } ] 'results'
[2019-03-05 19:55:32.757] [INFO] http - ::ffff:127.0.0.1 - - "POST /posts/update HTTP/1.1" 200 141 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:55:32.783] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 19:55:32.783] [INFO] console - will check 1551788730139 1551786932783
[2019-03-05 19:55:32.783] [INFO] console - will update 1551788732783 1551786932783
[2019-03-05 19:55:32.787] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:55:38.564] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: { content: '' }, key: undefined } ] 'results'
[2019-03-05 19:55:38.567] [INFO] http - ::ffff:127.0.0.1 - - "POST /posts/update HTTP/1.1" 200 121 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:55:38.588] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 19:55:38.589] [INFO] console - will check 1551788732783 1551786938589
[2019-03-05 19:55:38.595] [INFO] console - will update 1551788738589 1551786938589
[2019-03-05 19:55:38.599] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:55:39.795] [INFO] console - will check 1551788738589 1551786939795
[2019-03-05 19:55:39.795] [INFO] console - will update 1551788739795 1551786939795
[2019-03-05 19:55:39.795] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 19:55:39.798] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c7e635e4018ef371601e303 HTTP/1.1" 200 96 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:55:40.762] [INFO] console - will check 1551788739795 1551786940762
[2019-03-05 19:55:40.763] [INFO] console - will update 1551788740762 1551786940762
[2019-03-05 19:55:40.763] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 19:55:40.765] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e635e4018ef371601e303 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:55:41.029] [INFO] console - will check 1551788740762 1551786941029
[2019-03-05 19:55:41.029] [INFO] console - will update 1551788741029 1551786941029
[2019-03-05 19:55:41.029] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 19:55:41.031] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e635e4018ef371601e303 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:55:43.999] [INFO] console - will check 1551788741029 1551786943999
[2019-03-05 19:55:43.999] [INFO] console - will update 1551788743999 1551786943999
[2019-03-05 19:55:43.999] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 19:55:44.020] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e635e4018ef371601e303 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:55:51.294] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 19:55:51.295] [INFO] console - will check 1551788743999 1551786951295
[2019-03-05 19:55:51.295] [INFO] console - will update 1551788751295 1551786951295
[2019-03-05 19:55:51.303] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:56:17.210] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 19:56:17.210] [INFO] console - will check 1551788751295 1551786977210
[2019-03-05 19:56:17.211] [INFO] console - will update 1551788777210 1551786977210
[2019-03-05 19:56:17.983] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 19:56:17.983] [INFO] console - will check 1551788777210 1551786977983
[2019-03-05 19:56:17.983] [INFO] console - will update 1551788777983 1551786977983
[2019-03-05 19:56:17.987] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 187 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:56:44.405] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 19:56:44.407] [INFO] console - will check 1551788777983 1551787004406
[2019-03-05 19:56:44.407] [INFO] console - will update 1551788804406 1551787004406
[2019-03-05 19:56:44.410] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:56:45.098] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 19:56:45.098] [INFO] console - will check 1551788804406 1551787005098
[2019-03-05 19:56:45.098] [INFO] console - will update 1551788805098 1551787005098
[2019-03-05 19:56:45.101] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:56:47.029] [INFO] console - will check 1551788805098 1551787007029
[2019-03-05 19:56:47.029] [INFO] console - will update 1551788807029 1551787007029
[2019-03-05 19:56:47.030] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 19:56:47.032] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e635e4018ef371601e303 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:56:50.063] [INFO] console - will check 1551788807029 1551787010063
[2019-03-05 19:56:50.063] [INFO] console - will update 1551788810063 1551787010063
[2019-03-05 19:56:50.063] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 19:56:50.065] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e635e4018ef371601e303 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:56:55.892] [INFO] console - will check 1551788810063 1551787015892
[2019-03-05 19:56:55.892] [INFO] console - will update 1551788815892 1551787015892
[2019-03-05 19:56:55.893] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 19:56:55.895] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e635e4018ef371601e303 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:57:02.825] [INFO] console - will check 1551788815892 1551787022825
[2019-03-05 19:57:02.826] [INFO] console - will update 1551788822825 1551787022825
[2019-03-05 19:57:02.829] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 19:57:02.846] [INFO] http - ::ffff:127.0.0.1 - - "POST /posts/remove HTTP/1.1" 200 46 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:57:02.869] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 19:57:02.870] [INFO] console - will check 1551788822825 1551787022870
[2019-03-05 19:57:02.870] [INFO] console - will update 1551788822870 1551787022870
[2019-03-05 19:57:02.872] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 32 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:57:06.143] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 19:57:06.144] [INFO] console - will check 1551788822870 1551787026144
[2019-03-05 19:57:06.144] [INFO] console - will update 1551788826144 1551787026144
[2019-03-05 19:57:06.146] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:57:16.704] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: { content: '> dkjndsf' }, key: undefined } ] 'results'
[2019-03-05 19:57:16.709] [INFO] http - ::ffff:127.0.0.1 - - "POST /posts/create HTTP/1.1" 200 13 "http://localhost:9000/document/new" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:57:17.689] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 19:57:17.689] [INFO] console - will check 1551788826144 1551787037689
[2019-03-05 19:57:17.690] [INFO] console - will update 1551788837689 1551787037689
[2019-03-05 19:57:17.694] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 184 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:57:18.550] [INFO] console - will check 1551788837689 1551787038550
[2019-03-05 19:57:18.550] [INFO] console - will update 1551788838550 1551787038550
[2019-03-05 19:57:18.551] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 19:57:18.553] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c7e641c4018ef371601e304 HTTP/1.1" 200 102 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:58:13.301] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 19:58:13.301] [INFO] console - will check 1551788838550 1551787093301
[2019-03-05 19:58:13.302] [INFO] console - will update 1551788893301 1551787093301
[2019-03-05 19:58:13.305] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:58:45.337] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 19:58:45.338] [INFO] console - will check 1551788893301 1551787125338
[2019-03-05 19:58:45.338] [INFO] console - will update 1551788925338 1551787125338
[2019-03-05 19:58:45.345] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:58:52.798] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 19:58:52.799] [INFO] console - will check 1551788925338 1551787132799
[2019-03-05 19:58:52.799] [INFO] console - will update 1551788932799 1551787132799
[2019-03-05 19:58:52.806] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:58:54.347] [INFO] console - will check 1551788932799 1551787134347
[2019-03-05 19:58:54.347] [INFO] console - will update 1551788934347 1551787134347
[2019-03-05 19:58:54.348] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 19:58:54.351] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e641c4018ef371601e304 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:58:55.648] [INFO] console - will check 1551788934347 1551787135648
[2019-03-05 19:58:55.648] [INFO] console - will update 1551788935648 1551787135648
[2019-03-05 19:58:55.649] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 19:58:55.651] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e641c4018ef371601e304 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:58:57.812] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 19:58:57.813] [INFO] console - will check 1551788935648 1551787137813
[2019-03-05 19:58:57.813] [INFO] console - will update 1551788937813 1551787137813
[2019-03-05 19:58:57.817] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:59:01.686] [INFO] console - will check 1551788937813 1551787141686
[2019-03-05 19:59:01.687] [INFO] console - will update 1551788941686 1551787141686
[2019-03-05 19:59:01.687] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 19:59:01.689] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e641c4018ef371601e304 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:59:33.433] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: { content: '> djfng' }, key: undefined } ] 'results'
[2019-03-05 19:59:33.437] [INFO] http - ::ffff:127.0.0.1 - - "POST /posts/create HTTP/1.1" 200 13 "http://localhost:9000/document/new" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:59:34.581] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 19:59:34.582] [INFO] console - will check 1551788941686 1551787174582
[2019-03-05 19:59:34.582] [INFO] console - will update 1551788974582 1551787174582
[2019-03-05 19:59:34.584] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 341 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 19:59:35.744] [INFO] console - will check 1551788974582 1551787175744
[2019-03-05 19:59:35.744] [INFO] console - will update 1551788975744 1551787175744
[2019-03-05 19:59:35.744] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 19:59:35.746] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c7e64a54018ef371601e305 HTTP/1.1" 200 104 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:00:26.738] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:00:26.738] [INFO] console - will check 1551788975744 1551787226738
[2019-03-05 20:00:26.738] [INFO] console - will update 1551789026738 1551787226738
[2019-03-05 20:00:26.740] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:00:28.628] [INFO] console - will check 1551789026738 1551787228628
[2019-03-05 20:00:28.629] [INFO] console - will update 1551789028628 1551787228628
[2019-03-05 20:00:28.629] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:00:28.631] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e64a54018ef371601e305 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:00:29.735] [INFO] console - will check 1551789028628 1551787229735
[2019-03-05 20:00:29.735] [INFO] console - will update 1551789029735 1551787229735
[2019-03-05 20:00:29.735] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:00:29.737] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e641c4018ef371601e304 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:00:30.318] [INFO] console - will check 1551789029735 1551787230318
[2019-03-05 20:00:30.318] [INFO] console - will update 1551789030318 1551787230318
[2019-03-05 20:00:30.318] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:00:30.321] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e64a54018ef371601e305 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:00:34.736] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: { content: '' }, key: undefined } ] 'results'
[2019-03-05 20:00:34.741] [INFO] http - ::ffff:127.0.0.1 - - "POST /posts/update HTTP/1.1" 200 122 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:00:34.765] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:00:34.766] [INFO] console - will check 1551789030318 1551787234766
[2019-03-05 20:00:34.766] [INFO] console - will update 1551789034766 1551787234766
[2019-03-05 20:00:34.769] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:00:36.251] [INFO] console - will check 1551789034766 1551787236251
[2019-03-05 20:00:36.251] [INFO] console - will update 1551789036251 1551787236251
[2019-03-05 20:00:36.252] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:00:36.255] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c7e64a54018ef371601e305 HTTP/1.1" 200 97 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:00:36.987] [INFO] console - will check 1551789036251 1551787236987
[2019-03-05 20:00:36.987] [INFO] console - will update 1551789036987 1551787236987
[2019-03-05 20:00:36.988] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:00:36.990] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e641c4018ef371601e304 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:00:37.946] [INFO] console - will check 1551789036987 1551787237946
[2019-03-05 20:00:37.946] [INFO] console - will update 1551789037946 1551787237946
[2019-03-05 20:00:37.947] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:00:37.950] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e64a54018ef371601e305 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:00:38.954] [INFO] console - will check 1551789037946 1551787238954
[2019-03-05 20:00:38.955] [INFO] console - will update 1551789038954 1551787238954
[2019-03-05 20:00:38.956] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:00:38.958] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e641c4018ef371601e304 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:00:39.549] [INFO] console - will check 1551789038954 1551787239549
[2019-03-05 20:00:39.549] [INFO] console - will update 1551789039549 1551787239549
[2019-03-05 20:00:39.549] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:00:39.552] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e64a54018ef371601e305 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:00:42.595] [INFO] console - will check 1551789039549 1551787242595
[2019-03-05 20:00:42.595] [INFO] console - will update 1551789042595 1551787242595
[2019-03-05 20:00:42.596] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:00:42.598] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e641c4018ef371601e304 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:00:43.117] [INFO] console - will check 1551789042595 1551787243117
[2019-03-05 20:00:43.117] [INFO] console - will update 1551789043117 1551787243117
[2019-03-05 20:00:43.117] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:00:43.120] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e64a54018ef371601e305 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:00:44.132] [INFO] console - will check 1551789043117 1551787244132
[2019-03-05 20:00:44.132] [INFO] console - will update 1551789044132 1551787244132
[2019-03-05 20:00:44.133] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:00:44.135] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e641c4018ef371601e304 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:00:47.772] [INFO] console - will check 1551789044132 1551787247772
[2019-03-05 20:00:47.772] [INFO] console - will update 1551789047772 1551787247772
[2019-03-05 20:00:47.772] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:00:47.774] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e641c4018ef371601e304 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:00:48.289] [INFO] console - will check 1551789047772 1551787248289
[2019-03-05 20:00:48.289] [INFO] console - will update 1551789048289 1551787248289
[2019-03-05 20:00:48.289] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:00:48.292] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e64a54018ef371601e305 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:00:48.954] [INFO] console - will check 1551789048289 1551787248954
[2019-03-05 20:00:48.954] [INFO] console - will update 1551789048954 1551787248954
[2019-03-05 20:00:48.955] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:00:48.957] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e641c4018ef371601e304 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:00:49.636] [INFO] console - will check 1551789048954 1551787249636
[2019-03-05 20:00:49.637] [INFO] console - will update 1551789049636 1551787249636
[2019-03-05 20:00:49.637] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:00:49.646] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e64a54018ef371601e305 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:01:13.836] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:01:13.836] [INFO] console - will check 1551789049636 1551787273836
[2019-03-05 20:01:13.836] [INFO] console - will update 1551789073836 1551787273836
[2019-03-05 20:01:13.839] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:01:22.051] [INFO] console - will check 1551789073836 1551787282051
[2019-03-05 20:01:22.051] [INFO] console - will update 1551789082051 1551787282051
[2019-03-05 20:01:22.051] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:01:22.053] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e64a54018ef371601e305 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:01:23.237] [INFO] console - will check 1551789082051 1551787283237
[2019-03-05 20:01:23.237] [INFO] console - will update 1551789083237 1551787283237
[2019-03-05 20:01:23.237] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:01:23.240] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e641c4018ef371601e304 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:01:25.233] [INFO] console - will check 1551789083237 1551787285233
[2019-03-05 20:01:25.233] [INFO] console - will update 1551789085233 1551787285233
[2019-03-05 20:01:25.234] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:01:25.237] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e64a54018ef371601e305 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:01:28.558] [INFO] console - will check 1551789085233 1551787288558
[2019-03-05 20:01:28.558] [INFO] console - will update 1551789088558 1551787288558
[2019-03-05 20:01:28.559] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:01:28.562] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e64a54018ef371601e305 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:01:58.235] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:01:58.236] [INFO] console - will check 1551789088558 1551787318236
[2019-03-05 20:01:58.236] [INFO] console - will update 1551789118236 1551787318236
[2019-03-05 20:01:58.240] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:02:18.561] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:02:18.561] [INFO] console - will check 1551789118236 1551787338561
[2019-03-05 20:02:18.561] [INFO] console - will update 1551789138561 1551787338561
[2019-03-05 20:02:18.572] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:02:19.800] [INFO] console - will check 1551789138561 1551787339800
[2019-03-05 20:02:19.800] [INFO] console - will update 1551789139800 1551787339800
[2019-03-05 20:02:19.800] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:02:19.802] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e64a54018ef371601e305 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:02:23.825] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:02:23.825] [INFO] console - will check 1551789139800 1551787343825
[2019-03-05 20:02:23.825] [INFO] console - will update 1551789143825 1551787343825
[2019-03-05 20:02:23.828] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:03:48.058] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:03:48.058] [INFO] console - will check 1551789143825 1551787428058
[2019-03-05 20:03:48.059] [INFO] console - will update 1551789228058 1551787428058
[2019-03-05 20:03:48.062] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:03:49.583] [INFO] console - will check 1551789228058 1551787429583
[2019-03-05 20:03:49.583] [INFO] console - will update 1551789229583 1551787429583
[2019-03-05 20:03:49.583] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:03:49.586] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e64a54018ef371601e305 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:03:53.275] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:03:53.276] [INFO] console - will check 1551789229583 1551787433276
[2019-03-05 20:03:53.276] [INFO] console - will update 1551789233276 1551787433276
[2019-03-05 20:03:53.278] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:04:40.158] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:04:40.160] [INFO] console - will check 1551789233276 1551787480160
[2019-03-05 20:04:40.161] [INFO] console - will update 1551789280160 1551787480160
[2019-03-05 20:04:40.164] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:04:42.042] [INFO] console - will check 1551789280160 1551787482042
[2019-03-05 20:04:42.042] [INFO] console - will update 1551789282042 1551787482042
[2019-03-05 20:04:42.042] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:04:42.045] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e64a54018ef371601e305 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:04:44.364] [INFO] console - will check 1551789282042 1551787484364
[2019-03-05 20:04:44.365] [INFO] console - will update 1551789284364 1551787484364
[2019-03-05 20:04:44.365] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:04:44.367] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e641c4018ef371601e304 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:04:45.245] [INFO] console - will check 1551789284364 1551787485245
[2019-03-05 20:04:45.245] [INFO] console - will update 1551789285245 1551787485245
[2019-03-05 20:04:45.245] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:04:45.247] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e64a54018ef371601e305 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:04:49.915] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: { content: '> dfnkjdfgfg' }, key: undefined } ] 'results'
[2019-03-05 20:04:49.920] [INFO] http - ::ffff:127.0.0.1 - - "POST /posts/update HTTP/1.1" 200 134 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:04:49.939] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:04:49.939] [INFO] console - will check 1551789285245 1551787489939
[2019-03-05 20:04:49.939] [INFO] console - will update 1551789289939 1551787489939
[2019-03-05 20:04:49.943] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:04:51.114] [INFO] console - will check 1551789289939 1551787491114
[2019-03-05 20:04:51.114] [INFO] console - will update 1551789291114 1551787491114
[2019-03-05 20:04:51.115] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:04:51.117] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c7e64a54018ef371601e305 HTTP/1.1" 200 109 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:04:51.776] [INFO] console - will check 1551789291114 1551787491776
[2019-03-05 20:04:51.777] [INFO] console - will update 1551789291776 1551787491776
[2019-03-05 20:04:51.777] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:04:51.779] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e641c4018ef371601e304 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:04:54.038] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:04:54.039] [INFO] console - will check 1551789291776 1551787494039
[2019-03-05 20:04:54.039] [INFO] console - will update 1551789294039 1551787494039
[2019-03-05 20:04:54.049] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:07:38.296] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:07:38.296] [INFO] console - will check 1551789294039 1551787658296
[2019-03-05 20:07:38.297] [INFO] console - will update 1551789458296 1551787658296
[2019-03-05 20:07:38.301] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:07:41.872] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:07:41.872] [INFO] console - will check 1551789458296 1551787661872
[2019-03-05 20:07:41.872] [INFO] console - will update 1551789461872 1551787661872
[2019-03-05 20:07:41.876] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:07:42.876] [INFO] console - will check 1551789461872 1551787662876
[2019-03-05 20:07:42.876] [INFO] console - will update 1551789462876 1551787662876
[2019-03-05 20:07:42.877] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:07:42.880] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e64a54018ef371601e305 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:07:43.791] [INFO] console - will check 1551789462876 1551787663791
[2019-03-05 20:07:43.792] [INFO] console - will update 1551789463791 1551787663791
[2019-03-05 20:07:43.792] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:07:43.797] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e641c4018ef371601e304 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:07:45.402] [INFO] console - will check 1551789463791 1551787665402
[2019-03-05 20:07:45.402] [INFO] console - will update 1551789465402 1551787665402
[2019-03-05 20:07:45.403] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:07:45.405] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e64a54018ef371601e305 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:07:46.314] [INFO] console - will check 1551789465402 1551787666314
[2019-03-05 20:07:46.315] [INFO] console - will update 1551789466314 1551787666314
[2019-03-05 20:07:46.315] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:07:46.318] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e641c4018ef371601e304 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:08:05.835] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:08:05.836] [INFO] console - will check 1551789466314 1551787685836
[2019-03-05 20:08:05.836] [INFO] console - will update 1551789485836 1551787685836
[2019-03-05 20:08:05.839] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:08:08.164] [INFO] console - will check 1551789485836 1551787688164
[2019-03-05 20:08:08.164] [INFO] console - will update 1551789488164 1551787688164
[2019-03-05 20:08:08.164] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:08:08.173] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e64a54018ef371601e305 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:08:08.938] [INFO] console - will check 1551789488164 1551787688938
[2019-03-05 20:08:08.939] [INFO] console - will update 1551789488938 1551787688938
[2019-03-05 20:08:08.939] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:08:08.941] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e641c4018ef371601e304 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:08:12.216] [INFO] console - will check 1551789488938 1551787692216
[2019-03-05 20:08:12.216] [INFO] console - will update 1551789492216 1551787692216
[2019-03-05 20:08:12.216] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:08:12.219] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e64a54018ef371601e305 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:08:12.796] [INFO] console - will check 1551789492216 1551787692796
[2019-03-05 20:08:12.796] [INFO] console - will update 1551789492796 1551787692796
[2019-03-05 20:08:12.796] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:08:12.798] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e641c4018ef371601e304 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:08:14.588] [INFO] console - will check 1551789492796 1551787694588
[2019-03-05 20:08:14.588] [INFO] console - will update 1551789494588 1551787694588
[2019-03-05 20:08:14.589] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:08:14.590] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e64a54018ef371601e305 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:08:15.318] [INFO] console - will check 1551789494588 1551787695318
[2019-03-05 20:08:15.318] [INFO] console - will update 1551789495318 1551787695318
[2019-03-05 20:08:15.318] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:08:15.320] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e641c4018ef371601e304 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:08:16.349] [INFO] console - will check 1551789495318 1551787696349
[2019-03-05 20:08:16.349] [INFO] console - will update 1551789496349 1551787696349
[2019-03-05 20:08:16.349] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:08:16.351] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e64a54018ef371601e305 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:08:18.154] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:08:18.155] [INFO] console - will check 1551789496349 1551787698155
[2019-03-05 20:08:18.155] [INFO] console - will update 1551789498155 1551787698155
[2019-03-05 20:08:18.158] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:08:44.253] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:08:44.253] [INFO] console - will check 1551789498155 1551787724253
[2019-03-05 20:08:44.253] [INFO] console - will update 1551789524253 1551787724253
[2019-03-05 20:08:44.256] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:08:48.445] [INFO] console - will check 1551789524253 1551787728445
[2019-03-05 20:08:48.445] [INFO] console - will update 1551789528445 1551787728445
[2019-03-05 20:08:48.445] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:08:48.448] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e64a54018ef371601e305 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:08:57.852] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:08:57.852] [INFO] console - will check 1551789528445 1551787737852
[2019-03-05 20:08:57.852] [INFO] console - will update 1551789537852 1551787737852
[2019-03-05 20:08:57.855] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:09:29.171] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:09:29.171] [INFO] console - will check 1551789537852 1551787769171
[2019-03-05 20:09:29.171] [INFO] console - will update 1551789569171 1551787769171
[2019-03-05 20:09:29.176] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:09:39.327] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:09:39.327] [INFO] console - will check 1551789569171 1551787779327
[2019-03-05 20:09:39.327] [INFO] console - will update 1551789579327 1551787779327
[2019-03-05 20:09:39.331] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:09:41.660] [INFO] console - will check 1551789579327 1551787781660
[2019-03-05 20:09:41.662] [INFO] console - will update 1551789581660 1551787781660
[2019-03-05 20:09:41.662] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:09:41.667] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e64a54018ef371601e305 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:09:42.591] [INFO] console - will check 1551789581660 1551787782591
[2019-03-05 20:09:42.591] [INFO] console - will update 1551789582591 1551787782591
[2019-03-05 20:09:42.592] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:09:42.596] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e641c4018ef371601e304 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:09:43.331] [INFO] console - will check 1551789582591 1551787783331
[2019-03-05 20:09:43.331] [INFO] console - will update 1551789583331 1551787783331
[2019-03-05 20:09:43.331] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:09:43.334] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e64a54018ef371601e305 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:09:45.178] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:09:45.180] [INFO] console - will check 1551789583331 1551787785180
[2019-03-05 20:09:45.180] [INFO] console - will update 1551789585180 1551787785180
[2019-03-05 20:09:45.214] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:10:15.125] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:10:15.125] [INFO] console - will check 1551789585180 1551787815125
[2019-03-05 20:10:15.128] [INFO] console - will update 1551789615125 1551787815125
[2019-03-05 20:10:15.131] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:10:17.197] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:10:17.197] [INFO] console - will check 1551789615125 1551787817197
[2019-03-05 20:10:17.198] [INFO] console - will update 1551789617197 1551787817197
[2019-03-05 20:10:17.207] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:10:18.384] [INFO] console - will check 1551789617197 1551787818384
[2019-03-05 20:10:18.385] [INFO] console - will update 1551789618384 1551787818384
[2019-03-05 20:10:18.385] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:10:18.387] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e64a54018ef371601e305 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:10:19.102] [INFO] console - will check 1551789618384 1551787819102
[2019-03-05 20:10:19.102] [INFO] console - will update 1551789619102 1551787819102
[2019-03-05 20:10:19.102] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:10:19.104] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e641c4018ef371601e304 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:10:19.640] [INFO] console - will check 1551789619102 1551787819640
[2019-03-05 20:10:19.640] [INFO] console - will update 1551789619640 1551787819640
[2019-03-05 20:10:19.641] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:10:19.645] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e64a54018ef371601e305 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:10:20.301] [INFO] console - will check 1551789619640 1551787820301
[2019-03-05 20:10:20.301] [INFO] console - will update 1551789620301 1551787820301
[2019-03-05 20:10:20.301] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:10:20.303] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e641c4018ef371601e304 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:10:31.593] [INFO] console - will check 1551789620301 1551787831593
[2019-03-05 20:10:31.594] [INFO] console - will update 1551789631593 1551787831593
[2019-03-05 20:10:31.594] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:10:31.597] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e64a54018ef371601e305 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:10:34.502] [INFO] console - will check 1551789631593 1551787834502
[2019-03-05 20:10:34.502] [INFO] console - will update 1551789634502 1551787834502
[2019-03-05 20:10:34.505] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:10:34.511] [INFO] http - ::ffff:127.0.0.1 - - "POST /posts/remove HTTP/1.1" 200 46 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:10:34.539] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:10:34.539] [INFO] console - will check 1551789634502 1551787834539
[2019-03-05 20:10:34.539] [INFO] console - will update 1551789634539 1551787834539
[2019-03-05 20:10:34.556] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 184 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:10:36.789] [INFO] console - will check 1551789634539 1551787836789
[2019-03-05 20:10:36.789] [INFO] console - will update 1551789636789 1551787836789
[2019-03-05 20:10:36.789] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:10:36.792] [INFO] http - ::ffff:127.0.0.1 - - "POST /posts/remove HTTP/1.1" 200 46 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:10:36.828] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:10:36.828] [INFO] console - will check 1551789636789 1551787836828
[2019-03-05 20:10:36.829] [INFO] console - will update 1551789636828 1551787836828
[2019-03-05 20:10:36.833] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:10:41.223] [INFO] console - will check 1551789636828 1551787841223
[2019-03-05 20:10:41.223] [INFO] console - will update 1551789641223 1551787841223
[2019-03-05 20:10:41.223] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:10:41.226] [INFO] http - ::ffff:127.0.0.1 - - "POST /posts/remove HTTP/1.1" 200 46 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:10:41.248] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:10:41.249] [INFO] console - will check 1551789641223 1551787841249
[2019-03-05 20:10:41.249] [INFO] console - will update 1551789641249 1551787841249
[2019-03-05 20:10:41.257] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:11:45.298] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:11:45.298] [INFO] console - will check 1551789641249 1551787905298
[2019-03-05 20:11:45.299] [INFO] console - will update 1551789705298 1551787905298
[2019-03-05 20:11:45.303] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 32 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:16:17.529] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: 
     { content: '# 两封信\n\n作者： 阮一峰\n\n日期：2005年9月6日\n\n一、\n\n1791年出版的《约翰逊传》（The life of Samuel Johnson）是文学史上最重要的传记之一。最近，我就在看此书的节译本（中国社会科学出版社，2004）。\n\n这本传记收录了约翰逊的一封信，引起了我的兴趣。\n\n1747年，约翰逊想编一本英语词典，写了一份计划书交给书商。后者建议词典出版时，在前面写上献给齐斯特菲尔特伯爵（Earl of Chesterfield），以换取伯爵的资助。约翰逊同意了，他当时生活很拮据。哪知伯爵对词典根本不感兴趣，漠不关心，这令约翰逊极为不满。\n\n1754年，历经千辛万苦，词典终于编成。伯爵听说后，幻想约翰逊不改初衷，还会把这本巨著献给他，于是在报纸上撰写了两篇文章，对这本词典大加赞美。\n\n《约翰逊传》这样写道：\n\n> “如果没有过去的不愉快事件，约翰逊一定受宠若惊，欣喜异常。一般说来，约翰逊很喜欢接受别人的赞美，尤其被一个具有显赫身份以及伟大成就的人赞美，更令他心中感激不已。可是这次，伯爵圆滑的策略却没有收到预期的效果。约翰逊对伯爵的甜言蜜语完全无动于衷。”\n\n他给伯爵回了一封信。这封信非常出名，很多英语文选中都收录了它。我读后，觉得约翰逊不仅会编词典，讽刺挖苦的本领也是一流。下面就是我翻译的这封信。\n\n> 《致齐斯特菲尔特伯爵》\n>\n> 1755年2月7日\n>\n> 尊敬的伯爵阁下，\n>\n> 最近，我从《世界日报》的业主处得知，该报上两篇推荐我所著字典的文章出自您之手。能够得到您的赞扬，这真是一种荣耀，但是由于我还不适应得到伟大人物的垂青，所以我不知该如何妥善接受，或用何等言语表达我的感激之情。\n>\n> 昔日，我曾受鼓动去拜访您，像其他人一样，我也被您言辞的魅力所打动，以至我情不自禁地希望自己能自夸是世界征服者的征服者，得到全世界都为之羡慕的重视。但是，我发现我的拜见并不受到欢迎，无论是出于自尊，还是出于谦逊，都使我无法再继续拜访您了。我曾当众向您致意过一次，这已经耗尽了我这个无名且无礼的学者所拥有的全部讨好的本事了。我已经做了我能做的一切了，没有人会愿意见到自己的努力被忽视，哪怕这种努力是如此微不足道。\n>\n> 尊敬的伯爵，自从我在您的接待室中苦苦等待、并被您拒之门外以后，七年已经过去了。在这段时间中，我克服种种困难，一直在推进我的工作。现在，再抱怨那些困难是没有用的，好在我的作品终于要出版了。在这七年中，您没有给过我一次支持，一句鼓励，甚至一个赞许的微笑。我并不期待这种待遇，因为以前我从没有过赞助人（Patron）。\n>\n> 在维吉尔的作品中，牧羊人最终找到了爱神，却发现他完全是铁石心肠。\n>\n> 尊敬的伯爵，难道赞助人是这样一种人吗，当有人溺水挣扎，他无动于衷，而等落水者上岸以后，他反倒给予援助？要是您以前曾关心过我的工作，那它将让我感到温暖；可是它姗姗来迟，直到现在我终于无所谓了，对它不再有丝毫欣赏；我已经习惯孤独，（我的妻子三年前去世了），我已经无法与人共享它了；而且现在我的工作已为人所知，也不再需要它了。既然没有任何受益，我想否认得到过您的恩惠，不使公众误解您是我的赞助人，也不会太过偏激吧。上帝会同意我这样做的。\n>\n> 迄今为止，我的工作所得到的学界领袖的帮助接近于无，我对此并不失望，即使帮助变得更少（如果发生这种情况的话），我也能完成我的工作。尊敬的伯爵，我早就不做美梦了，在那些梦里，我曾一度洋洋得意的自诩为\n>\n> 您最谦卑和服从的仆人，\n>\n> 塞缪尔.约翰逊\n\n二、\n\n在翻译的过程中，我不由想到了另一封信。\n\n在罗曼·罗兰的小说《约翰.克里斯朵夫》中，少年克里斯朵夫受到了克里赫太太的轻视。他无比愤怒，提笔写下了下面这封信。\n\n> 太太，我不知是不是像你所说的，你错看了我。我只知道我错看了你，吃了大亏。\n>\n> 我以为你们是我的朋友。你也这么说，面上也做得仿佛真是我的朋友，而我爱你们还远过于我的生命。现在我知道这些都是假的，你对我的亲热完全是骗人：你利用我，把我当消遣，替你们弄弄音乐，----我是你们的仆人。哼，我可不是你们的仆人！也不是任何人的仆人！\n>\n> 你那么无情的要我知道，我没有权利爱你的女儿。可是我的心要爱什么人，世界上无论什么也阻止不了；即使我没有你的门第，我可是和你一样高贵。唯有心才能使人高贵：我尽管不是一个伯爵，我的品德也许超过多少伯爵的品德。当差的也罢，伯爵也罢，只要侮辱了我，我都瞧不起他。所有那些自命高贵而没有高贵的心灵的人，我都看做象块污泥。\n>\n> 再会吧！你看错了我，欺骗了我。我瞧不起你。\n>\n> 我是不管你怎么样，始终爱着弥娜小姐爱到死的人。----（因为她是我的，什么都不能把她从我心里夺去的。）\n\n这封信和上一封信都是一个卑微者受到侮辱以后，充满自尊和愤怒的反击。虽然两者语气有轻重之分，但都清晰地发出了内心的呐喊，不管是谁，“只要侮辱了我，我都瞧不起他”！\n\n高中里，我第一次读《约翰.克里斯朵夫》，<u>这一封信让我体会到了什么叫做高贵的人格</u>。<u>这么多年过去了，在现实的压磨之下，我自问没有勇气和自信，当面斥责那些让我们灵魂蒙羞的人和事。对不堪的现实，我早已习以为常，变得妥协、恭顺和服从了。</u>\n\n那么就让我把这两封信记录下来，当作心灵的镜子。它们至少说明了，世界上存在过这样“威武不能屈，富贵不能淫，贫贱不能移”的灵魂，从而使我们依然有所期待、有所坚持。\n\n[\n](http://www.ruanyifeng.com/road/2005/2005-08-08-lyrics.html)' },
    key: undefined } ] 'results'
[2019-03-05 20:16:17.548] [INFO] http - ::ffff:127.0.0.1 - - "POST /posts/create HTTP/1.1" 200 13 "http://localhost:9000/document/new" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:16:19.370] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:16:19.371] [INFO] console - will check 1551789705298 1551788179371
[2019-03-05 20:16:19.371] [INFO] console - will update 1551789979371 1551788179371
[2019-03-05 20:16:19.393] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 190 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:16:20.530] [INFO] console - will check 1551789979371 1551788180530
[2019-03-05 20:16:20.530] [INFO] console - will update 1551789980530 1551788180530
[2019-03-05 20:16:20.531] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:16:20.539] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c7e68914018ef371601e306 HTTP/1.1" 200 6558 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:16:58.946] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: 
     { content: '# 小白玩Ubuntu——一脸懵逼到爱不释手\n\n![96](https://upload.jianshu.io/users/upload_avatars/2516147/d42d70c0-1f24-41f1-9656-cb46866a22f2.jpg?imageMogr2/auto-orient/strip|imageView2/1/w/96/h/96)\n\n \n\n[xxyangyoulin](https://www.jianshu.com/u/07c82148bfa4)\n\n \n\n关注\n\n2017.03.20 16:05* 字数 3725 阅读 5096评论 28喜欢 207\n\n> **“ 天下共享的信念，连接起每个人”**\n\n\n\n![img](https://upload-images.jianshu.io/upload_images/2516147-4414e239a9d23b66.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1000/format/webp)\n\nubuntu_screenfetch.png\n\n- 由于在下的笔记本行性能有限，运行Android studio明显感到力不从心。\n  再加上偶尔还同时运行模拟器，词典软件，笔记软件，浏览器。。本本的8g内存还加了固态，但是Windows还是略卡。\n  听网上的人都说搞安卓开发要用Linux，Linux逼格高。\n  于是开始入坑Ubuntu，没想到安装好系统之后就是各种折腾......\n\n2018八月更新：\n自从用了Linux Mint之后，强烈推荐Linux Mint。\nLinux Mint是一种Linux发行版，类似于我们常见的Ubuntu或者Debian。它是在\n基于Debian和Ubuntu的基础上再进行开发，因此，它的发布周期和Ubuntu保持一致。\n桌面比Ubuntu更流畅，也少了Ubuntu独有的日常内部错误报错。\n由于是基于Ubuntu的系统，所以安装过程一模一样，非常方便，是一个更适合新手的Linux桌面系统：<https://linuxmint.com/>\n\n\n\n![img](https://upload-images.jianshu.io/upload_images/2516147-799a475db363f2e0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1000/format/webp)\n\n2018-08-18 10-55-09屏幕截图.png\n\n### 一、Ubuntu介绍\n\n1. Ubuntu（乌班图）：\n\n> 是一个以桌面应用为主的开源**GNU/Linux**操作系统，Ubuntu 是由全球化的专业开发团队（Canonical Ltd）打造的。\n\n1. 名称由来和含义：\n\n> 其名称来自非洲南部祖鲁语或豪萨语的“ubuntu”一词，类似儒家“ **仁爱** ”的思想，意思是“人性”、“**我的存在是因为大家的存在**”。\n> 第一位黑人圣公会和南非圣公会省的大主教(Desmond Tutu)认为Ubuntu的内涵是“** 自己乃是属于一个更大的整体，当他人受到伤害或死去时，当他人受到折磨或压迫时，这个整体就会消失。 ”\n\n1. Ubuntu特点：\n\n> Ubuntu相较于其他大部分的类Linux系统而言，算是对初学者，尤其是用习惯了Windows的用户来说是一个很好的Linux入门操作系统。\n> 软件方面，Ubuntu拥有很多强大的开源社区，Ubuntu 项目完全遵从**开源软件开发的原则**，全球众多Ubuntu爱好者为Ubuntu的软件开发做着无偿的努力。 Ubuntu 目前是并将**永远是免费的**。\n> Ubuntu被冠以“**LTS**”(Long-Term Support)的版本将会被长期支持，长时间内会保持系统的修复软件更新。\n> Ubuntu 的版本号是根据发布版本的日期而定。\n\n- 最新版本Ubuntu17.04 就要在今年（2017） 的四月如此发布了。\n\n### 二、Ubuntu安装\n\nUbuntu的安装网上有很多教程，基本都大同小异。只要是亲手安装过windows系统的同学，我相信再来安装Ubuntu也是轻而易举的事。\n\n- ##### 第一步：安装准备\n\n  **Ubuntu镜像和工具下载：**\n\n  - 推荐下载地址：\n\n    cn.ubuntu.com/download\n\n     \n\n\n\n    ![img](https://upload-images.jianshu.io/upload_images/2516147-c215c0a88f16b964.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/910/format/webp)\n    \n    2017-03-16 14-01-57屏幕截图.png\n\n  - U盘启动器制作工具软碟通： 下载地址：[网盘](https://pan.baidu.com/s/1qXUrM3M) 密码: 63ua\n\n  **U盘启动器的制作：**\n\n- ISO镜像和制作工具都下载好后，打开UitralSo软碟通软件。插上一个至少4G内存容量的U盘，按照如下步骤，很简单就可以制作U盘启动器了。\n\n  **第一**：打开文件菜单-->点击打开\n\n\n\n  ![img](https://upload-images.jianshu.io/upload_images/2516147-840c59e31e738803.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/784/format/webp)\n\n  第一步.png\n\n  第二\n\n  ：选择刚刚下载好的ISO镜像\n\n\n\n  ![img](https://upload-images.jianshu.io/upload_images/2516147-f5cbf830f51f995c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/952/format/webp)\n\n  第二步.png\n\n\n\n  **第三**：选择启动菜单-->点击写入硬盘映象\n\n\n\n  ![img](https://upload-images.jianshu.io/upload_images/2516147-f549668a3b4e417b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/965/format/webp)\n\n  第三步.png\n\n\n\n  **第四**：在弹出的菜单中选择硬盘驱动器，选择需要制作U盘启动器的U盘（届时将会删除U盘上所有的内容），然后点击**写入**\n\n\n\n  ![img](https://upload-images.jianshu.io/upload_images/2516147-fa8cdacfb0b404c9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/965/format/webp)\n\n  第四步.png\n\n- 如果速度较慢，可以坐下来喝杯清茶稍等片刻。\n\n- 安装位置的准备\n\n  - 打开硬盘管理器 快捷键\n\n     \n\n    win+R\n\n     \n\n    输入\n\n    diskmgmt.msc\n\n     \n\n    ）\n\n    第一： 在想要用来安装Ubuntu的盘符上右击选择点击压缩卷。\n\n\n\n    ![img](https://upload-images.jianshu.io/upload_images/2516147-aaaf9c0439d7f7fe.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1000/format/webp)\n    \n    硬盘准备1.png\n    \n    第二：建议至少准备\n    \n    40G（40960M）\n    \n    以上的硬盘空间用来安装Ubuntu系统，输入好了之后点击压缩。\n\n\n\n    ![img](https://upload-images.jianshu.io/upload_images/2516147-7f1f5071b30fc4f4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/677/format/webp)\n    \n    硬盘准备2.png\n    \n    第三：\n    \n    完成第二之后可以看到你刚点击压缩后得来的硬盘分区已经处于了未分配的状态， 这样就完成了。\n\n\n\n    ![img](https://upload-images.jianshu.io/upload_images/2516147-a60bf52d4237085f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1000/format/webp)\n    \n    硬盘准备3.png\n\n- ##### 第二步：开始安装\n\n- 完成上面的准备之后，插上U盘，关闭电脑进入BIOS模式（不同的电脑进入BIOS的快捷键可能不同，我的笔记本*（ASUS）*是开机显示*logo*之后按下esc即可进入）。\n\n- 进入BIOS模式之后选择以U盘为第一优先启动项。设置好后一般是按F10即可保存更改并退出BIOS。\n\n- 片刻后电脑重启\n\n\n\n  ![img](https://upload-images.jianshu.io/upload_images/2516147-38fc820efdb217b4.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1000/format/webp)\n\n  IMG_20170316_200033.jpg\n\n- 选择Install Ubuntu就进入Ubuntu的安装界面了。\n\n  **第一：**切换到中文后选择安装Ubuntu\n\n\n\n  ![img](https://upload-images.jianshu.io/upload_images/2516147-d4518e523ab78cc2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/801/format/webp)\n\n  安装界面1.png\n\n  第二：\n\n   \n\n  后面的操作跟着引导点击继续即可，唯一需要注意的是在选择Ubuntu安装位置或者安装模式的时候，\n\n  切记要选择和Windows Manager共存，否则可能会抹掉你硬盘里面的Winsows系统。\n\n   \n\n  （\n\n  由于真实安装界面和虚拟机中安装的安装界面不同，截图需要重新安装Ubuntu系统，所以这里截图没了-_-!!\n\n  ）\n\n- **至此，Ubuntu的安装算是完成了，这里讲解比较粗糙（不忍直视），算是简单的安装方法，不涉及分区之类的操作。安装完成之后如果开机却进入了windows系统，就进入BIOS设置Ubuntu为第一引导项。引导出问题可以修复一下Ubuntu开机引导。接下来就看看使用方面的技巧。**\n\n### 三、基本操作\n\n\n\n![img](https://upload-images.jianshu.io/upload_images/2516147-e1826cecc427576c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/941/format/webp)\n\n2017-03-16 20-28-40屏幕截图.png\n\n- Ubuntu是基于Linux的系统，当然大部分的操作肯定离不开命令行，类似于Windows系统中的命令行窗口，在Ubuntu中，这种敲命令的窗口叫做**终端（terminal）**。\n\n- 开启终端\n  - 按win键，输入 **terminal** 搜索打开\n  - 当然也可以直接在桌面上右键选择-**打开终端**\n  - 不过更简单的方式是按快捷键 **Ctrl+Alt+T**\n    这样会打开一个全新的终端窗口。\n- 系统安装好后，需要进行一下更新，在更新之前，我们先设置一下root密码\n  - 在终端键入命令(不包括~$ ，这个是命令提示符，表示在它之后输入命令)：\n\n```\n~$ sudo passwd root\n```\n\n输入安装时候设置的密码，回车键后再输入自己设置的root密码即可。以后我们在需要进行root操作的时候，就可以输入刚设置的密码。（sudo的意思就是以root模式运行命令）\n\n- 完成之后，为了软件能正常的更新，\n  - 分别键入命令：\n\n```\n  ~$ sudo apt-get update\n  ~$ sudo apt-get upgrade\n```\n\n- 网络通畅的情况下，16.04版本大概只需要花上几分钟时间即可完成。\n- 待进度完成之后，进入系统设置，点击软件和更新，再点退出会提醒更新。\n\n##### 常用命令\n\n- **文件操作：**\n\n```\ncd\n```\n\n——(ChangeDirectory) *切换到您指定的任意目录*。\n\n```\ncd ..\n```\n\n——*进入上级目录* *（注意中间有空格）*\n\n```\ncd  -\n```\n\n——*进入上次访问的目录*，相当于返回*（注意中间有空格）*\n\n```\nls \n```\n\n——(List) *列出目录下的文件*。\n\n```\nmkdir \n```\n\n——(MaKeDIRectory) *创建目录*\n\n```\ncp (源文件或目录名) (目标目录或文件名)\n```\n\n——*复制文件/目录*\n`cp -r` 命令则可以拷贝您指定的任意目录（注：包括该目录里的文件和子目录）。\n\n```\nrm\n```\n\n——*删除文件/目录*\n`rm -rf`命令则可以删除您指定的任意目录（不进回收站）\n`rm -f`将会强制删除指定的文件\n\n```\nmv （文件或目录名） \n```\n\n——*重命名/复制 文件/目录*\n\n- **软件安装命令**\n  apt-get安装方法：\n\n```\n~$ sudo apt-get install 软件名\n```\n\n——*添加软件源之后，执行一下sudo apt-get update，就可以用这条命令从软件源安装软件了*\n——如果出现依赖问题只需要键入命令更新一下依赖：\n\n```\n~$ sudo apt-get -f install \n```\n\ndpkg -i 安装方法：\n\n```\n~$ sudo dpkg -i xxx.deb\n```\n\n——*xxx是具体的deb软件包的包名。deb是debian系Linux的包管理方式,ubuntu是属于debian系的Linux发行版,所以默认支持这种软件安装方式,当下载到一个deb格式的软件后,在终端输入这个命令就能安装*\n\n- 还有编译安装和直接在软件中心或者新立得包管理安装，这里就不再一一赘述，现在只要掌握最基本的就可以了。\n- **卸载软件**\n  例如卸载wine-qq7.8-longeneteam\n\n```\nsudo apt-get autoremove --purge wine-qq7.8-longeneteam\n```\n\nsudo ———— 获取 root 权限\napt-get ——— 执行安装卸载功能的软件\nautoremove — 告诉 apt-get 我们所要做的操作是移除软件\n--purge ——— 注意这前面是两个短划线，这个参数是告诉他们要完整的干净的彻底的移除\n不清楚软件的具体包名，可以在输入开头几个字母之后按Tab键提示。\n\n### 四、Ubuntu软件推荐：\n\n- 搜狗输入法\n\n  由于在下用惯了搜狗输入法，所以介绍下搜狗输入法的安装方式。Linux版搜狗输入法没有发现广告，真让人感动欣慰。\n\n  在安装输入法之前，我们先做一些事情。进入设置，点击语言支持\n\n\n\n  ![img](https://upload-images.jianshu.io/upload_images/2516147-107b68ac0dd0f04d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/737/format/webp)\n\n  20170319233128.png\n\n  这时候会提示更新，待更新完成之后，把键盘输入法系统设置成：fcitx\n\n\n\n  ![img](https://upload-images.jianshu.io/upload_images/2516147-4221166f76729106.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/415/format/webp)\n\n  20170319233342.png\n\n  在执行更新的时间里，不妨先到官网下载deb安装包：\n\n  搜狗输入法\n\n  接着使用dpkg的命令进行安装：\n\n```\n~$ sudo dpkg -i xxx.deb\n```\n\n出现安装依赖问题，可以执行一下更新依赖命令解决。\n安装好后，重启一下电脑，搜狗输入法就可以正常使用了。\n\n- **网易云音乐**\n  同样先到官网下载安装包：[网易云音乐](http://music.163.com/#/download)\n  接着一样使用dpkg命令进行安装。\n\n- **mpv player**\n  Ubuntu上比较好用的视频播放器。\n\n- **chrome浏览器**\n  如果不是Ubuntu16.04可以直接安装下载的deb包，但是我在16.04上安装deb包的chrome之后网页无法显示，使用这个方法解决的：[Ubuntu 16.04下安装64位谷歌Chrome浏览器](http://www.linuxidc.com/Linux/2016-05/131096.htm)\n\n- **Albert 快捷搜索**\n\n\n\n  ![img](https://upload-images.jianshu.io/upload_images/2516147-c0e580bd47ce5ef0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1000/format/webp)\n\n  Albert.png\n\n\n```\n~$ sudo add-apt-repository ppa:nilarimogard/webupd8\n~$ sudo apt-get update\n~$ sudo apt-get install albert\n```\n\n安装完成可以自己设置一下启动快捷键，方便快速操作。\n\n- **Easystroke鼠标手势**\n\n\n\n  ![img](https://upload-images.jianshu.io/upload_images/2516147-ff71a74bcce13de9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/800/format/webp)\n\n  easystroke.png\n\n- **显示网速CPU内存状态**\n  Indicator-Sysmonitor的安装\n\n\n\n  ![img](https://upload-images.jianshu.io/upload_images/2516147-f9b153514dbf58ae.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/440/format/webp)\n\n  E98089E58CBA_006.jpeg\n\n- **wps办公软件**\n  官网下载：[wps](http://community.wps.cn/download/)\n\n- **typora Markdown编辑器**\n\n```\n~$ sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys BA300B7755AFCFAE\n~$ sudo add-apt-repository \'deb https://typora.io ./linux/\'\n~$ sudo apt-get update\n~$ sudo apt-get install typora\n```\n\n\n\n![img](https://upload-images.jianshu.io/upload_images/2516147-d1a15d217d0f6407.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/661/format/webp)\n\ntypra.png\n\n- **QQ**\n  在国内还真是离不开这玩意，毕竟身边的人都在用。但由于得不到腾讯官方的支持，现在Linux上qq的体验都不是很好。这里提供几个在Ubuntu上使用qq的解决办法\n- 下载国际版qq：[我使用的版本](https://pan.baidu.com/s/1miBJ7i4)\n- 使用网页版：[网页版QQ](http://w.qq.com/)\n- 安装Android模拟器，在模拟器里面使用QQ\n- 安装wine，使用wine直接安装QQ Windows版(经常崩溃)\n\n最近发现一个体验比较好的修改版：\n\n> 腾讯官方早就在10年代初就停止运营Linux版QQ，然而民间折腾Linux版QQ的脚步从来没停过。时至今日，它总算有了完美无暇的方案——deepin wine系列。要感谢deepin公司的最大努力。也要感谢[wszqkzqk](https://github.com/wszqkzqk)同学的努力，是他让deepin之外的众多Ubuntu/ArchLinux系用户都能用上最稳定的wine QQ。\n> 初始软件来源：[deepin](http://www.deepin.org/)\n> 移植成功环境：Ubuntu 18.04、Ubuntu 16.04、LinuxMint 18.*-19、ArchLinux、Manjaro\n> 详情自己去看吧：\n> <https://www.lulinux.com/archives/1319>\n\n### 五、Android Studio开发环境搭建\n\n在安装**studio**之前，我们先安装和配置JDK\n\n- JDK的安装\n\n  我们到官网手动下载JDK：\n\n  JDK包下载\n\n  下载解压后把解压包移动到\n\n  ```\n  /usr/local\n  ```\n\n  目录下（可以在系统安装盘以外做一个备份）。\n\n  最后\n\n  配置环境变量\n\n  ：\n\n  - 打开/etc/\n\n```\n~$ cd /etc\n```\n\n- 编辑profile（记得以root模式打开）\n\n```\n~$ sudo gedit profile\n```\n\n- 最后在profile的末尾添上（JAVA_HOME后面的为具体的jdk路径）\n\n```\nexport JAVA_HOME=/usr/local/jdk1.8\nexport PATH=$JAVA_HOME/bin:$PATH\nexport CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar \n```\n\n重启，Ctrl+Alt+T 打开终端输入java验证是否成功。\n\n- **Android studio的安装**\n  软件源安装：\n\n```\nsudo apt-add-repository ppa:paolorotolo/android-studio\nsudo apt-get update\nsudo apt-get install android-studio\n```\n\n或者直接下载软件包：\n[studio中文官网](https://developer.android.com/studio/index.html)\n启动Android studio：\n要启动 Android Studio，请打开一个终端，导航至studio的安装位置，android-studio/bin/ 目录，并执行 **studio.sh**即可。\n\n```\n~$ cd /usr/local/android-studio/bin\n~$ studio.sh\n```\n\nunable to run mksdcard sdk tool错误解决：\n原因：缺少lib\n解决方法：\n\n```\n~$  sudo apt-get install lib32z1 lib32ncurses5  lib32stdc++6 \n```\n\n把启动图标固定到菜单：\n\n\n\n![img](https://upload-images.jianshu.io/upload_images/2516147-b7175f078bd4e829.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/641/format/webp)\n\nQQ截图20170320135503.png\n\n这样Android Studio应该在dash菜单中创建快捷方式，以后启动studio就方便多了。\n\n### 六、最后说说美化：\n\n很多人都说最没有用的就是美化， 但是不美化一下怎么愉快的敲代码？\n\n\n\n![img](https://upload-images.jianshu.io/upload_images/2516147-314f06e3a9f4314f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1000/format/webp)\n\n全屏.png\n\n- **Unity Tweak Tool**\n  Unity Tweak Tool 是 Ubuntu Linux的重要工具之一.我们为了能自由定制 Unity 桌面环境，需要自己安装Unity Tweak Tool。\n\n```\n~$ sudo apt-get install unity-tweak-tool \n```\n\n\n\n![img](https://upload-images.jianshu.io/upload_images/2516147-c320b4b8fc8c04c7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/967/format/webp)\n\nunity-tweak-tool.png\n\n- **Docky**\n  一款类似于 MAC OS X 底部启动器的软件程序。\n\n```\n~$ sudo add-apt-repository ppa:ricotz/docky\n~$ sudo apt-get update\n~$ sudo apt-get install docky\n```\n\n\n\n![img](https://upload-images.jianshu.io/upload_images/2516147-c65ec520e3b6d6ce.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/735/format/webp)\n\nUploading 主题设置_348822.png . . .\n\n- 主题：**flatabulous主题安装**\n\n```\n~$ sudo add-apt-repository ppa:noobslab/themes\n~$ sudo apt-get update\n~$ sudo apt-get install flatabulous-theme\n```\n\n安装好后在unity-tweak-tool主题菜单中设置：\n\n\n\n![img](https://upload-images.jianshu.io/upload_images/2516147-650692c56a16a4dc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/745/format/webp)\n\n主题设置.png\n\n- 图标\n  **numix图标**\n\n```\n~$ sudo add-apt-repository ppa:numix/ppa\n~$ sudo apt-get update\n~$ sudo apt-get install numix-gtk-theme numix-icon-theme-circle\n```\n\n安装好后在unity-tweak-tool图标菜单中设置：\n\n\n\n![img](https://upload-images.jianshu.io/upload_images/2516147-03d716c94dd97cc8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/743/format/webp)\n\n图标设置.png\n\n还有一款图标也不错:\n\nultra 图标\n\n\n\n```\n~$ sudo add-apt-repository ppa:noobslab/icons\n~$ sudo apt-get update\n~$ sudo apt-get install ultra-flat-icons\n```\n\n- 字体：\n\n```\n~$ sudo apt-get install fonts-wqy-microhei\n```\n\n\n\n\n\n![img](https://upload-images.jianshu.io/upload_images/2516147-26da0bcfcc3220f6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/741/format/webp)\n\n字体设置.png\n\n如果是分辨率比较高的屏幕，体感觉字体太少可以设置一下\n\n文字缩放比例\n\n。\n\n\n\n### 七、一些小技巧\n\n- 把自带的启动器菜单放到底部：\n\n```\n~$ gsettings set com.canonical.Unity.Launcher launcher-position Bottom\n```\n\n- 以root用户身份启动文件管理器为所欲为地操作：\n\n```\n~$ sudo nautilus\n```\n\n- Alt+左键可以快速移动窗口\n  Alt+右键可以快速弹出最小化+最大化+关闭菜单\n\n------\n\n**2017-9-18更新**\n\n- 方便**调节亮度**的一个小软件, 在状态栏有一个图标,鼠标放在上面滑动可以快速调节屏幕亮度\n\n```\nsudo add-apt-repository ppa:indicator-brightness/ppa\nsudo apt-get update && sudo apt-get install indicator-brightness\nsudo apt-get install indicator-brightness\n```\n\n- 状态栏\n\n  指示器菜单\n\n  (截图的时候菜单会隐藏,所以截图变透明了)\n\n\n\n  ![img](https://upload-images.jianshu.io/upload_images/2516147-83a0e944da92fc19.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/935/format/webp)\n\n  2017-09-18 20-37-46屏幕截图.png\n\n```\nhttp://www.florian-diesch.de/software/classicmenu-indicator/\n```\n\n- **取色器**\n\n```\nsudo apt-get install gpick\n```\n\n ' },
    key: undefined } ] 'results'
[2019-03-05 20:16:58.970] [INFO] http - ::ffff:127.0.0.1 - - "POST /posts/create HTTP/1.1" 200 13 "http://localhost:9000/document/new" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:17:00.630] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:17:00.631] [INFO] console - will check 1551789980530 1551788220631
[2019-03-05 20:17:00.631] [INFO] console - will update 1551790020631 1551788220631
[2019-03-05 20:17:00.639] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 388 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:17:01.653] [INFO] console - will check 1551790020631 1551788221653
[2019-03-05 20:17:01.654] [INFO] console - will update 1551790021653 1551788221653
[2019-03-05 20:17:01.654] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:17:01.675] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c7e68ba4018ef371601e307 HTTP/1.1" 200 21195 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:17:45.682] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: 
     { content: '\n\n大家都知道缓存的英文叫做 `cache`。但我发现一个有趣的现象：这个单词在不同人的口中有不同的读音。为了全面了解缓存，我们得先从读音开始，这样才能够在和其他同事(例如 PM)交(zhuāng)流(bī)时体现自己的修(bī)养(gé)。\n\n友情提示：文章有些长，您可能需要分批次读完，当中可以喝个咖啡或者啤酒当作中场休息。\n\n## cache 怎么念\n\n在国外 IT 圈和大部分国外视频中，cache 的发音是 `/kæʃ/`(同 `cash`)，这也是一个广泛认可的发音。但我发现在中国的 IT 圈还有相当一部分程序员(比如我自己……)读作 `/kætʃ/`(同 `catch`)。虽然不太正确，但并不妨碍互相交流。(不过为了纯正，还是应该向正确的方向靠拢)\n\n此外还有一些小众的读法，例如 `/keɪʃ/`(同 `kaysh`)，甚至 `/kæʃeɪ/`(像个法语发音，重音在后面)。这些因为太小众了，可能会引起沟通障碍，估计只有在特定场合或者特定圈子才能顺畅使用。\n\n## 前端缓存/后端缓存\n\n扯了些没用的，我们先进入定义环节：什么是前端缓存？与之相对的什么又是后端缓存？\n\n![img](https://user-gold-cdn.xitu.io/2018/9/29/16623704e6f63949?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n基本的网络请求就是三个步骤：请求，处理，响应。\n\n后端缓存主要集中于“处理”步骤，通过保留数据库连接，存储处理结果等方式缩短处理时间，尽快进入“响应”步骤。当然这不在本文的讨论范围之内。\n\n而前端缓存则可以在剩下的两步：“请求”和“响应”中进行。在“请求”步骤中，浏览器也可以通过存储结果的方式直接使用资源，直接省去了发送请求；而“响应”步骤需要浏览器和服务器共同配合，通过减少响应内容来缩短传输时间。这些都会在下面进行讨论。\n\n本文主要包含\n\n- 按缓存位置分类 (memory cache, disk cache, Service Worker 等)\n- 按失效策略分类 (`Cache-Control`, `ETag` 等)\n- 帮助理解原理的一些案例\n- 缓存的应用模式\n\n## 按缓存位置分类\n\n我看过的大部分讨论缓存的文章会直接从 HTTP 协议头中的缓存字段开始，例如 `Cache-Control`, `ETag`, `max-age` 等。但偶尔也会听到别人讨论 memory cache, disk cache 等。**那这两种分类体系究竟有何关联？是否有交叉？**(我个人认为这是本文的最大价值所在，因为在写之前我自己也是被两种分类体系搞的一团糟)\n\n实际上，HTTP 协议头的那些字段，都属于 disk cache 的范畴，是几个缓存位置的其中之一。因此本着从全局到局部的原则，我们应当先从缓存位置开始讨论。等讲到 disk cache 时，才会详细讲述这些协议头的字段及其作用。\n\n我们可以在 Chrome 的开发者工具中，Network -> Size 一列看到一个请求最终的处理方式：如果是大小 (多少 K， 多少 M 等) 就表示是网络请求，否则会列出 `from memory cache`, `from disk cache` 和 `from ServiceWorker`。\n\n它们的优先级是：(由上到下寻找，找到即返回；找不到则继续)\n\n1. Service Worker\n2. Memory Cache\n3. Disk Cache\n4. 网络请求\n\n## memory cache\n\nmemory cache 是内存中的缓存，(与之相对 disk cache 就是硬盘上的缓存)。按照操作系统的常理：先读内存，再读硬盘。disk cache 将在后面介绍 (因为它的优先级更低一些)，这里先讨论 memory cache。\n\n几乎所有的网络请求资源都会被浏览器自动加入到 memory cache 中。但是也正因为数量很大但是浏览器占用的内存不能无限扩大这样两个因素，memory cache 注定只能是个“短期存储”。常规情况下，浏览器的 TAB 关闭后该次浏览的 memory cache 便告失效 (为了给其他 TAB 腾出位置)。而如果极端情况下 (例如一个页面的缓存就占用了超级多的内存)，那可能在 TAB 没关闭之前，排在前面的缓存就已经失效了。\n\n刚才提过，**几乎所有的请求资源** 都能进入 memory cache，这里细分一下主要有两块：\n\n1. preloader。如果你对这个机制不太了解，这里做一个简单的介绍，详情可以参阅[这篇文章](https://link.juejin.im/?target=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fcalendar.perfplanet.com%2F2013%2Fbig-bad-preloader%2F)。\n   熟悉浏览器处理流程的同学们应该了解，在浏览器打开网页的过程中，会先请求 HTML 然后解析。之后如果浏览器发现了 js, css 等需要解析和执行的资源时，它会使用 CPU 资源对它们进行解析和执行。在古老的年代(大约 2007 年以前)，“请求 js/css - 解析执行 - 请求下一个 js/css - 解析执行下一个 js/css” 这样的“串行”操作模式在每次打开页面之前进行着。很明显在解析执行的时候，网络请求是空闲的，这就有了发挥的空间：我们能不能一边解析执行 js/css，一边去请求下一个(或下一批)资源呢？\n   这就是 preloader 要做的事情。不过 preloader 没有一个官方标准，所以每个浏览器的处理都略有区别。例如有些浏览器还会下载 css 中的 `@import` 内容或者 `<video>` 的 `poster`等。\n   而这些被 preloader 请求过来的资源就会被放入 memory cache 中，供之后的解析执行操作使用。\n2. preload (虽然看上去和刚才的 preloader 就差了俩字母)。实际上这个大家应该更加熟悉一些，例如 `<link rel="preload">`。这些显式指定的预加载资源，也会被放入 memory cache 中。\n\nmemory cache 机制保证了一个页面中如果有两个相同的请求 (例如两个 `src` 相同的 `<img>`，两个 `href` 相同的 `<link>`) 都实际只会被请求最多一次，避免浪费。\n\n不过在匹配缓存时，除了匹配完全相同的 URL 之外，还会比对他们的类型，CORS 中的域名规则等。因此一个作为脚本 (script) 类型被缓存的资源是不能用在图片 (image) 类型的请求中的，即便他们 `src` 相等。\n\n在从 memory cache 获取缓存内容时，浏览器会忽视例如 `max-age=0`, `no-cache` 等头部配置。例如页面上存在几个相同 `src` 的图片，即便它们可能被设置为不缓存，但依然会从 memory cache 中读取。这是因为 memory cache 只是短期使用，大部分情况生命周期只有一次浏览而已。而 `max-age=0` 在语义上普遍被解读为“不要在下次浏览时使用”，所以和 memory cache 并不冲突。\n\n但如果站长是真心不想让一个资源进入缓存，就连短期也不行，那就需要使用 `no-store`。存在这个头部配置的话，即便是 memory cache 也不会存储，自然也不会从中读取了。(后面的第二个示例有关于这点的体现)\n\n## disk cache\n\ndisk cache 也叫 HTTP cache，顾名思义是存储在硬盘上的缓存，因此它是持久存储的，是实际存在于文件系统中的。而且它允许相同的资源在跨会话，甚至跨站点的情况下使用，例如两个站点都使用了同一张图片。\n\ndisk cache 会严格根据 HTTP 头信息中的各类字段来判定哪些资源可以缓存，哪些资源不可以缓存；哪些资源是仍然可用的，哪些资源是过时需要重新请求的。当命中缓存之后，浏览器会从硬盘中读取资源，虽然比起从内存中读取慢了一些，但比起网络请求还是快了不少的。绝大部分的缓存都来自 disk cache。\n\n关于 HTTP 的协议头中的缓存字段，我们会在稍后进行详细讨论。\n\n凡是持久性存储都会面临容量增长的问题，disk cache 也不例外。在浏览器自动清理时，会有神秘的算法去把“最老的”或者“最可能过时的”资源删除，因此是一个一个删除的。不过每个浏览器识别“最老的”和“最可能过时的”资源的算法不尽相同，可能也是它们差异性的体现。\n\n## Service Worker\n\n上述的缓存策略以及缓存/读取/失效的动作都是由浏览器内部判断 & 进行的，我们只能设置响应头的某些字段来告诉浏览器，而不能自己操作。举个生活中去银行存/取钱的例子来说，你只能告诉银行职员，我要存/取多少钱，然后把由他们会经过一系列的记录和手续之后，把钱放到金库中去，或者从金库中取出钱来交给你。\n\n但 Service Worker 的出现，给予了我们另外一种更加灵活，更加直接的操作方式。依然以存/取钱为例，我们现在可以绕开银行职员，自己走到金库前(当然是有别于上述金库的一个单独的小金库)，自己把钱放进去或者取出来。因此我们可以选择放哪些钱(缓存哪些文件)，什么情况把钱取出来(路由匹配规则)，取哪些钱出来(缓存匹配并返回)。**当然现实中银行没有给我们开放这样的服务**。\n\nService Worker 能够操作的缓存是有别于浏览器内部的 memory cache 或者 disk cache 的。我们可以从 Chrome 的 F12 中，Application -> Cache Storage 找到这个单独的“小金库”。除了位置不同之外，这个缓存是永久性的，即关闭 TAB 或者浏览器，下次打开依然还在(而 memory cache 不是)。有两种情况会导致这个缓存中的资源被清除：手动调用 API `cache.delete(resource)` 或者容量超过限制，被浏览器全部清空。\n\n如果 Service Worker 没能命中缓存，一般情况会使用 `fetch()` 方法继续获取资源。这时候，浏览器就去 memory cache 或者 disk cache 进行下一次找缓存的工作了。注意：经过 Service Worker 的 `fetch()` 方法获取的资源，即便它并没有命中 Service Worker 缓存，甚至实际走了网络请求，也会标注为 `from ServiceWorker`。这个情况在后面的第三个示例中有所体现。\n\n## 请求网络\n\n如果一个请求在上述 3 个位置都没有找到缓存，那么浏览器会正式发送网络请求去获取内容。之后容易想到，为了提升之后请求的缓存命中率，自然要把这个资源添加到缓存中去。具体来说：\n\n1. 根据 Service Worker 中的 handler 决定是否存入 Cache Storage (额外的缓存位置)。\n2. 根据 HTTP 头部的相关字段(`Cache-control`, `Pragma` 等)决定是否存入 disk cache\n3. memory cache 保存一份资源 **的引用**，以备下次使用。\n\n## 按失效策略分类\n\nmemory cache 是浏览器为了加快读取缓存速度而进行的自身的优化行为，不受开发者控制，也不受 HTTP 协议头的约束，算是一个黑盒。Service Worker 是由开发者编写的额外的脚本，且缓存位置独立，出现也较晚，使用还不算太广泛。所以我们平时最为熟悉的其实是 disk cache，也叫 HTTP cache (因为不像 memory cache，它遵守 HTTP 协议头中的字段)。平时所说的强制缓存，对比缓存，以及 `Cache-Control` 等，也都归于此类。\n\n## 强制缓存 (也叫强缓存)\n\n强制缓存的含义是，当客户端请求后，会先访问缓存数据库看缓存是否存在。如果存在则直接返回；不存在则请求真的服务器，响应后再写入缓存数据库。\n\n**强制缓存直接减少请求数，是提升最大的缓存策略。** 它的优化覆盖了文章开头提到过的请求数据的全部三个步骤。如果考虑使用缓存来优化网页性能的话，强制缓存应该是首先被考虑的。\n\n可以造成强制缓存的字段是 `Cache-control` 和 `Expires`。\n\n## Expires\n\n这是 HTTP 1.0 的字段，表示缓存到期时间，是一个绝对的时间 (当前时间+缓存时间)，如\n\n```\nExpires: Thu, 10 Nov 2017 08:45:11 GMT\n```\n\n在响应消息头中，设置这个字段之后，就可以告诉浏览器，在未过期之前不需要再次请求。\n\n但是，这个字段设置时有两个缺点：\n\n1. 由于是绝对时间，用户可能会将客户端本地的时间进行修改，而导致浏览器判断缓存失效，重新请求该资源。此外，即使不考虑自信修改，时差或者误差等因素也可能造成客户端与服务端的时间不一致，致使缓存失效。\n2. 写法太复杂了。表示时间的字符串多个空格，少个字母，都会导致非法属性从而设置失效。\n\n## Cache-control\n\n已知Expires的缺点之后，在HTTP/1.1中，增加了一个字段Cache-control，该字段表示资源缓存的最大有效时间，在该时间内，客户端不需要向服务器发送请求\n\n这两者的区别就是前者是绝对时间，而后者是相对时间。如下：\n\n```\nCache-control: max-age=2592000\n```\n\n下面列举一些 `Cache-control` 字段常用的值：(完整的列表可以查看 [MDN](https://link.juejin.im/?target=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fdeveloper.mozilla.org%2Fzh-CN%2Fdocs%2FWeb%2FHTTP%2FHeaders%2FCache-Control))\n\n- `max-age`：即最大有效时间，在上面的例子中我们可以看到\n- `must-revalidate`：如果超过了 `max-age` 的时间，浏览器必须向服务器发送请求，验证资源是否还有效。\n- `no-cache`：虽然字面意思是“不要缓存”，但实际上还是要求客户端缓存内容的，只是是否使用这个内容由后续的对比来决定。\n- `no-store`: 真正意义上的“不要缓存”。所有内容都不走缓存，包括强制和对比。\n- `public`：所有的内容都可以被缓存 (包括客户端和代理服务器， 如 CDN)\n- `private`：所有的内容只有客户端才可以缓存，代理服务器不能缓存。默认值。\n\n这些值可以混合使用，例如 `Cache-control:public, max-age=2592000`。在混合使用时，它们的优先级如下图：(图片来自 [developers.google.com/web/fundame…](https://link.juejin.im/?target=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fdevelopers.google.com%2Fweb%2Ffundamentals%2Fperformance%2Foptimizing-content-efficiency%2Fhttp-caching%253Fhl%253Dzh-cn))\n\n![img](https://user-gold-cdn.xitu.io/2018/9/29/16623704e9096b45?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n这里有一个疑问：`max-age=0` 和 `no-cache` 等价吗？从规范的字面意思来说，`max-age` 到期是 **应该(SHOULD)** 重新验证，而 `no-cache` 是 **必须(MUST)** 重新验证。但实际情况以浏览器实现为准，大部分情况他们俩的行为还是一致的。（如果是 `max-age=0, must-revalidate` 就和 `no-cache` 等价了）\n\n顺带一提，在 HTTP/1.1 之前，如果想使用 `no-cache`，通常是使用 `Pragma` 字段，如 `Pragma: no-cache`(这也是 `Pragma` 字段唯一的取值)。但是这个字段只是浏览器约定俗成的实现，并没有确切规范，因此缺乏可靠性。它应该只作为一个兼容字段出现，在当前的网络环境下其实用处已经很小。\n\n总结一下，自从 HTTP/1.1 开始，`Expires` 逐渐被 `Cache-control` 取代。`Cache-control` 是一个相对时间，即使客户端时间发生改变，相对时间也不会随之改变，这样可以保持服务器和客户端的时间一致性。而且 `Cache-control` 的可配置性比较强大。\n\n**Cache-control 的优先级高于 Expires**，为了兼容 HTTP/1.0 和 HTTP/1.1，实际项目中两个字段我们都会设置。\n\n## 对比缓存 (也叫协商缓存)\n\n当强制缓存失效(超过规定时间)时，就需要使用对比缓存，由服务器决定缓存内容是否失效。\n\n流程上说，浏览器先请求缓存数据库，返回一个缓存标识。之后浏览器拿这个标识和服务器通讯。如果缓存未失效，则返回 HTTP 状态码 304 表示继续使用，于是客户端继续使用缓存；如果失效，则返回新的数据和缓存规则，浏览器响应数据后，再把规则写入到缓存数据库。\n\n**对比缓存在请求数上和没有缓存是一致的**，但如果是 304 的话，返回的仅仅是一个状态码而已，并没有实际的文件内容，因此 **在响应体体积上的节省是它的优化点**。它的优化覆盖了文章开头提到过的请求数据的三个步骤中的最后一个：“响应”。通过减少响应体体积，来缩短网络传输时间。所以和强制缓存相比提升幅度较小，但总比没有缓存好。\n\n对比缓存是可以和强制缓存一起使用的，作为在强制缓存失效后的一种后备方案。实际项目中他们也的确经常一同出现。\n\n对比缓存有 2 组字段(不是两个)：\n\n## Last-Modified & If-Modified-Since\n\n1. 服务器通过 `Last-Modified` 字段告知客户端，资源最后一次被修改的时间，例如\n   `Last-Modified: Mon, 10 Nov 2018 09:10:11 GMT`\n2. 浏览器将这个值和内容一起记录在缓存数据库中。\n3. 下一次请求相同资源时时，浏览器从自己的缓存中找出“不确定是否过期的”缓存。因此在请求头中将上次的 `Last-Modified` 的值写入到请求头的 `If-Modified-Since` 字段\n4. 服务器会将 `If-Modified-Since` 的值与 `Last-Modified` 字段进行对比。如果相等，则表示未修改，响应 304；反之，则表示修改了，响应 200 状态码，并返回数据。\n\n但是他还是有一定缺陷的：\n\n- 如果资源更新的速度是秒以下单位，那么该缓存是不能被使用的，因为它的时间单位最低是秒。\n- 如果文件是通过服务器动态生成的，那么该方法的更新时间永远是生成的时间，尽管文件可能没有变化，所以起不到缓存的作用。\n\n## Etag & If-None-Match\n\n为了解决上述问题，出现了一组新的字段 `Etag` 和 `If-None-Match`\n\n`Etag` 存储的是文件的特殊标识(一般都是 hash 生成的)，服务器存储着文件的 `Etag` 字段。之后的流程和 `Last-Modified` 一致，只是 `Last-Modified` 字段和它所表示的更新时间改变成了 `Etag` 字段和它所表示的文件 hash，把 `If-Modified-Since` 变成了 `If-None-Match`。服务器同样进行比较，命中返回 304, 不命中返回新资源和 200。\n\n**Etag 的优先级高于 Last-Modified**\n\n## 缓存小结\n\n当浏览器要请求资源时\n\n1. 调用 Service Worker 的 `fetch` 事件响应\n\n2. 查看 memory cache\n\n3. 查看 disk cache。这里又细分：\n\n4. 1. 如果有强制缓存且未失效，则使用强制缓存，不请求服务器。这时的状态码全部是 200\n   2. 如果有强制缓存但已失效，使用对比缓存，比较后确定 304 还是 200\n\n1. 发送网络请求，等待网络响应\n2. 把响应内容存入 disk cache (如果 HTTP 头信息配置可以存的话)\n3. 把响应内容 **的引用** 存入 memory cache (无视 HTTP 头信息的配置)\n4. 把响应内容存入 Service Worker 的 Cache Storage (如果 Service Worker 的脚本调用了 `cache.put()`)\n\n## 一些案例\n\n光看原理不免枯燥。我们编写一些简单的网页，通过案例来深刻理解上面的那些原理。\n\n## 1. memory cache & disk cache\n\n我们写一个简单的 `index.html`，然后引用 3 种资源，分别是 `index.js`, `index.css` 和 `mashroom.jpg`。\n\n我们给这三种资源都设置上 `Cache-control: max-age=86400`，表示强制缓存 24 小时。以下截图全部使用 Chrome 的隐身模式。\n\n\\1. 首次请求\n\n![img](https://user-gold-cdn.xitu.io/2018/9/29/16623704e713586b?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n\n毫无意外的全部走网络请求，因为什么缓存都还没有。\n\n\\2. 再次请求 (F5)\n\n![img](https://user-gold-cdn.xitu.io/2018/9/29/16623704e804c0b8?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n\n第二次请求，三个请求都来自 memory cache。因为我们没有关闭 TAB，所以浏览器把缓存的应用加到了 memory cache。(耗时 0ms，也就是 1ms 以内)\n\n\\3. 关闭 TAB，打开新 TAB 并再次请求\n\n![img](https://user-gold-cdn.xitu.io/2018/9/29/1662370505e68bb1?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n\n因为关闭了 TAB，memory cache 也随之清空。但是 disk cache 是持久的，于是所有资源来自 disk cache。(大约耗时 3ms，因为文件有点小)\n而且对比 2 和 3，很明显看到 memory cache 还是比 disk cache 快得多的。\n\n## 2. no-cache & no-store\n\n我们在 `index.html` 里面一些代码，完成两个目标：\n\n- 每种资源都(同步)请求两次\n- 增加脚本异步请求图片\n\n```\n<!-- 把3种资源都改成请求两次 -->\n<link rel="stylesheet" href="/static/index.css">\n<link rel="stylesheet" href="/static/index.css">\n<script src="/static/index.js"></script>\n<script src="/static/index.js"></script>\n<img src="/static/mashroom.jpg">\n<img src="/static/mashroom.jpg">\n\n<!-- 异步请求图片 -->\n<script>\n    setTimeout(function () {\n        let img = document.createElement(\'img\')\n        img.src = \'/static/mashroom.jpg\'\n        document.body.appendChild(img)\n    }, 1000)\n</script>\n```\n\n\\1. 当把服务器响应设置为 `Cache-Control: no-cache` 时，我们发现打开页面之后，三种资源都只被请求 **1** 次。\n\n![img](https://user-gold-cdn.xitu.io/2018/9/29/16623704e713586b?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n\n\n![img](https://user-gold-cdn.xitu.io/2018/9/29/166237050c5ad602?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n\n这说明两个问题：\n\n- - 同步请求方面，浏览器会自动把当次 HTML 中的资源存入到缓存 (memory cache)，这样碰到相同 `src` 的图片就会自动读取缓存(但不会在 Network 中显示出来)\n  - 异步请求方面，浏览器同样是不发请求而直接读取缓存返回。但同样不会在 Network 中显示。\n\n总体来说，如上面原理所述，`no-cache` 从语义上表示下次请求不要直接使用缓存而需要比对，并不对本次请求进行限制。因此浏览器在处理当前页面时，可以放心使用缓存。\n\n\\2. 当把服务器响应设置为 `Cache-Control: no-store` 时，情况发生了变化，三种资源都被请求了 **2** 次。而图片因为还多一次异步请求，总计 **3** 次。(红框中的都是那一次异步请求)\n\n![img](https://user-gold-cdn.xitu.io/2018/9/29/166237050dbd0dda?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n\n\n![img](https://user-gold-cdn.xitu.io/2018/9/29/166237050dfb47d1?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n\n这同样说明：\n\n- - 如之前原理所述，虽然 memory cache 是无视 HTTP 头信息的，但是 `no-store` 是特别的。在这个设置下，memory cache 也不得不每次都请求资源。\n  - 异步请求和同步遵循相同的规则，在 `no-store` 情况下，依然是每次都发送请求，不进行任何缓存。\n\n## 3. Service Worker & memory (disk) cache\n\n我们尝试把 Service Worker 也加入进去。我们编写一个 `serviceWorker.js`，并编写如下内容：(主要是预缓存 3 个资源，并在实际请求时匹配缓存并返回)\n\n```\n// serviceWorker.js\nself.addEventListener(\'install\', e => {\n  // 当确定要访问某些资源时，提前请求并添加到缓存中。\n  // 这个模式叫做“预缓存”\n  e.waitUntil(\n    caches.open(\'service-worker-test-precache\').then(cache => {\n      return cache.addAll([\'/static/index.js\', \'/static/index.css\', \'/static/mashroom.jpg\'])\n    })\n  )\n})\n\nself.addEventListener(\'fetch\', e => {\n  // 缓存中能找到就返回，找不到就网络请求，之后再写入缓存并返回。\n  // 这个称为 CacheFirst 的缓存策略。\n  return e.respondWith(\n    caches.open(\'service-worker-test-precache\').then(cache => {\n      return cache.match(e.request).then(matchedResponse => {\n        return matchedResponse || fetch(e.request).then(fetchedResponse => {\n          cache.put(e.request, fetchedResponse.clone())\n          return fetchedResponse\n        })\n      })\n    })\n  )\n})\n```\n\n注册 SW 的代码这里就不赘述了。此外我们还给服务器设置 `Cache-Control: max-age=86400` 来开启 disk cache。我们的目的是看看两者的优先级。\n\n\\1. 当我们首次访问时，会看到常规请求之外，浏览器(确切地说是 Service Worker)额外发出了 3 个请求。这来自预缓存的代码。\n\n![img](https://user-gold-cdn.xitu.io/2018/9/29/1662370520b2a625?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n\n\\2. 第二次访问(无论关闭 TAB 重新打开，还是直接按 F5 刷新)都能看到所有的请求标记为 `from SerciceWorker`。\n\n![img](https://user-gold-cdn.xitu.io/2018/9/29/166237052946888c?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n\n`from ServiceWorker` 只表示请求通过了 Service Worker，至于到底是命中了缓存，还是继续 `fetch()` 方法光看这一条记录其实无从知晓。因此我们还得配合后续的 Network 记录来看。因为之后没有额外的请求了，因此判定是命中了缓存。\n\n![img](https://user-gold-cdn.xitu.io/2018/9/29/166237052973ec60?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n\n从服务器的日志也能很明显地看到，3 个资源都没有被重新请求，即命中了 Service Worker 内部的缓存。\n\n\\3. 如果修改 `serviceWorker.js` 的 `fetch` 事件监听代码，改为如下：\n\n```\n// 这个也叫做 NetworkOnly 的缓存策略。 \nself.addEventListener(\'fetch\', e => {\n   return e.respondWith(fetch(e.request)) \n})\n```\n\n可以发现在后续访问时的效果和修改前是 **完全一致的**。(即 Network 仅有标记为 `from ServiceWorker` 的几个请求，而服务器也不打印 3 个资源的访问日志)\n很明显 Service Worker 这层并没有去读取自己的缓存，而是直接使用 `fetch()` 进行请求。所以此时其实是 `Cache-Control: max-age=86400` 的设置起了作用，也就是 memory/disk cache。但具体是 memory 还是 disk 这个只有浏览器自己知道了，因为它并没有显式的告诉我们。(个人猜测是 memory，因为不论从耗时 0ms 还是从不关闭 TAB 来看，都更像是 memory cache)\n\n## 浏览器的行为\n\n所谓浏览器的行为，指的就是用户在浏览器如何操作时，会触发怎样的缓存策略。主要有 3 种：\n\n- 打开网页，地址栏输入地址： 查找 disk cache 中是否有匹配。如有则使用；如没有则发送网络请求。\n- 普通刷新 (F5)：因为 TAB 并没有关闭，因此 memory cache 是可用的，会被优先使用(如果匹配的话)。其次才是 disk cache。\n- 强制刷新 (Ctrl + F5)：浏览器不使用缓存，因此发送的请求头部均带有 `Cache-control: no-cache`(为了兼容，还带了 `Pragma: no-cache`)。服务器直接返回 200 和最新内容。\n\n## 缓存的应用模式\n\n了解了缓存的原理，我们可能更加关心如何在实际项目中使用它们，才能更好的让用户缩短加载时间，节约流量等。这里有几个常用的模式，供大家参考\n\n## 模式 1：不常变化的资源\n\n```\nCache-Control: max-age=31536000\n```\n\n通常在处理这类资源资源时，给它们的 `Cache-Control` 配置一个很大的 `max-age=31536000` (一年)，这样浏览器之后请求相同的 URL 会命中强制缓存。而为了解决更新的问题，就需要在文件名(或者路径)中添加 hash， 版本号等动态字符，之后更改动态字符，达到更改引用 URL 的目的，从而让之前的强制缓存失效 (其实并未立即失效，只是不再使用了而已)。\n\n在线提供的类库 (如 jquery-3.3.1.min.js, lodash.min.js 等) 均采用这个模式。如果配置中还增加 `public` 的话，CDN 也可以缓存起来，效果拔群。\n\n这个模式的一个变体是在引用 URL 后面添加参数 (例如 `?v=xxx` 或者 `?_=xxx`)，这样就不必在文件名或者路径中包含动态参数，满足某些完美主义者的喜好。在项目每次构建时，更新额外的参数 (例如设置为构建时的当前时间)，则能保证每次构建后总能让浏览器请求最新的内容。\n\n**特别注意：** 在处理 Service Worker 时，对待 `sw-register.js`(注册 Service Worker) 和 `serviceWorker.js` (Service Worker 本身) 需要格外的谨慎。如果这两个文件也使用这种模式，你必须多多考虑日后可能的更新及对策。\n\n## 模式 2：经常变化的资源\n\n```\nCache-Control: no-cache\n```\n\n这里的资源不单单指静态资源，也可能是网页资源，例如博客文章。这类资源的特点是：URL 不能变化，但内容可以(且经常)变化。我们可以设置 `Cache-Control: no-cache` 来迫使浏览器每次请求都必须找服务器验证资源是否有效。\n\n既然提到了验证，就必须 `ETag` 或者 `Last-Modified` 出场。这些字段都会由专门处理静态资源的常用类库(例如 `koa-static`)自动添加，无需开发者过多关心。\n\n也正如上文中提到协商缓存那样，这种模式下，节省的并不是请求数，而是请求体的大小。所以它的优化效果不如模式 1 来的显著。\n\n## 模式 3：非常危险的模式 1 和 2 的结合 （反例）\n\n```\nCache-Control: max-age=600, must-revalidate\n```\n\n不知道是否有开发者从模式 1 和 2 获得一些启发：模式 2 中，设置了 `no-cache`，相当于 `max-age=0, must-revalidate`。我的应用时效性没有那么强，但又不想做过于长久的强制缓存，我能不能配置例如 `max-age=600, must-revalidate` 这样折中的设置呢？\n\n表面上看这很美好：资源可以缓存 10 分钟，10 分钟内读取缓存，10 分钟后和服务器进行一次验证，集两种模式之大成，但实际线上暗存风险。因为上面提过，浏览器的缓存有自动清理机制，开发者并不能控制。\n\n举个例子：当我们有 3 种资源： `index.html`, `index.js`, `index.css`。我们对这 3 者进行上述配置之后，假设在某次访问时，`index.js` 已经被缓存清理而不存在，但 `index.html`, `index.css` 仍然存在于缓存中。这时候浏览器会向服务器请求新的 `index.js`，然后配上老的`index.html`, `index.css` 展现给用户。这其中的风险显而易见：不同版本的资源组合在一起，报错是极有可能的结局。\n\n除了自动清理引发问题，不同资源的请求时间不同也能导致问题。例如 A 页面请求的是 `A.js` 和 `all.css`，而 B 页面是 `B.js` 和 `all.css`。如果我们以 A -> B 的顺序访问页面，势必导致 `all.css` 的缓存时间早于 `B.js`。那么以后访问 B 页面就同样存在资源版本失配的隐患。\n\n## 后记\n\n这篇文章真心有点长，但已经囊括了前端缓存的绝大部分，包括 HTTP 协议中的缓存，Service Worker，以及 Chrome 浏览器的一些优化 (Memory Cache)。希望开发者们善用缓存，因为它往往是最容易想到，提升也最大的性能优化策略。\n\n## 参考文章\n\n[A Tale of Four Caches](https://link.juejin.im/?target=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fcalendar.perfplanet.com%2F2016%2Fa-tale-of-four-caches%2F) (但这篇文章把 Service Worker 的优先级排在 memory cache 和 disk cache 之间，跟我实验效果并不相符。怀疑可能是 2 年来 chrome 策略的修改？)\n\n[Caching best practices & max-age gotchas](https://link.juejin.im/?target=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fjakearchibald.com%2F2016%2Fcaching-best-practices%2F)' },
    key: undefined } ] 'results'
[2019-03-05 20:17:45.706] [INFO] http - ::ffff:127.0.0.1 - - "POST /posts/create HTTP/1.1" 200 13 "http://localhost:9000/document/new" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:17:47.738] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:17:47.739] [INFO] console - will check 1551790021653 1551788267739
[2019-03-05 20:17:47.739] [INFO] console - will update 1551790067739 1551788267739
[2019-03-05 20:17:47.745] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 556 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:17:48.815] [INFO] console - will check 1551790067739 1551788268815
[2019-03-05 20:17:48.816] [INFO] console - will update 1551790068815 1551788268815
[2019-03-05 20:17:48.816] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:17:48.823] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c7e68e94018ef371601e308 HTTP/1.1" 200 32005 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:18:06.405] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:18:06.413] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:18:11.728] [INFO] console - will check 1551790068815 1551788291728
[2019-03-05 20:18:11.729] [INFO] console - will update 1551790091728 1551788291728
[2019-03-05 20:18:11.729] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:18:11.739] [INFO] http - ::ffff:127.0.0.1 - - "POST /groups/remove HTTP/1.1" 200 46 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:18:11.759] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:18:11.763] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 246 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:18:14.870] [INFO] console - will check 1551790091728 1551788294870
[2019-03-05 20:18:14.870] [INFO] console - will update 1551790094870 1551788294870
[2019-03-05 20:18:14.870] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:18:14.875] [INFO] http - ::ffff:127.0.0.1 - - "POST /groups/remove HTTP/1.1" 200 46 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:18:14.893] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:18:14.899] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 47 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:18:23.152] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:18:23.162] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/search?author=5c50094c99d8808eaeaf39b1&title=q HTTP/1.1" 200 23 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:18:23.462] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:18:23.464] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/search?author=5c50094c99d8808eaeaf39b1&title=qi HTTP/1.1" 200 23 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:18:23.569] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:18:23.574] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/search?author=5c50094c99d8808eaeaf39b1&title=qia HTTP/1.1" 200 23 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:18:23.647] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:18:23.651] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/search?author=5c50094c99d8808eaeaf39b1&title=qian HTTP/1.1" 200 23 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:18:23.794] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:18:23.796] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/search?author=5c50094c99d8808eaeaf39b1&title=qian+d HTTP/1.1" 200 23 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:18:23.851] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:18:23.853] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/search?author=5c50094c99d8808eaeaf39b1&title=qian+du HTTP/1.1" 200 23 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:18:23.997] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:18:24.000] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/search?author=5c50094c99d8808eaeaf39b1&title=qian+du+a HTTP/1.1" 200 23 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:18:24.062] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:18:24.064] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/search?author=5c50094c99d8808eaeaf39b1&title=qian+duan HTTP/1.1" 200 23 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:18:24.498] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:18:24.503] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/search?author=5c50094c99d8808eaeaf39b1&title=%E5%89%8D%E7%AB%AF HTTP/1.1" 200 86 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:18:27.327] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:18:27.332] [INFO] http - ::ffff:127.0.0.1 - - "GET /signup/search?name=z HTTP/1.1" 200 70 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:18:30.466] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:18:30.468] [INFO] http - ::ffff:127.0.0.1 - - "GET /signup/search?name=h HTTP/1.1" 200 119 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:18:49.765] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:18:49.767] [WARN] http - undefined - - "GET /signup/search?name=h HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:18:51.784] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: { posts: [Array] }, key: undefined },
  { object: { members: [Array] }, key: undefined } ] 'results'
[2019-03-05 20:18:51.809] [INFO] http - ::ffff:127.0.0.1 - - "POST /groups/create HTTP/1.1" 200 13 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:18:51.839] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:18:51.850] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 399 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:18:57.540] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:18:57.545] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/detail?_id=5c7e692b4018ef371601e309 HTTP/1.1" 200 373 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:18:58.412] [INFO] console - will check 1551790094870 1551788338412
[2019-03-05 20:18:58.412] [INFO] console - will update 1551790138412 1551788338412
[2019-03-05 20:18:58.412] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:18:58.416] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e68e94018ef371601e308 HTTP/1.1" 304 - "http://localhost:9000/project/detail" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:19:06.914] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:19:06.914] [INFO] console - will check 1551790138412 1551788346914
[2019-03-05 20:19:06.915] [INFO] console - will update 1551790146914 1551788346914
[2019-03-05 20:19:06.919] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:19:07.934] [INFO] console - will check 1551790146914 1551788347934
[2019-03-05 20:19:07.934] [INFO] console - will update 1551790147934 1551788347934
[2019-03-05 20:19:07.934] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:19:07.938] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e68e94018ef371601e308 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:19:11.423] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:19:11.438] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:19:12.535] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:19:12.539] [WARN] http - undefined - - "GET /groups/detail?_id=5c7e692b4018ef371601e309 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:19:13.552] [INFO] console - will check 1551790147934 1551788353552
[2019-03-05 20:19:13.552] [INFO] console - will update 1551790153552 1551788353552
[2019-03-05 20:19:13.552] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:19:13.555] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e68e94018ef371601e308 HTTP/1.1" 304 - "http://localhost:9000/project/detail" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:19:16.880] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:19:16.889] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:19:18.859] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:19:18.859] [INFO] console - will check 1551790153552 1551788358859
[2019-03-05 20:19:18.859] [INFO] console - will update 1551790158859 1551788358859
[2019-03-05 20:19:18.863] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:19:20.838] [INFO] console - will check 1551790158859 1551788360838
[2019-03-05 20:19:20.839] [INFO] console - will update 1551790160838 1551788360838
[2019-03-05 20:19:20.839] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:19:20.842] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e68ba4018ef371601e307 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:19:23.217] [INFO] console - will check 1551790160838 1551788363217
[2019-03-05 20:19:23.217] [INFO] console - will update 1551790163217 1551788363217
[2019-03-05 20:19:23.217] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:19:23.220] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e68914018ef371601e306 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:19:28.956] [INFO] console - will check 1551790163217 1551788368956
[2019-03-05 20:19:28.956] [INFO] console - will update 1551790168956 1551788368956
[2019-03-05 20:19:28.957] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:19:28.965] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e68e94018ef371601e308 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:19:40.852] [INFO] console - will check 1551790168956 1551788380852
[2019-03-05 20:19:40.853] [INFO] console - will update 1551790180852 1551788380852
[2019-03-05 20:19:40.853] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:19:40.855] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e68e94018ef371601e308 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:19:41.940] [INFO] console - will check 1551790180852 1551788381940
[2019-03-05 20:19:41.941] [INFO] console - will update 1551790181940 1551788381940
[2019-03-05 20:19:41.941] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:19:41.946] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e68ba4018ef371601e307 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:20:16.961] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: 
     { content: '# Hello World\n\n尝试React最简单的方法是使用[CodePen上的Hello World例子](http://codepen.io/gaearon/pen/ZpvBNJ?editors=0010)。如果你不想安装任何东西，可以在浏览器中打开它，然后跟着尝试我们接下来的例子。如果你更愿意使用本地开发环境，可以查看[安装页面](https://react.docschina.org/docs/installation.html) 。\n\n一个最简单的React例子如下:\n\n```\nReactDOM.render(\n  <h1>Hello, world!</h1>,\n  document.getElementById(\'root\')\n);\n```\n\n它渲染了一个 “Hello, world!” 的标题。\n\n接下来的几节将逐步向你介绍如何使用React。我们将详细了解React应用的构成模块：元素和组件。掌握了这些，你将可以使用简单的可复用代码来创建复杂的应用。\n\n## 有关JavaScript的注意事项\n\nReact是一个JavaScript库，因此它需要你熟悉JavaScript。如果你感觉还不够了解，我们建议看看[MDN上有关JavaScript的内容](https://developer.mozilla.org/en-US/docs/Web/JavaScript/A_re-introduction_to_JavaScript)，以便你学得更轻松。\n\n在例子中我们也使用了一些ES6语法。由于这些语法还比较新，我们也是尽量谨慎的尝试使用他们。但是我们还是建议你去熟悉一下这些内容：[箭头函数](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions)， [类](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes)， [模板字符串](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Template_literals)， [`let`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/let)， 和 [`const`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/const) 声明。你可以使用 [Babel REPL](http://babeljs.io/repl/#?babili=false&evaluate=true&lineWrap=false&presets=es2015%2Creact&experimental=false&loose=false&spec=false&code=const%20element%20%3D%20%3Ch1%3EHello%2C%20world!%3C%2Fh1%3E%3B%0Aconst%20container%20%3D%20document.getElementById(\'root\')%3B%0AReactDOM.render(element%2C%20container)%3B%0A) 来查看ES6的编译结果。\n\n\n\n# JSX 简介\n\n我们来观察一下声明的这个变量：\n\n```\nconst element = <h1>Hello, world!</h1>;\n```\n\n这种看起来可能有些奇怪的标签语法既不是字符串也不是 HTML。\n\n它被称为 JSX， 一种 JavaScript 的语法扩展。 我们推荐在 React 中使用 JSX 来描述用户界面。JSX 乍看起来可能比较像是模版语言，但事实上它完全是在 JavaScript 内部实现的。\n\nJSX 用来声明 React 当中的元素。在[下一个章节](https://react.docschina.org/docs/rendering-elements.html)里面我们会详细介绍元素是如何被渲染出来的，接下来呢，我们先来看看 JSX 的基本使用方法。\n\n### 在 JSX 中使用表达式\n\n你可以任意地在 JSX 当中使用 [JavaScript 表达式](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Expressions_and_Operators#Expressions)，在 JSX 当中的表达式要包含在大括号里。\n\n例如 `2 + 2`， `user.firstName`， 以及 `formatName(user)` 都是可以使用的。\n\n```\nfunction formatName(user) {\n  return user.firstName + \' \' + user.lastName;\n}\n\nconst user = {\n  firstName: \'Harper\',\n  lastName: \'Perez\'\n};\n\nconst element = (\n  <h1>\n    Hello, {formatName(user)}!\n  </h1>\n);\n\nReactDOM.render(\n  element,\n  document.getElementById(\'root\')\n);\n```\n\n[在 CodePen 上试试。](http://codepen.io/gaearon/pen/PGEjdG?editors=0010)\n\n我们书写 JSX 的时候一般都会带上换行和缩进，这样可以增强代码的可读性。与此同时，我们同样推荐在 JSX 代码的外面扩上一个小括号，这样可以防止 [分号自动插入](http://stackoverflow.com/q/2846283) 的 bug。\n\n### JSX 本身其实也是一种表达式\n\n在编译之后呢，JSX 其实会被转化为普通的 JavaScript 对象。\n\n这也就意味着，你其实可以在 `if` 或者 `for` 语句里使用 JSX，将它赋值给变量，当作参数传入，作为返回值都可以：\n\n```\nfunction getGreeting(user) {\n  if (user) {\n    return <h1>Hello, {formatName(user)}!</h1>;\n  }\n  return <h1>Hello, Stranger.</h1>;\n}\n```\n\n### JSX 属性\n\n你可以使用引号来定义以字符串为值的属性：\n\n```\nconst element = <div tabIndex="0"></div>;\n```\n\n也可以使用大括号来定义以 JavaScript 表达式为值的属性：\n\n```\nconst element = <img src={user.avatarUrl}></img>;\n```\n\n切记你使用了大括号包裹的 JavaScript 表达式时就不要再到外面套引号了。JSX 会将引号当中的内容识别为字符串而不是表达式。\n\n### JSX 嵌套\n\n如果 JSX 标签是闭合式的，那么你需要在结尾处用 `/>`, 就好像 XML/HTML 一样：\n\n```\nconst element = <img src={user.avatarUrl} />;\n```\n\nJSX 标签同样可以相互嵌套：\n\n```\nconst element = (\n  <div>\n    <h1>Hello!</h1>\n    <h2>Good to see you here.</h2>\n  </div>\n);\n```\n\n> **警告:**\n>\n> 因为 JSX 的特性更接近 JavaScript 而不是 HTML , 所以 React DOM 使用 `camelCase` 小驼峰命名 来定义属性的名称，而不是使用 HTML 的属性名称。\n>\n> 例如，`class` 变成了 [`className`](https://developer.mozilla.org/en-US/docs/Web/API/Element/className)，而 `tabindex` 则对应着 [`tabIndex`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/tabIndex)。\n\n### JSX 防注入攻击\n\n你可以放心地在 JSX 当中使用用户输入：\n\n```\nconst title = response.potentiallyMaliciousInput;\n// 直接使用是安全的：\nconst element = <h1>{title}</h1>;\n```\n\nReact DOM 在渲染之前默认会 [过滤](http://stackoverflow.com/questions/7381974/which-characters-need-to-be-escaped-on-html) 所有传入的值。它可以确保你的应用不会被注入攻击。所有的内容在渲染之前都被转换成了字符串。这样可以有效地防止 [XSS(跨站脚本)](https://en.wikipedia.org/wiki/Cross-site_scripting) 攻击。\n\n### JSX 代表 Objects\n\nBabel 转译器会把 JSX 转换成一个名为 `React.createElement()` 的方法调用。\n\n下面两种代码的作用是完全相同的：\n\n```\nconst element = (\n  <h1 className="greeting">\n    Hello, world!\n  </h1>\n);\nconst element = React.createElement(\n  \'h1\',\n  {className: \'greeting\'},\n  \'Hello, world!\'\n);\n```\n\n`React.createElement()` 这个方法首先会进行一些避免bug的检查，之后会返回一个类似下面例子的对象：\n\n```\n// 注意: 以下示例是简化过的（不代表在 React 源码中是这样）\nconst element = {\n  type: \'h1\',\n  props: {\n    className: \'greeting\',\n    children: \'Hello, world\'\n  }\n};\n```\n\n这样的对象被称为 “React 元素”。它代表所有你在屏幕上看到的东西。React 通过读取这些对象来构建 DOM 并保持数据内容一致。\n\n我们将在下一个章节当中介绍更多有关 React 元素 是如何渲染成 DOM 的内容。\n\n> **Tip:**\n>\n> 如果你是在使用本地编辑器编写 JSX 代码的话，推荐你去装一个支持 JSX 高亮的插件，这样更方便之后的开发学习。\n\n\n\n# 元素渲染\n\n元素是构成 React 应用的最小单位。\n\n元素用来描述你在屏幕上看到的内容：\n\n```\nconst element = <h1>Hello, world</h1>;\n```\n\n与浏览器的 DOM 元素不同，React 当中的元素事实上是普通的对象，React DOM 可以确保 浏览器 DOM 的数据内容与 React 元素保持一致。\n\n> **注意:**\n>\n> 初学者很可能把元素的定义和一个内涵更广的定义“组件”给搞混了。我们将会在[下一个章节](https://react.docschina.org/docs/components-and-props.html)当中对组件进行详细的介绍。元素事实上只是构成组件的一个部分，所以我们还是推荐你先读完这一章节的内容再往后看。\n\n## 将元素渲染到 DOM 中\n\n首先我们在一个 HTML 页面中添加一个 `id="root"` 的 `<div>`:\n\n```\n<div id="root"></div>\n```\n\n在此 div 中的所有内容都将由 React DOM 来管理，所以我们将其称之为 “根” DOM 节点。\n\n我们用React 开发应用时一般只会定义一个根节点。但如果你是在一个已有的项目当中引入 React 的话，你可能会需要在不同的部分单独定义 React 根节点。\n\n要将React元素渲染到根DOM节点中，我们通过把它们都传递给 `ReactDOM.render()` 的方法来将其渲染到页面上：\n\n\n\n```\nconst element = <h1>Hello, world</h1>;\nReactDOM.render(element, document.getElementById(\'root\'));\n```\n\n\n\n[在 CodePen 上试试。](http://codepen.io/gaearon/pen/rrpgNB?editors=1010)\n\n页面上会展示出 “Hello World” 字样。\n\n## 更新元素渲染\n\nReact 元素都是[immutable 不可变](https://en.wikipedia.org/wiki/Immutable_object)的。当元素被创建之后，你是无法改变其内容或属性的。一个元素就好像是动画里的一帧，它代表应用界面在某一时间点的样子。\n\n根据我们现阶段了解的有关 React 知识，更新界面的唯一办法是创建一个新的元素，然后将它传入 `ReactDOM.render()` 方法：\n\n来看一下这个计时器的例子:\n\n\n\n```\nfunction tick() {\n  const element = (\n    <div>\n      <h1>Hello, world!</h1>\n      <h2>It is {new Date().toLocaleTimeString()}.</h2>\n    </div>\n  );\n  ReactDOM.render(element, document.getElementById(\'root\'));\n}\n\nsetInterval(tick, 1000);\n```\n\n\n\n[在 CodePen 上试试。](http://codepen.io/gaearon/pen/gwoJZk?editors=0010)\n\n这个示例通过 [`setInterval()`](https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval) 方法，每秒钟调用一次 `ReactDOM.render()`.\n\n> **注意:**\n>\n> 在实际生产开发中，大多数React应用只会调用一次 `ReactDOM.render()` 。在下一个章节中我们将会详细介绍 [有状态组件](https://react.docschina.org/docs/state-and-lifecycle.html) 实现 DOM 更新方式。\n>\n> 前后的内容是相辅相成的，所以你最好还是先读完本章节再往下看。\n\n## React 只会更新必要的部分\n\nReact DOM 首先会比较元素内容先后的不同，而在渲染过程中只会更新改变了的部分。\n\n你可以使用浏览器的开发者工具来检查一下[之前的例子](http://codepen.io/gaearon/pen/gwoJZk?editors=0010)。\n\n![DOM inspector showing granular updates](https://react.docschina.org/granular-dom-updates-c158617ed7cc0eac8f58330e49e48224.gif)\n\n即便我们每秒都创建了一个描述整个UI树的新元素，React DOM 也只会更新渲染文本节点中发生变化的内容。\n\n根据我们以往的经验，将界面视为一个个特定时刻的固定内容（就像一帧一帧的动画），而不是随时处于变化之中（而不是处于变化中的一整段动画），将会有利于我们理清开发思路，减少各种bug。\n\n\n\n# 组件 & Props\n\n组件可以将UI切分成一些独立的、可复用的部件，这样你就只需专注于构建每一个单独的部件。\n\n组件从概念上看就像是函数，它可以接收任意的输入值（称之为“props”），并返回一个需要在页面上展示的React元素。\n\n## 函数定义/类定义组件\n\n定义一个组件最简单的方式是使用JavaScript函数：\n\n```\nfunction Welcome(props) {\n  return <h1>Hello, {props.name}</h1>;\n}\n```\n\n该函数是一个有效的React组件，它接收一个单一的“props”对象并返回了一个React元素。我们之所以称这种类型的组件为函数定义组件，是因为从字面上来看，它就是一个JavaScript函数。\n\n你也可以使用 [ES6 class](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Classes) 来定义一个组件:\n\n```\nclass Welcome extends React.Component {\n  render() {\n    return <h1>Hello, {this.props.name}</h1>;\n  }\n}\n```\n\n上面两个组件在React中是相同的。\n\n我们将在[下一节](https://react.docschina.org/docs/state-and-lifecycle.html)讨论类的一些额外特性。在那之前，我们都将使用较为简洁的函数定义组件。\n\n## 组件渲染\n\n在前面，我们遇到的React元素都只是DOM标签：\n\n```\nconst element = <div />;\n```\n\n然而，React元素也可以是用户自定义的组件：\n\n```\nconst element = <Welcome name="Sara" />;\n```\n\n当React遇到的元素是用户自定义的组件，它会将JSX属性作为单个对象传递给该组件，这个对象称之为“props”。\n\n例如,这段代码会在页面上渲染出”Hello,Sara”:\n\n```\nfunction Welcome(props) {\n  return <h1>Hello, {props.name}</h1>;\n}\n\nconst element = <Welcome name="Sara" />;\nReactDOM.render(\n  element,\n  document.getElementById(\'root\')\n);\n```\n\n[在 CodePen 上试试。](http://codepen.io/gaearon/pen/YGYmEG?editors=0010)\n\n我们来回顾一下在这个例子中发生了什么：\n\n1. 我们对`<Welcome name="Sara" />`元素调用了`ReactDOM.render()`方法。\n2. React将`{name: \'Sara\'}`作为props传入并调用`Welcome`组件。\n3. `Welcome`组件将`<h1>Hello, Sara</h1>`元素作为结果返回。\n4. React DOM将DOM更新为`<h1>Hello, Sara</h1>`。\n\n> **警告:**\n>\n> 组件名称必须以大写字母开头。\n>\n> 例如，`<div />` 表示一个DOM标签，但 `<Welcome />` 表示一个组件，并且在使用该组件时你必须定义或引入它。\n\n## 组合组件\n\n组件可以在它的输出中引用其它组件，这就可以让我们用同一组件来抽象出任意层次的细节。在React应用中，按钮、表单、对话框、整个屏幕的内容等，这些通常都被表示为组件。\n\n例如，我们可以创建一个`App`组件，用来多次渲染`Welcome`组件：\n\n```\nfunction Welcome(props) {\n  return <h1>Hello, {props.name}</h1>;\n}\n\nfunction App() {\n  return (\n    <div>\n      <Welcome name="Sara" />\n      <Welcome name="Cahal" />\n      <Welcome name="Edite" />\n    </div>\n  );\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById(\'root\')\n);\n```\n\n[在 CodePen 上试试。](http://codepen.io/gaearon/pen/KgQKPr?editors=0010)\n\n通常，一个新的React应用程序的顶部是一个`App`组件。但是，如果要将React集成到现有应用程序中，则可以从下而上使用像`Button`这样的小组件作为开始，并逐渐运用到视图层的顶部。\n\n> **警告:**\n>\n> 组件的返回值只能有一个根元素。这也是我们要用一个`<div>`来包裹所有`<Welcome />`元素的原因。\n\n## 提取组件\n\n你可以将组件切分为更小的组件，这没什么好担心的。\n\n例如，来看看这个`Comment`组件：\n\n```\nfunction Comment(props) {\n  return (\n    <div className="Comment">\n      <div className="UserInfo">\n        <img className="Avatar"\n          src={props.author.avatarUrl}\n          alt={props.author.name}\n        />\n        <div className="UserInfo-name">\n          {props.author.name}\n        </div>\n      </div>\n      <div className="Comment-text">\n        {props.text}\n      </div>\n      <div className="Comment-date">\n        {formatDate(props.date)}\n      </div>\n    </div>\n  );\n}\n```\n\n[在 CodePen 上试试。](http://codepen.io/gaearon/pen/VKQwEo?editors=0010)\n\n这个组件接收`author`(对象)、`text`(字符串)、以及`date`(Date对象)作为props，用来描述一个社交媒体网站上的评论。\n\n这个组件由于嵌套，变得难以被修改，可复用的部分也难以被复用。所以让我们从这个组件中提取出一些小组件。\n\n首先，我们来提取`Avatar`组件：\n\n```\nfunction Avatar(props) {\n  return (\n    <img className="Avatar"\n      src={props.user.avatarUrl}\n      alt={props.user.name}\n    />\n  );\n}\n```\n\n`Avatar`作为`Comment`的内部组件，不需要知道是否被渲染。因此我们将`author`改为一个更通用的名字`user`。\n\n我们建议从组件自身的角度来命名props，而不是根据使用组件的上下文命名。\n\n现在我们可以对`Comment`组件做一些小小的调整：\n\n```\nfunction Comment(props) {\n  return (\n    <div className="Comment">\n      <div className="UserInfo">\n        <Avatar user={props.author} />\n        <div className="UserInfo-name">\n          {props.author.name}\n        </div>\n      </div>\n      <div className="Comment-text">\n        {props.text}\n      </div>\n      <div className="Comment-date">\n        {formatDate(props.date)}\n      </div>\n    </div>\n  );\n}\n```\n\n接下来，我们要提取一个`UserInfo`组件，用来渲染`Avatar`旁边的用户名：\n\n```\nfunction UserInfo(props) {\n  return (\n    <div className="UserInfo">\n      <Avatar user={props.user} />\n      <div className="UserInfo-name">\n        {props.user.name}\n      </div>\n    </div>\n  );\n}\n```\n\n这可以让我们进一步简化`Comment`组件：\n\n```\nfunction Comment(props) {\n  return (\n    <div className="Comment">\n      <UserInfo user={props.author} />\n      <div className="Comment-text">\n        {props.text}\n      </div>\n      <div className="Comment-date">\n        {formatDate(props.date)}\n      </div>\n    </div>\n  );\n}\n```\n\n[在 CodePen 上试试。](http://codepen.io/gaearon/pen/rrJNJY?editors=0010)\n\n提取组件一开始看起来像是一项单调乏味的工作，但是在大型应用中，构建可复用的组件完全是值得的。当你的UI中有一部分重复使用了好几次（比如，`Button`、`Panel`、`Avatar`），或者其自身就足够复杂（比如，`App`、`FeedStory`、`Comment`），类似这些都是抽象成一个可复用组件的绝佳选择，这也是一个比较好的做法。\n\n## Props的只读性\n\n无论是使用[函数或是类](https://react.docschina.org/docs/components-and-props.html#%E5%87%BD%E6%95%B0%E5%AE%9A%E4%B9%89/%E7%B1%BB%E5%AE%9A%E4%B9%89%E7%BB%84%E4%BB%B6)来声明一个组件，它决不能修改它自己的props。来看这个`sum`函数：\n\n```\nfunction sum(a, b) {\n  return a + b;\n}\n```\n\n类似于上面的这种函数称为[“纯函数”](https://en.wikipedia.org/wiki/Pure_function)，它没有改变它自己的输入值，当传入的值相同时，总是会返回相同的结果。\n\n与之相对的是非纯函数，它会改变它自身的输入值：\n\n```\nfunction withdraw(account, amount) {\n  account.total -= amount;\n}\n```\n\nReact是非常灵活的，但它也有一个严格的规则：\n\n**所有的React组件必须像纯函数那样使用它们的props。**\n\n当然，应用的界面是随时间动态变化的，我们将在[下一节](https://react.docschina.org/docs/state-and-lifecycle.html)介绍一种称为“state”的新概念，State可以在不违反上述规则的情况下，根据用户操作、网络响应、或者其他状态变化，使组件动态的响应并改变组件的输出。\n\n\n\n# State & 生命周期\n\n参考[该例子](https://react.docschina.org/docs/rendering-elements.html#%E6%9B%B4%E6%96%B0%E5%85%83%E7%B4%A0%E6%B8%B2%E6%9F%93)。\n\n到目前为止我们只学习了一种方法来更新UI。\n\n我们调用 `ReactDOM.render()` 方法来改变输出：\n\n```\nfunction tick() {\n  const element = (\n    <div>\n      <h1>Hello, world!</h1>\n      <h2>It is {new Date().toLocaleTimeString()}.</h2>\n    </div>\n  );\n  ReactDOM.render(\n    element,\n    document.getElementById(\'root\')\n  );\n}\n\nsetInterval(tick, 1000);\n```\n\n[在 CodePen 中尝试](http://codepen.io/gaearon/pen/gwoJZk?editors=0010)\n\n在本节中，我们将学习如何使`Clock`组件真正可重用和封装。它将设置自己的计时器，并每秒钟更新一次。\n\n我们可以从封装时钟开始：\n\n```\nfunction Clock(props) {\n  return (\n    <div>\n      <h1>Hello, world!</h1>\n      <h2>It is {props.date.toLocaleTimeString()}.</h2>\n    </div>\n  );\n}\n\nfunction tick() {\n  ReactDOM.render(\n    <Clock date={new Date()} />,\n    document.getElementById(\'root\')\n  );\n}\n\nsetInterval(tick, 1000);\n```\n\n[在 CodePen 中尝试](http://codepen.io/gaearon/pen/dpdoYR?editors=0010)\n\n然而，它错过了一个关键的要求：`Clock`设置一个定时器并且每秒更新UI应该是`Clock`的实现细节。\n\n理想情况下，我们写一次 `Clock` 然后它能更新自身：\n\n```\nReactDOM.render(\n  <Clock />,\n  document.getElementById(\'root\')\n);\n```\n\n为了实现这个需求，我们需要为`Clock`组件添加`状态`\n\n状态与属性十分相似，但是状态是私有的，完全受控于当前组件。\n\n我们之前[提到过](https://react.docschina.org/docs/components-and-props.html#%E5%87%BD%E6%95%B0%E5%AE%9A%E4%B9%89/%E7%B1%BB%E5%AE%9A%E4%B9%89%E7%BB%84%E4%BB%B6)，定义为类的组件有一些特性。局部状态就是如此：一个功能只适用于类。\n\n## 将函数转换为类\n\n你可以通过5个步骤将函数组件 `Clock` 转换为类\n\n1. 创建一个名称扩展为 `React.Component` 的[ES6 类](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Classes)\n2. 创建一个叫做`render()`的空方法\n3. 将函数体移动到 `render()` 方法中\n4. 在 `render()` 方法中，使用 `this.props` 替换 `props`\n5. 删除剩余的空函数声明\n\n```\nclass Clock extends React.Component {\n  render() {\n    return (\n      <div>\n        <h1>Hello, world!</h1>\n        <h2>It is {this.props.date.toLocaleTimeString()}.</h2>\n      </div>\n    );\n  }\n}\n```\n\n[在 CodePen 中尝试](http://codepen.io/gaearon/pen/zKRGpo?editors=0010)\n\n`Clock` 现在被定义为一个类而不只是一个函数\n\n使用类就允许我们使用其它特性，例如局部状态、生命周期钩子\n\n## 为一个类添加局部状态\n\n我们会通过3个步骤将 `date` 从属性移动到状态中：\n\n1. 在 `render()` 方法中使用 `this.state.date` 替代 `this.props.date`\n\n```\nclass Clock extends React.Component {\n  render() {\n    return (\n      <div>\n        <h1>Hello, world!</h1>\n        <h2>It is {this.state.date.toLocaleTimeString()}.</h2>\n      </div>\n    );\n  }\n}\n```\n\n1. 添加一个[类构造函数](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Classes#Constructor)来初始化状态 `this.state`\n\n```\nclass Clock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {date: new Date()};\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Hello, world!</h1>\n        <h2>It is {this.state.date.toLocaleTimeString()}.</h2>\n      </div>\n    );\n  }\n}\n```\n\n注意我们如何传递 `props` 到基础构造函数的：\n\n```\n  constructor(props) {\n    super(props);\n    this.state = {date: new Date()};\n  }\n```\n\n类组件应始终使用`props`调用基础构造函数。\n\n1. 从 `<Clock />` 元素移除 `date` 属性：\n\n```\nReactDOM.render(\n  <Clock />,\n  document.getElementById(\'root\')\n);\n```\n\n稍后将定时器代码添加回组件本身。\n\n结果如下：\n\n```\nclass Clock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {date: new Date()};\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Hello, world!</h1>\n        <h2>It is {this.state.date.toLocaleTimeString()}.</h2>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(\n  <Clock />,\n  document.getElementById(\'root\')\n);\n```\n\n[在 CodePen 中尝试](http://codepen.io/gaearon/pen/KgQpJd?editors=0010)\n\n接下来，我们将使`Clock`设置自己的计时器并每秒更新一次。\n\n## 将生命周期方法添加到类中\n\n在具有许多组件的应用程序中，在销毁时释放组件所占用的资源非常重要。\n\n每当`Clock`组件第一次加载到DOM中的时候，我们都想[生成定时器](https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval)，这在React中被称为`挂载`\n\n同样，每当`Clock`生成的这个DOM被移除的时候，我们也会想要[清除定时器](https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearInterval)，这在React中被称为`卸载`。\n\n我们可以在组件类上声明特殊的方法，当组件挂载或卸载时，来运行一些代码：\n\n```\nclass Clock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {date: new Date()};\n  }\n\n  componentDidMount() {\n\n  }\n\n  componentWillUnmount() {\n\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Hello, world!</h1>\n        <h2>It is {this.state.date.toLocaleTimeString()}.</h2>\n      </div>\n    );\n  }\n}\n```\n\n这些方法被称作`生命周期钩子`。\n\n当组件输出到 DOM 后会执行 `componentDidMount()` 钩子，这是一个建立定时器的好地方：\n\n```\n  componentDidMount() {\n    this.timerID = setInterval(\n      () => this.tick(),\n      1000\n    );\n  }\n```\n\n注意我们如何在 `this` 中保存定时器ID。\n\n虽然 `this.props` 由React本身设置以及`this.state` 具有特殊的含义，但如果需要存储不用于视觉输出的东西，则可以手动向类中添加其他字段。\n\n如果你不在 `render()` 中使用某些东西，它就不应该在状态中。\n\n我们将在 `componentWillUnmount()`生命周期钩子中卸载计时器：\n\n```\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n```\n\n最后，我们实现了每秒钟执行的 `tick()` 方法。\n\n它将使用 `this.setState()` 来更新组件局部状态：\n\n```\nclass Clock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {date: new Date()};\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(\n      () => this.tick(),\n      1000\n    );\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  tick() {\n    this.setState({\n      date: new Date()\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Hello, world!</h1>\n        <h2>It is {this.state.date.toLocaleTimeString()}.</h2>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(\n  <Clock />,\n  document.getElementById(\'root\')\n);\n```\n\n[在 CodePen 中尝试](http://codepen.io/gaearon/pen/amqdNA?editors=0010)\n\n现在时钟每秒钟都会执行。\n\n让我们快速回顾一下发生了什么以及调用方法的顺序：\n\n1. 当 `<Clock />` 被传递给 `ReactDOM.render()` 时，React 调用 `Clock` 组件的构造函数。 由于 `Clock` 需要显示当前时间，所以使用包含当前时间的对象来初始化 `this.state` 。 我们稍后会更新此状态。\n2. React 然后调用 `Clock` 组件的 `render()` 方法。这是 React 了解屏幕上应该显示什么内容，然后 React 更新 DOM 以匹配 `Clock` 的渲染输出。\n3. 当 `Clock` 的输出插入到 DOM 中时，React 调用 `componentDidMount()` 生命周期钩子。 在其中，`Clock` 组件要求浏览器设置一个定时器，每秒钟调用一次 `tick()`。\n4. 浏览器每秒钟调用 `tick()` 方法。 在其中，`Clock` 组件通过使用包含当前时间的对象调用 `setState()` 来调度UI更新。 通过调用 `setState()` ，React 知道状态已经改变，并再次调用 `render()` 方法来确定屏幕上应当显示什么。 这一次，`render()` 方法中的 `this.state.date` 将不同，所以渲染输出将包含更新的时间，并相应地更新DOM。\n5. 一旦`Clock`组件被从DOM中移除，React会调用`componentWillUnmount()`这个钩子函数，定时器也就会被清除。\n\n## 正确地使用状态\n\n关于 `setState()` 这里有三件事情需要知道\n\n### 不要直接更新状态\n\n例如，此代码不会重新渲染组件：\n\n```\n// Wrong\nthis.state.comment = \'Hello\';\n```\n\n应当使用 `setState()`:\n\n```\n// Correct\nthis.setState({comment: \'Hello\'});\n```\n\n构造函数是唯一能够初始化 `this.state` 的地方。\n\n### 状态更新可能是异步的\n\nReact 可以将多个`setState()` 调用合并成一个调用来提高性能。\n\n因为 `this.props` 和 `this.state` 可能是异步更新的，你不应该依靠它们的值来计算下一个状态。\n\n例如，此代码可能无法更新计数器：\n\n```\n// Wrong\nthis.setState({\n  counter: this.state.counter + this.props.increment,\n});\n```\n\n要修复它，请使用第二种形式的 `setState()` 来接受一个函数而不是一个对象。 该函数将接收先前的状态作为第一个参数，将此次更新被应用时的props做为第二个参数：\n\n```\n// Correct\nthis.setState((prevState, props) => ({\n  counter: prevState.counter + props.increment\n}));\n```\n\n上方代码使用了[箭头函数](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Functions/Arrow_functions)，但它也适用于常规函数：\n\n```\n// Correct\nthis.setState(function(prevState, props) {\n  return {\n    counter: prevState.counter + props.increment\n  };\n});\n```\n\n### 状态更新合并\n\n当你调用 `setState()` 时，React 将你提供的对象合并到当前状态。\n\n例如，你的状态可能包含一些独立的变量：\n\n```\n  constructor(props) {\n    super(props);\n    this.state = {\n      posts: [],\n      comments: []\n    };\n  }\n```\n\n你可以调用 `setState()` 独立地更新它们：\n\n```\n  componentDidMount() {\n    fetchPosts().then(response => {\n      this.setState({\n        posts: response.posts\n      });\n    });\n\n    fetchComments().then(response => {\n      this.setState({\n        comments: response.comments\n      });\n    });\n  }\n```\n\n这里的合并是浅合并，也就是说`this.setState({comments})`完整保留了`this.state.posts`，但完全替换了`this.state.comments`。\n\n## 数据自顶向下流动\n\n父组件或子组件都不能知道某个组件是有状态还是无状态，并且它们不应该关心某组件是被定义为一个函数还是一个类。\n\n这就是为什么状态通常被称为局部或封装。 除了拥有并设置它的组件外，其它组件不可访问。\n\n组件可以选择将其状态作为属性传递给其子组件：\n\n```\n<h2>It is {this.state.date.toLocaleTimeString()}.</h2>\n```\n\n这也适用于用户定义的组件：\n\n```\n<FormattedDate date={this.state.date} />\n```\n\n`FormattedDate` 组件将在其属性中接收到 `date` 值，并且不知道它是来自 `Clock` 状态、还是来自 `Clock` 的属性、亦或手工输入：\n\n```\nfunction FormattedDate(props) {\n  return <h2>It is {props.date.toLocaleTimeString()}.</h2>;\n}\n```\n\n[在 CodePen 中尝试](http://codepen.io/gaearon/pen/zKRqNB?editors=0010)\n\n这通常被称为`自顶向下`或`单向`数据流。 任何状态始终由某些特定组件所有，并且从该状态导出的任何数据或 UI 只能影响树中`下方`的组件。\n\n如果你想象一个组件树作为属性的瀑布，每个组件的状态就像一个额外的水源，它连接在一个任意点，但也流下来。\n\n为了表明所有组件都是真正隔离的，我们可以创建一个 `App` 组件，它渲染三个`Clock`：\n\n```\nfunction App() {\n  return (\n    <div>\n      <Clock />\n      <Clock />\n      <Clock />\n    </div>\n  );\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById(\'root\')\n);\n```\n\n[在 CodePen 中尝试](http://codepen.io/gaearon/pen/vXdGmd?editors=0010)\n\n每个 `Clock` 建立自己的定时器并且独立更新。\n\n在 React 应用程序中，组件是有状态还是无状态被认为是可能随时间而变化的组件的实现细节。 可以在有状态组件中使用无状态组件，反之亦然。\n\n\n\n# 事件处理\n\nReact 元素的事件处理和 DOM元素的很相似。但是有一点语法上的不同:\n\n- React事件绑定属性的命名采用驼峰式写法，而不是小写。\n- 如果采用 JSX 的语法你需要传入一个函数作为事件处理函数，而不是一个字符串(DOM元素的写法)\n\n例如，传统的 HTML：\n\n```\n<button onclick="activateLasers()">\n  Activate Lasers\n</button>\n```\n\nReact 中稍稍有点不同：\n\n```\n<button onClick={activateLasers}>\n  Activate Lasers\n</button>\n```\n\n在 React 中另一个不同是你不能使用返回 `false` 的方式阻止默认行为。你必须明确的使用 `preventDefault`。例如，传统的 HTML 中阻止链接默认打开一个新页面，你可以这样写：\n\n```\n<a href="#" onclick="console.log(\'The link was clicked.\'); return false">\n  Click me\n</a>\n```\n\n在 React，应该这样来写：\n\n```\nfunction ActionLink() {\n  function handleClick(e) {\n    e.preventDefault();\n    console.log(\'The link was clicked.\');\n  }\n\n  return (\n    <a href="#" onClick={handleClick}>\n      Click me\n    </a>\n  );\n}\n```\n\n在这里，`e` 是一个合成事件。React 根据 [W3C spec](https://www.w3.org/TR/DOM-Level-3-Events/) 来定义这些合成事件，所以你不需要担心跨浏览器的兼容性问题。查看 [SyntheticEvent](https://react.docschina.org/docs/events.html) 参考指南来了解更多。\n\n使用 React 的时候通常你不需要使用 `addEventListener` 为一个已创建的 DOM 元素添加监听器。你仅仅需要在这个元素初始渲染的时候提供一个监听器。\n\n当你使用 [ES6 class](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Classes) 语法来定义一个组件的时候，事件处理器会成为类的一个方法。例如，下面的 `Toggle` 组件渲染一个让用户切换开关状态的按钮：\n\n```\nclass Toggle extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {isToggleOn: true};\n\n    // This binding is necessary to make `this` work in the callback\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.setState(prevState => ({\n      isToggleOn: !prevState.isToggleOn\n    }));\n  }\n\n  render() {\n    return (\n      <button onClick={this.handleClick}>\n        {this.state.isToggleOn ? \'ON\' : \'OFF\'}\n      </button>\n    );\n  }\n}\n\nReactDOM.render(\n  <Toggle />,\n  document.getElementById(\'root\')\n);\n```\n\n[在 CodePen 上试试。](http://codepen.io/gaearon/pen/xEmzGg?editors=0010)\n\n你必须谨慎对待 JSX 回调函数中的 `this`，类的方法默认是不会[绑定](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_objects/Function/bind) `this` 的。如果你忘记绑定 `this.handleClick` 并把它传入 `onClick`, 当你调用这个函数的时候 `this` 的值会是 `undefined`。\n\n这并不是 React 的特殊行为；它是[函数如何在 JavaScript 中运行](https://www.smashingmagazine.com/2014/01/understanding-javascript-function-prototype-bind/)的一部分。通常情况下，如果你没有在方法后面添加 `()` ，例如 `onClick={this.handleClick}`，你应该为这个方法绑定 `this`。\n\n如果使用 `bind` 让你很烦，这里有两种方式可以解决。如果你正在使用实验性的[属性初始化器语法](https://babeljs.io/docs/plugins/transform-class-properties/)，你可以使用属性初始化器来正确的绑定回调函数：\n\n```\nclass LoggingButton extends React.Component {\n  // This syntax ensures `this` is bound within handleClick.\n  // Warning: this is *experimental* syntax.\n  handleClick = () => {\n    console.log(\'this is:\', this);\n  }\n\n  render() {\n    return (\n      <button onClick={this.handleClick}>\n        Click me\n      </button>\n    );\n  }\n}\n```\n\n这个语法在 [Create React App](https://github.com/facebookincubator/create-react-app) 中默认开启。\n\n如果你没有使用属性初始化器语法，你可以在回调函数中使用 [箭头函数](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Functions/Arrow_functions)：\n\n```\nclass LoggingButton extends React.Component {\n  handleClick() {\n    console.log(\'this is:\', this);\n  }\n\n  render() {\n    // This syntax ensures `this` is bound within handleClick\n    return (\n      <button onClick={(e) => this.handleClick(e)}>\n        Click me\n      </button>\n    );\n  }\n}\n```\n\n使用这个语法有个问题就是每次 `LoggingButton` 渲染的时候都会创建一个不同的回调函数。在大多数情况下，这没有问题。然而如果这个回调函数作为一个属性值传入低阶组件，这些组件可能会进行额外的重新渲染。我们通常建议在构造函数中绑定或使用属性初始化器语法来避免这类性能问题。\n\n## 向事件处理程序传递参数\n\n通常我们会为事件处理程序传递额外的参数。例如，若是 `id` 是你要删除那一行的 id，以下两种方式都可以向事件处理程序传递参数：\n\n```\n<button onClick={(e) => this.deleteRow(id, e)}>Delete Row</button>\n<button onClick={this.deleteRow.bind(this, id)}>Delete Row</button>\n```\n\n上述两种方式是等价的，分别通过 [arrow functions](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions) 和 [`Function.prototype.bind`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_objects/Function/bind) 来为事件处理函数传递参数。\n\n上面两个例子中，参数 `e` 作为 React 事件对象将会被作为第二个参数进行传递。通过箭头函数的方式，事件对象必须显式的进行传递，但是通过 `bind` 的方式，事件对象以及更多的参数将会被隐式的进行传递。\n\n值得注意的是，通过 `bind` 方式向监听函数传参，在类组件中定义的监听函数，事件对象 `e` 要排在所传递参数的后面，例如:\n\n```\nclass Popper extends React.Component{\n    constructor(){\n        super();\n        this.state = {name:\'Hello world!\'};\n    }\n    \n    preventPop(name, e){    //事件对象e要放在最后\n        e.preventDefault();\n        alert(name);\n    }\n    \n    render(){\n        return (\n            <div>\n                <p>hello</p>\n                {/* Pass params via bind() method. */}\n                <a href="https://reactjs.org" onClick={this.preventPop.bind(this,this.state.name)}>Click</a>\n            </div>\n        );\n    }\n}\n```\n\n[编辑本页面](https://github.com/discountry/react/tree/master/content/docs/handling-events.md)\n\n\n\n# 条件渲染\n\n在 React 中，你可以创建不同的组件来封装各种你需要的行为。然后还可以根据应用的状态变化只渲染其中的一部分。\n\nReact 中的条件渲染和 JavaScript 中的一致，使用 JavaScript 操作符 [`if`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/if...else) 或[条件运算符](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Operators/Conditional_Operator)来创建表示当前状态的元素，然后让 React 根据它们来更新 UI。\n\n先来看两个组件:\n\n```\nfunction UserGreeting(props) {\n  return <h1>Welcome back!</h1>;\n}\n\nfunction GuestGreeting(props) {\n  return <h1>Please sign up.</h1>;\n}\n```\n\n我们将创建一个 `Greeting` 组件，它会根据用户是否登录来显示其中之一：\n\n```\nfunction Greeting(props) {\n  const isLoggedIn = props.isLoggedIn;\n  if (isLoggedIn) {\n    return <UserGreeting />;\n  }\n  return <GuestGreeting />;\n}\n\nReactDOM.render(\n  // Try changing to isLoggedIn={true}:\n  <Greeting isLoggedIn={false} />,\n  document.getElementById(\'root\')\n);\n```\n\n[在 CodePen 上试试。](https://codepen.io/gaearon/pen/ZpVxNq?editors=0011)\n\n此示例根据 `isLoggedIn` 的值渲染不同的问候语。\n\n### 元素变量\n\n你可以使用变量来储存元素。它可以帮助你有条件的渲染组件的一部分，而输出的其他部分不会更改。\n\n再来看两个新组件分别代表注销和登录：\n\n```\nfunction LoginButton(props) {\n  return (\n    <button onClick={props.onClick}>\n      Login\n    </button>\n  );\n}\n\nfunction LogoutButton(props) {\n  return (\n    <button onClick={props.onClick}>\n      Logout\n    </button>\n  );\n}\n```\n\n在下面的例子中，我们将要创建一个名为 `LoginControl` 的[有状态的组件](https://react.docschina.org/docs/state-and-lifecycle.html#%E4%B8%BA%E4%B8%80%E4%B8%AA%E7%B1%BB%E6%B7%BB%E5%8A%A0%E5%B1%80%E9%83%A8%E7%8A%B6%E6%80%81)。\n\n它会根据当前的状态来渲染 `<LoginButton />` 或 `<LogoutButton />`，它也将渲染前面例子中的 `<Greeting />`。\n\n```\nclass LoginControl extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleLoginClick = this.handleLoginClick.bind(this);\n    this.handleLogoutClick = this.handleLogoutClick.bind(this);\n    this.state = {isLoggedIn: false};\n  }\n\n  handleLoginClick() {\n    this.setState({isLoggedIn: true});\n  }\n\n  handleLogoutClick() {\n    this.setState({isLoggedIn: false});\n  }\n\n  render() {\n    const isLoggedIn = this.state.isLoggedIn;\n\n    let button = null;\n    if (isLoggedIn) {\n      button = <LogoutButton onClick={this.handleLogoutClick} />;\n    } else {\n      button = <LoginButton onClick={this.handleLoginClick} />;\n    }\n\n    return (\n      <div>\n        <Greeting isLoggedIn={isLoggedIn} />\n        {button}\n      </div>\n    );\n  }\n}\n\nReactDOM.render(\n  <LoginControl />,\n  document.getElementById(\'root\')\n);\n```\n\n[在 CodePen 上试试。](https://codepen.io/gaearon/pen/QKzAgB?editors=0010)\n\n声明变量并使用 `if` 语句是条件渲染组件的不错的方式，但有时你也想使用更简洁的语法，在 JSX 中有如下几种方法。\n\n### 与运算符 &&\n\n你可以通过用花括号包裹代码[在 JSX 中嵌入任何表达式](https://react.docschina.org/docs/introducing-jsx.html#%E5%9C%A8JSX%E4%B8%AD%E4%BD%BF%E7%94%A8%E8%A1%A8%E8%BE%BE%E5%BC%8F) ，也包括 JavaScript 的逻辑与 &&，它可以方便地条件渲染一个元素。\n\n```\nfunction Mailbox(props) {\n  const unreadMessages = props.unreadMessages;\n  return (\n    <div>\n      <h1>Hello!</h1>\n      {unreadMessages.length > 0 &&\n        <h2>\n          You have {unreadMessages.length} unread messages.\n        </h2>\n      }\n    </div>\n  );\n}\n\nconst messages = [\'React\', \'Re: React\', \'Re:Re: React\'];\nReactDOM.render(\n  <Mailbox unreadMessages={messages} />,\n  document.getElementById(\'root\')\n);\n```\n\n[在 CodePen 上试试。](https://codepen.io/gaearon/pen/ozJddz?editors=0010)\n\n之所以能这样做，是因为在 JavaScript 中，`true && expression` 总是返回 `expression`，而 `false && expression` 总是返回 `false`。\n\n因此，如果条件是 `true`，`&&` 右侧的元素就会被渲染，如果是 `false`，React 会忽略并跳过它。\n\n### 三目运算符\n\n条件渲染的另一种方法是使用 JavaScript 的条件运算符 [`condition ? true : false`](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Operators/Conditional_Operator)。\n\n在下面的例子中，我们用它来有条件的渲染一小段文本。\n\n```\nrender() {\n  const isLoggedIn = this.state.isLoggedIn;\n  return (\n    <div>\n      The user is <b>{isLoggedIn ? \'currently\' : \'not\'}</b> logged in.\n    </div>\n  );\n}\n```\n\n同样它也可以用在较大的表达式中，虽然不太直观：\n\n```\nrender() {\n  const isLoggedIn = this.state.isLoggedIn;\n  return (\n    <div>\n      {isLoggedIn ? (\n        <LogoutButton onClick={this.handleLogoutClick} />\n      ) : (\n        <LoginButton onClick={this.handleLoginClick} />\n      )}\n    </div>\n  );\n}\n```\n\n像在 JavaScript 中一样，你可以根据团队的习惯选择更易读的方式。还要记住如果条件变得过于复杂，可能就是[提取组件](https://react.docschina.org/docs/components-and-props.html#%E6%8F%90%E5%8F%96%E7%BB%84%E4%BB%B6)的好时机了。\n\n### 阻止组件渲染\n\n在极少数情况下，你可能希望隐藏组件，即使它被其他组件渲染。让 `render` 方法返回 `null`而不是它的渲染结果即可实现。\n\n在下面的例子中，`<WarningBanner />` 根据属性 `warn` 的值条件渲染。如果 `warn` 的值是 `false`，则组件不会渲染：\n\n```\nfunction WarningBanner(props) {\n  if (!props.warn) {\n    return null;\n  }\n\n  return (\n    <div className="warning">\n      Warning!\n    </div>\n  );\n}\n\nclass Page extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {showWarning: true}\n    this.handleToggleClick = this.handleToggleClick.bind(this);\n  }\n\n  handleToggleClick() {\n    this.setState(prevState => ({\n      showWarning: !prevState.showWarning\n    }));\n  }\n\n  render() {\n    return (\n      <div>\n        <WarningBanner warn={this.state.showWarning} />\n        <button onClick={this.handleToggleClick}>\n          {this.state.showWarning ? \'Hide\' : \'Show\'}\n        </button>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(\n  <Page />,\n  document.getElementById(\'root\')\n);\n```\n\n[在 CodePen 上试试。](https://codepen.io/gaearon/pen/Xjoqwm?editors=0010)\n\n组件的 `render` 方法返回 `null` 并不会影响该组件生命周期方法的回调。例如，`componentWillUpdate` 和 `componentDidUpdate` 依然可以被调用。\n\n\n\n# 列表 & Keys\n\n首先，让我们看下在Javascript中如何转化列表\n\n如下代码，我们使用[`map()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)函数让数组中的每一项翻倍,我们得到了一个新的数列`doubled`\n\n```\nconst numbers = [1, 2, 3, 4, 5];\nconst doubled = numbers.map((number) => number * 2);\nconsole.log(doubled);\n```\n\n代码打印出`[2, 4, 6, 8, 10]`\n\n在React中，把数组转化为数列[元素](https://react.docschina.org/docs/rendering-elements.html)的过程是相似的\n\n### 渲染多个组件\n\n你可以通过使用`{}`在JSX内构建一个[元素集合](https://react.docschina.org/docs/introducing-jsx.html#JSX%E5%B5%8C%E5%A5%97)\n\n下面，我们使用Javascript中的[`map()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)方法遍历`numbers`数组。对数组中的每个元素返回`<li>`标签，最后我们得到一个数组`listItems`\n\n```\nconst numbers = [1, 2, 3, 4, 5];\nconst listItems = numbers.map((number) =>\n  <li>{number}</li>\n);\n```\n\n我们把整个`listItems`插入到`ul`元素中，然后[渲染进DOM](https://react.docschina.org/docs/rendering-elements.html#%E5%B0%86%E5%85%83%E7%B4%A0%E6%B8%B2%E6%9F%93%E5%88%B0DOM%E4%B8%AD):\n\n```\nReactDOM.render(\n  <ul>{listItems}</ul>,\n  document.getElementById(\'root\')\n);\n```\n\n[在 CodePen 上试试。](https://codepen.io/gaearon/pen/GjPyQr?editors=0011)\n\n这段代码生成了一个1到5的数字列表\n\n### 基础列表组件\n\n通常你需要渲染一个列表到[组件](https://react.docschina.org/docs/components-and-props.html)中\n\n我们可以把前面的例子重构成一个组件。这个组件接收`numbers`数组作为参数，输出一个无序列表。\n\n```\nfunction NumberList(props) {\n  const numbers = props.numbers;\n  const listItems = numbers.map((number) =>\n    <li>{number}</li>\n  );\n  return (\n    <ul>{listItems}</ul>\n  );\n}\n\nconst numbers = [1, 2, 3, 4, 5];\nReactDOM.render(\n  <NumberList numbers={numbers} />,\n  document.getElementById(\'root\')\n);\n```\n\n当我们运行这段代码，将会看到一个警告 `a key should be provided for list items` ，意思是当你创建一个元素时，必须包括一个特殊的 `key` 属性。我们将在下一节讨论这是为什么。\n\n让我们来给每个列表元素分配一个 `key` 来解决上面的那个警告：\n\n```\nfunction NumberList(props) {\n  const numbers = props.numbers;\n  const listItems = numbers.map((number) =>\n    <li key={number.toString()}>\n      {number}\n    </li>\n  );\n  return (\n    <ul>{listItems}</ul>\n  );\n}\n\nconst numbers = [1, 2, 3, 4, 5];\nReactDOM.render(\n  <NumberList numbers={numbers} />,\n  document.getElementById(\'root\')\n);\n```\n\n[在 CodePen 上试试。](https://codepen.io/gaearon/pen/jrXYRR?editors=0011)\n\n## Keys\n\nKeys可以在DOM中的某些元素被增加或删除的时候帮助React识别哪些元素发生了变化。因此你应当给数组中的每一个元素赋予一个确定的标识。\n\n```\nconst numbers = [1, 2, 3, 4, 5];\nconst listItems = numbers.map((number) =>\n  <li key={number.toString()}>\n    {number}\n  </li>\n);\n```\n\n一个元素的key最好是这个元素在列表中拥有的一个独一无二的字符串。通常，我们使用来自数据的id作为元素的key:\n\n```\nconst todoItems = todos.map((todo) =>\n  <li key={todo.id}>\n    {todo.text}\n  </li>\n);\n```\n\n当元素没有确定的id时，你可以使用他的序列号索引index作为key\n\n```\nconst todoItems = todos.map((todo, index) =>\n  // Only do this if items have no stable IDs\n  <li key={index}>\n    {todo.text}\n  </li>\n);\n```\n\n如果列表可以重新排序，我们不建议使用索引来进行排序，因为这会导致渲染变得很慢。如果你想要了解更多，请点击[深度解析key的必要性](https://react.docschina.org/docs/reconciliation.html#%E9%80%92%E5%BD%92%E5%AD%90%E8%8A%82%E7%82%B9)\n\n### 用keys提取组件\n\n元素的key只有在它和它的兄弟节点对比时才有意义。\n\n比方说，如果你提取出一个`ListItem`组件，你应该把key保存在数组中的这个`<ListItem />`元素上，而不是放在`ListItem`组件中的`<li>`元素上。\n\n**错误的示范**\n\n```\nfunction ListItem(props) {\n  const value = props.value;\n  return (\n    // 错啦！你不需要在这里指定key:\n    <li key={value.toString()}>\n      {value}\n    </li>\n  );\n}\n\nfunction NumberList(props) {\n  const numbers = props.numbers;\n  const listItems = numbers.map((number) =>\n    //错啦！元素的key应该在这里指定：\n    <ListItem value={number} />\n  );\n  return (\n    <ul>\n      {listItems}\n    </ul>\n  );\n}\n\nconst numbers = [1, 2, 3, 4, 5];\nReactDOM.render(\n  <NumberList numbers={numbers} />,\n  document.getElementById(\'root\')\n);\n```\n\n**key的正确使用方式**\n\n```\nfunction ListItem(props) {\n  // 对啦！这里不需要指定key:\n  return <li>{props.value}</li>;\n}\n\nfunction NumberList(props) {\n  const numbers = props.numbers;\n  const listItems = numbers.map((number) =>\n    // 又对啦！key应该在数组的上下文中被指定\n    <ListItem key={number.toString()}\n              value={number} />\n  );\n  return (\n    <ul>\n      {listItems}\n    </ul>\n  );\n}\n\nconst numbers = [1, 2, 3, 4, 5];\nReactDOM.render(\n  <NumberList numbers={numbers} />,\n  document.getElementById(\'root\')\n);\n```\n\n[在 CodePen 上试试。](https://codepen.io/rthor/pen/QKzJKG?editors=0010)\n\n当你在`map()`方法的内部调用元素时，你最好随时记得为每一个元素加上一个独一无二的`key`。\n\n### 元素的key在他的兄弟元素之间应该唯一\n\n数组元素中使用的key在其兄弟之间应该是独一无二的。然而，它们不需要是全局唯一的。当我们生成两个不同的数组时，我们可以使用相同的键\n\n```\nfunction Blog(props) {\n  const sidebar = (\n    <ul>\n      {props.posts.map((post) =>\n        <li key={post.id}>\n          {post.title}\n        </li>\n      )}\n    </ul>\n  );\n  const content = props.posts.map((post) =>\n    <div key={post.id}>\n      <h3>{post.title}</h3>\n      <p>{post.content}</p>\n    </div>\n  );\n  return (\n    <div>\n      {sidebar}\n      <hr />\n      {content}\n    </div>\n  );\n}\n\nconst posts = [\n  {id: 1, title: \'Hello World\', content: \'Welcome to learning React!\'},\n  {id: 2, title: \'Installation\', content: \'You can install React from npm.\'}\n];\nReactDOM.render(\n  <Blog posts={posts} />,\n  document.getElementById(\'root\')\n);\n```\n\n[在 CodePen 上试试。](https://codepen.io/gaearon/pen/NRZYGN?editors=0010)\n\nkey会作为给React的提示，但不会传递给你的组件。如果您的组件中需要使用和`key`相同的值，请将其作为属性传递：\n\n```\nconst content = posts.map((post) =>\n  <Post\n    key={post.id}\n    id={post.id}\n    title={post.title} />\n);\n```\n\n上面例子中，`Post`组件可以读出`props.id`，但是不能读出`props.key`\n\n### 在jsx中嵌入map()\n\n在上面的例子中，我们声明了一个单独的`listItems`变量并将其包含在JSX中\n\n```\nfunction NumberList(props) {\n  const numbers = props.numbers;\n  const listItems = numbers.map((number) =>\n    <ListItem key={number.toString()}\n              value={number} />\n  );\n  return (\n    <ul>\n      {listItems}\n    </ul>\n  );\n}\n```\n\nJSX允许在大括号中[嵌入任何表达式](https://react.docschina.org/docs/introduction-jsx.html%EF%BC%83JSX%E5%B5%8C%E5%A5%97)，所以我们可以在`map()`中这样使用：\n\n```\nfunction NumberList(props) {\n  const numbers = props.numbers;\n  return (\n    <ul>\n      {numbers.map((number) =>\n        <ListItem key={number.toString()}\n                  value={number} />\n      )}\n    </ul>\n  );\n}\n```\n\n[在 CodePen 上试试。](https://codepen.io/gaearon/pen/BLvYrB?editors=0010)\n\n这么做有时可以使你的代码更清晰，但有时这种风格也会被滥用。就像在JavaScript中一样，何时需要为了可读性提取出一个变量，这完全取决于你。但请记住，如果一个`map()`嵌套了太多层级，那可能就是你[提取出组件](https://react.docschina.org/docs/components-and-props.html#%E6%8F%90%E5%8F%96%E7%BB%84%E4%BB%B6)的一个好时机。\n\n\n\n# 表单\n\nHTML表单元素与React中的其他DOM元素有所不同,因为表单元素生来就保留一些内部状态。例如，下面这个表单只接受一个唯一的name。\n\n```\n<form>\n  <label>\n    Name:\n    <input type="text" name="name" />\n  </label>\n  <input type="submit" value="Submit" />\n</form>\n```\n\n当用户提交表单时，HTML的默认行为会使这个表单跳转到一个新页面。在React中亦是如此。但大多数情况下，我们都会构造一个处理提交表单并可访问用户输入表单数据的函数。实现这一点的标准方法是使用一种称为“受控组件”的技术。\n\n## 受控组件\n\n在HTML当中，像`<input>`,`<textarea>`, 和 `<select>`这类表单元素会维持自身状态，并根据用户输入进行更新。但在React中，可变的状态通常保存在组件的状态属性中，并且只能用 [`setState()`](https://react.docschina.org/docs/react-component.html#setstate) 方法进行更新。\n\n我们通过使react变成一种单一数据源的状态来结合二者。React负责渲染表单的组件仍然控制用户后续输入时所发生的变化。相应的，其值由React控制的输入表单元素称为“受控组件”。\n\n例如，我们想要使上个例子中在提交表单时输出name,我们可以写成“受控组件”的形式:\n\n```\nclass NameForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {value: \'\'};\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({value: event.target.value});\n  }\n\n  handleSubmit(event) {\n    alert(\'A name was submitted: \' + this.state.value);\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          Name:\n          <input type="text" value={this.state.value} onChange={this.handleChange} />\n        </label>\n        <input type="submit" value="Submit" />\n      </form>\n    );\n  }\n}\n```\n\n[在 CodePen 上尝试。](https://codepen.io/gaearon/pen/VmmPgp?editors=0010)\n\n由于 `value` 属性是在我们的表单元素上设置的，因此显示的值将始终为 React数据源上`this.state.value` 的值。由于每次按键都会触发 `handleChange` 来更新当前React的state，所展示的值也会随着不同用户的输入而更新。\n\n使用”受控组件”,每个状态的改变都有一个与之相关的处理函数。这样就可以直接修改或验证用户输入。例如，我们如果想限制输入全部是大写字母，我们可以将`handleChange` 写为如下：\n\n```\nhandleChange(event) {\n  this.setState({value: event.target.value.toUpperCase()});\n}\n```\n\n## textarea 标签\n\n在HTML当中，`<textarea>` 元素通过子节点来定义它的文本内容\n\n```\n<textarea>\n  Hello there, this is some text in a text area\n</textarea>\n```\n\n在React中，`<textarea>`会用`value`属性来代替。这样的话，表单中的`<textarea>` 非常类似于使用单行输入的表单：\n\n```\nclass EssayForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: \'Please write an essay about your favorite DOM element.\'\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({value: event.target.value});\n  }\n\n  handleSubmit(event) {\n    alert(\'An essay was submitted: \' + this.state.value);\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          Name:\n          <textarea value={this.state.value} onChange={this.handleChange} />\n        </label>\n        <input type="submit" value="Submit" />\n      </form>\n    );\n  }\n}\n```\n\n注意`this.state.value`是在构造函数中初始化，这样文本区域就能获取到其中的文本。\n\n## select 标签\n\n在HTML当中，`<select>`会创建一个下拉列表。例如这个HTML就创建了一个下拉列表的原型。\n\n```\n<select>\n  <option value="grapefruit">Grapefruit</option>\n  <option value="lime">Lime</option>\n  <option selected value="coconut">Coconut</option>\n  <option value="mango">Mango</option>\n</select>\n```\n\n请注意，Coconut选项最初由于`selected`属性是被选中的。在React中，并不使用之前的`selected`属性，而在根`select`标签上用`value`属性来表示选中项。这在受控组件中更为方便，因为你只需要在一个地方来更新组件。例如：\n\n```\nclass FlavorForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {value: \'coconut\'};\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({value: event.target.value});\n  }\n\n  handleSubmit(event) {\n    alert(\'Your favorite flavor is: \' + this.state.value);\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          Pick your favorite La Croix flavor:\n          <select value={this.state.value} onChange={this.handleChange}>\n            <option value="grapefruit">Grapefruit</option>\n            <option value="lime">Lime</option>\n            <option value="coconut">Coconut</option>\n            <option value="mango">Mango</option>\n          </select>\n        </label>\n        <input type="submit" value="Submit" />\n      </form>\n    );\n  }\n}\n```\n\n[在 CodePen 上尝试。](https://codepen.io/gaearon/pen/JbbEzX?editors=0010)\n\n总之，`<input type="text">`, `<textarea>`, 和 `<select>` 都十分类似 - 他们都通过传入一个`value`属性来实现对组件的控制。\n\n## file input 标签\n\n在HTML当中，`<input type="file">` 允许用户从他们的存储设备中选择一个或多个文件以提交表单的方式上传到服务器上, 或者通过 Javascript 的 [File API](https://developer.mozilla.org/en-US/docs/Web/API/File/Using_files_from_web_applications) 对文件进行操作 。\n\n```\n<input type="file" />\n```\n\n由于该标签的 `value` 属性是只读的， 所以它是 React 中的一个**非受控组件**。我们会把它和其他非受控组件一起在[后面的章节](https://reactjs.org/docs/uncontrolled-components.html#the-file-input-tag)进行详细的介绍。\n\n## 多个输入的解决方法\n\n当你有处理多个受控的`input`元素时，你可以通过给每个元素添加一个`name`属性，来让处理函数根据 `event.target.name`的值来选择做什么。\n\n例如:\n\n```\nclass Reservation extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isGoing: true,\n      numberOfGuests: 2\n    };\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.type === \'checkbox\' ? target.checked : target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    });\n  }\n\n  render() {\n    return (\n      <form>\n        <label>\n          Is going:\n          <input\n            name="isGoing"\n            type="checkbox"\n            checked={this.state.isGoing}\n            onChange={this.handleInputChange} />\n        </label>\n        <br />\n        <label>\n          Number of guests:\n          <input\n            name="numberOfGuests"\n            type="number"\n            value={this.state.numberOfGuests}\n            onChange={this.handleInputChange} />\n        </label>\n      </form>\n    );\n  }\n}\n```\n\n[在 CodePen 上尝试。](https://codepen.io/gaearon/pen/wgedvV?editors=0010)\n\n注意我们如何使用ES6当中的[计算属性名](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Operators/Object_initializer#Computed_property_names)语法来更新与给定输入名称相对应的状态键：\n\n```\nthis.setState({\n  [name]: value\n});\n```\n\n相当于如下ES5语法\n\n```\nvar partialState = {};\npartialState[name] = value;\nthis.setState(partialState);\n```\n\n同样由于 `setState()` 自动[将部分状态合并到当前状态](https://react.docschina.org/docs/state-and-lifecycle.html#%E7%8A%B6%E6%80%81%E6%9B%B4%E6%96%B0%E5%90%88%E5%B9%B6)，因此我们只需要使用发生变化的部分调用它。\n\n## 受控组件的替代方法\n\n有时使用受控组件可能很繁琐，因为您要为数据可能发生变化的每一种方式都编写一个事件处理程序，并通过一个组件来管理全部的状态。当您将预先存在的代码库转换为React或将React应用程序与非React库集成时，这可能变得特别烦人。在以上情况下，你或许应该看看[非受控组件](https://react.docschina.org/docs/uncontrolled-components.html)，这是一种表单的替代技术。\n\n\n\n# 状态提升\n\n使用 react 经常会遇到几个组件需要共用状态数据的情况。这种情况下，我们最好将这部分共享的状态提升至他们最近的父组件当中进行管理。我们来看一下具体如何操作吧。\n\n这部分内容当中，我们会创建一个温度计算器来计算水是否会在给定的温度下烧开。\n\n开始呢，我们先创建一个名为 `BoilingVerdict` 的组件。它会接受 `celsius` 这个温度变量作为它的 props 属性，最后根据温度判断返回内容：\n\n```\nfunction BoilingVerdict(props) {\n  if (props.celsius >= 100) {\n    return <p>水会烧开</p>;\n  }\n  return <p>水不会烧开</p>;\n}\n```\n\n接下来，我们写一个名为 `Calculator` 的组件。它会渲染一个 `<input>` 来接受用户输入，然后将输入的温度值保存在 `this.state.temperature` 当中。\n\n之后呢，它会根据输入的值渲染出 `BoilingVerdict` 组件。\n\n```\nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {temperature: \'\'};\n  }\n\n  handleChange(e) {\n    this.setState({temperature: e.target.value});\n  }\n\n  render() {\n    const temperature = this.state.temperature;\n    return (\n      <fieldset>\n        <legend>输入一个摄氏温度</legend>\n        <input\n          value={temperature}\n          onChange={this.handleChange} />\n        <BoilingVerdict\n          celsius={parseFloat(temperature)} />\n      </fieldset>\n    );\n  }\n}\n```\n\n[在 CodePen 上试试。](http://codepen.io/valscion/pen/VpZJRZ?editors=0010)\n\n## 添加第二个输入框\n\n现在我们有了一个新的需求，在提供摄氏度输入的基础之上，再提供一个华氏温度输入，并且它们能保持同步。\n\n我们可以通过从 `Calculator` 组件中抽离一个 `TemperatureInput` 组件出来。我们也会给它添加一个值为 `c` 或 `f` 的表示温度单位的 `scale` 属性。\n\n```\nconst scaleNames = {\n  c: \'Celsius\',\n  f: \'Fahrenheit\'\n};\n\nclass TemperatureInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {temperature: \'\'};\n  }\n\n  handleChange(e) {\n    this.setState({temperature: e.target.value});\n  }\n\n  render() {\n    const temperature = this.state.temperature;\n    const scale = this.props.scale;\n    return (\n      <fieldset>\n        <legend>Enter temperature in {scaleNames[scale]}:</legend>\n        <input value={temperature}\n               onChange={this.handleChange} />\n      </fieldset>\n    );\n  }\n}\n```\n\n我们现在可以对`Calculator`稍作修改，来渲染两个不同的温度输入框。\n\n```\nclass Calculator extends React.Component {\n  render() {\n    return (\n      <div>\n        <TemperatureInput scale="c" />\n        <TemperatureInput scale="f" />\n      </div>\n    );\n  }\n}\n```\n\n[在 CodePen 上试试。](http://codepen.io/valscion/pen/GWKbao?editors=0010)\n\n我们现在有了两个输入框，但是当你在其中一个输入时，另一个并不会更新。这显然是不符合我们的需求的。\n\n另外，我们此时也不能从 `Calculator` 组件中展示 `BoilingVerdict` 的渲染结果。因为现在表示温度的状态数据只存在于 `TemperatureInput` 组件当中。\n\n## 写出转换函数\n\n首先，我们写两个可以将摄氏度和华氏度互相转换的函数。\n\n```\nfunction toCelsius(fahrenheit) {\n  return (fahrenheit - 32) * 5 / 9;\n}\n\nfunction toFahrenheit(celsius) {\n  return (celsius * 9 / 5) + 32;\n}\n```\n\n这两个函数只是单纯转换数字。我们还需要另外一个函数，它接受两个参数，第一个接受字符串 `temperature` 变量，第二个参数则是上面编写的单位转换函数。最后会返回一个字符串。我们会使用它来根据一个输入框的输入计算出另一个输入框的值。\n\n我们最后取到输出的小数点后三位，而 `temperature` 输入不合法的时候，这个函数则会返回空字符串。\n\n```\nfunction tryConvert(temperature, convert) {\n  const input = parseFloat(temperature);\n  if (Number.isNaN(input)) {\n    return \'\';\n  }\n  const output = convert(input);\n  const rounded = Math.round(output * 1000) / 1000;\n  return rounded.toString();\n}\n```\n\n举两个例子，`tryConvert(\'abc\', toCelsius)` 会返回空字符串，而 `tryConvert(\'10.22\', toFahrenheit)` 会返回 `\'50.396\'`。\n\n## 状态提升\n\n到这一步为止，两个`TemperatureInput`组件都是在自己的 state 中独立保存数据。\n\n```\nclass TemperatureInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {temperature: \'\'};\n  }\n\n  handleChange(e) {\n    this.setState({temperature: e.target.value});\n  }\n\n  render() {\n    const temperature = this.state.temperature;\n```\n\n但是，我们想要的是这两个输入能保持同步。当我们更新摄氏输入（Celsius）时，华氏度（Fahrenheit ）这个框应该能显示转换后的的温度数值，反之亦然。\n\n在React中，状态分享是通过将state数据提升至离需要这些数据的组件最近的父组件来完成的。这就是所谓的**状态提升**。我们会将 `TemperatureInput` 组件自身保存的 state 移到 `Calculator` 中。\n\n如果 `Calculator` 组件拥有了提升上来共享的状态数据，那它就会成为两个温度输入组件的“数据源”。它会传递给下面温度输入组件一致的数据。由于两个 `TemperatureInput` 温度组件的props属性都是来源于共同的父组件 `Calculator`，它们的数据也会保持同步。\n\n让我们一步一步来分析如何操作。\n\n首先，我们在 `TemperatureInput` 组件中将 `this.state.temperature` 替换为 `this.props.temperature` 。从现在开始，我们假定 `this.props.temperature` 属性已经存在了，不过之后仍然需要将数据从 `Calculator` 组件中传进去。\n\n```\n  render() {\n    // 之前的代码: const temperature = this.state.temperature;\n    const temperature = this.props.temperature;\n```\n\n我们首先知道[props是只读的](https://react.docschina.org/docs/components-and-props.html#props-are-read-only) 这么一个事实。而之前`temperature`变量是被保存在其自身的 state 中的，`TemperatureInput` 组件只需要调用 `this.setState()` 就能改变它。但现在，`temperature` 是作为 prop 从父组件传递下来的，`TemperatureInput` 组件是没有控制权的。\n\n在React中，这个问题通常是通过让组件“受控”来解决。就像 `<input>` 能够接受 `value` 和 `onChange` 这两个prop属性值，自定义组件 `TemperatureInput` 也能接受来自 `Calculator`父组件的 `temperature` 变量和 `onTemperatureChange` 方法作为props属性值。\n\n做完这些，当 `TemperatureInput` 组件更新它的温度数值时，就会调用 `this.props.onTemperatureChange` 方法。\n\n```\n  handleChange(e) {\n    // 之前的代码: this.setState({temperature: e.target.value});\n    this.props.onTemperatureChange(e.target.value);\n```\n\n需要指出的是，我们现在定义的 `temperature` 和 `onTemperatureChange` 这些prop属性的命名没有特殊含义，我们也可以起个其他任何的名字，像是`value`和`onChange`这些只是命名习惯罢了。\n\n`onTemperatureChange` 和 `temperature` 两个 props 属性均由父组件 `Calculator` 提供。父组件可以通过自身的方法来响应状态数据的改变，从而使用新的值来重新渲染两个输入框组件。不过我们先放着，最后再来修改它。\n\n在我们改写 `Calculator` 组件之前，我们先花点时间总结下 `TemperatureInput` 组件的改变。我们将其自身的 state 从组件中移除，使用 `this.props.temperature` 替代 `this.state.temperature` ，当我们想要响应数据改变时，使用父组件提供的 `this.props.onTemperatureChange()` 而不是`this.setState()` 方法：\n\n```\nclass TemperatureInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    this.props.onTemperatureChange(e.target.value);\n  }\n\n  render() {\n    const temperature = this.props.temperature;\n    const scale = this.props.scale;\n    return (\n      <fieldset>\n        <legend>在{scaleNames[scale]}:中输入温度数值</legend>\n        <input value={temperature}\n               onChange={this.handleChange} />\n      </fieldset>\n    );\n  }\n}\n```\n\n现在让我们来看看 `Calculator` 组件。\n\n我们将会在它的 state 中存储之前输入框组件的 `temperature` 和 `scale` 值，这是从输入框组件中“提升”上来的 state，它将会成为两个输入框组件的“数据源”。这是我们所需要的能够重新渲染并且表示两个不同输入组件的最基本的数据。\n\n举个例子，假如我们在摄氏度输入框中输入37，那么 `Calculator` 的 state 就是：\n\n```\n{\n  temperature: \'37\',\n  scale: \'c\'\n}\n```\n\n如果我们之后在华氏度输入框输入212，那么 `Calculator` 的状态数据就会是：\n\n```\n{\n  temperature: \'212\',\n  scale: \'f\'\n}\n```\n\n其实我们可以一起保存两个输入的值，但这么做似乎没有必要。保存最近 改变的值和所需标识的温标单位就足够了。我们可以只需基于当前的 `temperature` 和 `scale` 计算出另一个输入框中的值。\n\n现在这两个输入框中的值能保持同步了，因为它们使用的是通过同一个 state 计算出来的值。\n\n```\nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleCelsiusChange = this.handleCelsiusChange.bind(this);\n    this.handleFahrenheitChange = this.handleFahrenheitChange.bind(this);\n    this.state = {temperature: \'\', scale: \'c\'};\n  }\n\n  handleCelsiusChange(temperature) {\n    this.setState({scale: \'c\', temperature});\n  }\n\n  handleFahrenheitChange(temperature) {\n    this.setState({scale: \'f\', temperature});\n  }\n\n  render() {\n    const scale = this.state.scale;\n    const temperature = this.state.temperature;\n    const celsius = scale === \'f\' ? tryConvert(temperature, toCelsius) : temperature;\n    const fahrenheit = scale === \'c\' ? tryConvert(temperature, toFahrenheit) : temperature;\n\n    return (\n      <div>\n        <TemperatureInput\n          scale="c"\n          temperature={celsius}\n          onTemperatureChange={this.handleCelsiusChange} />\n        <TemperatureInput\n          scale="f"\n          temperature={fahrenheit}\n          onTemperatureChange={this.handleFahrenheitChange} />\n        <BoilingVerdict\n          celsius={parseFloat(celsius)} />\n      </div>\n    );\n  }\n}\n```\n\n[在 Codepen 上试试。](http://codepen.io/valscion/pen/jBNjja?editors=0010)\n\n现在，无论你编辑哪一个输入框，`Calculator` 组件中 `this.state.temperature` 和 `this.state.scale` 都会更新。其中之一的输入框得到用户原样输入的值，另一个输入框总是显示基于这个值计算出的结果。\n\n让我们梳理下编辑输入框时所发生的一系列活动：\n\n- React在DOM原生组件`<input>`上调用指定的`onChange`函数。在本例中，指的是`TemperatureInput`组件上的`handleChange`函数。\n- `TemperatureInput`组件的`handleChange`函数会在值发生变化时调用`this.props.onTemperatureChange()`函数。这些props属性，像`onTemperatureChange`都是由父组件`Calculator`提供的。\n- 当最开始渲染时，`Calculator`组件把内部的`handleCelsiusChange`方法指定给摄氏输入组件`TemperatureInput`的`onTemperatureChange`方法，并且把`handleFahrenheitChange`方法指定给华氏输入组件`TemperatureInput`的`onTemperatureChange`。两个`Calculator`内部的方法都会在相应输入框被编辑时被调用。\n- 在这些方法内部，`Calculator`组件会让React使用编辑输入的新值和当前输入框的温标来调用`this.setState()`方法来重渲染自身。\n- React会调用`Calculator`组件的`render`方法来识别UI界面的样子。基于当前温度和温标，两个输入框的值会被重新计算。温度转换就是在这里被执行的。\n- 接着React会使用`Calculator`指定的新props来分别调用`TemperatureInput`组件，React也会识别出子组件的UI界面。\n- React DOM 会更新DOM来匹配对应的值。我们编辑的输入框获取新值，而另一个输入框则更新经过转换的温度值。\n\n一切更新都是经过同样的步骤，因而输入框能保持同步的。\n\n## 经验教训\n\n在React应用中，对应任何可变数据理应只有一个单一“数据源”。通常，状态都是首先添加在需要渲染数据的组件中。此时，如果另一个组件也需要这些数据，你可以将数据提升至离它们最近的父组件中。你应该在应用中保持 [自上而下的数据流](https://react.docschina.org/docs/state-and-lifecycle.html#%E6%95%B0%E6%8D%AE%E8%87%AA%E9%A1%B6%E5%90%91%E4%B8%8B%E6%B5%81%E5%8A%A8)，而不是尝试在不同组件中同步状态。\n\n状态提升比双向绑定方式要写更多的“模版代码”，但带来的好处是，你也可以更快地寻找和定位bug的工作。因为哪个组件保有状态数据，也只有它自己能够操作这些数据，发生bug的范围就被大大地减小了。此外，你也可以使用自定义逻辑来拒绝或者更改用户的输入。\n\n如果某些数据可以由props或者state提供，那么它很有可能不应该在state中出现。举个例子，我们仅仅保存最新的编辑过的`temperature`和`scale`值，而不是同时保存 `celsiusValue` 和 `fahrenheitValue` 。另一个输入框中的值总是可以在 `render()` 函数中由这些保存的数据计算出来。这样我们可以根据同一个用户输入精准计算出两个需要使用的数据。\n\n当你在开发UI界面遇到问题时，你可以使用 [React 开发者工具](https://github.com/facebook/react-devtools)来检查props属性，并且可以点击查看组件树，直到你找到负责目前状态更新的组件。这能让你到追踪到产生 bug 的源头。\n\n\n\n# 组合 vs 继承\n\nReact 具有强大的组合模型，我们建议使用组合而不是继承来复用组件之间的代码。\n\n在本节中，我们将围绕几个 React 新手经常使用继承解决的问题，我们将展示如果用组合来解决它们。\n\n## 包含关系\n\n一些组件不能提前知道它们的子组件是什么。这对于 `Sidebar` 或 `Dialog` 这类通用容器尤其常见。\n\n我们建议这些组件使用 `children` 属性将子元素直接传递到输出。\n\n```\nfunction FancyBorder(props) {\n  return (\n    <div className={\'FancyBorder FancyBorder-\' + props.color}>\n      {props.children}\n    </div>\n  );\n}\n```\n\n这样做还允许其他组件通过嵌套 JSX 来传递子组件。\n\n```\nfunction WelcomeDialog() {\n  return (\n    <FancyBorder color="blue">\n      <h1 className="Dialog-title">\n        Welcome\n      </h1>\n      <p className="Dialog-message">\n        Thank you for visiting our spacecraft!\n      </p>\n    </FancyBorder>\n  );\n}\n```\n\n[在 CodePen 上试试。](http://codepen.io/gaearon/pen/ozqNOV?editors=0010)\n\n`<FancyBorder>` JSX 标签内的任何内容都将通过 `children` 属性传入 `FancyBorder`。由于 `FancyBorder` 在一个 `<div>` 内渲染了 `{props.children}`，所以被传递的所有元素都会出现在最终输出中。\n\n虽然不太常见，但有时你可能需要在组件中有多个入口，这种情况下你可以使用自己约定的属性而不是 `children`：\n\n```\nfunction SplitPane(props) {\n  return (\n    <div className="SplitPane">\n      <div className="SplitPane-left">\n        {props.left}\n      </div>\n      <div className="SplitPane-right">\n        {props.right}\n      </div>\n    </div>\n  );\n}\n\nfunction App() {\n  return (\n    <SplitPane\n      left={\n        <Contacts />\n      }\n      right={\n        <Chat />\n      } />\n  );\n}\n```\n\n[在 CodePen 上试试。](http://codepen.io/gaearon/pen/gwZOJp?editors=0010)\n\n类似 `<Contacts />` 和 `<Chat />` 这样的 React 元素都是对象，所以你可以像任何其他元素一样传递它们。\n\n## 特殊实例\n\n有时我们认为组件是其他组件的特殊实例。例如，我们会说 `WelcomeDialog` 是 `Dialog` 的特殊实例。\n\n在 React 中，这也是通过组合来实现的，通过配置属性用较特殊的组件来渲染较通用的组件。\n\n```\nfunction Dialog(props) {\n  return (\n    <FancyBorder color="blue">\n      <h1 className="Dialog-title">\n        {props.title}\n      </h1>\n      <p className="Dialog-message">\n        {props.message}\n      </p>\n    </FancyBorder>\n  );\n}\n\nfunction WelcomeDialog() {\n  return (\n    <Dialog\n      title="Welcome"\n      message="Thank you for visiting our spacecraft!" />\n  );\n}\n```\n\n[在 CodePen 上试试。](http://codepen.io/gaearon/pen/kkEaOZ?editors=0010)\n\n组合对于定义为类的组件同样适用：\n\n```\nfunction Dialog(props) {\n  return (\n    <FancyBorder color="blue">\n      <h1 className="Dialog-title">\n        {props.title}\n      </h1>\n      <p className="Dialog-message">\n        {props.message}\n      </p>\n      {props.children}\n    </FancyBorder>\n  );\n}\n\nclass SignUpDialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSignUp = this.handleSignUp.bind(this);\n    this.state = {login: \'\'};\n  }\n\n  render() {\n    return (\n      <Dialog title="Mars Exploration Program"\n              message="How should we refer to you?">\n        <input value={this.state.login}\n               onChange={this.handleChange} />\n        <button onClick={this.handleSignUp}>\n          Sign Me Up!\n        </button>\n      </Dialog>\n    );\n  }\n\n  handleChange(e) {\n    this.setState({login: e.target.value});\n  }\n\n  handleSignUp() {\n    alert(`Welcome aboard, ${this.state.login}!`);\n  }\n}\n```\n\n[在 CodePen 上试试。](http://codepen.io/gaearon/pen/gwZbYa?editors=0010)\n\n## 那么继承呢？\n\n在 Facebook 网站上，我们的 React 使用了数以千计的组件，然而却还未发现任何需要推荐你使用继承的情况。\n\n属性和组合为你提供了以清晰和安全的方式自定义组件的样式和行为所需的所有灵活性。请记住，组件可以接受任意元素，包括基本数据类型、React 元素或函数。\n\n如果要在组件之间复用 UI 无关的功能，我们建议将其提取到单独的 JavaScript 模块中。这样可以在不对组件进行扩展的前提下导入并使用该函数、对象或类。\n\n\n\n# React 理念\n\n在我们的理念中，React 最初的目的是使用 JavaScript 创建大型的，快速响应的网络应用。它在我们的 Facebook 和 Instagram 中已经实践的非常好了。\n\nReact的众多优点之一是它让你在编写代码的时候同时也在思考你的应用。在这篇文档中，我们会带你使用 React 一起创建一个可搜索的产品数据表格，并向你展示我们的思考过程。\n\n## 从模拟页面开始\n\n想象我们已经有一个 JSON 接口和一个设计师给我们的原型图。原型图像下面这样：\n\n[![Mockup](https://react.docschina.org/static/thinking-in-react-mock-1071fbcc9eed01fddc115b41e193ec11-4dd91.png)](https://react.docschina.org/static/thinking-in-react-mock-1071fbcc9eed01fddc115b41e193ec11-4dd91.png)\n\n我们的 JSON 接口返回类似下面的数据：\n\n```\n[\n  {category: "Sporting Goods", price: "$49.99", stocked: true, name: "Football"},\n  {category: "Sporting Goods", price: "$9.99", stocked: true, name: "Baseball"},\n  {category: "Sporting Goods", price: "$29.99", stocked: false, name: "Basketball"},\n  {category: "Electronics", price: "$99.99", stocked: true, name: "iPod Touch"},\n  {category: "Electronics", price: "$399.99", stocked: false, name: "iPhone 5"},\n  {category: "Electronics", price: "$199.99", stocked: true, name: "Nexus 7"}\n];\n```\n\n## 第一步：把 UI 划分出组件层级\n\n第一件你要做的事情是用方框划分出每一个组件(和子组件)并给他们命名。如果你和设计师一起工作，他们可能已经完成了这些，所以去和他们聊聊吧！他们的 Photoshop 图层名称也许就是你的 React 组件名称！\n\n但你如何知道哪一部分应该成为一个组件？想想在编写代码时你在什么情况下需要新建一个函数或对象，思考方式是一样的。例如 [单一功能原则](https://en.wikipedia.org/wiki/Single_responsibility_principle)，在理想状况下，一个组件应该只做一件事情。如果这个组件功能不断丰富，它应该被分成更小的组件。\n\n既然你经常向用户展示 JSON 数据模型，你会发现，如果你的模型构建正确，你的 UI (以及你的组件结构)会被很好的映射。这是因为 UI 和数据模型往往遵循着相同的*信息架构*，这意味着将 UI 划分成组件的工作往往是很容易的。只要把它划分成能准确表示你数据模型的一部分的组件就可以。\n\n[![Component diagram](https://react.docschina.org/static/thinking-in-react-components-eb8bda25806a89ebdc838813bdfa3601-82965.png)](https://react.docschina.org/static/thinking-in-react-components-eb8bda25806a89ebdc838813bdfa3601-82965.png)\n\n在这里你会看到，我们的简单应用中有5个组件。我们把每个组件展示的数据用斜体表示。\n\n1. **FilterableProductTable (橙色):** 包含了整个例子\n2. **SearchBar (蓝色):** 接受所有的*用户输入*\n3. **ProductTable (绿色):** 根据*用户输入*过滤并展示*数据集合*\n4. **ProductCategoryRow (绿松石色):** 展示每个*分类*的标题\n5. **ProductRow (红色):** 用行来展示每个*产品*\n\n如果你查看 `ProductTable`，你会发现表头(包含 `Name` 和 `Price` 标签)并没有作为一个组件。这是一个偏好问题，选择哪种方式目前还存在争议。在这个例子中，我们把它作为 `ProductTable` 的一部分，因为它是渲染*数据集合*的一部分，而渲染*数据集合*是 `ProductTable` 的职责。然而，如果头部变得更加复杂(也就是，如果我们添加了排序功能)，它就有足够的理由成为一个单独的 `ProductTableHeader` 组件。\n\n现在我们已经确定了原型图中的组件，让我们把它们整理成层级结构。这很容易。原型图中的子组件在层级结构中应该作为子节点。\n\n- `FilterableProductTable`\n  - `SearchBar`\n  - `ProductTable`\n    - `ProductCategoryRow`\n    - `ProductRow`\n\n## 第二步：用 React 创建一个静态版本\n\nSee the Pen [Thinking In React: Step 2](http://codepen.io/lacker/pen/vXpAgj/) on [CodePen](http://codepen.io/).\n\n现在有了组件层级，是时候去实现你的应用了。最简单的方式是先创建一个静态版本：传入数据模型，渲染 UI 但没有任何交互。最好把这些过程解耦，因为创建一个静态版本更多需要的是码代码，不太需要逻辑思考，而添加交互则更多需要的是逻辑思考，不是码代码。我们会看看为什么是这样的。\n\n要构建一个用于呈现数据模型的静态版本的应用程序，你需要创建能够复用其他组件的组件，并通过 *props* 来传递数据。*props* 是一种从父级向子级传递数据的方法。如果你熟悉 *state* 的概念， 在创建静态版本的时候*不要使用 state*。State 只在交互的时候使用，即随时间变化的数据。由于这是静态版本的应用，你不需要使用它。\n\n你可以自顶向下或者自底向上构建应用。也就是，你可以从层级最高的组件开始构建(即 `FilterableProductTable`开始)或层级最低的组件开始构建(`ProductRow`)。在较为简单的例子中，通常自顶向下更容易，而在较大的项目中，自底向上会更容易并且在你构建的时候有利于编写测试。\n\n在这步的最后，你会拥有一个用于呈现数据模型的可重用组件库。这些组件只会有 `render()`方法，因为这只是你的应用的静态版本。层级最高的组件(`FilterableProductTable`)会把数据模型作为 prop 传入。如果你改变你的基础数据模型并且再次调用 `ReactDOM.render()`， UI 会更新。很容易看到你的 UI 是如何更新的，哪里进行了更新。因为没有什么复杂的事情发生。React 的**单向数据流**(也叫作*单向绑定*)保证了一切是模块化并且是快速的。\n\n如果你在这步需要帮助，请参阅 [React 文档](https://react.docschina.org/docs/)\n\n### 一个小插曲：Props VS State\n\n在 React 中有两种数据模型：props 和 state。理解两者的差别是很重要的；如果你还不确定差别是什么，请查看[React 官方文档](https://react.docschina.org/docs/state-and-lifecycle.html)\n\n## 第三步：定义 UI 状态的最小(但完整)表示\n\n为了使你的 UI 交互，你需要能够触发对底层数据模型的更改。React 使用 **state**，让这变的更容易。\n\n为了正确构建你的应用，首先你需要考虑你的应用所需要的最小可变状态集。要点是 DRY：*不要重复(Don’t Repeat Yourself)*。找出应用程序的绝对最小表示并计算你所需要的其他任何请求。例如，如果你正在创建一个 TODO 列表，只要保存一个包含 TODO 事项的数组；不要为计数保留一个单独的状态变量。相反，当你想要渲染 TODO 计数时，只需要使用 TODO 数组的长度就可以了。\n\n想想我们的实例应用中所有数据。我们有：\n\n- 原产品列表\n- 用户输入的搜索文本\n- 复选框的值\n- 产品的筛选列表\n\n让我们来看看每一条，找出哪一个是 state。每个数据只要考虑三个问题：\n\n1. 它是通过 props 从父级传来的吗？如果是，他可能不是 state。\n2. 它随着时间推移不变吗？如果是，它可能不是 state。\n3. 你能够根据组件中任何其他的 state 或 props 把它计算出来吗？如果是，它不是 state。\n\n原产品列表被作为 props 传入，所以它不是 state。搜索文本和复选框似乎是 state，因为它们随时间改变并且不能由其他任何值计算出来。最后，产品的筛选列表不是 state，因为它可以通过将原始产品列表与搜索文本和复选框的值组合计算出来。\n\n最后，我们的 state 有：\n\n- 用户输入的搜索文本\n- 复选框的值\n\n## 第四步：确定你的 State 应该位于哪里\n\nSee the Pen [Thinking In React: Step 4](http://codepen.io/lacker/pen/ORzEkG/) by Kevin Lacker ([@lacker](http://codepen.io/lacker)) on [CodePen](http://codepen.io/).\n\n好的，现在我们确定了应用 state 的最小集合。接下来，我们需要确定哪个组件会改变，或拥有这个 state。\n\n记住：React 中的数据流是单向的，并在组件层次结构中向下传递。一开始我们可能不是很清楚哪个组件应该拥有哪个 state。**在新手理解上这通常是最富有挑战性的部分**，所以按照下面的步骤来辨别：\n\n对你应用的每一个 state：\n\n- 确定每一个需要这个 state 来渲染的组件。\n- 找到一个公共所有者组件(一个在层级上高于所有其他需要这个 state 的组件的组件)\n- 这个公共所有者组件或另一个层级更高的组件应该拥有这个 state。\n- 如果你没有找到可以拥有这个 state 的组件，创建一个仅用来保存状态的组件并把它加入比这个公共所有者组件层级更高的地方。\n\n让我们用这个策略分析我们的应用：\n\n- `ProductTable` 需要根据 state 过滤产品列表，`SearchBar` 需要展示搜索文本和复选框状态。\n- 公共所有者组件是 `FilterableProductTable`。\n- 筛选文本和复选框的值应该放在 `FilterableProductTable`。\n\n很酷，所以我们决定把 state 放在 `FilterableProductTable`。首先，为 `FilterableProductTable` 的 `constructor` 添加一个实例属性 `this.state = {filterText: \'\', inStockOnly: false}` 来表示我们应用的初始状态。接下来，把 `filterText` 和 `inStockOnly` 作为 prop 传入 `ProductTable` 和 `SearchBar`。最后在 `ProductTable` 中使用这些 props 来筛选每行产品信息，在 `SearchBar` 中设置表单域的值。\n\n现在你能够看到你的应用是如何运作的了：设置 `filterText` 的值为 `ball` 并刷新你的应用。你会看到数据表格正确的更新了。\n\n## 第五步：添加反向数据流\n\nSee the Pen [Thinking In React: Step 5](http://codepen.io/rohan10/pen/qRqmjd) on [CodePen](http://codepen.io/).\n\n到目前为止，我们已经创建了一个可以正确渲染的应用程序，它的数据在层级中通过函数的 props 和 state 向下流动。现在是时候支持其他方式的数据流了：层级结构中最底层的表单组件需要去更新在 `FilterableProductTable` 中的 state。\n\nReact 的数据流很明显，让你可以很轻松的了解你的程序是如何运行的，但相较于传统的双向绑定，它的代码量会稍微多一点。\n\n在当前版本的示例中，如果你试图键入或选中复选框，你会发现 React 会忽略你的输入。这是故意的，因为我们把 `input` 的 `value` 属性设置为一直等于从 `FilterableProductTable` 传入的 `state`.\n\n让我们想想我们想要做什么。我们想确保每当用户更改表单时，我们更新状态来反应用户输入。因为组件应该只更新自己的状态， `FilterableProductTable` 会将一个回调函数传递给 `SearchBar` ，每当应该更新状态时，它就会触发。我们可以使用输入上的 `onChange` 事件来调用它。`FilterableProductTable` 传入的回调函数会调用 `setState()`，这时应用程序会被更新。\n\n虽然这听起来很复杂，但它只是几行代码的问题。而且，你可以清楚地看出你的应用中数据是如何流动的。\n\n## 就是这样\n\n希望这可以让你了解如何使用 React 构建组件和应用程序。虽然这可能会比以前编写更多的代码，但请记住，代码是用来读的，这比写更重要，并且非常容易阅读这个模块化的，思路清晰的代码。当你开始构建大型组件库的时候，你会开始欣赏 React 的思路清晰化和模块性，并且随着代码的复用，你的代码量会开始减少。:)' },
    key: undefined } ] 'results'
[2019-03-05 20:20:16.989] [INFO] http - ::ffff:127.0.0.1 - - "POST /posts/create HTTP/1.1" 200 13 "http://localhost:9000/document/new" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:20:17.630] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: 
     { content: '# Hello World\n\n尝试React最简单的方法是使用[CodePen上的Hello World例子](http://codepen.io/gaearon/pen/ZpvBNJ?editors=0010)。如果你不想安装任何东西，可以在浏览器中打开它，然后跟着尝试我们接下来的例子。如果你更愿意使用本地开发环境，可以查看[安装页面](https://react.docschina.org/docs/installation.html) 。\n\n一个最简单的React例子如下:\n\n```\nReactDOM.render(\n  <h1>Hello, world!</h1>,\n  document.getElementById(\'root\')\n);\n```\n\n它渲染了一个 “Hello, world!” 的标题。\n\n接下来的几节将逐步向你介绍如何使用React。我们将详细了解React应用的构成模块：元素和组件。掌握了这些，你将可以使用简单的可复用代码来创建复杂的应用。\n\n## 有关JavaScript的注意事项\n\nReact是一个JavaScript库，因此它需要你熟悉JavaScript。如果你感觉还不够了解，我们建议看看[MDN上有关JavaScript的内容](https://developer.mozilla.org/en-US/docs/Web/JavaScript/A_re-introduction_to_JavaScript)，以便你学得更轻松。\n\n在例子中我们也使用了一些ES6语法。由于这些语法还比较新，我们也是尽量谨慎的尝试使用他们。但是我们还是建议你去熟悉一下这些内容：[箭头函数](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions)， [类](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes)， [模板字符串](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Template_literals)， [`let`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/let)， 和 [`const`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/const) 声明。你可以使用 [Babel REPL](http://babeljs.io/repl/#?babili=false&evaluate=true&lineWrap=false&presets=es2015%2Creact&experimental=false&loose=false&spec=false&code=const%20element%20%3D%20%3Ch1%3EHello%2C%20world!%3C%2Fh1%3E%3B%0Aconst%20container%20%3D%20document.getElementById(\'root\')%3B%0AReactDOM.render(element%2C%20container)%3B%0A) 来查看ES6的编译结果。\n\n\n\n# JSX 简介\n\n我们来观察一下声明的这个变量：\n\n```\nconst element = <h1>Hello, world!</h1>;\n```\n\n这种看起来可能有些奇怪的标签语法既不是字符串也不是 HTML。\n\n它被称为 JSX， 一种 JavaScript 的语法扩展。 我们推荐在 React 中使用 JSX 来描述用户界面。JSX 乍看起来可能比较像是模版语言，但事实上它完全是在 JavaScript 内部实现的。\n\nJSX 用来声明 React 当中的元素。在[下一个章节](https://react.docschina.org/docs/rendering-elements.html)里面我们会详细介绍元素是如何被渲染出来的，接下来呢，我们先来看看 JSX 的基本使用方法。\n\n### 在 JSX 中使用表达式\n\n你可以任意地在 JSX 当中使用 [JavaScript 表达式](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Expressions_and_Operators#Expressions)，在 JSX 当中的表达式要包含在大括号里。\n\n例如 `2 + 2`， `user.firstName`， 以及 `formatName(user)` 都是可以使用的。\n\n```\nfunction formatName(user) {\n  return user.firstName + \' \' + user.lastName;\n}\n\nconst user = {\n  firstName: \'Harper\',\n  lastName: \'Perez\'\n};\n\nconst element = (\n  <h1>\n    Hello, {formatName(user)}!\n  </h1>\n);\n\nReactDOM.render(\n  element,\n  document.getElementById(\'root\')\n);\n```\n\n[在 CodePen 上试试。](http://codepen.io/gaearon/pen/PGEjdG?editors=0010)\n\n我们书写 JSX 的时候一般都会带上换行和缩进，这样可以增强代码的可读性。与此同时，我们同样推荐在 JSX 代码的外面扩上一个小括号，这样可以防止 [分号自动插入](http://stackoverflow.com/q/2846283) 的 bug。\n\n### JSX 本身其实也是一种表达式\n\n在编译之后呢，JSX 其实会被转化为普通的 JavaScript 对象。\n\n这也就意味着，你其实可以在 `if` 或者 `for` 语句里使用 JSX，将它赋值给变量，当作参数传入，作为返回值都可以：\n\n```\nfunction getGreeting(user) {\n  if (user) {\n    return <h1>Hello, {formatName(user)}!</h1>;\n  }\n  return <h1>Hello, Stranger.</h1>;\n}\n```\n\n### JSX 属性\n\n你可以使用引号来定义以字符串为值的属性：\n\n```\nconst element = <div tabIndex="0"></div>;\n```\n\n也可以使用大括号来定义以 JavaScript 表达式为值的属性：\n\n```\nconst element = <img src={user.avatarUrl}></img>;\n```\n\n切记你使用了大括号包裹的 JavaScript 表达式时就不要再到外面套引号了。JSX 会将引号当中的内容识别为字符串而不是表达式。\n\n### JSX 嵌套\n\n如果 JSX 标签是闭合式的，那么你需要在结尾处用 `/>`, 就好像 XML/HTML 一样：\n\n```\nconst element = <img src={user.avatarUrl} />;\n```\n\nJSX 标签同样可以相互嵌套：\n\n```\nconst element = (\n  <div>\n    <h1>Hello!</h1>\n    <h2>Good to see you here.</h2>\n  </div>\n);\n```\n\n> **警告:**\n>\n> 因为 JSX 的特性更接近 JavaScript 而不是 HTML , 所以 React DOM 使用 `camelCase` 小驼峰命名 来定义属性的名称，而不是使用 HTML 的属性名称。\n>\n> 例如，`class` 变成了 [`className`](https://developer.mozilla.org/en-US/docs/Web/API/Element/className)，而 `tabindex` 则对应着 [`tabIndex`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/tabIndex)。\n\n### JSX 防注入攻击\n\n你可以放心地在 JSX 当中使用用户输入：\n\n```\nconst title = response.potentiallyMaliciousInput;\n// 直接使用是安全的：\nconst element = <h1>{title}</h1>;\n```\n\nReact DOM 在渲染之前默认会 [过滤](http://stackoverflow.com/questions/7381974/which-characters-need-to-be-escaped-on-html) 所有传入的值。它可以确保你的应用不会被注入攻击。所有的内容在渲染之前都被转换成了字符串。这样可以有效地防止 [XSS(跨站脚本)](https://en.wikipedia.org/wiki/Cross-site_scripting) 攻击。\n\n### JSX 代表 Objects\n\nBabel 转译器会把 JSX 转换成一个名为 `React.createElement()` 的方法调用。\n\n下面两种代码的作用是完全相同的：\n\n```\nconst element = (\n  <h1 className="greeting">\n    Hello, world!\n  </h1>\n);\nconst element = React.createElement(\n  \'h1\',\n  {className: \'greeting\'},\n  \'Hello, world!\'\n);\n```\n\n`React.createElement()` 这个方法首先会进行一些避免bug的检查，之后会返回一个类似下面例子的对象：\n\n```\n// 注意: 以下示例是简化过的（不代表在 React 源码中是这样）\nconst element = {\n  type: \'h1\',\n  props: {\n    className: \'greeting\',\n    children: \'Hello, world\'\n  }\n};\n```\n\n这样的对象被称为 “React 元素”。它代表所有你在屏幕上看到的东西。React 通过读取这些对象来构建 DOM 并保持数据内容一致。\n\n我们将在下一个章节当中介绍更多有关 React 元素 是如何渲染成 DOM 的内容。\n\n> **Tip:**\n>\n> 如果你是在使用本地编辑器编写 JSX 代码的话，推荐你去装一个支持 JSX 高亮的插件，这样更方便之后的开发学习。\n\n\n\n# 元素渲染\n\n元素是构成 React 应用的最小单位。\n\n元素用来描述你在屏幕上看到的内容：\n\n```\nconst element = <h1>Hello, world</h1>;\n```\n\n与浏览器的 DOM 元素不同，React 当中的元素事实上是普通的对象，React DOM 可以确保 浏览器 DOM 的数据内容与 React 元素保持一致。\n\n> **注意:**\n>\n> 初学者很可能把元素的定义和一个内涵更广的定义“组件”给搞混了。我们将会在[下一个章节](https://react.docschina.org/docs/components-and-props.html)当中对组件进行详细的介绍。元素事实上只是构成组件的一个部分，所以我们还是推荐你先读完这一章节的内容再往后看。\n\n## 将元素渲染到 DOM 中\n\n首先我们在一个 HTML 页面中添加一个 `id="root"` 的 `<div>`:\n\n```\n<div id="root"></div>\n```\n\n在此 div 中的所有内容都将由 React DOM 来管理，所以我们将其称之为 “根” DOM 节点。\n\n我们用React 开发应用时一般只会定义一个根节点。但如果你是在一个已有的项目当中引入 React 的话，你可能会需要在不同的部分单独定义 React 根节点。\n\n要将React元素渲染到根DOM节点中，我们通过把它们都传递给 `ReactDOM.render()` 的方法来将其渲染到页面上：\n\n\n\n```\nconst element = <h1>Hello, world</h1>;\nReactDOM.render(element, document.getElementById(\'root\'));\n```\n\n\n\n[在 CodePen 上试试。](http://codepen.io/gaearon/pen/rrpgNB?editors=1010)\n\n页面上会展示出 “Hello World” 字样。\n\n## 更新元素渲染\n\nReact 元素都是[immutable 不可变](https://en.wikipedia.org/wiki/Immutable_object)的。当元素被创建之后，你是无法改变其内容或属性的。一个元素就好像是动画里的一帧，它代表应用界面在某一时间点的样子。\n\n根据我们现阶段了解的有关 React 知识，更新界面的唯一办法是创建一个新的元素，然后将它传入 `ReactDOM.render()` 方法：\n\n来看一下这个计时器的例子:\n\n\n\n```\nfunction tick() {\n  const element = (\n    <div>\n      <h1>Hello, world!</h1>\n      <h2>It is {new Date().toLocaleTimeString()}.</h2>\n    </div>\n  );\n  ReactDOM.render(element, document.getElementById(\'root\'));\n}\n\nsetInterval(tick, 1000);\n```\n\n\n\n[在 CodePen 上试试。](http://codepen.io/gaearon/pen/gwoJZk?editors=0010)\n\n这个示例通过 [`setInterval()`](https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval) 方法，每秒钟调用一次 `ReactDOM.render()`.\n\n> **注意:**\n>\n> 在实际生产开发中，大多数React应用只会调用一次 `ReactDOM.render()` 。在下一个章节中我们将会详细介绍 [有状态组件](https://react.docschina.org/docs/state-and-lifecycle.html) 实现 DOM 更新方式。\n>\n> 前后的内容是相辅相成的，所以你最好还是先读完本章节再往下看。\n\n## React 只会更新必要的部分\n\nReact DOM 首先会比较元素内容先后的不同，而在渲染过程中只会更新改变了的部分。\n\n你可以使用浏览器的开发者工具来检查一下[之前的例子](http://codepen.io/gaearon/pen/gwoJZk?editors=0010)。\n\n![DOM inspector showing granular updates](https://react.docschina.org/granular-dom-updates-c158617ed7cc0eac8f58330e49e48224.gif)\n\n即便我们每秒都创建了一个描述整个UI树的新元素，React DOM 也只会更新渲染文本节点中发生变化的内容。\n\n根据我们以往的经验，将界面视为一个个特定时刻的固定内容（就像一帧一帧的动画），而不是随时处于变化之中（而不是处于变化中的一整段动画），将会有利于我们理清开发思路，减少各种bug。\n\n\n\n# 组件 & Props\n\n组件可以将UI切分成一些独立的、可复用的部件，这样你就只需专注于构建每一个单独的部件。\n\n组件从概念上看就像是函数，它可以接收任意的输入值（称之为“props”），并返回一个需要在页面上展示的React元素。\n\n## 函数定义/类定义组件\n\n定义一个组件最简单的方式是使用JavaScript函数：\n\n```\nfunction Welcome(props) {\n  return <h1>Hello, {props.name}</h1>;\n}\n```\n\n该函数是一个有效的React组件，它接收一个单一的“props”对象并返回了一个React元素。我们之所以称这种类型的组件为函数定义组件，是因为从字面上来看，它就是一个JavaScript函数。\n\n你也可以使用 [ES6 class](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Classes) 来定义一个组件:\n\n```\nclass Welcome extends React.Component {\n  render() {\n    return <h1>Hello, {this.props.name}</h1>;\n  }\n}\n```\n\n上面两个组件在React中是相同的。\n\n我们将在[下一节](https://react.docschina.org/docs/state-and-lifecycle.html)讨论类的一些额外特性。在那之前，我们都将使用较为简洁的函数定义组件。\n\n## 组件渲染\n\n在前面，我们遇到的React元素都只是DOM标签：\n\n```\nconst element = <div />;\n```\n\n然而，React元素也可以是用户自定义的组件：\n\n```\nconst element = <Welcome name="Sara" />;\n```\n\n当React遇到的元素是用户自定义的组件，它会将JSX属性作为单个对象传递给该组件，这个对象称之为“props”。\n\n例如,这段代码会在页面上渲染出”Hello,Sara”:\n\n```\nfunction Welcome(props) {\n  return <h1>Hello, {props.name}</h1>;\n}\n\nconst element = <Welcome name="Sara" />;\nReactDOM.render(\n  element,\n  document.getElementById(\'root\')\n);\n```\n\n[在 CodePen 上试试。](http://codepen.io/gaearon/pen/YGYmEG?editors=0010)\n\n我们来回顾一下在这个例子中发生了什么：\n\n1. 我们对`<Welcome name="Sara" />`元素调用了`ReactDOM.render()`方法。\n2. React将`{name: \'Sara\'}`作为props传入并调用`Welcome`组件。\n3. `Welcome`组件将`<h1>Hello, Sara</h1>`元素作为结果返回。\n4. React DOM将DOM更新为`<h1>Hello, Sara</h1>`。\n\n> **警告:**\n>\n> 组件名称必须以大写字母开头。\n>\n> 例如，`<div />` 表示一个DOM标签，但 `<Welcome />` 表示一个组件，并且在使用该组件时你必须定义或引入它。\n\n## 组合组件\n\n组件可以在它的输出中引用其它组件，这就可以让我们用同一组件来抽象出任意层次的细节。在React应用中，按钮、表单、对话框、整个屏幕的内容等，这些通常都被表示为组件。\n\n例如，我们可以创建一个`App`组件，用来多次渲染`Welcome`组件：\n\n```\nfunction Welcome(props) {\n  return <h1>Hello, {props.name}</h1>;\n}\n\nfunction App() {\n  return (\n    <div>\n      <Welcome name="Sara" />\n      <Welcome name="Cahal" />\n      <Welcome name="Edite" />\n    </div>\n  );\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById(\'root\')\n);\n```\n\n[在 CodePen 上试试。](http://codepen.io/gaearon/pen/KgQKPr?editors=0010)\n\n通常，一个新的React应用程序的顶部是一个`App`组件。但是，如果要将React集成到现有应用程序中，则可以从下而上使用像`Button`这样的小组件作为开始，并逐渐运用到视图层的顶部。\n\n> **警告:**\n>\n> 组件的返回值只能有一个根元素。这也是我们要用一个`<div>`来包裹所有`<Welcome />`元素的原因。\n\n## 提取组件\n\n你可以将组件切分为更小的组件，这没什么好担心的。\n\n例如，来看看这个`Comment`组件：\n\n```\nfunction Comment(props) {\n  return (\n    <div className="Comment">\n      <div className="UserInfo">\n        <img className="Avatar"\n          src={props.author.avatarUrl}\n          alt={props.author.name}\n        />\n        <div className="UserInfo-name">\n          {props.author.name}\n        </div>\n      </div>\n      <div className="Comment-text">\n        {props.text}\n      </div>\n      <div className="Comment-date">\n        {formatDate(props.date)}\n      </div>\n    </div>\n  );\n}\n```\n\n[在 CodePen 上试试。](http://codepen.io/gaearon/pen/VKQwEo?editors=0010)\n\n这个组件接收`author`(对象)、`text`(字符串)、以及`date`(Date对象)作为props，用来描述一个社交媒体网站上的评论。\n\n这个组件由于嵌套，变得难以被修改，可复用的部分也难以被复用。所以让我们从这个组件中提取出一些小组件。\n\n首先，我们来提取`Avatar`组件：\n\n```\nfunction Avatar(props) {\n  return (\n    <img className="Avatar"\n      src={props.user.avatarUrl}\n      alt={props.user.name}\n    />\n  );\n}\n```\n\n`Avatar`作为`Comment`的内部组件，不需要知道是否被渲染。因此我们将`author`改为一个更通用的名字`user`。\n\n我们建议从组件自身的角度来命名props，而不是根据使用组件的上下文命名。\n\n现在我们可以对`Comment`组件做一些小小的调整：\n\n```\nfunction Comment(props) {\n  return (\n    <div className="Comment">\n      <div className="UserInfo">\n        <Avatar user={props.author} />\n        <div className="UserInfo-name">\n          {props.author.name}\n        </div>\n      </div>\n      <div className="Comment-text">\n        {props.text}\n      </div>\n      <div className="Comment-date">\n        {formatDate(props.date)}\n      </div>\n    </div>\n  );\n}\n```\n\n接下来，我们要提取一个`UserInfo`组件，用来渲染`Avatar`旁边的用户名：\n\n```\nfunction UserInfo(props) {\n  return (\n    <div className="UserInfo">\n      <Avatar user={props.user} />\n      <div className="UserInfo-name">\n        {props.user.name}\n      </div>\n    </div>\n  );\n}\n```\n\n这可以让我们进一步简化`Comment`组件：\n\n```\nfunction Comment(props) {\n  return (\n    <div className="Comment">\n      <UserInfo user={props.author} />\n      <div className="Comment-text">\n        {props.text}\n      </div>\n      <div className="Comment-date">\n        {formatDate(props.date)}\n      </div>\n    </div>\n  );\n}\n```\n\n[在 CodePen 上试试。](http://codepen.io/gaearon/pen/rrJNJY?editors=0010)\n\n提取组件一开始看起来像是一项单调乏味的工作，但是在大型应用中，构建可复用的组件完全是值得的。当你的UI中有一部分重复使用了好几次（比如，`Button`、`Panel`、`Avatar`），或者其自身就足够复杂（比如，`App`、`FeedStory`、`Comment`），类似这些都是抽象成一个可复用组件的绝佳选择，这也是一个比较好的做法。\n\n## Props的只读性\n\n无论是使用[函数或是类](https://react.docschina.org/docs/components-and-props.html#%E5%87%BD%E6%95%B0%E5%AE%9A%E4%B9%89/%E7%B1%BB%E5%AE%9A%E4%B9%89%E7%BB%84%E4%BB%B6)来声明一个组件，它决不能修改它自己的props。来看这个`sum`函数：\n\n```\nfunction sum(a, b) {\n  return a + b;\n}\n```\n\n类似于上面的这种函数称为[“纯函数”](https://en.wikipedia.org/wiki/Pure_function)，它没有改变它自己的输入值，当传入的值相同时，总是会返回相同的结果。\n\n与之相对的是非纯函数，它会改变它自身的输入值：\n\n```\nfunction withdraw(account, amount) {\n  account.total -= amount;\n}\n```\n\nReact是非常灵活的，但它也有一个严格的规则：\n\n**所有的React组件必须像纯函数那样使用它们的props。**\n\n当然，应用的界面是随时间动态变化的，我们将在[下一节](https://react.docschina.org/docs/state-and-lifecycle.html)介绍一种称为“state”的新概念，State可以在不违反上述规则的情况下，根据用户操作、网络响应、或者其他状态变化，使组件动态的响应并改变组件的输出。\n\n\n\n# State & 生命周期\n\n参考[该例子](https://react.docschina.org/docs/rendering-elements.html#%E6%9B%B4%E6%96%B0%E5%85%83%E7%B4%A0%E6%B8%B2%E6%9F%93)。\n\n到目前为止我们只学习了一种方法来更新UI。\n\n我们调用 `ReactDOM.render()` 方法来改变输出：\n\n```\nfunction tick() {\n  const element = (\n    <div>\n      <h1>Hello, world!</h1>\n      <h2>It is {new Date().toLocaleTimeString()}.</h2>\n    </div>\n  );\n  ReactDOM.render(\n    element,\n    document.getElementById(\'root\')\n  );\n}\n\nsetInterval(tick, 1000);\n```\n\n[在 CodePen 中尝试](http://codepen.io/gaearon/pen/gwoJZk?editors=0010)\n\n在本节中，我们将学习如何使`Clock`组件真正可重用和封装。它将设置自己的计时器，并每秒钟更新一次。\n\n我们可以从封装时钟开始：\n\n```\nfunction Clock(props) {\n  return (\n    <div>\n      <h1>Hello, world!</h1>\n      <h2>It is {props.date.toLocaleTimeString()}.</h2>\n    </div>\n  );\n}\n\nfunction tick() {\n  ReactDOM.render(\n    <Clock date={new Date()} />,\n    document.getElementById(\'root\')\n  );\n}\n\nsetInterval(tick, 1000);\n```\n\n[在 CodePen 中尝试](http://codepen.io/gaearon/pen/dpdoYR?editors=0010)\n\n然而，它错过了一个关键的要求：`Clock`设置一个定时器并且每秒更新UI应该是`Clock`的实现细节。\n\n理想情况下，我们写一次 `Clock` 然后它能更新自身：\n\n```\nReactDOM.render(\n  <Clock />,\n  document.getElementById(\'root\')\n);\n```\n\n为了实现这个需求，我们需要为`Clock`组件添加`状态`\n\n状态与属性十分相似，但是状态是私有的，完全受控于当前组件。\n\n我们之前[提到过](https://react.docschina.org/docs/components-and-props.html#%E5%87%BD%E6%95%B0%E5%AE%9A%E4%B9%89/%E7%B1%BB%E5%AE%9A%E4%B9%89%E7%BB%84%E4%BB%B6)，定义为类的组件有一些特性。局部状态就是如此：一个功能只适用于类。\n\n## 将函数转换为类\n\n你可以通过5个步骤将函数组件 `Clock` 转换为类\n\n1. 创建一个名称扩展为 `React.Component` 的[ES6 类](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Classes)\n2. 创建一个叫做`render()`的空方法\n3. 将函数体移动到 `render()` 方法中\n4. 在 `render()` 方法中，使用 `this.props` 替换 `props`\n5. 删除剩余的空函数声明\n\n```\nclass Clock extends React.Component {\n  render() {\n    return (\n      <div>\n        <h1>Hello, world!</h1>\n        <h2>It is {this.props.date.toLocaleTimeString()}.</h2>\n      </div>\n    );\n  }\n}\n```\n\n[在 CodePen 中尝试](http://codepen.io/gaearon/pen/zKRGpo?editors=0010)\n\n`Clock` 现在被定义为一个类而不只是一个函数\n\n使用类就允许我们使用其它特性，例如局部状态、生命周期钩子\n\n## 为一个类添加局部状态\n\n我们会通过3个步骤将 `date` 从属性移动到状态中：\n\n1. 在 `render()` 方法中使用 `this.state.date` 替代 `this.props.date`\n\n```\nclass Clock extends React.Component {\n  render() {\n    return (\n      <div>\n        <h1>Hello, world!</h1>\n        <h2>It is {this.state.date.toLocaleTimeString()}.</h2>\n      </div>\n    );\n  }\n}\n```\n\n1. 添加一个[类构造函数](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Classes#Constructor)来初始化状态 `this.state`\n\n```\nclass Clock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {date: new Date()};\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Hello, world!</h1>\n        <h2>It is {this.state.date.toLocaleTimeString()}.</h2>\n      </div>\n    );\n  }\n}\n```\n\n注意我们如何传递 `props` 到基础构造函数的：\n\n```\n  constructor(props) {\n    super(props);\n    this.state = {date: new Date()};\n  }\n```\n\n类组件应始终使用`props`调用基础构造函数。\n\n1. 从 `<Clock />` 元素移除 `date` 属性：\n\n```\nReactDOM.render(\n  <Clock />,\n  document.getElementById(\'root\')\n);\n```\n\n稍后将定时器代码添加回组件本身。\n\n结果如下：\n\n```\nclass Clock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {date: new Date()};\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Hello, world!</h1>\n        <h2>It is {this.state.date.toLocaleTimeString()}.</h2>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(\n  <Clock />,\n  document.getElementById(\'root\')\n);\n```\n\n[在 CodePen 中尝试](http://codepen.io/gaearon/pen/KgQpJd?editors=0010)\n\n接下来，我们将使`Clock`设置自己的计时器并每秒更新一次。\n\n## 将生命周期方法添加到类中\n\n在具有许多组件的应用程序中，在销毁时释放组件所占用的资源非常重要。\n\n每当`Clock`组件第一次加载到DOM中的时候，我们都想[生成定时器](https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval)，这在React中被称为`挂载`\n\n同样，每当`Clock`生成的这个DOM被移除的时候，我们也会想要[清除定时器](https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearInterval)，这在React中被称为`卸载`。\n\n我们可以在组件类上声明特殊的方法，当组件挂载或卸载时，来运行一些代码：\n\n```\nclass Clock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {date: new Date()};\n  }\n\n  componentDidMount() {\n\n  }\n\n  componentWillUnmount() {\n\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Hello, world!</h1>\n        <h2>It is {this.state.date.toLocaleTimeString()}.</h2>\n      </div>\n    );\n  }\n}\n```\n\n这些方法被称作`生命周期钩子`。\n\n当组件输出到 DOM 后会执行 `componentDidMount()` 钩子，这是一个建立定时器的好地方：\n\n```\n  componentDidMount() {\n    this.timerID = setInterval(\n      () => this.tick(),\n      1000\n    );\n  }\n```\n\n注意我们如何在 `this` 中保存定时器ID。\n\n虽然 `this.props` 由React本身设置以及`this.state` 具有特殊的含义，但如果需要存储不用于视觉输出的东西，则可以手动向类中添加其他字段。\n\n如果你不在 `render()` 中使用某些东西，它就不应该在状态中。\n\n我们将在 `componentWillUnmount()`生命周期钩子中卸载计时器：\n\n```\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n```\n\n最后，我们实现了每秒钟执行的 `tick()` 方法。\n\n它将使用 `this.setState()` 来更新组件局部状态：\n\n```\nclass Clock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {date: new Date()};\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(\n      () => this.tick(),\n      1000\n    );\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  tick() {\n    this.setState({\n      date: new Date()\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Hello, world!</h1>\n        <h2>It is {this.state.date.toLocaleTimeString()}.</h2>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(\n  <Clock />,\n  document.getElementById(\'root\')\n);\n```\n\n[在 CodePen 中尝试](http://codepen.io/gaearon/pen/amqdNA?editors=0010)\n\n现在时钟每秒钟都会执行。\n\n让我们快速回顾一下发生了什么以及调用方法的顺序：\n\n1. 当 `<Clock />` 被传递给 `ReactDOM.render()` 时，React 调用 `Clock` 组件的构造函数。 由于 `Clock` 需要显示当前时间，所以使用包含当前时间的对象来初始化 `this.state` 。 我们稍后会更新此状态。\n2. React 然后调用 `Clock` 组件的 `render()` 方法。这是 React 了解屏幕上应该显示什么内容，然后 React 更新 DOM 以匹配 `Clock` 的渲染输出。\n3. 当 `Clock` 的输出插入到 DOM 中时，React 调用 `componentDidMount()` 生命周期钩子。 在其中，`Clock` 组件要求浏览器设置一个定时器，每秒钟调用一次 `tick()`。\n4. 浏览器每秒钟调用 `tick()` 方法。 在其中，`Clock` 组件通过使用包含当前时间的对象调用 `setState()` 来调度UI更新。 通过调用 `setState()` ，React 知道状态已经改变，并再次调用 `render()` 方法来确定屏幕上应当显示什么。 这一次，`render()` 方法中的 `this.state.date` 将不同，所以渲染输出将包含更新的时间，并相应地更新DOM。\n5. 一旦`Clock`组件被从DOM中移除，React会调用`componentWillUnmount()`这个钩子函数，定时器也就会被清除。\n\n## 正确地使用状态\n\n关于 `setState()` 这里有三件事情需要知道\n\n### 不要直接更新状态\n\n例如，此代码不会重新渲染组件：\n\n```\n// Wrong\nthis.state.comment = \'Hello\';\n```\n\n应当使用 `setState()`:\n\n```\n// Correct\nthis.setState({comment: \'Hello\'});\n```\n\n构造函数是唯一能够初始化 `this.state` 的地方。\n\n### 状态更新可能是异步的\n\nReact 可以将多个`setState()` 调用合并成一个调用来提高性能。\n\n因为 `this.props` 和 `this.state` 可能是异步更新的，你不应该依靠它们的值来计算下一个状态。\n\n例如，此代码可能无法更新计数器：\n\n```\n// Wrong\nthis.setState({\n  counter: this.state.counter + this.props.increment,\n});\n```\n\n要修复它，请使用第二种形式的 `setState()` 来接受一个函数而不是一个对象。 该函数将接收先前的状态作为第一个参数，将此次更新被应用时的props做为第二个参数：\n\n```\n// Correct\nthis.setState((prevState, props) => ({\n  counter: prevState.counter + props.increment\n}));\n```\n\n上方代码使用了[箭头函数](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Functions/Arrow_functions)，但它也适用于常规函数：\n\n```\n// Correct\nthis.setState(function(prevState, props) {\n  return {\n    counter: prevState.counter + props.increment\n  };\n});\n```\n\n### 状态更新合并\n\n当你调用 `setState()` 时，React 将你提供的对象合并到当前状态。\n\n例如，你的状态可能包含一些独立的变量：\n\n```\n  constructor(props) {\n    super(props);\n    this.state = {\n      posts: [],\n      comments: []\n    };\n  }\n```\n\n你可以调用 `setState()` 独立地更新它们：\n\n```\n  componentDidMount() {\n    fetchPosts().then(response => {\n      this.setState({\n        posts: response.posts\n      });\n    });\n\n    fetchComments().then(response => {\n      this.setState({\n        comments: response.comments\n      });\n    });\n  }\n```\n\n这里的合并是浅合并，也就是说`this.setState({comments})`完整保留了`this.state.posts`，但完全替换了`this.state.comments`。\n\n## 数据自顶向下流动\n\n父组件或子组件都不能知道某个组件是有状态还是无状态，并且它们不应该关心某组件是被定义为一个函数还是一个类。\n\n这就是为什么状态通常被称为局部或封装。 除了拥有并设置它的组件外，其它组件不可访问。\n\n组件可以选择将其状态作为属性传递给其子组件：\n\n```\n<h2>It is {this.state.date.toLocaleTimeString()}.</h2>\n```\n\n这也适用于用户定义的组件：\n\n```\n<FormattedDate date={this.state.date} />\n```\n\n`FormattedDate` 组件将在其属性中接收到 `date` 值，并且不知道它是来自 `Clock` 状态、还是来自 `Clock` 的属性、亦或手工输入：\n\n```\nfunction FormattedDate(props) {\n  return <h2>It is {props.date.toLocaleTimeString()}.</h2>;\n}\n```\n\n[在 CodePen 中尝试](http://codepen.io/gaearon/pen/zKRqNB?editors=0010)\n\n这通常被称为`自顶向下`或`单向`数据流。 任何状态始终由某些特定组件所有，并且从该状态导出的任何数据或 UI 只能影响树中`下方`的组件。\n\n如果你想象一个组件树作为属性的瀑布，每个组件的状态就像一个额外的水源，它连接在一个任意点，但也流下来。\n\n为了表明所有组件都是真正隔离的，我们可以创建一个 `App` 组件，它渲染三个`Clock`：\n\n```\nfunction App() {\n  return (\n    <div>\n      <Clock />\n      <Clock />\n      <Clock />\n    </div>\n  );\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById(\'root\')\n);\n```\n\n[在 CodePen 中尝试](http://codepen.io/gaearon/pen/vXdGmd?editors=0010)\n\n每个 `Clock` 建立自己的定时器并且独立更新。\n\n在 React 应用程序中，组件是有状态还是无状态被认为是可能随时间而变化的组件的实现细节。 可以在有状态组件中使用无状态组件，反之亦然。\n\n\n\n# 事件处理\n\nReact 元素的事件处理和 DOM元素的很相似。但是有一点语法上的不同:\n\n- React事件绑定属性的命名采用驼峰式写法，而不是小写。\n- 如果采用 JSX 的语法你需要传入一个函数作为事件处理函数，而不是一个字符串(DOM元素的写法)\n\n例如，传统的 HTML：\n\n```\n<button onclick="activateLasers()">\n  Activate Lasers\n</button>\n```\n\nReact 中稍稍有点不同：\n\n```\n<button onClick={activateLasers}>\n  Activate Lasers\n</button>\n```\n\n在 React 中另一个不同是你不能使用返回 `false` 的方式阻止默认行为。你必须明确的使用 `preventDefault`。例如，传统的 HTML 中阻止链接默认打开一个新页面，你可以这样写：\n\n```\n<a href="#" onclick="console.log(\'The link was clicked.\'); return false">\n  Click me\n</a>\n```\n\n在 React，应该这样来写：\n\n```\nfunction ActionLink() {\n  function handleClick(e) {\n    e.preventDefault();\n    console.log(\'The link was clicked.\');\n  }\n\n  return (\n    <a href="#" onClick={handleClick}>\n      Click me\n    </a>\n  );\n}\n```\n\n在这里，`e` 是一个合成事件。React 根据 [W3C spec](https://www.w3.org/TR/DOM-Level-3-Events/) 来定义这些合成事件，所以你不需要担心跨浏览器的兼容性问题。查看 [SyntheticEvent](https://react.docschina.org/docs/events.html) 参考指南来了解更多。\n\n使用 React 的时候通常你不需要使用 `addEventListener` 为一个已创建的 DOM 元素添加监听器。你仅仅需要在这个元素初始渲染的时候提供一个监听器。\n\n当你使用 [ES6 class](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Classes) 语法来定义一个组件的时候，事件处理器会成为类的一个方法。例如，下面的 `Toggle` 组件渲染一个让用户切换开关状态的按钮：\n\n```\nclass Toggle extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {isToggleOn: true};\n\n    // This binding is necessary to make `this` work in the callback\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.setState(prevState => ({\n      isToggleOn: !prevState.isToggleOn\n    }));\n  }\n\n  render() {\n    return (\n      <button onClick={this.handleClick}>\n        {this.state.isToggleOn ? \'ON\' : \'OFF\'}\n      </button>\n    );\n  }\n}\n\nReactDOM.render(\n  <Toggle />,\n  document.getElementById(\'root\')\n);\n```\n\n[在 CodePen 上试试。](http://codepen.io/gaearon/pen/xEmzGg?editors=0010)\n\n你必须谨慎对待 JSX 回调函数中的 `this`，类的方法默认是不会[绑定](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_objects/Function/bind) `this` 的。如果你忘记绑定 `this.handleClick` 并把它传入 `onClick`, 当你调用这个函数的时候 `this` 的值会是 `undefined`。\n\n这并不是 React 的特殊行为；它是[函数如何在 JavaScript 中运行](https://www.smashingmagazine.com/2014/01/understanding-javascript-function-prototype-bind/)的一部分。通常情况下，如果你没有在方法后面添加 `()` ，例如 `onClick={this.handleClick}`，你应该为这个方法绑定 `this`。\n\n如果使用 `bind` 让你很烦，这里有两种方式可以解决。如果你正在使用实验性的[属性初始化器语法](https://babeljs.io/docs/plugins/transform-class-properties/)，你可以使用属性初始化器来正确的绑定回调函数：\n\n```\nclass LoggingButton extends React.Component {\n  // This syntax ensures `this` is bound within handleClick.\n  // Warning: this is *experimental* syntax.\n  handleClick = () => {\n    console.log(\'this is:\', this);\n  }\n\n  render() {\n    return (\n      <button onClick={this.handleClick}>\n        Click me\n      </button>\n    );\n  }\n}\n```\n\n这个语法在 [Create React App](https://github.com/facebookincubator/create-react-app) 中默认开启。\n\n如果你没有使用属性初始化器语法，你可以在回调函数中使用 [箭头函数](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Functions/Arrow_functions)：\n\n```\nclass LoggingButton extends React.Component {\n  handleClick() {\n    console.log(\'this is:\', this);\n  }\n\n  render() {\n    // This syntax ensures `this` is bound within handleClick\n    return (\n      <button onClick={(e) => this.handleClick(e)}>\n        Click me\n      </button>\n    );\n  }\n}\n```\n\n使用这个语法有个问题就是每次 `LoggingButton` 渲染的时候都会创建一个不同的回调函数。在大多数情况下，这没有问题。然而如果这个回调函数作为一个属性值传入低阶组件，这些组件可能会进行额外的重新渲染。我们通常建议在构造函数中绑定或使用属性初始化器语法来避免这类性能问题。\n\n## 向事件处理程序传递参数\n\n通常我们会为事件处理程序传递额外的参数。例如，若是 `id` 是你要删除那一行的 id，以下两种方式都可以向事件处理程序传递参数：\n\n```\n<button onClick={(e) => this.deleteRow(id, e)}>Delete Row</button>\n<button onClick={this.deleteRow.bind(this, id)}>Delete Row</button>\n```\n\n上述两种方式是等价的，分别通过 [arrow functions](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions) 和 [`Function.prototype.bind`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_objects/Function/bind) 来为事件处理函数传递参数。\n\n上面两个例子中，参数 `e` 作为 React 事件对象将会被作为第二个参数进行传递。通过箭头函数的方式，事件对象必须显式的进行传递，但是通过 `bind` 的方式，事件对象以及更多的参数将会被隐式的进行传递。\n\n值得注意的是，通过 `bind` 方式向监听函数传参，在类组件中定义的监听函数，事件对象 `e` 要排在所传递参数的后面，例如:\n\n```\nclass Popper extends React.Component{\n    constructor(){\n        super();\n        this.state = {name:\'Hello world!\'};\n    }\n    \n    preventPop(name, e){    //事件对象e要放在最后\n        e.preventDefault();\n        alert(name);\n    }\n    \n    render(){\n        return (\n            <div>\n                <p>hello</p>\n                {/* Pass params via bind() method. */}\n                <a href="https://reactjs.org" onClick={this.preventPop.bind(this,this.state.name)}>Click</a>\n            </div>\n        );\n    }\n}\n```\n\n[编辑本页面](https://github.com/discountry/react/tree/master/content/docs/handling-events.md)\n\n\n\n# 条件渲染\n\n在 React 中，你可以创建不同的组件来封装各种你需要的行为。然后还可以根据应用的状态变化只渲染其中的一部分。\n\nReact 中的条件渲染和 JavaScript 中的一致，使用 JavaScript 操作符 [`if`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/if...else) 或[条件运算符](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Operators/Conditional_Operator)来创建表示当前状态的元素，然后让 React 根据它们来更新 UI。\n\n先来看两个组件:\n\n```\nfunction UserGreeting(props) {\n  return <h1>Welcome back!</h1>;\n}\n\nfunction GuestGreeting(props) {\n  return <h1>Please sign up.</h1>;\n}\n```\n\n我们将创建一个 `Greeting` 组件，它会根据用户是否登录来显示其中之一：\n\n```\nfunction Greeting(props) {\n  const isLoggedIn = props.isLoggedIn;\n  if (isLoggedIn) {\n    return <UserGreeting />;\n  }\n  return <GuestGreeting />;\n}\n\nReactDOM.render(\n  // Try changing to isLoggedIn={true}:\n  <Greeting isLoggedIn={false} />,\n  document.getElementById(\'root\')\n);\n```\n\n[在 CodePen 上试试。](https://codepen.io/gaearon/pen/ZpVxNq?editors=0011)\n\n此示例根据 `isLoggedIn` 的值渲染不同的问候语。\n\n### 元素变量\n\n你可以使用变量来储存元素。它可以帮助你有条件的渲染组件的一部分，而输出的其他部分不会更改。\n\n再来看两个新组件分别代表注销和登录：\n\n```\nfunction LoginButton(props) {\n  return (\n    <button onClick={props.onClick}>\n      Login\n    </button>\n  );\n}\n\nfunction LogoutButton(props) {\n  return (\n    <button onClick={props.onClick}>\n      Logout\n    </button>\n  );\n}\n```\n\n在下面的例子中，我们将要创建一个名为 `LoginControl` 的[有状态的组件](https://react.docschina.org/docs/state-and-lifecycle.html#%E4%B8%BA%E4%B8%80%E4%B8%AA%E7%B1%BB%E6%B7%BB%E5%8A%A0%E5%B1%80%E9%83%A8%E7%8A%B6%E6%80%81)。\n\n它会根据当前的状态来渲染 `<LoginButton />` 或 `<LogoutButton />`，它也将渲染前面例子中的 `<Greeting />`。\n\n```\nclass LoginControl extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleLoginClick = this.handleLoginClick.bind(this);\n    this.handleLogoutClick = this.handleLogoutClick.bind(this);\n    this.state = {isLoggedIn: false};\n  }\n\n  handleLoginClick() {\n    this.setState({isLoggedIn: true});\n  }\n\n  handleLogoutClick() {\n    this.setState({isLoggedIn: false});\n  }\n\n  render() {\n    const isLoggedIn = this.state.isLoggedIn;\n\n    let button = null;\n    if (isLoggedIn) {\n      button = <LogoutButton onClick={this.handleLogoutClick} />;\n    } else {\n      button = <LoginButton onClick={this.handleLoginClick} />;\n    }\n\n    return (\n      <div>\n        <Greeting isLoggedIn={isLoggedIn} />\n        {button}\n      </div>\n    );\n  }\n}\n\nReactDOM.render(\n  <LoginControl />,\n  document.getElementById(\'root\')\n);\n```\n\n[在 CodePen 上试试。](https://codepen.io/gaearon/pen/QKzAgB?editors=0010)\n\n声明变量并使用 `if` 语句是条件渲染组件的不错的方式，但有时你也想使用更简洁的语法，在 JSX 中有如下几种方法。\n\n### 与运算符 &&\n\n你可以通过用花括号包裹代码[在 JSX 中嵌入任何表达式](https://react.docschina.org/docs/introducing-jsx.html#%E5%9C%A8JSX%E4%B8%AD%E4%BD%BF%E7%94%A8%E8%A1%A8%E8%BE%BE%E5%BC%8F) ，也包括 JavaScript 的逻辑与 &&，它可以方便地条件渲染一个元素。\n\n```\nfunction Mailbox(props) {\n  const unreadMessages = props.unreadMessages;\n  return (\n    <div>\n      <h1>Hello!</h1>\n      {unreadMessages.length > 0 &&\n        <h2>\n          You have {unreadMessages.length} unread messages.\n        </h2>\n      }\n    </div>\n  );\n}\n\nconst messages = [\'React\', \'Re: React\', \'Re:Re: React\'];\nReactDOM.render(\n  <Mailbox unreadMessages={messages} />,\n  document.getElementById(\'root\')\n);\n```\n\n[在 CodePen 上试试。](https://codepen.io/gaearon/pen/ozJddz?editors=0010)\n\n之所以能这样做，是因为在 JavaScript 中，`true && expression` 总是返回 `expression`，而 `false && expression` 总是返回 `false`。\n\n因此，如果条件是 `true`，`&&` 右侧的元素就会被渲染，如果是 `false`，React 会忽略并跳过它。\n\n### 三目运算符\n\n条件渲染的另一种方法是使用 JavaScript 的条件运算符 [`condition ? true : false`](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Operators/Conditional_Operator)。\n\n在下面的例子中，我们用它来有条件的渲染一小段文本。\n\n```\nrender() {\n  const isLoggedIn = this.state.isLoggedIn;\n  return (\n    <div>\n      The user is <b>{isLoggedIn ? \'currently\' : \'not\'}</b> logged in.\n    </div>\n  );\n}\n```\n\n同样它也可以用在较大的表达式中，虽然不太直观：\n\n```\nrender() {\n  const isLoggedIn = this.state.isLoggedIn;\n  return (\n    <div>\n      {isLoggedIn ? (\n        <LogoutButton onClick={this.handleLogoutClick} />\n      ) : (\n        <LoginButton onClick={this.handleLoginClick} />\n      )}\n    </div>\n  );\n}\n```\n\n像在 JavaScript 中一样，你可以根据团队的习惯选择更易读的方式。还要记住如果条件变得过于复杂，可能就是[提取组件](https://react.docschina.org/docs/components-and-props.html#%E6%8F%90%E5%8F%96%E7%BB%84%E4%BB%B6)的好时机了。\n\n### 阻止组件渲染\n\n在极少数情况下，你可能希望隐藏组件，即使它被其他组件渲染。让 `render` 方法返回 `null`而不是它的渲染结果即可实现。\n\n在下面的例子中，`<WarningBanner />` 根据属性 `warn` 的值条件渲染。如果 `warn` 的值是 `false`，则组件不会渲染：\n\n```\nfunction WarningBanner(props) {\n  if (!props.warn) {\n    return null;\n  }\n\n  return (\n    <div className="warning">\n      Warning!\n    </div>\n  );\n}\n\nclass Page extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {showWarning: true}\n    this.handleToggleClick = this.handleToggleClick.bind(this);\n  }\n\n  handleToggleClick() {\n    this.setState(prevState => ({\n      showWarning: !prevState.showWarning\n    }));\n  }\n\n  render() {\n    return (\n      <div>\n        <WarningBanner warn={this.state.showWarning} />\n        <button onClick={this.handleToggleClick}>\n          {this.state.showWarning ? \'Hide\' : \'Show\'}\n        </button>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(\n  <Page />,\n  document.getElementById(\'root\')\n);\n```\n\n[在 CodePen 上试试。](https://codepen.io/gaearon/pen/Xjoqwm?editors=0010)\n\n组件的 `render` 方法返回 `null` 并不会影响该组件生命周期方法的回调。例如，`componentWillUpdate` 和 `componentDidUpdate` 依然可以被调用。\n\n\n\n# 列表 & Keys\n\n首先，让我们看下在Javascript中如何转化列表\n\n如下代码，我们使用[`map()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)函数让数组中的每一项翻倍,我们得到了一个新的数列`doubled`\n\n```\nconst numbers = [1, 2, 3, 4, 5];\nconst doubled = numbers.map((number) => number * 2);\nconsole.log(doubled);\n```\n\n代码打印出`[2, 4, 6, 8, 10]`\n\n在React中，把数组转化为数列[元素](https://react.docschina.org/docs/rendering-elements.html)的过程是相似的\n\n### 渲染多个组件\n\n你可以通过使用`{}`在JSX内构建一个[元素集合](https://react.docschina.org/docs/introducing-jsx.html#JSX%E5%B5%8C%E5%A5%97)\n\n下面，我们使用Javascript中的[`map()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)方法遍历`numbers`数组。对数组中的每个元素返回`<li>`标签，最后我们得到一个数组`listItems`\n\n```\nconst numbers = [1, 2, 3, 4, 5];\nconst listItems = numbers.map((number) =>\n  <li>{number}</li>\n);\n```\n\n我们把整个`listItems`插入到`ul`元素中，然后[渲染进DOM](https://react.docschina.org/docs/rendering-elements.html#%E5%B0%86%E5%85%83%E7%B4%A0%E6%B8%B2%E6%9F%93%E5%88%B0DOM%E4%B8%AD):\n\n```\nReactDOM.render(\n  <ul>{listItems}</ul>,\n  document.getElementById(\'root\')\n);\n```\n\n[在 CodePen 上试试。](https://codepen.io/gaearon/pen/GjPyQr?editors=0011)\n\n这段代码生成了一个1到5的数字列表\n\n### 基础列表组件\n\n通常你需要渲染一个列表到[组件](https://react.docschina.org/docs/components-and-props.html)中\n\n我们可以把前面的例子重构成一个组件。这个组件接收`numbers`数组作为参数，输出一个无序列表。\n\n```\nfunction NumberList(props) {\n  const numbers = props.numbers;\n  const listItems = numbers.map((number) =>\n    <li>{number}</li>\n  );\n  return (\n    <ul>{listItems}</ul>\n  );\n}\n\nconst numbers = [1, 2, 3, 4, 5];\nReactDOM.render(\n  <NumberList numbers={numbers} />,\n  document.getElementById(\'root\')\n);\n```\n\n当我们运行这段代码，将会看到一个警告 `a key should be provided for list items` ，意思是当你创建一个元素时，必须包括一个特殊的 `key` 属性。我们将在下一节讨论这是为什么。\n\n让我们来给每个列表元素分配一个 `key` 来解决上面的那个警告：\n\n```\nfunction NumberList(props) {\n  const numbers = props.numbers;\n  const listItems = numbers.map((number) =>\n    <li key={number.toString()}>\n      {number}\n    </li>\n  );\n  return (\n    <ul>{listItems}</ul>\n  );\n}\n\nconst numbers = [1, 2, 3, 4, 5];\nReactDOM.render(\n  <NumberList numbers={numbers} />,\n  document.getElementById(\'root\')\n);\n```\n\n[在 CodePen 上试试。](https://codepen.io/gaearon/pen/jrXYRR?editors=0011)\n\n## Keys\n\nKeys可以在DOM中的某些元素被增加或删除的时候帮助React识别哪些元素发生了变化。因此你应当给数组中的每一个元素赋予一个确定的标识。\n\n```\nconst numbers = [1, 2, 3, 4, 5];\nconst listItems = numbers.map((number) =>\n  <li key={number.toString()}>\n    {number}\n  </li>\n);\n```\n\n一个元素的key最好是这个元素在列表中拥有的一个独一无二的字符串。通常，我们使用来自数据的id作为元素的key:\n\n```\nconst todoItems = todos.map((todo) =>\n  <li key={todo.id}>\n    {todo.text}\n  </li>\n);\n```\n\n当元素没有确定的id时，你可以使用他的序列号索引index作为key\n\n```\nconst todoItems = todos.map((todo, index) =>\n  // Only do this if items have no stable IDs\n  <li key={index}>\n    {todo.text}\n  </li>\n);\n```\n\n如果列表可以重新排序，我们不建议使用索引来进行排序，因为这会导致渲染变得很慢。如果你想要了解更多，请点击[深度解析key的必要性](https://react.docschina.org/docs/reconciliation.html#%E9%80%92%E5%BD%92%E5%AD%90%E8%8A%82%E7%82%B9)\n\n### 用keys提取组件\n\n元素的key只有在它和它的兄弟节点对比时才有意义。\n\n比方说，如果你提取出一个`ListItem`组件，你应该把key保存在数组中的这个`<ListItem />`元素上，而不是放在`ListItem`组件中的`<li>`元素上。\n\n**错误的示范**\n\n```\nfunction ListItem(props) {\n  const value = props.value;\n  return (\n    // 错啦！你不需要在这里指定key:\n    <li key={value.toString()}>\n      {value}\n    </li>\n  );\n}\n\nfunction NumberList(props) {\n  const numbers = props.numbers;\n  const listItems = numbers.map((number) =>\n    //错啦！元素的key应该在这里指定：\n    <ListItem value={number} />\n  );\n  return (\n    <ul>\n      {listItems}\n    </ul>\n  );\n}\n\nconst numbers = [1, 2, 3, 4, 5];\nReactDOM.render(\n  <NumberList numbers={numbers} />,\n  document.getElementById(\'root\')\n);\n```\n\n**key的正确使用方式**\n\n```\nfunction ListItem(props) {\n  // 对啦！这里不需要指定key:\n  return <li>{props.value}</li>;\n}\n\nfunction NumberList(props) {\n  const numbers = props.numbers;\n  const listItems = numbers.map((number) =>\n    // 又对啦！key应该在数组的上下文中被指定\n    <ListItem key={number.toString()}\n              value={number} />\n  );\n  return (\n    <ul>\n      {listItems}\n    </ul>\n  );\n}\n\nconst numbers = [1, 2, 3, 4, 5];\nReactDOM.render(\n  <NumberList numbers={numbers} />,\n  document.getElementById(\'root\')\n);\n```\n\n[在 CodePen 上试试。](https://codepen.io/rthor/pen/QKzJKG?editors=0010)\n\n当你在`map()`方法的内部调用元素时，你最好随时记得为每一个元素加上一个独一无二的`key`。\n\n### 元素的key在他的兄弟元素之间应该唯一\n\n数组元素中使用的key在其兄弟之间应该是独一无二的。然而，它们不需要是全局唯一的。当我们生成两个不同的数组时，我们可以使用相同的键\n\n```\nfunction Blog(props) {\n  const sidebar = (\n    <ul>\n      {props.posts.map((post) =>\n        <li key={post.id}>\n          {post.title}\n        </li>\n      )}\n    </ul>\n  );\n  const content = props.posts.map((post) =>\n    <div key={post.id}>\n      <h3>{post.title}</h3>\n      <p>{post.content}</p>\n    </div>\n  );\n  return (\n    <div>\n      {sidebar}\n      <hr />\n      {content}\n    </div>\n  );\n}\n\nconst posts = [\n  {id: 1, title: \'Hello World\', content: \'Welcome to learning React!\'},\n  {id: 2, title: \'Installation\', content: \'You can install React from npm.\'}\n];\nReactDOM.render(\n  <Blog posts={posts} />,\n  document.getElementById(\'root\')\n);\n```\n\n[在 CodePen 上试试。](https://codepen.io/gaearon/pen/NRZYGN?editors=0010)\n\nkey会作为给React的提示，但不会传递给你的组件。如果您的组件中需要使用和`key`相同的值，请将其作为属性传递：\n\n```\nconst content = posts.map((post) =>\n  <Post\n    key={post.id}\n    id={post.id}\n    title={post.title} />\n);\n```\n\n上面例子中，`Post`组件可以读出`props.id`，但是不能读出`props.key`\n\n### 在jsx中嵌入map()\n\n在上面的例子中，我们声明了一个单独的`listItems`变量并将其包含在JSX中\n\n```\nfunction NumberList(props) {\n  const numbers = props.numbers;\n  const listItems = numbers.map((number) =>\n    <ListItem key={number.toString()}\n              value={number} />\n  );\n  return (\n    <ul>\n      {listItems}\n    </ul>\n  );\n}\n```\n\nJSX允许在大括号中[嵌入任何表达式](https://react.docschina.org/docs/introduction-jsx.html%EF%BC%83JSX%E5%B5%8C%E5%A5%97)，所以我们可以在`map()`中这样使用：\n\n```\nfunction NumberList(props) {\n  const numbers = props.numbers;\n  return (\n    <ul>\n      {numbers.map((number) =>\n        <ListItem key={number.toString()}\n                  value={number} />\n      )}\n    </ul>\n  );\n}\n```\n\n[在 CodePen 上试试。](https://codepen.io/gaearon/pen/BLvYrB?editors=0010)\n\n这么做有时可以使你的代码更清晰，但有时这种风格也会被滥用。就像在JavaScript中一样，何时需要为了可读性提取出一个变量，这完全取决于你。但请记住，如果一个`map()`嵌套了太多层级，那可能就是你[提取出组件](https://react.docschina.org/docs/components-and-props.html#%E6%8F%90%E5%8F%96%E7%BB%84%E4%BB%B6)的一个好时机。\n\n\n\n# 表单\n\nHTML表单元素与React中的其他DOM元素有所不同,因为表单元素生来就保留一些内部状态。例如，下面这个表单只接受一个唯一的name。\n\n```\n<form>\n  <label>\n    Name:\n    <input type="text" name="name" />\n  </label>\n  <input type="submit" value="Submit" />\n</form>\n```\n\n当用户提交表单时，HTML的默认行为会使这个表单跳转到一个新页面。在React中亦是如此。但大多数情况下，我们都会构造一个处理提交表单并可访问用户输入表单数据的函数。实现这一点的标准方法是使用一种称为“受控组件”的技术。\n\n## 受控组件\n\n在HTML当中，像`<input>`,`<textarea>`, 和 `<select>`这类表单元素会维持自身状态，并根据用户输入进行更新。但在React中，可变的状态通常保存在组件的状态属性中，并且只能用 [`setState()`](https://react.docschina.org/docs/react-component.html#setstate) 方法进行更新。\n\n我们通过使react变成一种单一数据源的状态来结合二者。React负责渲染表单的组件仍然控制用户后续输入时所发生的变化。相应的，其值由React控制的输入表单元素称为“受控组件”。\n\n例如，我们想要使上个例子中在提交表单时输出name,我们可以写成“受控组件”的形式:\n\n```\nclass NameForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {value: \'\'};\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({value: event.target.value});\n  }\n\n  handleSubmit(event) {\n    alert(\'A name was submitted: \' + this.state.value);\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          Name:\n          <input type="text" value={this.state.value} onChange={this.handleChange} />\n        </label>\n        <input type="submit" value="Submit" />\n      </form>\n    );\n  }\n}\n```\n\n[在 CodePen 上尝试。](https://codepen.io/gaearon/pen/VmmPgp?editors=0010)\n\n由于 `value` 属性是在我们的表单元素上设置的，因此显示的值将始终为 React数据源上`this.state.value` 的值。由于每次按键都会触发 `handleChange` 来更新当前React的state，所展示的值也会随着不同用户的输入而更新。\n\n使用”受控组件”,每个状态的改变都有一个与之相关的处理函数。这样就可以直接修改或验证用户输入。例如，我们如果想限制输入全部是大写字母，我们可以将`handleChange` 写为如下：\n\n```\nhandleChange(event) {\n  this.setState({value: event.target.value.toUpperCase()});\n}\n```\n\n## textarea 标签\n\n在HTML当中，`<textarea>` 元素通过子节点来定义它的文本内容\n\n```\n<textarea>\n  Hello there, this is some text in a text area\n</textarea>\n```\n\n在React中，`<textarea>`会用`value`属性来代替。这样的话，表单中的`<textarea>` 非常类似于使用单行输入的表单：\n\n```\nclass EssayForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: \'Please write an essay about your favorite DOM element.\'\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({value: event.target.value});\n  }\n\n  handleSubmit(event) {\n    alert(\'An essay was submitted: \' + this.state.value);\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          Name:\n          <textarea value={this.state.value} onChange={this.handleChange} />\n        </label>\n        <input type="submit" value="Submit" />\n      </form>\n    );\n  }\n}\n```\n\n注意`this.state.value`是在构造函数中初始化，这样文本区域就能获取到其中的文本。\n\n## select 标签\n\n在HTML当中，`<select>`会创建一个下拉列表。例如这个HTML就创建了一个下拉列表的原型。\n\n```\n<select>\n  <option value="grapefruit">Grapefruit</option>\n  <option value="lime">Lime</option>\n  <option selected value="coconut">Coconut</option>\n  <option value="mango">Mango</option>\n</select>\n```\n\n请注意，Coconut选项最初由于`selected`属性是被选中的。在React中，并不使用之前的`selected`属性，而在根`select`标签上用`value`属性来表示选中项。这在受控组件中更为方便，因为你只需要在一个地方来更新组件。例如：\n\n```\nclass FlavorForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {value: \'coconut\'};\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({value: event.target.value});\n  }\n\n  handleSubmit(event) {\n    alert(\'Your favorite flavor is: \' + this.state.value);\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          Pick your favorite La Croix flavor:\n          <select value={this.state.value} onChange={this.handleChange}>\n            <option value="grapefruit">Grapefruit</option>\n            <option value="lime">Lime</option>\n            <option value="coconut">Coconut</option>\n            <option value="mango">Mango</option>\n          </select>\n        </label>\n        <input type="submit" value="Submit" />\n      </form>\n    );\n  }\n}\n```\n\n[在 CodePen 上尝试。](https://codepen.io/gaearon/pen/JbbEzX?editors=0010)\n\n总之，`<input type="text">`, `<textarea>`, 和 `<select>` 都十分类似 - 他们都通过传入一个`value`属性来实现对组件的控制。\n\n## file input 标签\n\n在HTML当中，`<input type="file">` 允许用户从他们的存储设备中选择一个或多个文件以提交表单的方式上传到服务器上, 或者通过 Javascript 的 [File API](https://developer.mozilla.org/en-US/docs/Web/API/File/Using_files_from_web_applications) 对文件进行操作 。\n\n```\n<input type="file" />\n```\n\n由于该标签的 `value` 属性是只读的， 所以它是 React 中的一个**非受控组件**。我们会把它和其他非受控组件一起在[后面的章节](https://reactjs.org/docs/uncontrolled-components.html#the-file-input-tag)进行详细的介绍。\n\n## 多个输入的解决方法\n\n当你有处理多个受控的`input`元素时，你可以通过给每个元素添加一个`name`属性，来让处理函数根据 `event.target.name`的值来选择做什么。\n\n例如:\n\n```\nclass Reservation extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isGoing: true,\n      numberOfGuests: 2\n    };\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.type === \'checkbox\' ? target.checked : target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    });\n  }\n\n  render() {\n    return (\n      <form>\n        <label>\n          Is going:\n          <input\n            name="isGoing"\n            type="checkbox"\n            checked={this.state.isGoing}\n            onChange={this.handleInputChange} />\n        </label>\n        <br />\n        <label>\n          Number of guests:\n          <input\n            name="numberOfGuests"\n            type="number"\n            value={this.state.numberOfGuests}\n            onChange={this.handleInputChange} />\n        </label>\n      </form>\n    );\n  }\n}\n```\n\n[在 CodePen 上尝试。](https://codepen.io/gaearon/pen/wgedvV?editors=0010)\n\n注意我们如何使用ES6当中的[计算属性名](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Operators/Object_initializer#Computed_property_names)语法来更新与给定输入名称相对应的状态键：\n\n```\nthis.setState({\n  [name]: value\n});\n```\n\n相当于如下ES5语法\n\n```\nvar partialState = {};\npartialState[name] = value;\nthis.setState(partialState);\n```\n\n同样由于 `setState()` 自动[将部分状态合并到当前状态](https://react.docschina.org/docs/state-and-lifecycle.html#%E7%8A%B6%E6%80%81%E6%9B%B4%E6%96%B0%E5%90%88%E5%B9%B6)，因此我们只需要使用发生变化的部分调用它。\n\n## 受控组件的替代方法\n\n有时使用受控组件可能很繁琐，因为您要为数据可能发生变化的每一种方式都编写一个事件处理程序，并通过一个组件来管理全部的状态。当您将预先存在的代码库转换为React或将React应用程序与非React库集成时，这可能变得特别烦人。在以上情况下，你或许应该看看[非受控组件](https://react.docschina.org/docs/uncontrolled-components.html)，这是一种表单的替代技术。\n\n\n\n# 状态提升\n\n使用 react 经常会遇到几个组件需要共用状态数据的情况。这种情况下，我们最好将这部分共享的状态提升至他们最近的父组件当中进行管理。我们来看一下具体如何操作吧。\n\n这部分内容当中，我们会创建一个温度计算器来计算水是否会在给定的温度下烧开。\n\n开始呢，我们先创建一个名为 `BoilingVerdict` 的组件。它会接受 `celsius` 这个温度变量作为它的 props 属性，最后根据温度判断返回内容：\n\n```\nfunction BoilingVerdict(props) {\n  if (props.celsius >= 100) {\n    return <p>水会烧开</p>;\n  }\n  return <p>水不会烧开</p>;\n}\n```\n\n接下来，我们写一个名为 `Calculator` 的组件。它会渲染一个 `<input>` 来接受用户输入，然后将输入的温度值保存在 `this.state.temperature` 当中。\n\n之后呢，它会根据输入的值渲染出 `BoilingVerdict` 组件。\n\n```\nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {temperature: \'\'};\n  }\n\n  handleChange(e) {\n    this.setState({temperature: e.target.value});\n  }\n\n  render() {\n    const temperature = this.state.temperature;\n    return (\n      <fieldset>\n        <legend>输入一个摄氏温度</legend>\n        <input\n          value={temperature}\n          onChange={this.handleChange} />\n        <BoilingVerdict\n          celsius={parseFloat(temperature)} />\n      </fieldset>\n    );\n  }\n}\n```\n\n[在 CodePen 上试试。](http://codepen.io/valscion/pen/VpZJRZ?editors=0010)\n\n## 添加第二个输入框\n\n现在我们有了一个新的需求，在提供摄氏度输入的基础之上，再提供一个华氏温度输入，并且它们能保持同步。\n\n我们可以通过从 `Calculator` 组件中抽离一个 `TemperatureInput` 组件出来。我们也会给它添加一个值为 `c` 或 `f` 的表示温度单位的 `scale` 属性。\n\n```\nconst scaleNames = {\n  c: \'Celsius\',\n  f: \'Fahrenheit\'\n};\n\nclass TemperatureInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {temperature: \'\'};\n  }\n\n  handleChange(e) {\n    this.setState({temperature: e.target.value});\n  }\n\n  render() {\n    const temperature = this.state.temperature;\n    const scale = this.props.scale;\n    return (\n      <fieldset>\n        <legend>Enter temperature in {scaleNames[scale]}:</legend>\n        <input value={temperature}\n               onChange={this.handleChange} />\n      </fieldset>\n    );\n  }\n}\n```\n\n我们现在可以对`Calculator`稍作修改，来渲染两个不同的温度输入框。\n\n```\nclass Calculator extends React.Component {\n  render() {\n    return (\n      <div>\n        <TemperatureInput scale="c" />\n        <TemperatureInput scale="f" />\n      </div>\n    );\n  }\n}\n```\n\n[在 CodePen 上试试。](http://codepen.io/valscion/pen/GWKbao?editors=0010)\n\n我们现在有了两个输入框，但是当你在其中一个输入时，另一个并不会更新。这显然是不符合我们的需求的。\n\n另外，我们此时也不能从 `Calculator` 组件中展示 `BoilingVerdict` 的渲染结果。因为现在表示温度的状态数据只存在于 `TemperatureInput` 组件当中。\n\n## 写出转换函数\n\n首先，我们写两个可以将摄氏度和华氏度互相转换的函数。\n\n```\nfunction toCelsius(fahrenheit) {\n  return (fahrenheit - 32) * 5 / 9;\n}\n\nfunction toFahrenheit(celsius) {\n  return (celsius * 9 / 5) + 32;\n}\n```\n\n这两个函数只是单纯转换数字。我们还需要另外一个函数，它接受两个参数，第一个接受字符串 `temperature` 变量，第二个参数则是上面编写的单位转换函数。最后会返回一个字符串。我们会使用它来根据一个输入框的输入计算出另一个输入框的值。\n\n我们最后取到输出的小数点后三位，而 `temperature` 输入不合法的时候，这个函数则会返回空字符串。\n\n```\nfunction tryConvert(temperature, convert) {\n  const input = parseFloat(temperature);\n  if (Number.isNaN(input)) {\n    return \'\';\n  }\n  const output = convert(input);\n  const rounded = Math.round(output * 1000) / 1000;\n  return rounded.toString();\n}\n```\n\n举两个例子，`tryConvert(\'abc\', toCelsius)` 会返回空字符串，而 `tryConvert(\'10.22\', toFahrenheit)` 会返回 `\'50.396\'`。\n\n## 状态提升\n\n到这一步为止，两个`TemperatureInput`组件都是在自己的 state 中独立保存数据。\n\n```\nclass TemperatureInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {temperature: \'\'};\n  }\n\n  handleChange(e) {\n    this.setState({temperature: e.target.value});\n  }\n\n  render() {\n    const temperature = this.state.temperature;\n```\n\n但是，我们想要的是这两个输入能保持同步。当我们更新摄氏输入（Celsius）时，华氏度（Fahrenheit ）这个框应该能显示转换后的的温度数值，反之亦然。\n\n在React中，状态分享是通过将state数据提升至离需要这些数据的组件最近的父组件来完成的。这就是所谓的**状态提升**。我们会将 `TemperatureInput` 组件自身保存的 state 移到 `Calculator` 中。\n\n如果 `Calculator` 组件拥有了提升上来共享的状态数据，那它就会成为两个温度输入组件的“数据源”。它会传递给下面温度输入组件一致的数据。由于两个 `TemperatureInput` 温度组件的props属性都是来源于共同的父组件 `Calculator`，它们的数据也会保持同步。\n\n让我们一步一步来分析如何操作。\n\n首先，我们在 `TemperatureInput` 组件中将 `this.state.temperature` 替换为 `this.props.temperature` 。从现在开始，我们假定 `this.props.temperature` 属性已经存在了，不过之后仍然需要将数据从 `Calculator` 组件中传进去。\n\n```\n  render() {\n    // 之前的代码: const temperature = this.state.temperature;\n    const temperature = this.props.temperature;\n```\n\n我们首先知道[props是只读的](https://react.docschina.org/docs/components-and-props.html#props-are-read-only) 这么一个事实。而之前`temperature`变量是被保存在其自身的 state 中的，`TemperatureInput` 组件只需要调用 `this.setState()` 就能改变它。但现在，`temperature` 是作为 prop 从父组件传递下来的，`TemperatureInput` 组件是没有控制权的。\n\n在React中，这个问题通常是通过让组件“受控”来解决。就像 `<input>` 能够接受 `value` 和 `onChange` 这两个prop属性值，自定义组件 `TemperatureInput` 也能接受来自 `Calculator`父组件的 `temperature` 变量和 `onTemperatureChange` 方法作为props属性值。\n\n做完这些，当 `TemperatureInput` 组件更新它的温度数值时，就会调用 `this.props.onTemperatureChange` 方法。\n\n```\n  handleChange(e) {\n    // 之前的代码: this.setState({temperature: e.target.value});\n    this.props.onTemperatureChange(e.target.value);\n```\n\n需要指出的是，我们现在定义的 `temperature` 和 `onTemperatureChange` 这些prop属性的命名没有特殊含义，我们也可以起个其他任何的名字，像是`value`和`onChange`这些只是命名习惯罢了。\n\n`onTemperatureChange` 和 `temperature` 两个 props 属性均由父组件 `Calculator` 提供。父组件可以通过自身的方法来响应状态数据的改变，从而使用新的值来重新渲染两个输入框组件。不过我们先放着，最后再来修改它。\n\n在我们改写 `Calculator` 组件之前，我们先花点时间总结下 `TemperatureInput` 组件的改变。我们将其自身的 state 从组件中移除，使用 `this.props.temperature` 替代 `this.state.temperature` ，当我们想要响应数据改变时，使用父组件提供的 `this.props.onTemperatureChange()` 而不是`this.setState()` 方法：\n\n```\nclass TemperatureInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    this.props.onTemperatureChange(e.target.value);\n  }\n\n  render() {\n    const temperature = this.props.temperature;\n    const scale = this.props.scale;\n    return (\n      <fieldset>\n        <legend>在{scaleNames[scale]}:中输入温度数值</legend>\n        <input value={temperature}\n               onChange={this.handleChange} />\n      </fieldset>\n    );\n  }\n}\n```\n\n现在让我们来看看 `Calculator` 组件。\n\n我们将会在它的 state 中存储之前输入框组件的 `temperature` 和 `scale` 值，这是从输入框组件中“提升”上来的 state，它将会成为两个输入框组件的“数据源”。这是我们所需要的能够重新渲染并且表示两个不同输入组件的最基本的数据。\n\n举个例子，假如我们在摄氏度输入框中输入37，那么 `Calculator` 的 state 就是：\n\n```\n{\n  temperature: \'37\',\n  scale: \'c\'\n}\n```\n\n如果我们之后在华氏度输入框输入212，那么 `Calculator` 的状态数据就会是：\n\n```\n{\n  temperature: \'212\',\n  scale: \'f\'\n}\n```\n\n其实我们可以一起保存两个输入的值，但这么做似乎没有必要。保存最近 改变的值和所需标识的温标单位就足够了。我们可以只需基于当前的 `temperature` 和 `scale` 计算出另一个输入框中的值。\n\n现在这两个输入框中的值能保持同步了，因为它们使用的是通过同一个 state 计算出来的值。\n\n```\nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleCelsiusChange = this.handleCelsiusChange.bind(this);\n    this.handleFahrenheitChange = this.handleFahrenheitChange.bind(this);\n    this.state = {temperature: \'\', scale: \'c\'};\n  }\n\n  handleCelsiusChange(temperature) {\n    this.setState({scale: \'c\', temperature});\n  }\n\n  handleFahrenheitChange(temperature) {\n    this.setState({scale: \'f\', temperature});\n  }\n\n  render() {\n    const scale = this.state.scale;\n    const temperature = this.state.temperature;\n    const celsius = scale === \'f\' ? tryConvert(temperature, toCelsius) : temperature;\n    const fahrenheit = scale === \'c\' ? tryConvert(temperature, toFahrenheit) : temperature;\n\n    return (\n      <div>\n        <TemperatureInput\n          scale="c"\n          temperature={celsius}\n          onTemperatureChange={this.handleCelsiusChange} />\n        <TemperatureInput\n          scale="f"\n          temperature={fahrenheit}\n          onTemperatureChange={this.handleFahrenheitChange} />\n        <BoilingVerdict\n          celsius={parseFloat(celsius)} />\n      </div>\n    );\n  }\n}\n```\n\n[在 Codepen 上试试。](http://codepen.io/valscion/pen/jBNjja?editors=0010)\n\n现在，无论你编辑哪一个输入框，`Calculator` 组件中 `this.state.temperature` 和 `this.state.scale` 都会更新。其中之一的输入框得到用户原样输入的值，另一个输入框总是显示基于这个值计算出的结果。\n\n让我们梳理下编辑输入框时所发生的一系列活动：\n\n- React在DOM原生组件`<input>`上调用指定的`onChange`函数。在本例中，指的是`TemperatureInput`组件上的`handleChange`函数。\n- `TemperatureInput`组件的`handleChange`函数会在值发生变化时调用`this.props.onTemperatureChange()`函数。这些props属性，像`onTemperatureChange`都是由父组件`Calculator`提供的。\n- 当最开始渲染时，`Calculator`组件把内部的`handleCelsiusChange`方法指定给摄氏输入组件`TemperatureInput`的`onTemperatureChange`方法，并且把`handleFahrenheitChange`方法指定给华氏输入组件`TemperatureInput`的`onTemperatureChange`。两个`Calculator`内部的方法都会在相应输入框被编辑时被调用。\n- 在这些方法内部，`Calculator`组件会让React使用编辑输入的新值和当前输入框的温标来调用`this.setState()`方法来重渲染自身。\n- React会调用`Calculator`组件的`render`方法来识别UI界面的样子。基于当前温度和温标，两个输入框的值会被重新计算。温度转换就是在这里被执行的。\n- 接着React会使用`Calculator`指定的新props来分别调用`TemperatureInput`组件，React也会识别出子组件的UI界面。\n- React DOM 会更新DOM来匹配对应的值。我们编辑的输入框获取新值，而另一个输入框则更新经过转换的温度值。\n\n一切更新都是经过同样的步骤，因而输入框能保持同步的。\n\n## 经验教训\n\n在React应用中，对应任何可变数据理应只有一个单一“数据源”。通常，状态都是首先添加在需要渲染数据的组件中。此时，如果另一个组件也需要这些数据，你可以将数据提升至离它们最近的父组件中。你应该在应用中保持 [自上而下的数据流](https://react.docschina.org/docs/state-and-lifecycle.html#%E6%95%B0%E6%8D%AE%E8%87%AA%E9%A1%B6%E5%90%91%E4%B8%8B%E6%B5%81%E5%8A%A8)，而不是尝试在不同组件中同步状态。\n\n状态提升比双向绑定方式要写更多的“模版代码”，但带来的好处是，你也可以更快地寻找和定位bug的工作。因为哪个组件保有状态数据，也只有它自己能够操作这些数据，发生bug的范围就被大大地减小了。此外，你也可以使用自定义逻辑来拒绝或者更改用户的输入。\n\n如果某些数据可以由props或者state提供，那么它很有可能不应该在state中出现。举个例子，我们仅仅保存最新的编辑过的`temperature`和`scale`值，而不是同时保存 `celsiusValue` 和 `fahrenheitValue` 。另一个输入框中的值总是可以在 `render()` 函数中由这些保存的数据计算出来。这样我们可以根据同一个用户输入精准计算出两个需要使用的数据。\n\n当你在开发UI界面遇到问题时，你可以使用 [React 开发者工具](https://github.com/facebook/react-devtools)来检查props属性，并且可以点击查看组件树，直到你找到负责目前状态更新的组件。这能让你到追踪到产生 bug 的源头。\n\n\n\n# 组合 vs 继承\n\nReact 具有强大的组合模型，我们建议使用组合而不是继承来复用组件之间的代码。\n\n在本节中，我们将围绕几个 React 新手经常使用继承解决的问题，我们将展示如果用组合来解决它们。\n\n## 包含关系\n\n一些组件不能提前知道它们的子组件是什么。这对于 `Sidebar` 或 `Dialog` 这类通用容器尤其常见。\n\n我们建议这些组件使用 `children` 属性将子元素直接传递到输出。\n\n```\nfunction FancyBorder(props) {\n  return (\n    <div className={\'FancyBorder FancyBorder-\' + props.color}>\n      {props.children}\n    </div>\n  );\n}\n```\n\n这样做还允许其他组件通过嵌套 JSX 来传递子组件。\n\n```\nfunction WelcomeDialog() {\n  return (\n    <FancyBorder color="blue">\n      <h1 className="Dialog-title">\n        Welcome\n      </h1>\n      <p className="Dialog-message">\n        Thank you for visiting our spacecraft!\n      </p>\n    </FancyBorder>\n  );\n}\n```\n\n[在 CodePen 上试试。](http://codepen.io/gaearon/pen/ozqNOV?editors=0010)\n\n`<FancyBorder>` JSX 标签内的任何内容都将通过 `children` 属性传入 `FancyBorder`。由于 `FancyBorder` 在一个 `<div>` 内渲染了 `{props.children}`，所以被传递的所有元素都会出现在最终输出中。\n\n虽然不太常见，但有时你可能需要在组件中有多个入口，这种情况下你可以使用自己约定的属性而不是 `children`：\n\n```\nfunction SplitPane(props) {\n  return (\n    <div className="SplitPane">\n      <div className="SplitPane-left">\n        {props.left}\n      </div>\n      <div className="SplitPane-right">\n        {props.right}\n      </div>\n    </div>\n  );\n}\n\nfunction App() {\n  return (\n    <SplitPane\n      left={\n        <Contacts />\n      }\n      right={\n        <Chat />\n      } />\n  );\n}\n```\n\n[在 CodePen 上试试。](http://codepen.io/gaearon/pen/gwZOJp?editors=0010)\n\n类似 `<Contacts />` 和 `<Chat />` 这样的 React 元素都是对象，所以你可以像任何其他元素一样传递它们。\n\n## 特殊实例\n\n有时我们认为组件是其他组件的特殊实例。例如，我们会说 `WelcomeDialog` 是 `Dialog` 的特殊实例。\n\n在 React 中，这也是通过组合来实现的，通过配置属性用较特殊的组件来渲染较通用的组件。\n\n```\nfunction Dialog(props) {\n  return (\n    <FancyBorder color="blue">\n      <h1 className="Dialog-title">\n        {props.title}\n      </h1>\n      <p className="Dialog-message">\n        {props.message}\n      </p>\n    </FancyBorder>\n  );\n}\n\nfunction WelcomeDialog() {\n  return (\n    <Dialog\n      title="Welcome"\n      message="Thank you for visiting our spacecraft!" />\n  );\n}\n```\n\n[在 CodePen 上试试。](http://codepen.io/gaearon/pen/kkEaOZ?editors=0010)\n\n组合对于定义为类的组件同样适用：\n\n```\nfunction Dialog(props) {\n  return (\n    <FancyBorder color="blue">\n      <h1 className="Dialog-title">\n        {props.title}\n      </h1>\n      <p className="Dialog-message">\n        {props.message}\n      </p>\n      {props.children}\n    </FancyBorder>\n  );\n}\n\nclass SignUpDialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSignUp = this.handleSignUp.bind(this);\n    this.state = {login: \'\'};\n  }\n\n  render() {\n    return (\n      <Dialog title="Mars Exploration Program"\n              message="How should we refer to you?">\n        <input value={this.state.login}\n               onChange={this.handleChange} />\n        <button onClick={this.handleSignUp}>\n          Sign Me Up!\n        </button>\n      </Dialog>\n    );\n  }\n\n  handleChange(e) {\n    this.setState({login: e.target.value});\n  }\n\n  handleSignUp() {\n    alert(`Welcome aboard, ${this.state.login}!`);\n  }\n}\n```\n\n[在 CodePen 上试试。](http://codepen.io/gaearon/pen/gwZbYa?editors=0010)\n\n## 那么继承呢？\n\n在 Facebook 网站上，我们的 React 使用了数以千计的组件，然而却还未发现任何需要推荐你使用继承的情况。\n\n属性和组合为你提供了以清晰和安全的方式自定义组件的样式和行为所需的所有灵活性。请记住，组件可以接受任意元素，包括基本数据类型、React 元素或函数。\n\n如果要在组件之间复用 UI 无关的功能，我们建议将其提取到单独的 JavaScript 模块中。这样可以在不对组件进行扩展的前提下导入并使用该函数、对象或类。\n\n\n\n# React 理念\n\n在我们的理念中，React 最初的目的是使用 JavaScript 创建大型的，快速响应的网络应用。它在我们的 Facebook 和 Instagram 中已经实践的非常好了。\n\nReact的众多优点之一是它让你在编写代码的时候同时也在思考你的应用。在这篇文档中，我们会带你使用 React 一起创建一个可搜索的产品数据表格，并向你展示我们的思考过程。\n\n## 从模拟页面开始\n\n想象我们已经有一个 JSON 接口和一个设计师给我们的原型图。原型图像下面这样：\n\n[![Mockup](https://react.docschina.org/static/thinking-in-react-mock-1071fbcc9eed01fddc115b41e193ec11-4dd91.png)](https://react.docschina.org/static/thinking-in-react-mock-1071fbcc9eed01fddc115b41e193ec11-4dd91.png)\n\n我们的 JSON 接口返回类似下面的数据：\n\n```\n[\n  {category: "Sporting Goods", price: "$49.99", stocked: true, name: "Football"},\n  {category: "Sporting Goods", price: "$9.99", stocked: true, name: "Baseball"},\n  {category: "Sporting Goods", price: "$29.99", stocked: false, name: "Basketball"},\n  {category: "Electronics", price: "$99.99", stocked: true, name: "iPod Touch"},\n  {category: "Electronics", price: "$399.99", stocked: false, name: "iPhone 5"},\n  {category: "Electronics", price: "$199.99", stocked: true, name: "Nexus 7"}\n];\n```\n\n## 第一步：把 UI 划分出组件层级\n\n第一件你要做的事情是用方框划分出每一个组件(和子组件)并给他们命名。如果你和设计师一起工作，他们可能已经完成了这些，所以去和他们聊聊吧！他们的 Photoshop 图层名称也许就是你的 React 组件名称！\n\n但你如何知道哪一部分应该成为一个组件？想想在编写代码时你在什么情况下需要新建一个函数或对象，思考方式是一样的。例如 [单一功能原则](https://en.wikipedia.org/wiki/Single_responsibility_principle)，在理想状况下，一个组件应该只做一件事情。如果这个组件功能不断丰富，它应该被分成更小的组件。\n\n既然你经常向用户展示 JSON 数据模型，你会发现，如果你的模型构建正确，你的 UI (以及你的组件结构)会被很好的映射。这是因为 UI 和数据模型往往遵循着相同的*信息架构*，这意味着将 UI 划分成组件的工作往往是很容易的。只要把它划分成能准确表示你数据模型的一部分的组件就可以。\n\n[![Component diagram](https://react.docschina.org/static/thinking-in-react-components-eb8bda25806a89ebdc838813bdfa3601-82965.png)](https://react.docschina.org/static/thinking-in-react-components-eb8bda25806a89ebdc838813bdfa3601-82965.png)\n\n在这里你会看到，我们的简单应用中有5个组件。我们把每个组件展示的数据用斜体表示。\n\n1. **FilterableProductTable (橙色):** 包含了整个例子\n2. **SearchBar (蓝色):** 接受所有的*用户输入*\n3. **ProductTable (绿色):** 根据*用户输入*过滤并展示*数据集合*\n4. **ProductCategoryRow (绿松石色):** 展示每个*分类*的标题\n5. **ProductRow (红色):** 用行来展示每个*产品*\n\n如果你查看 `ProductTable`，你会发现表头(包含 `Name` 和 `Price` 标签)并没有作为一个组件。这是一个偏好问题，选择哪种方式目前还存在争议。在这个例子中，我们把它作为 `ProductTable` 的一部分，因为它是渲染*数据集合*的一部分，而渲染*数据集合*是 `ProductTable` 的职责。然而，如果头部变得更加复杂(也就是，如果我们添加了排序功能)，它就有足够的理由成为一个单独的 `ProductTableHeader` 组件。\n\n现在我们已经确定了原型图中的组件，让我们把它们整理成层级结构。这很容易。原型图中的子组件在层级结构中应该作为子节点。\n\n- `FilterableProductTable`\n  - `SearchBar`\n  - `ProductTable`\n    - `ProductCategoryRow`\n    - `ProductRow`\n\n## 第二步：用 React 创建一个静态版本\n\nSee the Pen [Thinking In React: Step 2](http://codepen.io/lacker/pen/vXpAgj/) on [CodePen](http://codepen.io/).\n\n现在有了组件层级，是时候去实现你的应用了。最简单的方式是先创建一个静态版本：传入数据模型，渲染 UI 但没有任何交互。最好把这些过程解耦，因为创建一个静态版本更多需要的是码代码，不太需要逻辑思考，而添加交互则更多需要的是逻辑思考，不是码代码。我们会看看为什么是这样的。\n\n要构建一个用于呈现数据模型的静态版本的应用程序，你需要创建能够复用其他组件的组件，并通过 *props* 来传递数据。*props* 是一种从父级向子级传递数据的方法。如果你熟悉 *state* 的概念， 在创建静态版本的时候*不要使用 state*。State 只在交互的时候使用，即随时间变化的数据。由于这是静态版本的应用，你不需要使用它。\n\n你可以自顶向下或者自底向上构建应用。也就是，你可以从层级最高的组件开始构建(即 `FilterableProductTable`开始)或层级最低的组件开始构建(`ProductRow`)。在较为简单的例子中，通常自顶向下更容易，而在较大的项目中，自底向上会更容易并且在你构建的时候有利于编写测试。\n\n在这步的最后，你会拥有一个用于呈现数据模型的可重用组件库。这些组件只会有 `render()`方法，因为这只是你的应用的静态版本。层级最高的组件(`FilterableProductTable`)会把数据模型作为 prop 传入。如果你改变你的基础数据模型并且再次调用 `ReactDOM.render()`， UI 会更新。很容易看到你的 UI 是如何更新的，哪里进行了更新。因为没有什么复杂的事情发生。React 的**单向数据流**(也叫作*单向绑定*)保证了一切是模块化并且是快速的。\n\n如果你在这步需要帮助，请参阅 [React 文档](https://react.docschina.org/docs/)\n\n### 一个小插曲：Props VS State\n\n在 React 中有两种数据模型：props 和 state。理解两者的差别是很重要的；如果你还不确定差别是什么，请查看[React 官方文档](https://react.docschina.org/docs/state-and-lifecycle.html)\n\n## 第三步：定义 UI 状态的最小(但完整)表示\n\n为了使你的 UI 交互，你需要能够触发对底层数据模型的更改。React 使用 **state**，让这变的更容易。\n\n为了正确构建你的应用，首先你需要考虑你的应用所需要的最小可变状态集。要点是 DRY：*不要重复(Don’t Repeat Yourself)*。找出应用程序的绝对最小表示并计算你所需要的其他任何请求。例如，如果你正在创建一个 TODO 列表，只要保存一个包含 TODO 事项的数组；不要为计数保留一个单独的状态变量。相反，当你想要渲染 TODO 计数时，只需要使用 TODO 数组的长度就可以了。\n\n想想我们的实例应用中所有数据。我们有：\n\n- 原产品列表\n- 用户输入的搜索文本\n- 复选框的值\n- 产品的筛选列表\n\n让我们来看看每一条，找出哪一个是 state。每个数据只要考虑三个问题：\n\n1. 它是通过 props 从父级传来的吗？如果是，他可能不是 state。\n2. 它随着时间推移不变吗？如果是，它可能不是 state。\n3. 你能够根据组件中任何其他的 state 或 props 把它计算出来吗？如果是，它不是 state。\n\n原产品列表被作为 props 传入，所以它不是 state。搜索文本和复选框似乎是 state，因为它们随时间改变并且不能由其他任何值计算出来。最后，产品的筛选列表不是 state，因为它可以通过将原始产品列表与搜索文本和复选框的值组合计算出来。\n\n最后，我们的 state 有：\n\n- 用户输入的搜索文本\n- 复选框的值\n\n## 第四步：确定你的 State 应该位于哪里\n\nSee the Pen [Thinking In React: Step 4](http://codepen.io/lacker/pen/ORzEkG/) by Kevin Lacker ([@lacker](http://codepen.io/lacker)) on [CodePen](http://codepen.io/).\n\n好的，现在我们确定了应用 state 的最小集合。接下来，我们需要确定哪个组件会改变，或拥有这个 state。\n\n记住：React 中的数据流是单向的，并在组件层次结构中向下传递。一开始我们可能不是很清楚哪个组件应该拥有哪个 state。**在新手理解上这通常是最富有挑战性的部分**，所以按照下面的步骤来辨别：\n\n对你应用的每一个 state：\n\n- 确定每一个需要这个 state 来渲染的组件。\n- 找到一个公共所有者组件(一个在层级上高于所有其他需要这个 state 的组件的组件)\n- 这个公共所有者组件或另一个层级更高的组件应该拥有这个 state。\n- 如果你没有找到可以拥有这个 state 的组件，创建一个仅用来保存状态的组件并把它加入比这个公共所有者组件层级更高的地方。\n\n让我们用这个策略分析我们的应用：\n\n- `ProductTable` 需要根据 state 过滤产品列表，`SearchBar` 需要展示搜索文本和复选框状态。\n- 公共所有者组件是 `FilterableProductTable`。\n- 筛选文本和复选框的值应该放在 `FilterableProductTable`。\n\n很酷，所以我们决定把 state 放在 `FilterableProductTable`。首先，为 `FilterableProductTable` 的 `constructor` 添加一个实例属性 `this.state = {filterText: \'\', inStockOnly: false}` 来表示我们应用的初始状态。接下来，把 `filterText` 和 `inStockOnly` 作为 prop 传入 `ProductTable` 和 `SearchBar`。最后在 `ProductTable` 中使用这些 props 来筛选每行产品信息，在 `SearchBar` 中设置表单域的值。\n\n现在你能够看到你的应用是如何运作的了：设置 `filterText` 的值为 `ball` 并刷新你的应用。你会看到数据表格正确的更新了。\n\n## 第五步：添加反向数据流\n\nSee the Pen [Thinking In React: Step 5](http://codepen.io/rohan10/pen/qRqmjd) on [CodePen](http://codepen.io/).\n\n到目前为止，我们已经创建了一个可以正确渲染的应用程序，它的数据在层级中通过函数的 props 和 state 向下流动。现在是时候支持其他方式的数据流了：层级结构中最底层的表单组件需要去更新在 `FilterableProductTable` 中的 state。\n\nReact 的数据流很明显，让你可以很轻松的了解你的程序是如何运行的，但相较于传统的双向绑定，它的代码量会稍微多一点。\n\n在当前版本的示例中，如果你试图键入或选中复选框，你会发现 React 会忽略你的输入。这是故意的，因为我们把 `input` 的 `value` 属性设置为一直等于从 `FilterableProductTable` 传入的 `state`.\n\n让我们想想我们想要做什么。我们想确保每当用户更改表单时，我们更新状态来反应用户输入。因为组件应该只更新自己的状态， `FilterableProductTable` 会将一个回调函数传递给 `SearchBar` ，每当应该更新状态时，它就会触发。我们可以使用输入上的 `onChange` 事件来调用它。`FilterableProductTable` 传入的回调函数会调用 `setState()`，这时应用程序会被更新。\n\n虽然这听起来很复杂，但它只是几行代码的问题。而且，你可以清楚地看出你的应用中数据是如何流动的。\n\n## 就是这样\n\n希望这可以让你了解如何使用 React 构建组件和应用程序。虽然这可能会比以前编写更多的代码，但请记住，代码是用来读的，这比写更重要，并且非常容易阅读这个模块化的，思路清晰的代码。当你开始构建大型组件库的时候，你会开始欣赏 React 的思路清晰化和模块性，并且随着代码的复用，你的代码量会开始减少。:)' },
    key: undefined } ] 'results'
[2019-03-05 20:20:17.665] [INFO] http - ::ffff:127.0.0.1 - - "POST /posts/create HTTP/1.1" 200 46 "http://localhost:9000/document/new" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:20:19.315] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:20:19.315] [INFO] console - will check 1551790181940 1551788419315
[2019-03-05 20:20:19.315] [INFO] console - will update 1551790219315 1551788419315
[2019-03-05 20:20:19.321] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 717 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:20:20.772] [INFO] console - will check 1551790219315 1551788420772
[2019-03-05 20:20:20.772] [INFO] console - will update 1551790220772 1551788420772
[2019-03-05 20:20:20.772] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:20:20.779] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c7e69804018ef371601e30a HTTP/1.1" 200 94157 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:21:26.846] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: 
     { content: '# ECMAScript 6 入门\n\n《ECMAScript 6 入门》是一本开源的 JavaScript 语言教程，全面介绍 ECMAScript 6 新引入的语法特性。\n\n[![cover](http://es6.ruanyifeng.com/images/cover_thumbnail_3rd.jpg)](http://es6.ruanyifeng.com/images/cover-3rd.jpg)\n\n本书覆盖 ES6 与上一个版本 ES5 的所有不同之处，对涉及的语法知识给予详细介绍，并给出大量简洁易懂的示例代码。\n\n本书为中级难度，适合已经掌握 ES5 的读者，用来了解这门语言的最新发展；也可当作参考手册，查寻新增的语法点。如果你是 JavaScript 语言的初学者，建议先学完[《JavaScript 语言入门教程》](https://wangdoc.com/javascript/)，再来看本书。\n\n全书已由电子工业出版社出版，2017年9月推出了第三版，书名为《ES6 标准入门》。纸版是基于网站内容排版印刷的。\n\n感谢张春雨编辑支持我将全书开源的做法。如果您认可这本书，建议购买纸版。这样可以使出版社不因出版开源书籍而亏钱，进而鼓励更多的作者开源自己的书籍。下面是第三版的购买地址。\n\n- [淘宝](https://s.taobao.com/search?q=ES6%E6%A0%87%E5%87%86%E5%85%A5%E9%97%A8+%E7%AC%AC3%E7%89%88)\n- [京东](https://search.jd.com/Search?keyword=ES6%E6%A0%87%E5%87%86%E5%85%A5%E9%97%A8%20%E7%AC%AC3%E7%89%88&enc=utf-8&wq=ES6%E6%A0%87%E5%87%86%E5%85%A5%E9%97%A8%20%E7%AC%AC3%E7%89%88)\n- [当当](http://product.dangdang.com/25156888.html)\n- [亚马逊](https://www.amazon.cn/ES6%E6%A0%87%E5%87%86%E5%85%A5%E9%97%A8-%E9%98%AE%E4%B8%80%E5%B3%B0/dp/B0755547ZZ)\n- [China-pub](http://product.china-pub.com/6504650)\n\n### 版权许可\n\n本书采用“保持署名—非商用”创意共享4.0许可证。\n\n只要保持原作者署名和非商用，您可以自由地阅读、分享、修改本书。\n\n详细的法律条文请参见[创意共享](http://creativecommons.org/licenses/by-nc/4.0/)网站。\n\n# ECMAScript 6 简介\n\n1. [ECMAScript 和 JavaScript 的关系](http://es6.ruanyifeng.com/#docs/intro#ECMAScript%20%E5%92%8C%20JavaScript%20%E7%9A%84%E5%85%B3%E7%B3%BB)\n2. [ES6 与 ECMAScript 2015 的关系](http://es6.ruanyifeng.com/#docs/intro#ES6%20%E4%B8%8E%20ECMAScript%202015%20%E7%9A%84%E5%85%B3%E7%B3%BB)\n3. [语法提案的批准流程](http://es6.ruanyifeng.com/#docs/intro#%E8%AF%AD%E6%B3%95%E6%8F%90%E6%A1%88%E7%9A%84%E6%89%B9%E5%87%86%E6%B5%81%E7%A8%8B)\n4. [ECMAScript 的历史](http://es6.ruanyifeng.com/#docs/intro#ECMAScript%20%E7%9A%84%E5%8E%86%E5%8F%B2)\n5. [部署进度](http://es6.ruanyifeng.com/#docs/intro#%E9%83%A8%E7%BD%B2%E8%BF%9B%E5%BA%A6)\n6. [Babel 转码器](http://es6.ruanyifeng.com/#docs/intro#Babel%20%E8%BD%AC%E7%A0%81%E5%99%A8)\n7. [Traceur 转码器](http://es6.ruanyifeng.com/#docs/intro#Traceur%20%E8%BD%AC%E7%A0%81%E5%99%A8)\n\nECMAScript 6.0（以下简称 ES6）是 JavaScript 语言的下一代标准，已经在 2015 年 6 月正式发布了。它的目标，是使得 JavaScript 语言可以用来编写复杂的大型应用程序，成为企业级开发语言。\n\n## ECMAScript 和 JavaScript 的关系\n\n一个常见的问题是，ECMAScript 和 JavaScript 到底是什么关系？\n\n要讲清楚这个问题，需要回顾历史。1996 年 11 月，JavaScript 的创造者 Netscape 公司，决定将 JavaScript 提交给标准化组织 ECMA，希望这种语言能够成为国际标准。次年，ECMA 发布 262 号标准文件（ECMA-262）的第一版，规定了浏览器脚本语言的标准，并将这种语言称为 ECMAScript，这个版本就是 1.0 版。\n\n该标准从一开始就是针对 JavaScript 语言制定的，但是之所以不叫 JavaScript，有两个原因。一是商标，Java 是 Sun 公司的商标，根据授权协议，只有 Netscape 公司可以合法地使用 JavaScript 这个名字，且 JavaScript 本身也已经被 Netscape 公司注册为商标。二是想体现这门语言的制定者是 ECMA，不是 Netscape，这样有利于保证这门语言的开放性和中立性。\n\n因此，ECMAScript 和 JavaScript 的关系是，前者是后者的规格，后者是前者的一种实现（另外的 ECMAScript 方言还有 Jscript 和 ActionScript）。日常场合，这两个词是可以互换的。\n\n## ES6 与 ECMAScript 2015 的关系\n\nECMAScript 2015（简称 ES2015）这个词，也是经常可以看到的。它与 ES6 是什么关系呢？\n\n2011 年，ECMAScript 5.1 版发布后，就开始制定 6.0 版了。因此，ES6 这个词的原意，就是指 JavaScript 语言的下一个版本。\n\n但是，因为这个版本引入的语法功能太多，而且制定过程当中，还有很多组织和个人不断提交新功能。事情很快就变得清楚了，不可能在一个版本里面包括所有将要引入的功能。常规的做法是先发布 6.0 版，过一段时间再发 6.1 版，然后是 6.2 版、6.3 版等等。\n\n但是，标准的制定者不想这样做。他们想让标准的升级成为常规流程：任何人在任何时候，都可以向标准委员会提交新语法的提案，然后标准委员会每个月开一次会，评估这些提案是否可以接受，需要哪些改进。如果经过多次会议以后，一个提案足够成熟了，就可以正式进入标准了。这就是说，标准的版本升级成为了一个不断滚动的流程，每个月都会有变动。\n\n标准委员会最终决定，标准在每年的 6 月份正式发布一次，作为当年的正式版本。接下来的时间，就在这个版本的基础上做改动，直到下一年的 6 月份，草案就自然变成了新一年的版本。这样一来，就不需要以前的版本号了，只要用年份标记就可以了。\n\nES6 的第一个版本，就这样在 2015 年 6 月发布了，正式名称就是《ECMAScript 2015 标准》（简称 ES2015）。2016 年 6 月，小幅修订的《ECMAScript 2016 标准》（简称 ES2016）如期发布，这个版本可以看作是 ES6.1 版，因为两者的差异非常小（只新增了数组实例的`includes`方法和指数运算符），基本上是同一个标准。根据计划，2017 年 6 月发布 ES2017 标准。\n\n因此，ES6 既是一个历史名词，也是一个泛指，含义是 5.1 版以后的 JavaScript 的下一代标准，涵盖了 ES2015、ES2016、ES2017 等等，而 ES2015 则是正式名称，特指该年发布的正式版本的语言标准。本书中提到 ES6 的地方，一般是指 ES2015 标准，但有时也是泛指“下一代 JavaScript 语言”。\n\n## 语法提案的批准流程\n\n任何人都可以向标准委员会（又称 TC39 委员会）提案，要求修改语言标准。\n\n一种新的语法从提案到变成正式标准，需要经历五个阶段。每个阶段的变动都需要由 TC39 委员会批准。\n\n- Stage 0 - Strawman（展示阶段）\n- Stage 1 - Proposal（征求意见阶段）\n- Stage 2 - Draft（草案阶段）\n- Stage 3 - Candidate（候选人阶段）\n- Stage 4 - Finished（定案阶段）\n\n一个提案只要能进入 Stage 2，就差不多肯定会包括在以后的正式标准里面。ECMAScript 当前的所有提案，可以在 TC39 的官方网站[Github.com/tc39/ecma262](https://github.com/tc39/ecma262)查看。\n\n本书的写作目标之一，是跟踪 ECMAScript 语言的最新进展，介绍 5.1 版本以后所有的新语法。对于那些明确或很有希望，将要列入标准的新语法，都将予以介绍。\n\n## ECMAScript 的历史\n\nES6 从开始制定到最后发布，整整用了 15 年。\n\n前面提到，ECMAScript 1.0 是 1997 年发布的，接下来的两年，连续发布了 ECMAScript 2.0（1998 年 6 月）和 ECMAScript 3.0（1999 年 12 月）。3.0 版是一个巨大的成功，在业界得到广泛支持，成为通行标准，奠定了 JavaScript 语言的基本语法，以后的版本完全继承。直到今天，初学者一开始学习 JavaScript，其实就是在学 3.0 版的语法。\n\n2000 年，ECMAScript 4.0 开始酝酿。这个版本最后没有通过，但是它的大部分内容被 ES6 继承了。因此，ES6 制定的起点其实是 2000 年。\n\n为什么 ES4 没有通过呢？因为这个版本太激进了，对 ES3 做了彻底升级，导致标准委员会的一些成员不愿意接受。ECMA 的第 39 号技术专家委员会（Technical Committee 39，简称 TC39）负责制订 ECMAScript 标准，成员包括 Microsoft、Mozilla、Google 等大公司。\n\n2007 年 10 月，ECMAScript 4.0 版草案发布，本来预计次年 8 月发布正式版本。但是，各方对于是否通过这个标准，发生了严重分歧。以 Yahoo、Microsoft、Google 为首的大公司，反对 JavaScript 的大幅升级，主张小幅改动；以 JavaScript 创造者 Brendan Eich 为首的 Mozilla 公司，则坚持当前的草案。\n\n2008 年 7 月，由于对于下一个版本应该包括哪些功能，各方分歧太大，争论过于激烈，ECMA 开会决定，中止 ECMAScript 4.0 的开发，将其中涉及现有功能改善的一小部分，发布为 ECMAScript 3.1，而将其他激进的设想扩大范围，放入以后的版本，由于会议的气氛，该版本的项目代号起名为 Harmony（和谐）。会后不久，ECMAScript 3.1 就改名为 ECMAScript 5。\n\n2009 年 12 月，ECMAScript 5.0 版正式发布。Harmony 项目则一分为二，一些较为可行的设想定名为 JavaScript.next 继续开发，后来演变成 ECMAScript 6；一些不是很成熟的设想，则被视为 JavaScript.next.next，在更远的将来再考虑推出。TC39 委员会的总体考虑是，ES5 与 ES3 基本保持兼容，较大的语法修正和新功能加入，将由 JavaScript.next 完成。当时，JavaScript.next 指的是 ES6，第六版发布以后，就指 ES7。TC39 的判断是，ES5 会在 2013 年的年中成为 JavaScript 开发的主流标准，并在此后五年中一直保持这个位置。\n\n2011 年 6 月，ECMAscript 5.1 版发布，并且成为 ISO 国际标准（ISO/IEC 16262:2011）。\n\n2013 年 3 月，ECMAScript 6 草案冻结，不再添加新功能。新的功能设想将被放到 ECMAScript 7。\n\n2013 年 12 月，ECMAScript 6 草案发布。然后是 12 个月的讨论期，听取各方反馈。\n\n2015 年 6 月，ECMAScript 6 正式通过，成为国际标准。从 2000 年算起，这时已经过去了 15 年。\n\n## 部署进度\n\n各大浏览器的最新版本，对 ES6 的支持可以查看[kangax.github.io/es5-compat-table/es6/](https://kangax.github.io/es5-compat-table/es6/)。随着时间的推移，支持度已经越来越高了，超过 90%的 ES6 语法特性都实现了。\n\nNode 是 JavaScript 的服务器运行环境（runtime）。它对 ES6 的支持度更高。除了那些默认打开的功能，还有一些语法功能已经实现了，但是默认没有打开。使用下面的命令，可以查看 Node 已经实现的 ES6 特性。\n\n```bash\n$ node --v8-options | grep harmony\n```\n\n上面命令的输出结果，会因为版本的不同而有所不同。\n\n我写了一个工具 [ES-Checker](https://github.com/ruanyf/es-checker)，用来检查各种运行环境对 ES6 的支持情况。访问[ruanyf.github.io/es-checker](http://ruanyf.github.io/es-checker)，可以看到您的浏览器支持 ES6 的程度。运行下面的命令，可以查看你正在使用的 Node 环境对 ES6 的支持程度。\n\n```bash\n$ npm install -g es-checker\n$ es-checker\n\n=========================================\nPasses 24 feature Dectations\nYour runtime supports 57% of ECMAScript 6\n=========================================\n```\n\n## Babel 转码器\n\n[Babel](https://babeljs.io/) 是一个广泛使用的 ES6 转码器，可以将 ES6 代码转为 ES5 代码，从而在现有环境执行。这意味着，你可以用 ES6 的方式编写程序，又不用担心现有环境是否支持。下面是一个例子。\n\n```javascript\n// 转码前\ninput.map(item => item + 1);\n\n// 转码后\ninput.map(function (item) {\n  return item + 1;\n});\n```\n\n上面的原始代码用了箭头函数，Babel 将其转为普通函数，就能在不支持箭头函数的 JavaScript 环境执行了。\n\n### 配置文件`.babelrc`\n\nBabel 的配置文件是`.babelrc`，存放在项目的根目录下。使用 Babel 的第一步，就是配置这个文件。\n\n该文件用来设置转码规则和插件，基本格式如下。\n\n```javascript\n{\n  "presets": [],\n  "plugins": []\n}\n```\n\n`presets`字段设定转码规则，官方提供以下的规则集，你可以根据需要安装。\n\n```bash\n# 最新转码规则\n$ npm install --save-dev babel-preset-latest\n\n# react 转码规则\n$ npm install --save-dev babel-preset-react\n\n# 不同阶段语法提案的转码规则（共有4个阶段），选装一个\n$ npm install --save-dev babel-preset-stage-0\n$ npm install --save-dev babel-preset-stage-1\n$ npm install --save-dev babel-preset-stage-2\n$ npm install --save-dev babel-preset-stage-3\n```\n\n然后，将这些规则加入`.babelrc`。\n\n```javascript\n  {\n    "presets": [\n      "latest",\n      "react",\n      "stage-2"\n    ],\n    "plugins": []\n  }\n```\n\n注意，以下所有 Babel 工具和模块的使用，都必须先写好`.babelrc`。\n\n### 命令行转码`babel-cli`\n\nBabel 提供`babel-cli`工具，用于命令行转码。\n\n它的安装命令如下。\n\n```bash\n$ npm install --global babel-cli\n```\n\n基本用法如下。\n\n```bash\n# 转码结果输出到标准输出\n$ babel example.js\n\n# 转码结果写入一个文件\n# --out-file 或 -o 参数指定输出文件\n$ babel example.js --out-file compiled.js\n# 或者\n$ babel example.js -o compiled.js\n\n# 整个目录转码\n# --out-dir 或 -d 参数指定输出目录\n$ babel src --out-dir lib\n# 或者\n$ babel src -d lib\n\n# -s 参数生成source map文件\n$ babel src -d lib -s\n```\n\n上面代码是在全局环境下，进行 Babel 转码。这意味着，如果项目要运行，全局环境必须有 Babel，也就是说项目产生了对环境的依赖。另一方面，这样做也无法支持不同项目使用不同版本的 Babel。\n\n一个解决办法是将`babel-cli`安装在项目之中。\n\n```bash\n# 安装\n$ npm install --save-dev babel-cli\n```\n\n然后，改写`package.json`。\n\n```javascript\n{\n  // ...\n  "devDependencies": {\n    "babel-cli": "^6.0.0"\n  },\n  "scripts": {\n    "build": "babel src -d lib"\n  },\n}\n```\n\n转码的时候，就执行下面的命令。\n\n```javascript\n$ npm run build\n```\n\n### babel-node\n\n`babel-cli`工具自带一个`babel-node`命令，提供一个支持 ES6 的 REPL 环境。它支持 Node 的 REPL 环境的所有功能，而且可以直接运行 ES6 代码。\n\n它不用单独安装，而是随`babel-cli`一起安装。然后，执行`babel-node`就进入 REPL 环境。\n\n```bash\n$ babel-node\n> (x => x * 2)(1)\n2\n```\n\n`babel-node`命令可以直接运行 ES6 脚本。将上面的代码放入脚本文件`es6.js`，然后直接运行。\n\n```bash\n$ babel-node es6.js\n2\n```\n\n`babel-node`也可以安装在项目中。\n\n```bash\n$ npm install --save-dev babel-cli\n```\n\n然后，改写`package.json`。\n\n```javascript\n{\n  "scripts": {\n    "script-name": "babel-node script.js"\n  }\n}\n```\n\n上面代码中，使用`babel-node`替代`node`，这样`script.js`本身就不用做任何转码处理。\n\n### babel-register\n\n`babel-register`模块改写`require`命令，为它加上一个钩子。此后，每当使用`require`加载`.js`、`.jsx`、`.es`和`.es6`后缀名的文件，就会先用 Babel 进行转码。\n\n```bash\n$ npm install --save-dev babel-register\n```\n\n使用时，必须首先加载`babel-register`。\n\n```bash\nrequire("babel-register");\nrequire("./index.js");\n```\n\n然后，就不需要手动对`index.js`转码了。\n\n需要注意的是，`babel-register`只会对`require`命令加载的文件转码，而不会对当前文件转码。另外，由于它是实时转码，所以只适合在开发环境使用。\n\n### babel-core\n\n如果某些代码需要调用 Babel 的 API 进行转码，就要使用`babel-core`模块。\n\n安装命令如下。\n\n```bash\n$ npm install babel-core --save\n```\n\n然后，在项目中就可以调用`babel-core`。\n\n```javascript\nvar babel = require(\'babel-core\');\n\n// 字符串转码\nbabel.transform(\'code();\', options);\n// => { code, map, ast }\n\n// 文件转码（异步）\nbabel.transformFile(\'filename.js\', options, function(err, result) {\n  result; // => { code, map, ast }\n});\n\n// 文件转码（同步）\nbabel.transformFileSync(\'filename.js\', options);\n// => { code, map, ast }\n\n// Babel AST转码\nbabel.transformFromAst(ast, code, options);\n// => { code, map, ast }\n```\n\n配置对象`options`，可以参看官方文档<http://babeljs.io/docs/usage/options/>。\n\n下面是一个例子。\n\n```javascript\nvar es6Code = \'let x = n => n + 1\';\nvar es5Code = require(\'babel-core\')\n  .transform(es6Code, {\n    presets: [\'latest\']\n  })\n  .code;\n// \'"use strict";\\n\\nvar x = function x(n) {\\n  return n + 1;\\n};\'\n```\n\n上面代码中，`transform`方法的第一个参数是一个字符串，表示需要被转换的 ES6 代码，第二个参数是转换的配置对象。\n\n### babel-polyfill\n\nBabel 默认只转换新的 JavaScript 句法（syntax），而不转换新的 API，比如`Iterator`、`Generator`、`Set`、`Map`、`Proxy`、`Reflect`、`Symbol`、`Promise`等全局对象，以及一些定义在全局对象上的方法（比如`Object.assign`）都不会转码。\n\n举例来说，ES6 在`Array`对象上新增了`Array.from`方法。Babel 就不会转码这个方法。如果想让这个方法运行，必须使用`babel-polyfill`，为当前环境提供一个垫片。\n\n安装命令如下。\n\n```bash\n$ npm install --save babel-polyfill\n```\n\n然后，在脚本头部，加入如下一行代码。\n\n```javascript\nimport \'babel-polyfill\';\n// 或者\nrequire(\'babel-polyfill\');\n```\n\nBabel 默认不转码的 API 非常多，详细清单可以查看`babel-plugin-transform-runtime`模块的[definitions.js](https://github.com/babel/babel/blob/master/packages/babel-plugin-transform-runtime/src/definitions.js)文件。\n\n### 浏览器环境\n\nBabel 也可以用于浏览器环境。但是，从 Babel 6.0 开始，不再直接提供浏览器版本，而是要用构建工具构建出来。如果你没有或不想使用构建工具，可以使用[babel-standalone](https://github.com/Daniel15/babel-standalone)模块提供的浏览器版本，将其插入网页。\n\n```html\n<script src="https://cdnjs.cloudflare.com/ajax/libs/babel-standalone/6.4.4/babel.min.js"></script>\n<script type="text/babel">\n// Your ES6 code\n</script>\n```\n\n注意，网页实时将 ES6 代码转为 ES5，对性能会有影响。生产环境需要加载已经转码完成的脚本。\n\n下面是如何将代码打包成浏览器可以使用的脚本，以`Babel`配合`Browserify`为例。首先，安装`babelify`模块。\n\n```bash\n$ npm install --save-dev babelify babel-preset-latest\n```\n\n然后，再用命令行转换 ES6 脚本。\n\n```bash\n$  browserify script.js -o bundle.js \\\n  -t [ babelify --presets [ latest ] ]\n```\n\n上面代码将 ES6 脚本`script.js`，转为`bundle.js`，浏览器直接加载后者就可以了。\n\n在`package.json`设置下面的代码，就不用每次命令行都输入参数了。\n\n```javascript\n{\n  "browserify": {\n    "transform": [["babelify", { "presets": ["latest"] }]]\n  }\n}\n```\n\n### 在线转换\n\nBabel 提供一个[REPL 在线编译器](https://babeljs.io/repl/)，可以在线将 ES6 代码转为 ES5 代码。转换后的代码，可以直接作为 ES5 代码插入网页运行。\n\n### 与其他工具的配合\n\n许多工具需要 Babel 进行前置转码，这里举两个例子：ESLint 和 Mocha。\n\nESLint 用于静态检查代码的语法和风格，安装命令如下。\n\n```bash\n$ npm install --save-dev eslint babel-eslint\n```\n\n然后，在项目根目录下，新建一个配置文件`.eslintrc`，在其中加入`parser`字段。\n\n```javascript\n{\n  "parser": "babel-eslint",\n  "rules": {\n    ...\n  }\n}\n```\n\n再在`package.json`之中，加入相应的`scripts`脚本。\n\n```javascript\n  {\n    "name": "my-module",\n    "scripts": {\n      "lint": "eslint my-files.js"\n    },\n    "devDependencies": {\n      "babel-eslint": "...",\n      "eslint": "..."\n    }\n  }\n```\n\nMocha 则是一个测试框架，如果需要执行使用 ES6 语法的测试脚本，可以修改`package.json`的`scripts.test`。\n\n```javascript\n"scripts": {\n  "test": "mocha --ui qunit --compilers js:babel-core/register"\n}\n```\n\n上面命令中，`--compilers`参数指定脚本的转码器，规定后缀名为`js`的文件，都需要使用`babel-core/register`先转码。\n\n## Traceur 转码器\n\nGoogle 公司的[Traceur](https://github.com/google/traceur-compiler)转码器，也可以将 ES6 代码转为 ES5 代码。\n\n### 直接插入网页\n\nTraceur 允许将 ES6 代码直接插入网页。首先，必须在网页头部加载 Traceur 库文件。\n\n```html\n<script src="https://google.github.io/traceur-compiler/bin/traceur.js"></script>\n<script src="https://google.github.io/traceur-compiler/bin/BrowserSystem.js"></script>\n<script src="https://google.github.io/traceur-compiler/src/bootstrap.js"></script>\n<script type="module">\n  import \'./Greeter.js\';\n</script>\n```\n\n上面代码中，一共有 4 个`script`标签。第一个是加载 Traceur 的库文件，第二个和第三个是将这个库文件用于浏览器环境，第四个则是加载用户脚本，这个脚本里面可以使用 ES6 代码。\n\n注意，第四个`script`标签的`type`属性的值是`module`，而不是`text/javascript`。这是 Traceur 编译器识别 ES6 代码的标志，编译器会自动将所有`type=module`的代码编译为 ES5，然后再交给浏览器执行。\n\n除了引用外部 ES6 脚本，也可以直接在网页中放置 ES6 代码。\n\n```javascript\n<script type="module">\n  class Calc {\n    constructor() {\n      console.log(\'Calc constructor\');\n    }\n    add(a, b) {\n      return a + b;\n    }\n  }\n\n  var c = new Calc();\n  console.log(c.add(4,5));\n</script>\n```\n\n正常情况下，上面代码会在控制台打印出`9`。\n\n如果想对 Traceur 的行为有精确控制，可以采用下面参数配置的写法。\n\n```javascript\n<script>\n  // Create the System object\n  window.System = new traceur.runtime.BrowserTraceurLoader();\n  // Set some experimental options\n  var metadata = {\n    traceurOptions: {\n      experimental: true,\n      properTailCalls: true,\n      symbols: true,\n      arrayComprehension: true,\n      asyncFunctions: true,\n      asyncGenerators: exponentiation,\n      forOn: true,\n      generatorComprehension: true\n    }\n  };\n  // Load your module\n  System.import(\'./myModule.js\', {metadata: metadata}).catch(function(ex) {\n    console.error(\'Import failed\', ex.stack || ex);\n  });\n</script>\n```\n\n上面代码中，首先生成 Traceur 的全局对象`window.System`，然后`System.import`方法可以用来加载 ES6。加载的时候，需要传入一个配置对象`metadata`，该对象的`traceurOptions`属性可以配置支持 ES6 功能。如果设为`experimental: true`，就表示除了 ES6 以外，还支持一些实验性的新功能。\n\n### 在线转换\n\nTraceur 也提供一个[在线编译器](http://google.github.io/traceur-compiler/demo/repl.html)，可以在线将 ES6 代码转为 ES5 代码。转换后的代码，可以直接作为 ES5 代码插入网页运行。\n\n上面的例子转为 ES5 代码运行，就是下面这个样子。\n\n```javascript\n<script src="https://google.github.io/traceur-compiler/bin/traceur.js"></script>\n<script src="https://google.github.io/traceur-compiler/bin/BrowserSystem.js"></script>\n<script src="https://google.github.io/traceur-compiler/src/bootstrap.js"></script>\n<script>\n$traceurRuntime.ModuleStore.getAnonymousModule(function() {\n  "use strict";\n\n  var Calc = function Calc() {\n    console.log(\'Calc constructor\');\n  };\n\n  ($traceurRuntime.createClass)(Calc, {add: function(a, b) {\n    return a + b;\n  }}, {});\n\n  var c = new Calc();\n  console.log(c.add(4, 5));\n  return {};\n});\n</script>\n```\n\n### 命令行转换\n\n作为命令行工具使用时，Traceur 是一个 Node 的模块，首先需要用 npm 安装。\n\n```bash\n$ npm install -g traceur\n```\n\n安装成功后，就可以在命令行下使用 Traceur 了。\n\nTraceur 直接运行 ES6 脚本文件，会在标准输出显示运行结果，以前面的`calc.js`为例。\n\n```bash\n$ traceur calc.js\nCalc constructor\n9\n```\n\n如果要将 ES6 脚本转为 ES5 保存，要采用下面的写法。\n\n```bash\n$ traceur --script calc.es6.js --out calc.es5.js\n```\n\n上面代码的`--script`选项表示指定输入文件，`--out`选项表示指定输出文件。\n\n为了防止有些特性编译不成功，最好加上`--experimental`选项。\n\n```bash\n$ traceur --script calc.es6.js --out calc.es5.js --experimental\n```\n\n命令行下转换生成的文件，就可以直接放到浏览器中运行。\n\n### Node 环境的用法\n\nTraceur 的 Node 用法如下（假定已安装`traceur`模块）。\n\n```javascript\nvar traceur = require(\'traceur\');\nvar fs = require(\'fs\');\n\n// 将 ES6 脚本转为字符串\nvar contents = fs.readFileSync(\'es6-file.js\').toString();\n\nvar result = traceur.compile(contents, {\n  filename: \'es6-file.js\',\n  sourceMap: true,\n  // 其他设置\n  modules: \'commonjs\'\n});\n\nif (result.error)\n  throw result.error;\n\n// result 对象的 js 属性就是转换后的 ES5 代码\nfs.writeFileSync(\'out.js\', result.js);\n// sourceMap 属性对应 map 文件\nfs.writeFileSync(\'out.js.map\', result.sourceMap);\n```\n\n\n\n# let 和 const 命令\n\n1. [let 命令](http://es6.ruanyifeng.com/#docs/let#let%20%E5%91%BD%E4%BB%A4)\n2. [块级作用域](http://es6.ruanyifeng.com/#docs/let#%E5%9D%97%E7%BA%A7%E4%BD%9C%E7%94%A8%E5%9F%9F)\n3. [const 命令](http://es6.ruanyifeng.com/#docs/let#const%20%E5%91%BD%E4%BB%A4)\n4. [顶层对象的属性](http://es6.ruanyifeng.com/#docs/let#%E9%A1%B6%E5%B1%82%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%B1%9E%E6%80%A7)\n5. [global 对象](http://es6.ruanyifeng.com/#docs/let#global%20%E5%AF%B9%E8%B1%A1)\n\n## let 命令\n\n### 基本用法\n\nES6 新增了`let`命令，用来声明变量。它的用法类似于`var`，但是所声明的变量，只在`let`命令所在的代码块内有效。\n\n```javascript\n{\n  let a = 10;\n  var b = 1;\n}\n\na // ReferenceError: a is not defined.\nb // 1\n```\n\n上面代码在代码块之中，分别用`let`和`var`声明了两个变量。然后在代码块之外调用这两个变量，结果`let`声明的变量报错，`var`声明的变量返回了正确的值。这表明，`let`声明的变量只在它所在的代码块有效。\n\n`for`循环的计数器，就很合适使用`let`命令。\n\n```javascript\nfor (let i = 0; i < 10; i++) {\n  // ...\n}\n\nconsole.log(i);\n// ReferenceError: i is not defined\n```\n\n上面代码中，计数器`i`只在`for`循环体内有效，在循环体外引用就会报错。\n\n下面的代码如果使用`var`，最后输出的是`10`。\n\n```javascript\nvar a = [];\nfor (var i = 0; i < 10; i++) {\n  a[i] = function () {\n    console.log(i);\n  };\n}\na[6](); // 10\n```\n\n上面代码中，变量`i`是`var`命令声明的，在全局范围内都有效，所以全局只有一个变量`i`。每一次循环，变量`i`的值都会发生改变，而循环内被赋给数组`a`的函数内部的`console.log(i)`，里面的`i`指向的就是全局的`i`。也就是说，所有数组`a`的成员里面的`i`，指向的都是同一个`i`，导致运行时输出的是最后一轮的`i`的值，也就是 10。\n\n如果使用`let`，声明的变量仅在块级作用域内有效，最后输出的是 6。\n\n```javascript\nvar a = [];\nfor (let i = 0; i < 10; i++) {\n  a[i] = function () {\n    console.log(i);\n  };\n}\na[6](); // 6\n```\n\n上面代码中，变量`i`是`let`声明的，当前的`i`只在本轮循环有效，所以每一次循环的`i`其实都是一个新的变量，所以最后输出的是`6`。你可能会问，如果每一轮循环的变量`i`都是重新声明的，那它怎么知道上一轮循环的值，从而计算出本轮循环的值？这是因为 JavaScript 引擎内部会记住上一轮循环的值，初始化本轮的变量`i`时，就在上一轮循环的基础上进行计算。\n\n另外，`for`循环还有一个特别之处，就是设置循环变量的那部分是一个父作用域，而循环体内部是一个单独的子作用域。\n\n```javascript\nfor (let i = 0; i < 3; i++) {\n  let i = \'abc\';\n  console.log(i);\n}\n// abc\n// abc\n// abc\n```\n\n上面代码正确运行，输出了 3 次`abc`。这表明函数内部的变量`i`与循环变量`i`不在同一个作用域，有各自单独的作用域。\n\n### 不存在变量提升\n\n`var`命令会发生”变量提升“现象，即变量可以在声明之前使用，值为`undefined`。这种现象多多少少是有些奇怪的，按照一般的逻辑，变量应该在声明语句之后才可以使用。\n\n为了纠正这种现象，`let`命令改变了语法行为，它所声明的变量一定要在声明后使用，否则报错。\n\n```javascript\n// var 的情况\nconsole.log(foo); // 输出undefined\nvar foo = 2;\n\n// let 的情况\nconsole.log(bar); // 报错ReferenceError\nlet bar = 2;\n```\n\n上面代码中，变量`foo`用`var`命令声明，会发生变量提升，即脚本开始运行时，变量`foo`已经存在了，但是没有值，所以会输出`undefined`。变量`bar`用`let`命令声明，不会发生变量提升。这表示在声明它之前，变量`bar`是不存在的，这时如果用到它，就会抛出一个错误。\n\n### 暂时性死区\n\n只要块级作用域内存在`let`命令，它所声明的变量就“绑定”（binding）这个区域，不再受外部的影响。\n\n```javascript\nvar tmp = 123;\n\nif (true) {\n  tmp = \'abc\'; // ReferenceError\n  let tmp;\n}\n```\n\n上面代码中，存在全局变量`tmp`，但是块级作用域内`let`又声明了一个局部变量`tmp`，导致后者绑定这个块级作用域，所以在`let`声明变量前，对`tmp`赋值会报错。\n\nES6 明确规定，如果区块中存在`let`和`const`命令，这个区块对这些命令声明的变量，从一开始就形成了封闭作用域。凡是在声明之前就使用这些变量，就会报错。\n\n总之，在代码块内，使用`let`命令声明变量之前，该变量都是不可用的。这在语法上，称为“暂时性死区”（temporal dead zone，简称 TDZ）。\n\n```javascript\nif (true) {\n  // TDZ开始\n  tmp = \'abc\'; // ReferenceError\n  console.log(tmp); // ReferenceError\n\n  let tmp; // TDZ结束\n  console.log(tmp); // undefined\n\n  tmp = 123;\n  console.log(tmp); // 123\n}\n```\n\n上面代码中，在`let`命令声明变量`tmp`之前，都属于变量`tmp`的“死区”。\n\n“暂时性死区”也意味着`typeof`不再是一个百分之百安全的操作。\n\n```javascript\ntypeof x; // ReferenceError\nlet x;\n```\n\n上面代码中，变量`x`使用`let`命令声明，所以在声明之前，都属于`x`的“死区”，只要用到该变量就会报错。因此，`typeof`运行时就会抛出一个`ReferenceError`。\n\n作为比较，如果一个变量根本没有被声明，使用`typeof`反而不会报错。\n\n```javascript\ntypeof undeclared_variable // "undefined"\n```\n\n上面代码中，`undeclared_variable`是一个不存在的变量名，结果返回“undefined”。所以，在没有`let`之前，`typeof`运算符是百分之百安全的，永远不会报错。现在这一点不成立了。这样的设计是为了让大家养成良好的编程习惯，变量一定要在声明之后使用，否则就报错。\n\n有些“死区”比较隐蔽，不太容易发现。\n\n```javascript\nfunction bar(x = y, y = 2) {\n  return [x, y];\n}\n\nbar(); // 报错\n```\n\n上面代码中，调用`bar`函数之所以报错（某些实现可能不报错），是因为参数`x`默认值等于另一个参数`y`，而此时`y`还没有声明，属于”死区“。如果`y`的默认值是`x`，就不会报错，因为此时`x`已经声明了。\n\n```javascript\nfunction bar(x = 2, y = x) {\n  return [x, y];\n}\nbar(); // [2, 2]\n```\n\n另外，下面的代码也会报错，与`var`的行为不同。\n\n```javascript\n// 不报错\nvar x = x;\n\n// 报错\nlet x = x;\n// ReferenceError: x is not defined\n```\n\n上面代码报错，也是因为暂时性死区。使用`let`声明变量时，只要变量在还没有声明完成前使用，就会报错。上面这行就属于这个情况，在变量`x`的声明语句还没有执行完成前，就去取`x`的值，导致报错”x 未定义“。\n\nES6 规定暂时性死区和`let`、`const`语句不出现变量提升，主要是为了减少运行时错误，防止在变量声明前就使用这个变量，从而导致意料之外的行为。这样的错误在 ES5 是很常见的，现在有了这种规定，避免此类错误就很容易了。\n\n总之，暂时性死区的本质就是，只要一进入当前作用域，所要使用的变量就已经存在了，但是不可获取，只有等到声明变量的那一行代码出现，才可以获取和使用该变量。\n\n### 不允许重复声明\n\n`let`不允许在相同作用域内，重复声明同一个变量。\n\n```javascript\n// 报错\nfunction func() {\n  let a = 10;\n  var a = 1;\n}\n\n// 报错\nfunction func() {\n  let a = 10;\n  let a = 1;\n}\n```\n\n因此，不能在函数内部重新声明参数。\n\n```javascript\nfunction func(arg) {\n  let arg; // 报错\n}\n\nfunction func(arg) {\n  {\n    let arg; // 不报错\n  }\n}\n```\n\n## 块级作用域\n\n### 为什么需要块级作用域？\n\nES5 只有全局作用域和函数作用域，没有块级作用域，这带来很多不合理的场景。\n\n第一种场景，内层变量可能会覆盖外层变量。\n\n```javascript\nvar tmp = new Date();\n\nfunction f() {\n  console.log(tmp);\n  if (false) {\n    var tmp = \'hello world\';\n  }\n}\n\nf(); // undefined\n```\n\n上面代码的原意是，`if`代码块的外部使用外层的`tmp`变量，内部使用内层的`tmp`变量。但是，函数`f`执行后，输出结果为`undefined`，原因在于变量提升，导致内层的`tmp`变量覆盖了外层的`tmp`变量。\n\n第二种场景，用来计数的循环变量泄露为全局变量。\n\n```javascript\nvar s = \'hello\';\n\nfor (var i = 0; i < s.length; i++) {\n  console.log(s[i]);\n}\n\nconsole.log(i); // 5\n```\n\n上面代码中，变量`i`只用来控制循环，但是循环结束后，它并没有消失，泄露成了全局变量。\n\n### ES6 的块级作用域\n\n`let`实际上为 JavaScript 新增了块级作用域。\n\n```javascript\nfunction f1() {\n  let n = 5;\n  if (true) {\n    let n = 10;\n  }\n  console.log(n); // 5\n}\n```\n\n上面的函数有两个代码块，都声明了变量`n`，运行后输出 5。这表示外层代码块不受内层代码块的影响。如果两次都使用`var`定义变量`n`，最后输出的值才是 10。\n\nES6 允许块级作用域的任意嵌套。\n\n```javascript\n{{{{{let insane = \'Hello World\'}}}}};\n```\n\n上面代码使用了一个五层的块级作用域。外层作用域无法读取内层作用域的变量。\n\n```javascript\n{{{{\n  {let insane = \'Hello World\'}\n  console.log(insane); // 报错\n}}}};\n```\n\n内层作用域可以定义外层作用域的同名变量。\n\n```javascript\n{{{{\n  let insane = \'Hello World\';\n  {let insane = \'Hello World\'}\n}}}};\n```\n\n块级作用域的出现，实际上使得获得广泛应用的立即执行函数表达式（IIFE）不再必要了。\n\n```javascript\n// IIFE 写法\n(function () {\n  var tmp = ...;\n  ...\n}());\n\n// 块级作用域写法\n{\n  let tmp = ...;\n  ...\n}\n```\n\n### 块级作用域与函数声明\n\n函数能不能在块级作用域之中声明？这是一个相当令人混淆的问题。\n\nES5 规定，函数只能在顶层作用域和函数作用域之中声明，不能在块级作用域声明。\n\n```javascript\n// 情况一\nif (true) {\n  function f() {}\n}\n\n// 情况二\ntry {\n  function f() {}\n} catch(e) {\n  // ...\n}\n```\n\n上面两种函数声明，根据 ES5 的规定都是非法的。\n\n但是，浏览器没有遵守这个规定，为了兼容以前的旧代码，还是支持在块级作用域之中声明函数，因此上面两种情况实际都能运行，不会报错。\n\nES6 引入了块级作用域，明确允许在块级作用域之中声明函数。ES6 规定，块级作用域之中，函数声明语句的行为类似于`let`，在块级作用域之外不可引用。\n\n```javascript\nfunction f() { console.log(\'I am outside!\'); }\n\n(function () {\n  if (false) {\n    // 重复声明一次函数f\n    function f() { console.log(\'I am inside!\'); }\n  }\n\n  f();\n}());\n```\n\n上面代码在 ES5 中运行，会得到“I am inside!”，因为在`if`内声明的函数`f`会被提升到函数头部，实际运行的代码如下。\n\n```javascript\n// ES5 环境\nfunction f() { console.log(\'I am outside!\'); }\n\n(function () {\n  function f() { console.log(\'I am inside!\'); }\n  if (false) {\n  }\n  f();\n}());\n```\n\nES6 就完全不一样了，理论上会得到“I am outside!”。因为块级作用域内声明的函数类似于`let`，对作用域之外没有影响。但是，如果你真的在 ES6 浏览器中运行一下上面的代码，是会报错的，这是为什么呢？\n\n原来，如果改变了块级作用域内声明的函数的处理规则，显然会对老代码产生很大影响。为了减轻因此产生的不兼容问题，ES6 在[附录 B](http://www.ecma-international.org/ecma-262/6.0/index.html#sec-block-level-function-declarations-web-legacy-compatibility-semantics)里面规定，浏览器的实现可以不遵守上面的规定，有自己的[行为方式](http://stackoverflow.com/questions/31419897/what-are-the-precise-semantics-of-block-level-functions-in-es6)。\n\n- 允许在块级作用域内声明函数。\n- 函数声明类似于`var`，即会提升到全局作用域或函数作用域的头部。\n- 同时，函数声明还会提升到所在的块级作用域的头部。\n\n注意，上面三条规则只对 ES6 的浏览器实现有效，其他环境的实现不用遵守，还是将块级作用域的函数声明当作`let`处理。\n\n根据这三条规则，在浏览器的 ES6 环境中，块级作用域内声明的函数，行为类似于`var`声明的变量。\n\n```javascript\n// 浏览器的 ES6 环境\nfunction f() { console.log(\'I am outside!\'); }\n\n(function () {\n  if (false) {\n    // 重复声明一次函数f\n    function f() { console.log(\'I am inside!\'); }\n  }\n\n  f();\n}());\n// Uncaught TypeError: f is not a function\n```\n\n上面的代码在符合 ES6 的浏览器中，都会报错，因为实际运行的是下面的代码。\n\n```javascript\n// 浏览器的 ES6 环境\nfunction f() { console.log(\'I am outside!\'); }\n(function () {\n  var f = undefined;\n  if (false) {\n    function f() { console.log(\'I am inside!\'); }\n  }\n\n  f();\n}());\n// Uncaught TypeError: f is not a function\n```\n\n考虑到环境导致的行为差异太大，应该避免在块级作用域内声明函数。如果确实需要，也应该写成函数表达式，而不是函数声明语句。\n\n```javascript\n// 函数声明语句\n{\n  let a = \'secret\';\n  function f() {\n    return a;\n  }\n}\n\n// 函数表达式\n{\n  let a = \'secret\';\n  let f = function () {\n    return a;\n  };\n}\n```\n\n另外，还有一个需要注意的地方。ES6 的块级作用域允许声明函数的规则，只在使用大括号的情况下成立，如果没有使用大括号，就会报错。\n\n```javascript\n// 不报错\n\'use strict\';\nif (true) {\n  function f() {}\n}\n\n// 报错\n\'use strict\';\nif (true)\n  function f() {}\n```\n\n## const 命令\n\n### 基本用法\n\n`const`声明一个只读的常量。一旦声明，常量的值就不能改变。\n\n```javascript\nconst PI = 3.1415;\nPI // 3.1415\n\nPI = 3;\n// TypeError: Assignment to constant variable.\n```\n\n上面代码表明改变常量的值会报错。\n\n`const`声明的变量不得改变值，这意味着，`const`一旦声明变量，就必须立即初始化，不能留到以后赋值。\n\n```javascript\nconst foo;\n// SyntaxError: Missing initializer in const declaration\n```\n\n上面代码表示，对于`const`来说，只声明不赋值，就会报错。\n\n`const`的作用域与`let`命令相同：只在声明所在的块级作用域内有效。\n\n```javascript\nif (true) {\n  const MAX = 5;\n}\n\nMAX // Uncaught ReferenceError: MAX is not defined\n```\n\n`const`命令声明的常量也是不提升，同样存在暂时性死区，只能在声明的位置后面使用。\n\n```javascript\nif (true) {\n  console.log(MAX); // ReferenceError\n  const MAX = 5;\n}\n```\n\n上面代码在常量`MAX`声明之前就调用，结果报错。\n\n`const`声明的常量，也与`let`一样不可重复声明。\n\n```javascript\nvar message = "Hello!";\nlet age = 25;\n\n// 以下两行都会报错\nconst message = "Goodbye!";\nconst age = 30;\n```\n\n### 本质\n\n`const`实际上保证的，并不是变量的值不得改动，而是变量指向的那个内存地址所保存的数据不得改动。对于简单类型的数据（数值、字符串、布尔值），值就保存在变量指向的那个内存地址，因此等同于常量。但对于复合类型的数据（主要是对象和数组），变量指向的内存地址，保存的只是一个指向实际数据的指针，`const`只能保证这个指针是固定的（即总是指向另一个固定的地址），至于它指向的数据结构是不是可变的，就完全不能控制了。因此，将一个对象声明为常量必须非常小心。\n\n```javascript\nconst foo = {};\n\n// 为 foo 添加一个属性，可以成功\nfoo.prop = 123;\nfoo.prop // 123\n\n// 将 foo 指向另一个对象，就会报错\nfoo = {}; // TypeError: "foo" is read-only\n```\n\n上面代码中，常量`foo`储存的是一个地址，这个地址指向一个对象。不可变的只是这个地址，即不能把`foo`指向另一个地址，但对象本身是可变的，所以依然可以为其添加新属性。\n\n下面是另一个例子。\n\n```javascript\nconst a = [];\na.push(\'Hello\'); // 可执行\na.length = 0;    // 可执行\na = [\'Dave\'];    // 报错\n```\n\n上面代码中，常量`a`是一个数组，这个数组本身是可写的，但是如果将另一个数组赋值给`a`，就会报错。\n\n如果真的想将对象冻结，应该使用`Object.freeze`方法。\n\n```javascript\nconst foo = Object.freeze({});\n\n// 常规模式时，下面一行不起作用；\n// 严格模式时，该行会报错\nfoo.prop = 123;\n```\n\n上面代码中，常量`foo`指向一个冻结的对象，所以添加新属性不起作用，严格模式时还会报错。\n\n除了将对象本身冻结，对象的属性也应该冻结。下面是一个将对象彻底冻结的函数。\n\n```javascript\nvar constantize = (obj) => {\n  Object.freeze(obj);\n  Object.keys(obj).forEach( (key, i) => {\n    if ( typeof obj[key] === \'object\' ) {\n      constantize( obj[key] );\n    }\n  });\n};\n```\n\n### ES6 声明变量的六种方法\n\nES5 只有两种声明变量的方法：`var`命令和`function`命令。ES6 除了添加`let`和`const`命令，后面章节还会提到，另外两种声明变量的方法：`import`命令和`class`命令。所以，ES6 一共有 6 种声明变量的方法。\n\n## 顶层对象的属性\n\n顶层对象，在浏览器环境指的是`window`对象，在 Node 指的是`global`对象。ES5 之中，顶层对象的属性与全局变量是等价的。\n\n```javascript\nwindow.a = 1;\na // 1\n\na = 2;\nwindow.a // 2\n```\n\n上面代码中，顶层对象的属性赋值与全局变量的赋值，是同一件事。\n\n顶层对象的属性与全局变量挂钩，被认为是 JavaScript 语言最大的设计败笔之一。这样的设计带来了几个很大的问题，首先是没法在编译时就报出变量未声明的错误，只有运行时才能知道（因为全局变量可能是顶层对象的属性创造的，而属性的创造是动态的）；其次，程序员很容易不知不觉地就创建了全局变量（比如打字出错）；最后，顶层对象的属性是到处可以读写的，这非常不利于模块化编程。另一方面，`window`对象有实体含义，指的是浏览器的窗口对象，顶层对象是一个有实体含义的对象，也是不合适的。\n\nES6 为了改变这一点，一方面规定，为了保持兼容性，`var`命令和`function`命令声明的全局变量，依旧是顶层对象的属性；另一方面规定，`let`命令、`const`命令、`class`命令声明的全局变量，不属于顶层对象的属性。也就是说，从 ES6 开始，全局变量将逐步与顶层对象的属性脱钩。\n\n```javascript\nvar a = 1;\n// 如果在 Node 的 REPL 环境，可以写成 global.a\n// 或者采用通用方法，写成 this.a\nwindow.a // 1\n\nlet b = 1;\nwindow.b // undefined\n```\n\n上面代码中，全局变量`a`由`var`命令声明，所以它是顶层对象的属性；全局变量`b`由`let`命令声明，所以它不是顶层对象的属性，返回`undefined`。\n\n## global 对象\n\nES5 的顶层对象，本身也是一个问题，因为它在各种实现里面是不统一的。\n\n- 浏览器里面，顶层对象是`window`，但 Node 和 Web Worker 没有`window`。\n- 浏览器和 Web Worker 里面，`self`也指向顶层对象，但是 Node 没有`self`。\n- Node 里面，顶层对象是`global`，但其他环境都不支持。\n\n同一段代码为了能够在各种环境，都能取到顶层对象，现在一般是使用`this`变量，但是有局限性。\n\n- 全局环境中，`this`会返回顶层对象。但是，Node 模块和 ES6 模块中，`this`返回的是当前模块。\n- 函数里面的`this`，如果函数不是作为对象的方法运行，而是单纯作为函数运行，`this`会指向顶层对象。但是，严格模式下，这时`this`会返回`undefined`。\n- 不管是严格模式，还是普通模式，`new Function(\'return this\')()`，总是会返回全局对象。但是，如果浏览器用了 CSP（Content Security Policy，内容安全策略），那么`eval`、`new Function`这些方法都可能无法使用。\n\n综上所述，很难找到一种方法，可以在所有情况下，都取到顶层对象。下面是两种勉强可以使用的方法。\n\n```javascript\n// 方法一\n(typeof window !== \'undefined\'\n   ? window\n   : (typeof process === \'object\' &&\n      typeof require === \'function\' &&\n      typeof global === \'object\')\n     ? global\n     : this);\n\n// 方法二\nvar getGlobal = function () {\n  if (typeof self !== \'undefined\') { return self; }\n  if (typeof window !== \'undefined\') { return window; }\n  if (typeof global !== \'undefined\') { return global; }\n  throw new Error(\'unable to locate global object\');\n};\n```\n\n现在有一个[提案](https://github.com/tc39/proposal-global)，在语言标准的层面，引入`global`作为顶层对象。也就是说，在所有环境下，`global`都是存在的，都可以从它拿到顶层对象。\n\n垫片库[`system.global`](https://github.com/ljharb/System.global)模拟了这个提案，可以在所有环境拿到`global`。\n\n```javascript\n// CommonJS 的写法\nrequire(\'system.global/shim\')();\n\n// ES6 模块的写法\nimport shim from \'system.global/shim\'; shim();\n```\n\n上面代码可以保证各种环境里面，`global`对象都是存在的。\n\n```javascript\n// CommonJS 的写法\nvar global = require(\'system.global\')();\n\n// ES6 模块的写法\nimport getGlobal from \'system.global\';\nconst global = getGlobal();\n```\n\n上面代码将顶层对象放入变量`global`。\n\n\n\n# 变量的解构赋值\n\n1. [数组的解构赋值](http://es6.ruanyifeng.com/#docs/destructuring#%E6%95%B0%E7%BB%84%E7%9A%84%E8%A7%A3%E6%9E%84%E8%B5%8B%E5%80%BC)\n2. [对象的解构赋值](http://es6.ruanyifeng.com/#docs/destructuring#%E5%AF%B9%E8%B1%A1%E7%9A%84%E8%A7%A3%E6%9E%84%E8%B5%8B%E5%80%BC)\n3. [字符串的解构赋值](http://es6.ruanyifeng.com/#docs/destructuring#%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E8%A7%A3%E6%9E%84%E8%B5%8B%E5%80%BC)\n4. [数值和布尔值的解构赋值](http://es6.ruanyifeng.com/#docs/destructuring#%E6%95%B0%E5%80%BC%E5%92%8C%E5%B8%83%E5%B0%94%E5%80%BC%E7%9A%84%E8%A7%A3%E6%9E%84%E8%B5%8B%E5%80%BC)\n5. [函数参数的解构赋值](http://es6.ruanyifeng.com/#docs/destructuring#%E5%87%BD%E6%95%B0%E5%8F%82%E6%95%B0%E7%9A%84%E8%A7%A3%E6%9E%84%E8%B5%8B%E5%80%BC)\n6. [圆括号问题](http://es6.ruanyifeng.com/#docs/destructuring#%E5%9C%86%E6%8B%AC%E5%8F%B7%E9%97%AE%E9%A2%98)\n7. [用途](http://es6.ruanyifeng.com/#docs/destructuring#%E7%94%A8%E9%80%94)\n\n## 数组的解构赋值\n\n### 基本用法\n\nES6 允许按照一定模式，从数组和对象中提取值，对变量进行赋值，这被称为解构（Destructuring）。\n\n以前，为变量赋值，只能直接指定值。\n\n```javascript\nlet a = 1;\nlet b = 2;\nlet c = 3;\n```\n\nES6 允许写成下面这样。\n\n```javascript\nlet [a, b, c] = [1, 2, 3];\n```\n\n上面代码表示，可以从数组中提取值，按照对应位置，对变量赋值。\n\n本质上，这种写法属于“模式匹配”，只要等号两边的模式相同，左边的变量就会被赋予对应的值。下面是一些使用嵌套数组进行解构的例子。\n\n```javascript\nlet [foo, [[bar], baz]] = [1, [[2], 3]];\nfoo // 1\nbar // 2\nbaz // 3\n\nlet [ , , third] = ["foo", "bar", "baz"];\nthird // "baz"\n\nlet [x, , y] = [1, 2, 3];\nx // 1\ny // 3\n\nlet [head, ...tail] = [1, 2, 3, 4];\nhead // 1\ntail // [2, 3, 4]\n\nlet [x, y, ...z] = [\'a\'];\nx // "a"\ny // undefined\nz // []\n```\n\n如果解构不成功，变量的值就等于`undefined`。\n\n```javascript\nlet [foo] = [];\nlet [bar, foo] = [1];\n```\n\n以上两种情况都属于解构不成功，`foo`的值都会等于`undefined`。\n\n另一种情况是不完全解构，即等号左边的模式，只匹配一部分的等号右边的数组。这种情况下，解构依然可以成功。\n\n```javascript\nlet [x, y] = [1, 2, 3];\nx // 1\ny // 2\n\nlet [a, [b], d] = [1, [2, 3], 4];\na // 1\nb // 2\nd // 4\n```\n\n上面两个例子，都属于不完全解构，但是可以成功。\n\n如果等号的右边不是数组（或者严格地说，不是可遍历的结构，参见《Iterator》一章），那么将会报错。\n\n```javascript\n// 报错\nlet [foo] = 1;\nlet [foo] = false;\nlet [foo] = NaN;\nlet [foo] = undefined;\nlet [foo] = null;\nlet [foo] = {};\n```\n\n上面的语句都会报错，因为等号右边的值，要么转为对象以后不具备 Iterator 接口（前五个表达式），要么本身就不具备 Iterator 接口（最后一个表达式）。\n\n对于 Set 结构，也可以使用数组的解构赋值。\n\n```javascript\nlet [x, y, z] = new Set([\'a\', \'b\', \'c\']);\nx // "a"\n```\n\n事实上，只要某种数据结构具有 Iterator 接口，都可以采用数组形式的解构赋值。\n\n```javascript\nfunction* fibs() {\n  let a = 0;\n  let b = 1;\n  while (true) {\n    yield a;\n    [a, b] = [b, a + b];\n  }\n}\n\nlet [first, second, third, fourth, fifth, sixth] = fibs();\nsixth // 5\n```\n\n上面代码中，`fibs`是一个 Generator 函数（参见《Generator 函数》一章），原生具有 Iterator 接口。解构赋值会依次从这个接口获取值。\n\n### 默认值\n\n解构赋值允许指定默认值。\n\n```javascript\nlet [foo = true] = [];\nfoo // true\n\nlet [x, y = \'b\'] = [\'a\']; // x=\'a\', y=\'b\'\nlet [x, y = \'b\'] = [\'a\', undefined]; // x=\'a\', y=\'b\'\n```\n\n注意，ES6 内部使用严格相等运算符（`===`），判断一个位置是否有值。所以，只有当一个数组成员严格等于`undefined`，默认值才会生效。\n\n```javascript\nlet [x = 1] = [undefined];\nx // 1\n\nlet [x = 1] = [null];\nx // null\n```\n\n上面代码中，如果一个数组成员是`null`，默认值就不会生效，因为`null`不严格等于`undefined`。\n\n如果默认值是一个表达式，那么这个表达式是惰性求值的，即只有在用到的时候，才会求值。\n\n```javascript\nfunction f() {\n  console.log(\'aaa\');\n}\n\nlet [x = f()] = [1];\n```\n\n上面代码中，因为`x`能取到值，所以函数`f`根本不会执行。上面的代码其实等价于下面的代码。\n\n```javascript\nlet x;\nif ([1][0] === undefined) {\n  x = f();\n} else {\n  x = [1][0];\n}\n```\n\n默认值可以引用解构赋值的其他变量，但该变量必须已经声明。\n\n```javascript\nlet [x = 1, y = x] = [];     // x=1; y=1\nlet [x = 1, y = x] = [2];    // x=2; y=2\nlet [x = 1, y = x] = [1, 2]; // x=1; y=2\nlet [x = y, y = 1] = [];     // ReferenceError: y is not defined\n```\n\n上面最后一个表达式之所以会报错，是因为`x`用`y`做默认值时，`y`还没有声明。\n\n## 对象的解构赋值\n\n解构不仅可以用于数组，还可以用于对象。\n\n```javascript\nlet { foo, bar } = { foo: "aaa", bar: "bbb" };\nfoo // "aaa"\nbar // "bbb"\n```\n\n对象的解构与数组有一个重要的不同。数组的元素是按次序排列的，变量的取值由它的位置决定；而对象的属性没有次序，变量必须与属性同名，才能取到正确的值。\n\n```javascript\nlet { bar, foo } = { foo: "aaa", bar: "bbb" };\nfoo // "aaa"\nbar // "bbb"\n\nlet { baz } = { foo: "aaa", bar: "bbb" };\nbaz // undefined\n```\n\n上面代码的第一个例子，等号左边的两个变量的次序，与等号右边两个同名属性的次序不一致，但是对取值完全没有影响。第二个例子的变量没有对应的同名属性，导致取不到值，最后等于`undefined`。\n\n如果变量名与属性名不一致，必须写成下面这样。\n\n```javascript\nlet { foo: baz } = { foo: \'aaa\', bar: \'bbb\' };\nbaz // "aaa"\n\nlet obj = { first: \'hello\', last: \'world\' };\nlet { first: f, last: l } = obj;\nf // \'hello\'\nl // \'world\'\n```\n\n这实际上说明，对象的解构赋值是下面形式的简写（参见《对象的扩展》一章）。\n\n```javascript\nlet { foo: foo, bar: bar } = { foo: "aaa", bar: "bbb" };\n```\n\n也就是说，对象的解构赋值的内部机制，是先找到同名属性，然后再赋给对应的变量。真正被赋值的是后者，而不是前者。\n\n```javascript\nlet { foo: baz } = { foo: "aaa", bar: "bbb" };\nbaz // "aaa"\nfoo // error: foo is not defined\n```\n\n上面代码中，`foo`是匹配的模式，`baz`才是变量。真正被赋值的是变量`baz`，而不是模式`foo`。\n\n与数组一样，解构也可以用于嵌套结构的对象。\n\n```javascript\nlet obj = {\n  p: [\n    \'Hello\',\n    { y: \'World\' }\n  ]\n};\n\nlet { p: [x, { y }] } = obj;\nx // "Hello"\ny // "World"\n```\n\n注意，这时`p`是模式，不是变量，因此不会被赋值。如果`p`也要作为变量赋值，可以写成下面这样。\n\n```javascript\nlet obj = {\n  p: [\n    \'Hello\',\n    { y: \'World\' }\n  ]\n};\n\nlet { p, p: [x, { y }] } = obj;\nx // "Hello"\ny // "World"\np // ["Hello", {y: "World"}]\n```\n\n下面是另一个例子。\n\n```javascript\nconst node = {\n  loc: {\n    start: {\n      line: 1,\n      column: 5\n    }\n  }\n};\n\nlet { loc, loc: { start }, loc: { start: { line }} } = node;\nline // 1\nloc  // Object {start: Object}\nstart // Object {line: 1, column: 5}\n```\n\n上面代码有三次解构赋值，分别是对`loc`、`start`、`line`三个属性的解构赋值。注意，最后一次对`line`属性的解构赋值之中，只有`line`是变量，`loc`和`start`都是模式，不是变量。\n\n下面是嵌套赋值的例子。\n\n```javascript\nlet obj = {};\nlet arr = [];\n\n({ foo: obj.prop, bar: arr[0] } = { foo: 123, bar: true });\n\nobj // {prop:123}\narr // [true]\n```\n\n对象的解构也可以指定默认值。\n\n```javascript\nvar {x = 3} = {};\nx // 3\n\nvar {x, y = 5} = {x: 1};\nx // 1\ny // 5\n\nvar {x: y = 3} = {};\ny // 3\n\nvar {x: y = 3} = {x: 5};\ny // 5\n\nvar { message: msg = \'Something went wrong\' } = {};\nmsg // "Something went wrong"\n```\n\n默认值生效的条件是，对象的属性值严格等于`undefined`。\n\n```javascript\nvar {x = 3} = {x: undefined};\nx // 3\n\nvar {x = 3} = {x: null};\nx // null\n```\n\n上面代码中，属性`x`等于`null`，因为`null`与`undefined`不严格相等，所以是个有效的赋值，导致默认值`3`不会生效。\n\n如果解构失败，变量的值等于`undefined`。\n\n```javascript\nlet {foo} = {bar: \'baz\'};\nfoo // undefined\n```\n\n如果解构模式是嵌套的对象，而且子对象所在的父属性不存在，那么将会报错。\n\n```javascript\n// 报错\nlet {foo: {bar}} = {baz: \'baz\'};\n```\n\n上面代码中，等号左边对象的`foo`属性，对应一个子对象。该子对象的`bar`属性，解构时会报错。原因很简单，因为`foo`这时等于`undefined`，再取子属性就会报错，请看下面的代码。\n\n```javascript\nlet _tmp = {baz: \'baz\'};\n_tmp.foo.bar // 报错\n```\n\n如果要将一个已经声明的变量用于解构赋值，必须非常小心。\n\n```javascript\n// 错误的写法\nlet x;\n{x} = {x: 1};\n// SyntaxError: syntax error\n```\n\n上面代码的写法会报错，因为 JavaScript 引擎会将`{x}`理解成一个代码块，从而发生语法错误。只有不将大括号写在行首，避免 JavaScript 将其解释为代码块，才能解决这个问题。\n\n```javascript\n// 正确的写法\nlet x;\n({x} = {x: 1});\n```\n\n上面代码将整个解构赋值语句，放在一个圆括号里面，就可以正确执行。关于圆括号与解构赋值的关系，参见下文。\n\n解构赋值允许等号左边的模式之中，不放置任何变量名。因此，可以写出非常古怪的赋值表达式。\n\n```javascript\n({} = [true, false]);\n({} = \'abc\');\n({} = []);\n```\n\n上面的表达式虽然毫无意义，但是语法是合法的，可以执行。\n\n对象的解构赋值，可以很方便地将现有对象的方法，赋值到某个变量。\n\n```javascript\nlet { log, sin, cos } = Math;\n```\n\n上面代码将`Math`对象的对数、正弦、余弦三个方法，赋值到对应的变量上，使用起来就会方便很多。\n\n由于数组本质是特殊的对象，因此可以对数组进行对象属性的解构。\n\n```javascript\nlet arr = [1, 2, 3];\nlet {0 : first, [arr.length - 1] : last} = arr;\nfirst // 1\nlast // 3\n```\n\n上面代码对数组进行对象解构。数组`arr`的`0`键对应的值是`1`，`[arr.length - 1]`就是`2`键，对应的值是`3`。方括号这种写法，属于“属性名表达式”（参见《对象的扩展》一章）。\n\n## 字符串的解构赋值\n\n字符串也可以解构赋值。这是因为此时，字符串被转换成了一个类似数组的对象。\n\n```javascript\nconst [a, b, c, d, e] = \'hello\';\na // "h"\nb // "e"\nc // "l"\nd // "l"\ne // "o"\n```\n\n类似数组的对象都有一个`length`属性，因此还可以对这个属性解构赋值。\n\n```javascript\nlet {length : len} = \'hello\';\nlen // 5\n```\n\n## 数值和布尔值的解构赋值\n\n解构赋值时，如果等号右边是数值和布尔值，则会先转为对象。\n\n```javascript\nlet {toString: s} = 123;\ns === Number.prototype.toString // true\n\nlet {toString: s} = true;\ns === Boolean.prototype.toString // true\n```\n\n上面代码中，数值和布尔值的包装对象都有`toString`属性，因此变量`s`都能取到值。\n\n解构赋值的规则是，只要等号右边的值不是对象或数组，就先将其转为对象。由于`undefined`和`null`无法转为对象，所以对它们进行解构赋值，都会报错。\n\n```javascript\nlet { prop: x } = undefined; // TypeError\nlet { prop: y } = null; // TypeError\n```\n\n## 函数参数的解构赋值\n\n函数的参数也可以使用解构赋值。\n\n```javascript\nfunction add([x, y]){\n  return x + y;\n}\n\nadd([1, 2]); // 3\n```\n\n上面代码中，函数`add`的参数表面上是一个数组，但在传入参数的那一刻，数组参数就被解构成变量`x`和`y`。对于函数内部的代码来说，它们能感受到的参数就是`x`和`y`。\n\n下面是另一个例子。\n\n```javascript\n[[1, 2], [3, 4]].map(([a, b]) => a + b);\n// [ 3, 7 ]\n```\n\n函数参数的解构也可以使用默认值。\n\n```javascript\nfunction move({x = 0, y = 0} = {}) {\n  return [x, y];\n}\n\nmove({x: 3, y: 8}); // [3, 8]\nmove({x: 3}); // [3, 0]\nmove({}); // [0, 0]\nmove(); // [0, 0]\n```\n\n上面代码中，函数`move`的参数是一个对象，通过对这个对象进行解构，得到变量`x`和`y`的值。如果解构失败，`x`和`y`等于默认值。\n\n注意，下面的写法会得到不一样的结果。\n\n```javascript\nfunction move({x, y} = { x: 0, y: 0 }) {\n  return [x, y];\n}\n\nmove({x: 3, y: 8}); // [3, 8]\nmove({x: 3}); // [3, undefined]\nmove({}); // [undefined, undefined]\nmove(); // [0, 0]\n```\n\n上面代码是为函数`move`的参数指定默认值，而不是为变量`x`和`y`指定默认值，所以会得到与前一种写法不同的结果。\n\n`undefined`就会触发函数参数的默认值。\n\n```javascript\n[1, undefined, 3].map((x = \'yes\') => x);\n// [ 1, \'yes\', 3 ]\n```\n\n## 圆括号问题\n\n解构赋值虽然很方便，但是解析起来并不容易。对于编译器来说，一个式子到底是模式，还是表达式，没有办法从一开始就知道，必须解析到（或解析不到）等号才能知道。\n\n由此带来的问题是，如果模式中出现圆括号怎么处理。ES6 的规则是，只要有可能导致解构的歧义，就不得使用圆括号。\n\n但是，这条规则实际上不那么容易辨别，处理起来相当麻烦。因此，建议只要有可能，就不要在模式中放置圆括号。\n\n### 不能使用圆括号的情况\n\n以下三种解构赋值不得使用圆括号。\n\n（1）变量声明语句\n\n```javascript\n// 全部报错\nlet [(a)] = [1];\n\nlet {x: (c)} = {};\nlet ({x: c}) = {};\nlet {(x: c)} = {};\nlet {(x): c} = {};\n\nlet { o: ({ p: p }) } = { o: { p: 2 } };\n```\n\n上面 6 个语句都会报错，因为它们都是变量声明语句，模式不能使用圆括号。\n\n（2）函数参数\n\n函数参数也属于变量声明，因此不能带有圆括号。\n\n```javascript\n// 报错\nfunction f([(z)]) { return z; }\n// 报错\nfunction f([z,(x)]) { return x; }\n```\n\n（3）赋值语句的模式\n\n```javascript\n// 全部报错\n({ p: a }) = { p: 42 };\n([a]) = [5];\n```\n\n上面代码将整个模式放在圆括号之中，导致报错。\n\n```javascript\n// 报错\n[({ p: a }), { x: c }] = [{}, {}];\n```\n\n上面代码将一部分模式放在圆括号之中，导致报错。\n\n### 可以使用圆括号的情况\n\n可以使用圆括号的情况只有一种：赋值语句的非模式部分，可以使用圆括号。\n\n```javascript\n[(b)] = [3]; // 正确\n({ p: (d) } = {}); // 正确\n[(parseInt.prop)] = [3]; // 正确\n```\n\n上面三行语句都可以正确执行，因为首先它们都是赋值语句，而不是声明语句；其次它们的圆括号都不属于模式的一部分。第一行语句中，模式是取数组的第一个成员，跟圆括号无关；第二行语句中，模式是`p`，而不是`d`；第三行语句与第一行语句的性质一致。\n\n## 用途\n\n变量的解构赋值用途很多。\n\n**（1）交换变量的值**\n\n```javascript\nlet x = 1;\nlet y = 2;\n\n[x, y] = [y, x];\n```\n\n上面代码交换变量`x`和`y`的值，这样的写法不仅简洁，而且易读，语义非常清晰。\n\n**（2）从函数返回多个值**\n\n函数只能返回一个值，如果要返回多个值，只能将它们放在数组或对象里返回。有了解构赋值，取出这些值就非常方便。\n\n```javascript\n// 返回一个数组\n\nfunction example() {\n  return [1, 2, 3];\n}\nlet [a, b, c] = example();\n\n// 返回一个对象\n\nfunction example() {\n  return {\n    foo: 1,\n    bar: 2\n  };\n}\nlet { foo, bar } = example();\n```\n\n**（3）函数参数的定义**\n\n解构赋值可以方便地将一组参数与变量名对应起来。\n\n```javascript\n// 参数是一组有次序的值\nfunction f([x, y, z]) { ... }\nf([1, 2, 3]);\n\n// 参数是一组无次序的值\nfunction f({x, y, z}) { ... }\nf({z: 3, y: 2, x: 1});\n```\n\n**（4）提取 JSON 数据**\n\n解构赋值对提取 JSON 对象中的数据，尤其有用。\n\n```javascript\nlet jsonData = {\n  id: 42,\n  status: "OK",\n  data: [867, 5309]\n};\n\nlet { id, status, data: number } = jsonData;\n\nconsole.log(id, status, number);\n// 42, "OK", [867, 5309]\n```\n\n上面代码可以快速提取 JSON 数据的值。\n\n**（5）函数参数的默认值**\n\n```javascript\njQuery.ajax = function (url, {\n  async = true,\n  beforeSend = function () {},\n  cache = true,\n  complete = function () {},\n  crossDomain = false,\n  global = true,\n  // ... more config\n} = {}) {\n  // ... do stuff\n};\n```\n\n指定参数的默认值，就避免了在函数体内部再写`var foo = config.foo || \'default foo\';`这样的语句。\n\n**（6）遍历 Map 结构**\n\n任何部署了 Iterator 接口的对象，都可以用`for...of`循环遍历。Map 结构原生支持 Iterator 接口，配合变量的解构赋值，获取键名和键值就非常方便。\n\n```javascript\nconst map = new Map();\nmap.set(\'first\', \'hello\');\nmap.set(\'second\', \'world\');\n\nfor (let [key, value] of map) {\n  console.log(key + " is " + value);\n}\n// first is hello\n// second is world\n```\n\n如果只想获取键名，或者只想获取键值，可以写成下面这样。\n\n```javascript\n// 获取键名\nfor (let [key] of map) {\n  // ...\n}\n\n// 获取键值\nfor (let [,value] of map) {\n  // ...\n}\n```\n\n**（7）输入模块的指定方法**\n\n加载模块时，往往需要指定输入哪些方法。解构赋值使得输入语句非常清晰。\n\n```javascript\nconst { SourceMapConsumer, SourceNode } = require("source-map");\n```\n\n# 字符串的扩展\n\n1. [字符的 Unicode 表示法](http://es6.ruanyifeng.com/#docs/string#%E5%AD%97%E7%AC%A6%E7%9A%84%20Unicode%20%E8%A1%A8%E7%A4%BA%E6%B3%95)\n2. [codePointAt()](http://es6.ruanyifeng.com/#docs/string#codePointAt())\n3. [String.fromCodePoint()](http://es6.ruanyifeng.com/#docs/string#String.fromCodePoint())\n4. [字符串的遍历器接口](http://es6.ruanyifeng.com/#docs/string#%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E9%81%8D%E5%8E%86%E5%99%A8%E6%8E%A5%E5%8F%A3)\n5. [normalize()](http://es6.ruanyifeng.com/#docs/string#normalize())\n6. [includes(), startsWith(), endsWith()](http://es6.ruanyifeng.com/#docs/string#includes(),%20startsWith(),%20endsWith())\n7. [repeat()](http://es6.ruanyifeng.com/#docs/string#repeat())\n8. [padStart()，padEnd()](http://es6.ruanyifeng.com/#docs/string#padStart()%EF%BC%8CpadEnd())\n9. [matchAll()](http://es6.ruanyifeng.com/#docs/string#matchAll())\n10. [模板字符串](http://es6.ruanyifeng.com/#docs/string#%E6%A8%A1%E6%9D%BF%E5%AD%97%E7%AC%A6%E4%B8%B2)\n11. [实例：模板编译](http://es6.ruanyifeng.com/#docs/string#%E5%AE%9E%E4%BE%8B%EF%BC%9A%E6%A8%A1%E6%9D%BF%E7%BC%96%E8%AF%91)\n12. [标签模板](http://es6.ruanyifeng.com/#docs/string#%E6%A0%87%E7%AD%BE%E6%A8%A1%E6%9D%BF)\n13. [String.raw()](http://es6.ruanyifeng.com/#docs/string#String.raw())\n14. [模板字符串的限制](http://es6.ruanyifeng.com/#docs/string#%E6%A8%A1%E6%9D%BF%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E9%99%90%E5%88%B6)\n\nES6 加强了对 Unicode 的支持，并且扩展了字符串对象。\n\n## 字符的 Unicode 表示法\n\nJavaScript 允许采用`\\uxxxx`形式表示一个字符，其中`xxxx`表示字符的 Unicode 码点。\n\n```javascript\n"\\u0061"\n// "a"\n```\n\n但是，这种表示法只限于码点在`\\u0000`~`\\uFFFF`之间的字符。超出这个范围的字符，必须用两个双字节的形式表示。\n\n```javascript\n"\\uD842\\uDFB7"\n// "𠮷"\n\n"\\u20BB7"\n// " 7"\n```\n\n上面代码表示，如果直接在`\\u`后面跟上超过`0xFFFF`的数值（比如`\\u20BB7`），JavaScript 会理解成`\\u20BB+7`。由于`\\u20BB`是一个不可打印字符，所以只会显示一个空格，后面跟着一个`7`。\n\nES6 对这一点做出了改进，只要将码点放入大括号，就能正确解读该字符。\n\n```javascript\n"\\u{20BB7}"\n// "𠮷"\n\n"\\u{41}\\u{42}\\u{43}"\n// "ABC"\n\nlet hello = 123;\nhell\\u{6F} // 123\n\n\'\\u{1F680}\' === \'\\uD83D\\uDE80\'\n// true\n```\n\n上面代码中，最后一个例子表明，大括号表示法与四字节的 UTF-16 编码是等价的。\n\n有了这种表示法之后，JavaScript 共有 6 种方法可以表示一个字符。\n\n```javascript\n\'\\z\' === \'z\'  // true\n\'\\172\' === \'z\' // true\n\'\\x7A\' === \'z\' // true\n\'\\u007A\' === \'z\' // true\n\'\\u{7A}\' === \'z\' // true\n```\n\n## codePointAt()\n\nJavaScript 内部，字符以 UTF-16 的格式储存，每个字符固定为`2`个字节。对于那些需要`4`个字节储存的字符（Unicode 码点大于`0xFFFF`的字符），JavaScript 会认为它们是两个字符。\n\n```javascript\nvar s = "𠮷";\n\ns.length // 2\ns.charAt(0) // \'\'\ns.charAt(1) // \'\'\ns.charCodeAt(0) // 55362\ns.charCodeAt(1) // 57271\n```\n\n上面代码中，汉字“𠮷”（注意，这个字不是“吉祥”的“吉”）的码点是`0x20BB7`，UTF-16 编码为`0xD842 0xDFB7`（十进制为`55362 57271`），需要`4`个字节储存。对于这种`4`个字节的字符，JavaScript 不能正确处理，字符串长度会误判为`2`，而且`charAt`方法无法读取整个字符，`charCodeAt`方法只能分别返回前两个字节和后两个字节的值。\n\nES6 提供了`codePointAt`方法，能够正确处理 4 个字节储存的字符，返回一个字符的码点。\n\n```javascript\nlet s = \'𠮷a\';\n\ns.codePointAt(0) // 134071\ns.codePointAt(1) // 57271\n\ns.codePointAt(2) // 97\n```\n\n`codePointAt`方法的参数，是字符在字符串中的位置（从 0 开始）。上面代码中，JavaScript 将“𠮷a”视为三个字符，codePointAt 方法在第一个字符上，正确地识别了“𠮷”，返回了它的十进制码点 134071（即十六进制的`20BB7`）。在第二个字符（即“𠮷”的后两个字节）和第三个字符“a”上，`codePointAt`方法的结果与`charCodeAt`方法相同。\n\n总之，`codePointAt`方法会正确返回 32 位的 UTF-16 字符的码点。对于那些两个字节储存的常规字符，它的返回结果与`charCodeAt`方法相同。\n\n`codePointAt`方法返回的是码点的十进制值，如果想要十六进制的值，可以使用`toString`方法转换一下。\n\n```javascript\nlet s = \'𠮷a\';\n\ns.codePointAt(0).toString(16) // "20bb7"\ns.codePointAt(2).toString(16) // "61"\n```\n\n你可能注意到了，`codePointAt`方法的参数，仍然是不正确的。比如，上面代码中，字符`a`在字符串`s`的正确位置序号应该是 1，但是必须向`codePointAt`方法传入 2。解决这个问题的一个办法是使用`for...of`循环，因为它会正确识别 32 位的 UTF-16 字符。\n\n```javascript\nlet s = \'𠮷a\';\nfor (let ch of s) {\n  console.log(ch.codePointAt(0).toString(16));\n}\n// 20bb7\n// 61\n```\n\n`codePointAt`方法是测试一个字符由两个字节还是由四个字节组成的最简单方法。\n\n```javascript\nfunction is32Bit(c) {\n  return c.codePointAt(0) > 0xFFFF;\n}\n\nis32Bit("𠮷") // true\nis32Bit("a") // false\n```\n\n## String.fromCodePoint()\n\nES5 提供`String.fromCharCode`方法，用于从码点返回对应字符，但是这个方法不能识别 32 位的 UTF-16 字符（Unicode 编号大于`0xFFFF`）。\n\n```javascript\nString.fromCharCode(0x20BB7)\n// "ஷ"\n```\n\n上面代码中，`String.fromCharCode`不能识别大于`0xFFFF`的码点，所以`0x20BB7`就发生了溢出，最高位`2`被舍弃了，最后返回码点`U+0BB7`对应的字符，而不是码点`U+20BB7`对应的字符。\n\nES6 提供了`String.fromCodePoint`方法，可以识别大于`0xFFFF`的字符，弥补了`String.fromCharCode`方法的不足。在作用上，正好与`codePointAt`方法相反。\n\n```javascript\nString.fromCodePoint(0x20BB7)\n// "𠮷"\nString.fromCodePoint(0x78, 0x1f680, 0x79) === \'x\\uD83D\\uDE80y\'\n// true\n```\n\n上面代码中，如果`String.fromCodePoint`方法有多个参数，则它们会被合并成一个字符串返回。\n\n注意，`fromCodePoint`方法定义在`String`对象上，而`codePointAt`方法定义在字符串的实例对象上。\n\n## 字符串的遍历器接口\n\nES6 为字符串添加了遍历器接口（详见《Iterator》一章），使得字符串可以被`for...of`循环遍历。\n\n```javascript\nfor (let codePoint of \'foo\') {\n  console.log(codePoint)\n}\n// "f"\n// "o"\n// "o"\n```\n\n除了遍历字符串，这个遍历器最大的优点是可以识别大于`0xFFFF`的码点，传统的`for`循环无法识别这样的码点。\n\n```javascript\nlet text = String.fromCodePoint(0x20BB7);\n\nfor (let i = 0; i < text.length; i++) {\n  console.log(text[i]);\n}\n// " "\n// " "\n\nfor (let i of text) {\n  console.log(i);\n}\n// "𠮷"\n```\n\n上面代码中，字符串`text`只有一个字符，但是`for`循环会认为它包含两个字符（都不可打印），而`for...of`循环会正确识别出这一个字符。\n\n## normalize()\n\n许多欧洲语言有语调符号和重音符号。为了表示它们，Unicode 提供了两种方法。一种是直接提供带重音符号的字符，比如`Ǒ`（\\u01D1）。另一种是提供合成符号（combining character），即原字符与重音符号的合成，两个字符合成一个字符，比如`O`（\\u004F）和`ˇ`（\\u030C）合成`Ǒ`（\\u004F\\u030C）。\n\n这两种表示方法，在视觉和语义上都等价，但是 JavaScript 不能识别。\n\n```javascript\n\'\\u01D1\'===\'\\u004F\\u030C\' //false\n\n\'\\u01D1\'.length // 1\n\'\\u004F\\u030C\'.length // 2\n```\n\n上面代码表示，JavaScript 将合成字符视为两个字符，导致两种表示方法不相等。\n\nES6 提供字符串实例的`normalize()`方法，用来将字符的不同表示方法统一为同样的形式，这称为 Unicode 正规化。\n\n```javascript\n\'\\u01D1\'.normalize() === \'\\u004F\\u030C\'.normalize()\n// true\n```\n\n`normalize`方法可以接受一个参数来指定`normalize`的方式，参数的四个可选值如下。\n\n- `NFC`，默认参数，表示“标准等价合成”（Normalization Form Canonical Composition），返回多个简单字符的合成字符。所谓“标准等价”指的是视觉和语义上的等价。\n- `NFD`，表示“标准等价分解”（Normalization Form Canonical Decomposition），即在标准等价的前提下，返回合成字符分解的多个简单字符。\n- `NFKC`，表示“兼容等价合成”（Normalization Form Compatibility Composition），返回合成字符。所谓“兼容等价”指的是语义上存在等价，但视觉上不等价，比如“囍”和“喜喜”。（这只是用来举例，`normalize`方法不能识别中文。）\n- `NFKD`，表示“兼容等价分解”（Normalization Form Compatibility Decomposition），即在兼容等价的前提下，返回合成字符分解的多个简单字符。\n\n```javascript\n\'\\u004F\\u030C\'.normalize(\'NFC\').length // 1\n\'\\u004F\\u030C\'.normalize(\'NFD\').length // 2\n```\n\n上面代码表示，`NFC`参数返回字符的合成形式，`NFD`参数返回字符的分解形式。\n\n不过，`normalize`方法目前不能识别三个或三个以上字符的合成。这种情况下，还是只能使用正则表达式，通过 Unicode 编号区间判断。\n\n## includes(), startsWith(), endsWith()\n\n传统上，JavaScript 只有`indexOf`方法，可以用来确定一个字符串是否包含在另一个字符串中。ES6 又提供了三种新方法。\n\n- **includes()**：返回布尔值，表示是否找到了参数字符串。\n- **startsWith()**：返回布尔值，表示参数字符串是否在原字符串的头部。\n- **endsWith()**：返回布尔值，表示参数字符串是否在原字符串的尾部。\n\n```javascript\nlet s = \'Hello world!\';\n\ns.startsWith(\'Hello\') // true\ns.endsWith(\'!\') // true\ns.includes(\'o\') // true\n```\n\n这三个方法都支持第二个参数，表示开始搜索的位置。\n\n```javascript\nlet s = \'Hello world!\';\n\ns.startsWith(\'world\', 6) // true\ns.endsWith(\'Hello\', 5) // true\ns.includes(\'Hello\', 6) // false\n```\n\n上面代码表示，使用第二个参数`n`时，`endsWith`的行为与其他两个方法有所不同。它针对前`n`个字符，而其他两个方法针对从第`n`个位置直到字符串结束。\n\n## repeat()\n\n`repeat`方法返回一个新字符串，表示将原字符串重复`n`次。\n\n```javascript\n\'x\'.repeat(3) // "xxx"\n\'hello\'.repeat(2) // "hellohello"\n\'na\'.repeat(0) // ""\n```\n\n参数如果是小数，会被取整。\n\n```javascript\n\'na\'.repeat(2.9) // "nana"\n```\n\n如果`repeat`的参数是负数或者`Infinity`，会报错。\n\n```javascript\n\'na\'.repeat(Infinity)\n// RangeError\n\'na\'.repeat(-1)\n// RangeError\n```\n\n但是，如果参数是 0 到-1 之间的小数，则等同于 0，这是因为会先进行取整运算。0 到-1 之间的小数，取整以后等于`-0`，`repeat`视同为 0。\n\n```javascript\n\'na\'.repeat(-0.9) // ""\n```\n\n参数`NaN`等同于 0。\n\n```javascript\n\'na\'.repeat(NaN) // ""\n```\n\n如果`repeat`的参数是字符串，则会先转换成数字。\n\n```javascript\n\'na\'.repeat(\'na\') // ""\n\'na\'.repeat(\'3\') // "nanana"\n```\n\n## padStart()，padEnd()\n\nES2017 引入了字符串补全长度的功能。如果某个字符串不够指定长度，会在头部或尾部补全。`padStart()`用于头部补全，`padEnd()`用于尾部补全。\n\n```javascript\n\'x\'.padStart(5, \'ab\') // \'ababx\'\n\'x\'.padStart(4, \'ab\') // \'abax\'\n\n\'x\'.padEnd(5, \'ab\') // \'xabab\'\n\'x\'.padEnd(4, \'ab\') // \'xaba\'\n```\n\n上面代码中，`padStart`和`padEnd`一共接受两个参数，第一个参数用来指定字符串的最小长度，第二个参数是用来补全的字符串。\n\n如果原字符串的长度，等于或大于指定的最小长度，则返回原字符串。\n\n```javascript\n\'xxx\'.padStart(2, \'ab\') // \'xxx\'\n\'xxx\'.padEnd(2, \'ab\') // \'xxx\'\n```\n\n如果用来补全的字符串与原字符串，两者的长度之和超过了指定的最小长度，则会截去超出位数的补全字符串。\n\n```javascript\n\'abc\'.padStart(10, \'0123456789\')\n// \'0123456abc\'\n```\n\n如果省略第二个参数，默认使用空格补全长度。\n\n```javascript\n\'x\'.padStart(4) // \'   x\'\n\'x\'.padEnd(4) // \'x   \'\n```\n\n`padStart`的常见用途是为数值补全指定位数。下面代码生成 10 位的数值字符串。\n\n```javascript\n\'1\'.padStart(10, \'0\') // "0000000001"\n\'12\'.padStart(10, \'0\') // "0000000012"\n\'123456\'.padStart(10, \'0\') // "0000123456"\n```\n\n另一个用途是提示字符串格式。\n\n```javascript\n\'12\'.padStart(10, \'YYYY-MM-DD\') // "YYYY-MM-12"\n\'09-12\'.padStart(10, \'YYYY-MM-DD\') // "YYYY-09-12"\n```\n\n## matchAll()\n\n`matchAll`方法返回一个正则表达式在当前字符串的所有匹配，详见《正则的扩展》的一章。\n\n## 模板字符串\n\n传统的 JavaScript 语言，输出模板通常是这样写的（下面使用了 jQuery 的方法）。\n\n```javascript\n$(\'#result\').append(\n  \'There are <b>\' + basket.count + \'</b> \' +\n  \'items in your basket, \' +\n  \'<em>\' + basket.onSale +\n  \'</em> are on sale!\'\n);\n```\n\n上面这种写法相当繁琐不方便，ES6 引入了模板字符串解决这个问题。\n\n```javascript\n$(\'#result\').append(`\n  There are <b>${basket.count}</b> items\n   in your basket, <em>${basket.onSale}</em>\n  are on sale!\n`);\n```\n\n模板字符串（template string）是增强版的字符串，用反引号（`）标识。它可以当作普通字符串使用，也可以用来定义多行字符串，或者在字符串中嵌入变量。\n\n```javascript\n// 普通字符串\n`In JavaScript \'\\n\' is a line-feed.`\n\n// 多行字符串\n`In JavaScript this is\n not legal.`\n\nconsole.log(`string text line 1\nstring text line 2`);\n\n// 字符串中嵌入变量\nlet name = "Bob", time = "today";\n`Hello ${name}, how are you ${time}?`\n```\n\n上面代码中的模板字符串，都是用反引号表示。如果在模板字符串中需要使用反引号，则前面要用反斜杠转义。\n\n```javascript\nlet greeting = `\\`Yo\\` World!`;\n```\n\n如果使用模板字符串表示多行字符串，所有的空格和缩进都会被保留在输出之中。\n\n```javascript\n$(\'#list\').html(`\n<ul>\n  <li>first</li>\n  <li>second</li>\n</ul>\n`);\n```\n\n上面代码中，所有模板字符串的空格和换行，都是被保留的，比如`<ul>`标签前面会有一个换行。如果你不想要这个换行，可以使用`trim`方法消除它。\n\n```javascript\n$(\'#list\').html(`\n<ul>\n  <li>first</li>\n  <li>second</li>\n</ul>\n`.trim());\n```\n\n模板字符串中嵌入变量，需要将变量名写在`${}`之中。\n\n```javascript\nfunction authorize(user, action) {\n  if (!user.hasPrivilege(action)) {\n    throw new Error(\n      // 传统写法为\n      // \'User \'\n      // + user.name\n      // + \' is not authorized to do \'\n      // + action\n      // + \'.\'\n      `User ${user.name} is not authorized to do ${action}.`);\n  }\n}\n```\n\n大括号内部可以放入任意的 JavaScript 表达式，可以进行运算，以及引用对象属性。\n\n```javascript\nlet x = 1;\nlet y = 2;\n\n`${x} + ${y} = ${x + y}`\n// "1 + 2 = 3"\n\n`${x} + ${y * 2} = ${x + y * 2}`\n// "1 + 4 = 5"\n\nlet obj = {x: 1, y: 2};\n`${obj.x + obj.y}`\n// "3"\n```\n\n模板字符串之中还能调用函数。\n\n```javascript\nfunction fn() {\n  return "Hello World";\n}\n\n`foo ${fn()} bar`\n// foo Hello World bar\n```\n\n如果大括号中的值不是字符串，将按照一般的规则转为字符串。比如，大括号中是一个对象，将默认调用对象的`toString`方法。\n\n如果模板字符串中的变量没有声明，将报错。\n\n```javascript\n// 变量place没有声明\nlet msg = `Hello, ${place}`;\n// 报错\n```\n\n由于模板字符串的大括号内部，就是执行 JavaScript 代码，因此如果大括号内部是一个字符串，将会原样输出。\n\n```javascript\n`Hello ${\'World\'}`\n// "Hello World"\n```\n\n模板字符串甚至还能嵌套。\n\n```javascript\nconst tmpl = addrs => `\n  <table>\n  ${addrs.map(addr => `\n    <tr><td>${addr.first}</td></tr>\n    <tr><td>${addr.last}</td></tr>\n  `).join(\'\')}\n  </table>\n`;\n```\n\n上面代码中，模板字符串的变量之中，又嵌入了另一个模板字符串，使用方法如下。\n\n```javascript\nconst data = [\n    { first: \'<Jane>\', last: \'Bond\' },\n    { first: \'Lars\', last: \'<Croft>\' },\n];\n\nconsole.log(tmpl(data));\n// <table>\n//\n//   <tr><td><Jane></td></tr>\n//   <tr><td>Bond</td></tr>\n//\n//   <tr><td>Lars</td></tr>\n//   <tr><td><Croft></td></tr>\n//\n// </table>\n```\n\n如果需要引用模板字符串本身，在需要时执行，可以像下面这样写。\n\n```javascript\n// 写法一\nlet str = \'return \' + \'`Hello ${name}!`\';\nlet func = new Function(\'name\', str);\nfunc(\'Jack\') // "Hello Jack!"\n\n// 写法二\nlet str = \'(name) => `Hello ${name}!`\';\nlet func = eval.call(null, str);\nfunc(\'Jack\') // "Hello Jack!"\n```\n\n## 实例：模板编译\n\n下面，我们来看一个通过模板字符串，生成正式模板的实例。\n\n```javascript\nlet template = `\n<ul>\n  <% for(let i=0; i < data.supplies.length; i++) { %>\n    <li><%= data.supplies[i] %></li>\n  <% } %>\n</ul>\n`;\n```\n\n上面代码在模板字符串之中，放置了一个常规模板。该模板使用`<%...%>`放置 JavaScript 代码，使用`<%= ... %>`输出 JavaScript 表达式。\n\n怎么编译这个模板字符串呢？\n\n一种思路是将其转换为 JavaScript 表达式字符串。\n\n```javascript\necho(\'<ul>\');\nfor(let i=0; i < data.supplies.length; i++) {\n  echo(\'<li>\');\n  echo(data.supplies[i]);\n  echo(\'</li>\');\n};\necho(\'</ul>\');\n```\n\n这个转换使用正则表达式就行了。\n\n```javascript\nlet evalExpr = /<%=(.+?)%>/g;\nlet expr = /<%([\\s\\S]+?)%>/g;\n\ntemplate = template\n  .replace(evalExpr, \'`); \\n  echo( $1 ); \\n  echo(`\')\n  .replace(expr, \'`); \\n $1 \\n  echo(`\');\n\ntemplate = \'echo(`\' + template + \'`);\';\n```\n\n然后，将`template`封装在一个函数里面返回，就可以了。\n\n```javascript\nlet script =\n`(function parse(data){\n  let output = "";\n\n  function echo(html){\n    output += html;\n  }\n\n  ${ template }\n\n  return output;\n})`;\n\nreturn script;\n```\n\n将上面的内容拼装成一个模板编译函数`compile`。\n\n```javascript\nfunction compile(template){\n  const evalExpr = /<%=(.+?)%>/g;\n  const expr = /<%([\\s\\S]+?)%>/g;\n\n  template = template\n    .replace(evalExpr, \'`); \\n  echo( $1 ); \\n  echo(`\')\n    .replace(expr, \'`); \\n $1 \\n  echo(`\');\n\n  template = \'echo(`\' + template + \'`);\';\n\n  let script =\n  `(function parse(data){\n    let output = "";\n\n    function echo(html){\n      output += html;\n    }\n\n    ${ template }\n\n    return output;\n  })`;\n\n  return script;\n}\n```\n\n`compile`函数的用法如下。\n\n```javascript\nlet parse = eval(compile(template));\ndiv.innerHTML = parse({ supplies: [ "broom", "mop", "cleaner" ] });\n//   <ul>\n//     <li>broom</li>\n//     <li>mop</li>\n//     <li>cleaner</li>\n//   </ul>\n```\n\n## 标签模板\n\n模板字符串的功能，不仅仅是上面这些。它可以紧跟在一个函数名后面，该函数将被调用来处理这个模板字符串。这被称为“标签模板”功能（tagged template）。\n\n```javascript\nalert`123`\n// 等同于\nalert(123)\n```\n\n标签模板其实不是模板，而是函数调用的一种特殊形式。“标签”指的就是函数，紧跟在后面的模板字符串就是它的参数。\n\n但是，如果模板字符里面有变量，就不是简单的调用了，而是会将模板字符串先处理成多个参数，再调用函数。\n\n```javascript\nlet a = 5;\nlet b = 10;\n\ntag`Hello ${ a + b } world ${ a * b }`;\n// 等同于\ntag([\'Hello \', \' world \', \'\'], 15, 50);\n```\n\n上面代码中，模板字符串前面有一个标识名`tag`，它是一个函数。整个表达式的返回值，就是`tag`函数处理模板字符串后的返回值。\n\n函数`tag`依次会接收到多个参数。\n\n```javascript\nfunction tag(stringArr, value1, value2){\n  // ...\n}\n\n// 等同于\n\nfunction tag(stringArr, ...values){\n  // ...\n}\n```\n\n`tag`函数的第一个参数是一个数组，该数组的成员是模板字符串中那些没有变量替换的部分，也就是说，变量替换只发生在数组的第一个成员与第二个成员之间、第二个成员与第三个成员之间，以此类推。\n\n`tag`函数的其他参数，都是模板字符串各个变量被替换后的值。由于本例中，模板字符串含有两个变量，因此`tag`会接受到`value1`和`value2`两个参数。\n\n`tag`函数所有参数的实际值如下。\n\n- 第一个参数：`[\'Hello \', \' world \', \'\']`\n- 第二个参数: 15\n- 第三个参数：50\n\n也就是说，`tag`函数实际上以下面的形式调用。\n\n```javascript\ntag([\'Hello \', \' world \', \'\'], 15, 50)\n```\n\n我们可以按照需要编写`tag`函数的代码。下面是`tag`函数的一种写法，以及运行结果。\n\n```javascript\nlet a = 5;\nlet b = 10;\n\nfunction tag(s, v1, v2) {\n  console.log(s[0]);\n  console.log(s[1]);\n  console.log(s[2]);\n  console.log(v1);\n  console.log(v2);\n\n  return "OK";\n}\n\ntag`Hello ${ a + b } world ${ a * b}`;\n// "Hello "\n// " world "\n// ""\n// 15\n// 50\n// "OK"\n```\n\n下面是一个更复杂的例子。\n\n```javascript\nlet total = 30;\nlet msg = passthru`The total is ${total} (${total*1.05} with tax)`;\n\nfunction passthru(literals) {\n  let result = \'\';\n  let i = 0;\n\n  while (i < literals.length) {\n    result += literals[i++];\n    if (i < arguments.length) {\n      result += arguments[i];\n    }\n  }\n\n  return result;\n}\n\nmsg // "The total is 30 (31.5 with tax)"\n```\n\n上面这个例子展示了，如何将各个参数按照原来的位置拼合回去。\n\n`passthru`函数采用 rest 参数的写法如下。\n\n```javascript\nfunction passthru(literals, ...values) {\n  let output = "";\n  let index;\n  for (index = 0; index < values.length; index++) {\n    output += literals[index] + values[index];\n  }\n\n  output += literals[index]\n  return output;\n}\n```\n\n“标签模板”的一个重要应用，就是过滤 HTML 字符串，防止用户输入恶意内容。\n\n```javascript\nlet message =\n  SaferHTML`<p>${sender} has sent you a message.</p>`;\n\nfunction SaferHTML(templateData) {\n  let s = templateData[0];\n  for (let i = 1; i < arguments.length; i++) {\n    let arg = String(arguments[i]);\n\n    // Escape special characters in the substitution.\n    s += arg.replace(/&/g, "&amp;")\n            .replace(/</g, "&lt;")\n            .replace(/>/g, "&gt;");\n\n    // Don\'t escape special characters in the template.\n    s += templateData[i];\n  }\n  return s;\n}\n```\n\n上面代码中，`sender`变量往往是用户提供的，经过`SaferHTML`函数处理，里面的特殊字符都会被转义。\n\n```javascript\nlet sender = \'<script>alert("abc")</script>\'; // 恶意代码\nlet message = SaferHTML`<p>${sender} has sent you a message.</p>`;\n\nmessage\n// <p>&lt;script&gt;alert("abc")&lt;/script&gt; has sent you a message.</p>\n```\n\n标签模板的另一个应用，就是多语言转换（国际化处理）。\n\n```javascript\ni18n`Welcome to ${siteName}, you are visitor number ${visitorNumber}!`\n// "欢迎访问xxx，您是第xxxx位访问者！"\n```\n\n模板字符串本身并不能取代 Mustache 之类的模板库，因为没有条件判断和循环处理功能，但是通过标签函数，你可以自己添加这些功能。\n\n```javascript\n// 下面的hashTemplate函数\n// 是一个自定义的模板处理函数\nlet libraryHtml = hashTemplate`\n  <ul>\n    #for book in ${myBooks}\n      <li><i>#{book.title}</i> by #{book.author}</li>\n    #end\n  </ul>\n`;\n```\n\n除此之外，你甚至可以使用标签模板，在 JavaScript 语言之中嵌入其他语言。\n\n```javascript\njsx`\n  <div>\n    <input\n      ref=\'input\'\n      onChange=\'${this.handleChange}\'\n      defaultValue=\'${this.state.value}\' />\n      ${this.state.value}\n   </div>\n`\n```\n\n上面的代码通过`jsx`函数，将一个 DOM 字符串转为 React 对象。你可以在 Github 找到`jsx`函数的[具体实现](https://gist.github.com/lygaret/a68220defa69174bdec5)。\n\n下面则是一个假想的例子，通过`java`函数，在 JavaScript 代码之中运行 Java 代码。\n\n```javascript\njava`\nclass HelloWorldApp {\n  public static void main(String[] args) {\n    System.out.println(“Hello World!”); // Display the string.\n  }\n}\n`\nHelloWorldApp.main();\n```\n\n模板处理函数的第一个参数（模板字符串数组），还有一个`raw`属性。\n\n```javascript\nconsole.log`123`\n// ["123", raw: Array[1]]\n```\n\n上面代码中，`console.log`接受的参数，实际上是一个数组。该数组有一个`raw`属性，保存的是转义后的原字符串。\n\n请看下面的例子。\n\n```javascript\ntag`First line\\nSecond line`\n\nfunction tag(strings) {\n  console.log(strings.raw[0]);\n  // strings.raw[0] 为 "First line\\\\nSecond line"\n  // 打印输出 "First line\\nSecond line"\n}\n```\n\n上面代码中，`tag`函数的第一个参数`strings`，有一个`raw`属性，也指向一个数组。该数组的成员与`strings`数组完全一致。比如，`strings`数组是`["First line\\nSecond line"]`，那么`strings.raw`数组就是`["First line\\\\nSecond line"]`。两者唯一的区别，就是字符串里面的斜杠都被转义了。比如，strings.raw 数组会将`\\n`视为`\\\\`和`n`两个字符，而不是换行符。这是为了方便取得转义之前的原始模板而设计的。\n\n## String.raw()\n\nES6 还为原生的 String 对象，提供了一个`raw`方法。\n\n`String.raw`方法，往往用来充当模板字符串的处理函数，返回一个斜杠都被转义（即斜杠前面再加一个斜杠）的字符串，对应于替换变量后的模板字符串。\n\n```javascript\nString.raw`Hi\\n${2+3}!`;\n// 返回 "Hi\\\\n5!"\n\nString.raw`Hi\\u000A!`;\n// 返回 "Hi\\\\u000A!"\n```\n\n如果原字符串的斜杠已经转义，那么`String.raw`会进行再次转义。\n\n```javascript\nString.raw`Hi\\\\n`\n// 返回 "Hi\\\\\\\\n"\n```\n\n`String.raw`方法可以作为处理模板字符串的基本方法，它会将所有变量替换，而且对斜杠进行转义，方便下一步作为字符串来使用。\n\n`String.raw`方法也可以作为正常的函数使用。这时，它的第一个参数，应该是一个具有`raw`属性的对象，且`raw`属性的值应该是一个数组。\n\n```javascript\nString.raw({ raw: \'test\' }, 0, 1, 2);\n// \'t0e1s2t\'\n\n// 等同于\nString.raw({ raw: [\'t\',\'e\',\'s\',\'t\'] }, 0, 1, 2);\n```\n\n作为函数，`String.raw`的代码实现基本如下。\n\n```javascript\nString.raw = function (strings, ...values) {\n  let output = \'\';\n  let index;\n  for (index = 0; index < values.length; index++) {\n    output += strings.raw[index] + values[index];\n  }\n\n  output += strings.raw[index]\n  return output;\n}\n```\n\n## 模板字符串的限制\n\n前面提到标签模板里面，可以内嵌其他语言。但是，模板字符串默认会将字符串转义，导致无法嵌入其他语言。\n\n举例来说，标签模板里面可以嵌入 LaTEX 语言。\n\n```javascript\nfunction latex(strings) {\n  // ...\n}\n\nlet document = latex`\n\\newcommand{\\fun}{\\textbf{Fun!}}  // 正常工作\n\\newcommand{\\unicode}{\\textbf{Unicode!}} // 报错\n\\newcommand{\\xerxes}{\\textbf{King!}} // 报错\n\nBreve over the h goes \\u{h}ere // 报错\n`\n```\n\n上面代码中，变量`document`内嵌的模板字符串，对于 LaTEX 语言来说完全是合法的，但是 JavaScript 引擎会报错。原因就在于字符串的转义。\n\n模板字符串会将`\\u00FF`和`\\u{42}`当作 Unicode 字符进行转义，所以`\\unicode`解析时报错；而`\\x56`会被当作十六进制字符串转义，所以`\\xerxes`会报错。也就是说，`\\u`和`\\x`在 LaTEX 里面有特殊含义，但是 JavaScript 将它们转义了。\n\n为了解决这个问题，ES2018 [放松](https://tc39.github.io/proposal-template-literal-revision/)了对标签模板里面的字符串转义的限制。如果遇到不合法的字符串转义，就返回`undefined`，而不是报错，并且从`raw`属性上面可以得到原始字符串。\n\n```javascript\nfunction tag(strs) {\n  strs[0] === undefined\n  strs.raw[0] === "\\\\unicode and \\\\u{55}";\n}\ntag`\\unicode and \\u{55}`\n```\n\n上面代码中，模板字符串原本是应该报错的，但是由于放松了对字符串转义的限制，所以不报错了，JavaScript 引擎将第一个字符设置为`undefined`，但是`raw`属性依然可以得到原始字符串，因此`tag`函数还是可以对原字符串进行处理。\n\n注意，这种对字符串转义的放松，只在标签模板解析字符串时生效，不是标签模板的场合，依然会报错。\n\n```javascript\nlet bad = `bad escape sequence: \\unicode`; // 报错\n```\n\n# 正则的扩展\n\n1. [RegExp 构造函数](http://es6.ruanyifeng.com/#docs/regex#RegExp%20%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0)\n2. [字符串的正则方法](http://es6.ruanyifeng.com/#docs/regex#%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%AD%A3%E5%88%99%E6%96%B9%E6%B3%95)\n3. [u 修饰符](http://es6.ruanyifeng.com/#docs/regex#u%20%E4%BF%AE%E9%A5%B0%E7%AC%A6)\n4. [RegExp.prototype.unicode 属性](http://es6.ruanyifeng.com/#docs/regex#RegExp.prototype.unicode%20%E5%B1%9E%E6%80%A7)\n5. [y 修饰符](http://es6.ruanyifeng.com/#docs/regex#y%20%E4%BF%AE%E9%A5%B0%E7%AC%A6)\n6. [RegExp.prototype.sticky 属性](http://es6.ruanyifeng.com/#docs/regex#RegExp.prototype.sticky%20%E5%B1%9E%E6%80%A7)\n7. [RegExp.prototype.flags 属性](http://es6.ruanyifeng.com/#docs/regex#RegExp.prototype.flags%20%E5%B1%9E%E6%80%A7)\n8. [s 修饰符：dotAll 模式](http://es6.ruanyifeng.com/#docs/regex#s%20%E4%BF%AE%E9%A5%B0%E7%AC%A6%EF%BC%9AdotAll%20%E6%A8%A1%E5%BC%8F)\n9. [后行断言](http://es6.ruanyifeng.com/#docs/regex#%E5%90%8E%E8%A1%8C%E6%96%AD%E8%A8%80)\n10. [Unicode 属性类](http://es6.ruanyifeng.com/#docs/regex#Unicode%20%E5%B1%9E%E6%80%A7%E7%B1%BB)\n11. [具名组匹配](http://es6.ruanyifeng.com/#docs/regex#%E5%85%B7%E5%90%8D%E7%BB%84%E5%8C%B9%E9%85%8D)\n12. [String.prototype.matchAll](http://es6.ruanyifeng.com/#docs/regex#String.prototype.matchAll)\n\n## RegExp 构造函数\n\n在 ES5 中，`RegExp`构造函数的参数有两种情况。\n\n第一种情况是，参数是字符串，这时第二个参数表示正则表达式的修饰符（flag）。\n\n```javascript\nvar regex = new RegExp(\'xyz\', \'i\');\n// 等价于\nvar regex = /xyz/i;\n```\n\n第二种情况是，参数是一个正则表示式，这时会返回一个原有正则表达式的拷贝。\n\n```javascript\nvar regex = new RegExp(/xyz/i);\n// 等价于\nvar regex = /xyz/i;\n```\n\n但是，ES5 不允许此时使用第二个参数添加修饰符，否则会报错。\n\n```javascript\nvar regex = new RegExp(/xyz/, \'i\');\n// Uncaught TypeError: Cannot supply flags when constructing one RegExp from another\n```\n\nES6 改变了这种行为。如果`RegExp`构造函数第一个参数是一个正则对象，那么可以使用第二个参数指定修饰符。而且，返回的正则表达式会忽略原有的正则表达式的修饰符，只使用新指定的修饰符。\n\n```javascript\nnew RegExp(/abc/ig, \'i\').flags\n// "i"\n```\n\n上面代码中，原有正则对象的修饰符是`ig`，它会被第二个参数`i`覆盖。\n\n## 字符串的正则方法\n\n字符串对象共有 4 个方法，可以使用正则表达式：`match()`、`replace()`、`search()`和`split()`。\n\nES6 将这 4 个方法，在语言内部全部调用`RegExp`的实例方法，从而做到所有与正则相关的方法，全都定义在`RegExp`对象上。\n\n- `String.prototype.match` 调用 `RegExp.prototype[Symbol.match]`\n- `String.prototype.replace` 调用 `RegExp.prototype[Symbol.replace]`\n- `String.prototype.search` 调用 `RegExp.prototype[Symbol.search]`\n- `String.prototype.split` 调用 `RegExp.prototype[Symbol.split]`\n\n## u 修饰符\n\nES6 对正则表达式添加了`u`修饰符，含义为“Unicode 模式”，用来正确处理大于`\\uFFFF`的 Unicode 字符。也就是说，会正确处理四个字节的 UTF-16 编码。\n\n```javascript\n/^\\uD83D/u.test(\'\\uD83D\\uDC2A\') // false\n/^\\uD83D/.test(\'\\uD83D\\uDC2A\') // true\n```\n\n上面代码中，`\\uD83D\\uDC2A`是一个四个字节的 UTF-16 编码，代表一个字符。但是，ES5 不支持四个字节的 UTF-16 编码，会将其识别为两个字符，导致第二行代码结果为`true`。加了`u`修饰符以后，ES6 就会识别其为一个字符，所以第一行代码结果为`false`。\n\n一旦加上`u`修饰符号，就会修改下面这些正则表达式的行为。\n\n**（1）点字符**\n\n点（`.`）字符在正则表达式中，含义是除了换行符以外的任意单个字符。对于码点大于`0xFFFF`的 Unicode 字符，点字符不能识别，必须加上`u`修饰符。\n\n```javascript\nvar s = \'𠮷\';\n\n/^.$/.test(s) // false\n/^.$/u.test(s) // true\n```\n\n上面代码表示，如果不添加`u`修饰符，正则表达式就会认为字符串为两个字符，从而匹配失败。\n\n**（2）Unicode 字符表示法**\n\nES6 新增了使用大括号表示 Unicode 字符，这种表示法在正则表达式中必须加上`u`修饰符，才能识别当中的大括号，否则会被解读为量词。\n\n```javascript\n/\\u{61}/.test(\'a\') // false\n/\\u{61}/u.test(\'a\') // true\n/\\u{20BB7}/u.test(\'𠮷\') // true\n```\n\n上面代码表示，如果不加`u`修饰符，正则表达式无法识别`\\u{61}`这种表示法，只会认为这匹配 61 个连续的`u`。\n\n**（3）量词**\n\n使用`u`修饰符后，所有量词都会正确识别码点大于`0xFFFF`的 Unicode 字符。\n\n```javascript\n/a{2}/.test(\'aa\') // true\n/a{2}/u.test(\'aa\') // true\n/𠮷{2}/.test(\'𠮷𠮷\') // false\n/𠮷{2}/u.test(\'𠮷𠮷\') // true\n```\n\n**（4）预定义模式**\n\n`u`修饰符也影响到预定义模式，能否正确识别码点大于`0xFFFF`的 Unicode 字符。\n\n```javascript\n/^\\S$/.test(\'𠮷\') // false\n/^\\S$/u.test(\'𠮷\') // true\n```\n\n上面代码的`\\S`是预定义模式，匹配所有非空白字符。只有加了`u`修饰符，它才能正确匹配码点大于`0xFFFF`的 Unicode 字符。\n\n利用这一点，可以写出一个正确返回字符串长度的函数。\n\n```javascript\nfunction codePointLength(text) {\n  var result = text.match(/[\\s\\S]/gu);\n  return result ? result.length : 0;\n}\n\nvar s = \'𠮷𠮷\';\n\ns.length // 4\ncodePointLength(s) // 2\n```\n\n**（5）i 修饰符**\n\n有些 Unicode 字符的编码不同，但是字型很相近，比如，`\\u004B`与`\\u212A`都是大写的`K`。\n\n```javascript\n/[a-z]/i.test(\'\\u212A\') // false\n/[a-z]/iu.test(\'\\u212A\') // true\n```\n\n上面代码中，不加`u`修饰符，就无法识别非规范的`K`字符。\n\n## RegExp.prototype.unicode 属性\n\n正则实例对象新增`unicode`属性，表示是否设置了`u`修饰符。\n\n```javascript\nconst r1 = /hello/;\nconst r2 = /hello/u;\n\nr1.unicode // false\nr2.unicode // true\n```\n\n上面代码中，正则表达式是否设置了`u`修饰符，可以从`unicode`属性看出来。\n\n## y 修饰符\n\n除了`u`修饰符，ES6 还为正则表达式添加了`y`修饰符，叫做“粘连”（sticky）修饰符。\n\n`y`修饰符的作用与`g`修饰符类似，也是全局匹配，后一次匹配都从上一次匹配成功的下一个位置开始。不同之处在于，`g`修饰符只要剩余位置中存在匹配就可，而`y`修饰符确保匹配必须从剩余的第一个位置开始，这也就是“粘连”的涵义。\n\n```javascript\nvar s = \'aaa_aa_a\';\nvar r1 = /a+/g;\nvar r2 = /a+/y;\n\nr1.exec(s) // ["aaa"]\nr2.exec(s) // ["aaa"]\n\nr1.exec(s) // ["aa"]\nr2.exec(s) // null\n```\n\n上面代码有两个正则表达式，一个使用`g`修饰符，另一个使用`y`修饰符。这两个正则表达式各执行了两次，第一次执行的时候，两者行为相同，剩余字符串都是`_aa_a`。由于`g`修饰没有位置要求，所以第二次执行会返回结果，而`y`修饰符要求匹配必须从头部开始，所以返回`null`。\n\n如果改一下正则表达式，保证每次都能头部匹配，`y`修饰符就会返回结果了。\n\n```javascript\nvar s = \'aaa_aa_a\';\nvar r = /a+_/y;\n\nr.exec(s) // ["aaa_"]\nr.exec(s) // ["aa_"]\n```\n\n上面代码每次匹配，都是从剩余字符串的头部开始。\n\n使用`lastIndex`属性，可以更好地说明`y`修饰符。\n\n```javascript\nconst REGEX = /a/g;\n\n// 指定从2号位置（y）开始匹配\nREGEX.lastIndex = 2;\n\n// 匹配成功\nconst match = REGEX.exec(\'xaya\');\n\n// 在3号位置匹配成功\nmatch.index // 3\n\n// 下一次匹配从4号位开始\nREGEX.lastIndex // 4\n\n// 4号位开始匹配失败\nREGEX.exec(\'xaya\') // null\n```\n\n上面代码中，`lastIndex`属性指定每次搜索的开始位置，`g`修饰符从这个位置开始向后搜索，直到发现匹配为止。\n\n`y`修饰符同样遵守`lastIndex`属性，但是要求必须在`lastIndex`指定的位置发现匹配。\n\n```javascript\nconst REGEX = /a/y;\n\n// 指定从2号位置开始匹配\nREGEX.lastIndex = 2;\n\n// 不是粘连，匹配失败\nREGEX.exec(\'xaya\') // null\n\n// 指定从3号位置开始匹配\nREGEX.lastIndex = 3;\n\n// 3号位置是粘连，匹配成功\nconst match = REGEX.exec(\'xaya\');\nmatch.index // 3\nREGEX.lastIndex // 4\n```\n\n实际上，`y`修饰符号隐含了头部匹配的标志`^`。\n\n```javascript\n/b/y.exec(\'aba\')\n// null\n```\n\n上面代码由于不能保证头部匹配，所以返回`null`。`y`修饰符的设计本意，就是让头部匹配的标志`^`在全局匹配中都有效。\n\n下面是字符串对象的`replace`方法的例子。\n\n```javascript\nconst REGEX = /a/gy;\n\'aaxa\'.replace(REGEX, \'-\') // \'--xa\'\n```\n\n上面代码中，最后一个`a`因为不是出现在下一次匹配的头部，所以不会被替换。\n\n单单一个`y`修饰符对`match`方法，只能返回第一个匹配，必须与`g`修饰符联用，才能返回所有匹配。\n\n```javascript\n\'a1a2a3\'.match(/a\\d/y) // ["a1"]\n\'a1a2a3\'.match(/a\\d/gy) // ["a1", "a2", "a3"]\n```\n\n`y`修饰符的一个应用，是从字符串提取 token（词元），`y`修饰符确保了匹配之间不会有漏掉的字符。\n\n```javascript\nconst TOKEN_Y = /\\s*(\\+|[0-9]+)\\s*/y;\nconst TOKEN_G  = /\\s*(\\+|[0-9]+)\\s*/g;\n\ntokenize(TOKEN_Y, \'3 + 4\')\n// [ \'3\', \'+\', \'4\' ]\ntokenize(TOKEN_G, \'3 + 4\')\n// [ \'3\', \'+\', \'4\' ]\n\nfunction tokenize(TOKEN_REGEX, str) {\n  let result = [];\n  let match;\n  while (match = TOKEN_REGEX.exec(str)) {\n    result.push(match[1]);\n  }\n  return result;\n}\n```\n\n上面代码中，如果字符串里面没有非法字符，`y`修饰符与`g`修饰符的提取结果是一样的。但是，一旦出现非法字符，两者的行为就不一样了。\n\n```javascript\ntokenize(TOKEN_Y, \'3x + 4\')\n// [ \'3\' ]\ntokenize(TOKEN_G, \'3x + 4\')\n// [ \'3\', \'+\', \'4\' ]\n```\n\n上面代码中，`g`修饰符会忽略非法字符，而`y`修饰符不会，这样就很容易发现错误。\n\n## RegExp.prototype.sticky 属性\n\n与`y`修饰符相匹配，ES6 的正则实例对象多了`sticky`属性，表示是否设置了`y`修饰符。\n\n```javascript\nvar r = /hello\\d/y;\nr.sticky // true\n```\n\n## RegExp.prototype.flags 属性\n\nES6 为正则表达式新增了`flags`属性，会返回正则表达式的修饰符。\n\n```javascript\n// ES5 的 source 属性\n// 返回正则表达式的正文\n/abc/ig.source\n// "abc"\n\n// ES6 的 flags 属性\n// 返回正则表达式的修饰符\n/abc/ig.flags\n// \'gi\'\n```\n\n## s 修饰符：dotAll 模式\n\n正则表达式中，点（`.`）是一个特殊字符，代表任意的单个字符，但是有两个例外。一个是四个字节的 UTF-16 字符，这个可以用`u`修饰符解决；另一个是行终止符（line terminator character）。\n\n所谓行终止符，就是该字符表示一行的终结。以下四个字符属于”行终止符“。\n\n- U+000A 换行符（`\\n`）\n- U+000D 回车符（`\\r`）\n- U+2028 行分隔符（line separator）\n- U+2029 段分隔符（paragraph separator）\n\n```javascript\n/foo.bar/.test(\'foo\\nbar\')\n// false\n```\n\n上面代码中，因为`.`不匹配`\\n`，所以正则表达式返回`false`。\n\n但是，很多时候我们希望匹配的是任意单个字符，这时有一种变通的写法。\n\n```javascript\n/foo[^]bar/.test(\'foo\\nbar\')\n// true\n```\n\n这种解决方案毕竟不太符合直觉，ES2018 [引入](https://github.com/tc39/proposal-regexp-dotall-flag)`s`修饰符，使得`.`可以匹配任意单个字符。\n\n```javascript\n/foo.bar/s.test(\'foo\\nbar\') // true\n```\n\n这被称为`dotAll`模式，即点（dot）代表一切字符。所以，正则表达式还引入了一个`dotAll`属性，返回一个布尔值，表示该正则表达式是否处在`dotAll`模式。\n\n```javascript\nconst re = /foo.bar/s;\n// 另一种写法\n// const re = new RegExp(\'foo.bar\', \'s\');\n\nre.test(\'foo\\nbar\') // true\nre.dotAll // true\nre.flags // \'s\'\n```\n\n`/s`修饰符和多行修饰符`/m`不冲突，两者一起使用的情况下，`.`匹配所有字符，而`^`和`$`匹配每一行的行首和行尾。\n\n## 后行断言\n\nJavaScript 语言的正则表达式，只支持先行断言（lookahead）和先行否定断言（negative lookahead），不支持后行断言（lookbehind）和后行否定断言（negative lookbehind）。ES2018 引入[后行断言](https://github.com/tc39/proposal-regexp-lookbehind)，V8 引擎 4.9 版（Chrome 62）已经支持。\n\n”先行断言“指的是，`x`只有在`y`前面才匹配，必须写成`/x(?=y)/`。比如，只匹配百分号之前的数字，要写成`/\\d+(?=%)/`。”先行否定断言“指的是，`x`只有不在`y`前面才匹配，必须写成`/x(?!y)/`。比如，只匹配不在百分号之前的数字，要写成`/\\d+(?!%)/`。\n\n```javascript\n/\\d+(?=%)/.exec(\'100% of US presidents have been male\')  // ["100"]\n/\\d+(?!%)/.exec(\'that’s all 44 of them\')                 // ["44"]\n```\n\n上面两个字符串，如果互换正则表达式，就不会得到相同结果。另外，还可以看到，”先行断言“括号之中的部分（`(?=%)`），是不计入返回结果的。\n\n“后行断言”正好与“先行断言”相反，`x`只有在`y`后面才匹配，必须写成`/(?<=y)x/`。比如，只匹配美元符号之后的数字，要写成`/(?<=\\$)\\d+/`。”后行否定断言“则与”先行否定断言“相反，`x`只有不在`y`后面才匹配，必须写成`/(?<!y)x/`。比如，只匹配不在美元符号后面的数字，要写成`/(?<!\\$)\\d+/`。\n\n```javascript\n/(?<=\\$)\\d+/.exec(\'Benjamin Franklin is on the $100 bill\')  // ["100"]\n/(?<!\\$)\\d+/.exec(\'it’s is worth about €90\')                // ["90"]\n```\n\n上面的例子中，“后行断言”的括号之中的部分（`(?<=\\$)`），也是不计入返回结果。\n\n下面的例子是使用后行断言进行字符串替换。\n\n```javascript\nconst RE_DOLLAR_PREFIX = /(?<=\\$)foo/g;\n\'$foo %foo foo\'.replace(RE_DOLLAR_PREFIX, \'bar\');\n// \'$bar %foo foo\'\n```\n\n上面代码中，只有在美元符号后面的`foo`才会被替换。\n\n“后行断言”的实现，需要先匹配`/(?<=y)x/`的`x`，然后再回到左边，匹配`y`的部分。这种“先右后左”的执行顺序，与所有其他正则操作相反，导致了一些不符合预期的行为。\n\n首先，后行断言的组匹配，与正常情况下结果是不一样的。\n\n```javascript\n/(?<=(\\d+)(\\d+))$/.exec(\'1053\') // ["", "1", "053"]\n/^(\\d+)(\\d+)$/.exec(\'1053\') // ["1053", "105", "3"]\n```\n\n上面代码中，需要捕捉两个组匹配。没有“后行断言”时，第一个括号是贪婪模式，第二个括号只能捕获一个字符，所以结果是`105`和`3`。而“后行断言”时，由于执行顺序是从右到左，第二个括号是贪婪模式，第一个括号只能捕获一个字符，所以结果是`1`和`053`。\n\n其次，“后行断言”的反斜杠引用，也与通常的顺序相反，必须放在对应的那个括号之前。\n\n```javascript\n/(?<=(o)d\\1)r/.exec(\'hodor\')  // null\n/(?<=\\1d(o))r/.exec(\'hodor\')  // ["r", "o"]\n```\n\n上面代码中，如果后行断言的反斜杠引用（`\\1`）放在括号的后面，就不会得到匹配结果，必须放在前面才可以。因为后行断言是先从左到右扫描，发现匹配以后再回过头，从右到左完成反斜杠引用。\n\n## Unicode 属性类\n\nES2018 [引入](https://github.com/tc39/proposal-regexp-unicode-property-escapes)了一种新的类的写法`\\p{...}`和`\\P{...}`，允许正则表达式匹配符合 Unicode 某种属性的所有字符。\n\n```javascript\nconst regexGreekSymbol = /\\p{Script=Greek}/u;\nregexGreekSymbol.test(\'π\') // true\n```\n\n上面代码中，`\\p{Script=Greek}`指定匹配一个希腊文字母，所以匹配`π`成功。\n\nUnicode 属性类要指定属性名和属性值。\n\n```javascript\n\\p{UnicodePropertyName=UnicodePropertyValue}\n```\n\n对于某些属性，可以只写属性名，或者只写属性值。\n\n```javascript\n\\p{UnicodePropertyName}\n\\p{UnicodePropertyValue}\n```\n\n`\\P{…}`是`\\p{…}`的反向匹配，即匹配不满足条件的字符。\n\n注意，这两种类只对 Unicode 有效，所以使用的时候一定要加上`u`修饰符。如果不加`u`修饰符，正则表达式使用`\\p`和`\\P`会报错，ECMAScript 预留了这两个类。\n\n由于 Unicode 的各种属性非常多，所以这种新的类的表达能力非常强。\n\n```javascript\nconst regex = /^\\p{Decimal_Number}+$/u;\nregex.test(\'𝟏𝟐𝟑𝟜𝟝𝟞𝟩𝟪𝟫𝟬𝟭𝟮𝟯𝟺𝟻𝟼\') // true\n```\n\n上面代码中，属性类指定匹配所有十进制字符，可以看到各种字型的十进制字符都会匹配成功。\n\n`\\p{Number}`甚至能匹配罗马数字。\n\n```javascript\n// 匹配所有数字\nconst regex = /^\\p{Number}+$/u;\nregex.test(\'²³¹¼½¾\') // true\nregex.test(\'㉛㉜㉝\') // true\nregex.test(\'ⅠⅡⅢⅣⅤⅥⅦⅧⅨⅩⅪⅫ\') // true\n```\n\n下面是其他一些例子。\n\n```javascript\n// 匹配所有空格\n\\p{White_Space}\n\n// 匹配各种文字的所有字母，等同于 Unicode 版的 \\w\n[\\p{Alphabetic}\\p{Mark}\\p{Decimal_Number}\\p{Connector_Punctuation}\\p{Join_Control}]\n\n// 匹配各种文字的所有非字母的字符，等同于 Unicode 版的 \\W\n[^\\p{Alphabetic}\\p{Mark}\\p{Decimal_Number}\\p{Connector_Punctuation}\\p{Join_Control}]\n\n// 匹配 Emoji\n/\\p{Emoji_Modifier_Base}\\p{Emoji_Modifier}?|\\p{Emoji_Presentation}|\\p{Emoji}\\uFE0F/gu\n\n// 匹配所有的箭头字符\nconst regexArrows = /^\\p{Block=Arrows}+$/u;\nregexArrows.test(\'←↑→↓↔↕↖↗↘↙⇏⇐⇑⇒⇓⇔⇕⇖⇗⇘⇙⇧⇩\') // true\n```\n\n## 具名组匹配\n\n### 简介\n\n正则表达式使用圆括号进行组匹配。\n\n```javascript\nconst RE_DATE = /(\\d{4})-(\\d{2})-(\\d{2})/;\n```\n\n上面代码中，正则表达式里面有三组圆括号。使用`exec`方法，就可以将这三组匹配结果提取出来。\n\n```javascript\nconst RE_DATE = /(\\d{4})-(\\d{2})-(\\d{2})/;\n\nconst matchObj = RE_DATE.exec(\'1999-12-31\');\nconst year = matchObj[1]; // 1999\nconst month = matchObj[2]; // 12\nconst day = matchObj[3]; // 31\n```\n\n组匹配的一个问题是，每一组的匹配含义不容易看出来，而且只能用数字序号（比如`matchObj[1]`）引用，要是组的顺序变了，引用的时候就必须修改序号。\n\nES2018 引入了[具名组匹配](https://github.com/tc39/proposal-regexp-named-groups)（Named Capture Groups），允许为每一个组匹配指定一个名字，既便于阅读代码，又便于引用。\n\n```javascript\nconst RE_DATE = /(?<year>\\d{4})-(?<month>\\d{2})-(?<day>\\d{2})/;\n\nconst matchObj = RE_DATE.exec(\'1999-12-31\');\nconst year = matchObj.groups.year; // 1999\nconst month = matchObj.groups.month; // 12\nconst day = matchObj.groups.day; // 31\n```\n\n上面代码中，“具名组匹配”在圆括号内部，模式的头部添加“问号 + 尖括号 + 组名”（`?<year>`），然后就可以在`exec`方法返回结果的`groups`属性上引用该组名。同时，数字序号（`matchObj[1]`）依然有效。\n\n具名组匹配等于为每一组匹配加上了 ID，便于描述匹配的目的。如果组的顺序变了，也不用改变匹配后的处理代码。\n\n如果具名组没有匹配，那么对应的`groups`对象属性会是`undefined`。\n\n```javascript\nconst RE_OPT_A = /^(?<as>a+)?$/;\nconst matchObj = RE_OPT_A.exec(\'\');\n\nmatchObj.groups.as // undefined\n\'as\' in matchObj.groups // true\n```\n\n上面代码中，具名组`as`没有找到匹配，那么`matchObj.groups.as`属性值就是`undefined`，并且`as`这个键名在`groups`是始终存在的。\n\n### 解构赋值和替换\n\n有了具名组匹配以后，可以使用解构赋值直接从匹配结果上为变量赋值。\n\n```javascript\nlet {groups: {one, two}} = /^(?<one>.*):(?<two>.*)$/u.exec(\'foo:bar\');\none  // foo\ntwo  // bar\n```\n\n字符串替换时，使用`$<组名>`引用具名组。\n\n```javascript\nlet re = /(?<year>\\d{4})-(?<month>\\d{2})-(?<day>\\d{2})/u;\n\n\'2015-01-02\'.replace(re, \'$<day>/$<month>/$<year>\')\n// \'02/01/2015\'\n```\n\n上面代码中，`replace`方法的第二个参数是一个字符串，而不是正则表达式。\n\n`replace`方法的第二个参数也可以是函数，该函数的参数序列如下。\n\n```javascript\n\'2015-01-02\'.replace(re, (\n   matched, // 整个匹配结果 2015-01-02\n   capture1, // 第一个组匹配 2015\n   capture2, // 第二个组匹配 01\n   capture3, // 第三个组匹配 02\n   position, // 匹配开始的位置 0\n   S, // 原字符串 2015-01-02\n   groups // 具名组构成的一个对象 {year, month, day}\n ) => {\n let {day, month, year} = args[args.length - 1];\n return `${day}/${month}/${year}`;\n});\n```\n\n具名组匹配在原来的基础上，新增了最后一个函数参数：具名组构成的一个对象。函数内部可以直接对这个对象进行解构赋值。\n\n### 引用\n\n如果要在正则表达式内部引用某个“具名组匹配”，可以使用`\\k<组名>`的写法。\n\n```javascript\nconst RE_TWICE = /^(?<word>[a-z]+)!\\k<word>$/;\nRE_TWICE.test(\'abc!abc\') // true\nRE_TWICE.test(\'abc!ab\') // false\n```\n\n数字引用（`\\1`）依然有效。\n\n```javascript\nconst RE_TWICE = /^(?<word>[a-z]+)!\\1$/;\nRE_TWICE.test(\'abc!abc\') // true\nRE_TWICE.test(\'abc!ab\') // false\n```\n\n这两种引用语法还可以同时使用。\n\n```javascript\nconst RE_TWICE = /^(?<word>[a-z]+)!\\k<word>!\\1$/;\nRE_TWICE.test(\'abc!abc!abc\') // true\nRE_TWICE.test(\'abc!abc!ab\') // false\n```\n\n## String.prototype.matchAll\n\n如果一个正则表达式在字符串里面有多个匹配，现在一般使用`g`修饰符或`y`修饰符，在循环里面逐一取出。\n\n```javascript\nvar regex = /t(e)(st(\\d?))/g;\nvar string = \'test1test2test3\';\n\nvar matches = [];\nvar match;\nwhile (match = regex.exec(string)) {\n  matches.push(match);\n}\n\nmatches\n// [\n//   ["test1", "e", "st1", "1", index: 0, input: "test1test2test3"],\n//   ["test2", "e", "st2", "2", index: 5, input: "test1test2test3"],\n//   ["test3", "e", "st3", "3", index: 10, input: "test1test2test3"]\n// ]\n```\n\n上面代码中，`while`循环取出每一轮的正则匹配，一共三轮。\n\n目前有一个[提案](https://github.com/tc39/proposal-string-matchall)，增加了`String.prototype.matchAll`方法，可以一次性取出所有匹配。不过，它返回的是一个遍历器（Iterator），而不是数组。\n\n```javascript\nconst string = \'test1test2test3\';\n\n// g 修饰符加不加都可以\nconst regex = /t(e)(st(\\d?))/g;\n\nfor (const match of string.matchAll(regex)) {\n  console.log(match);\n}\n// ["test1", "e", "st1", "1", index: 0, input: "test1test2test3"]\n// ["test2", "e", "st2", "2", index: 5, input: "test1test2test3"]\n// ["test3", "e", "st3", "3", index: 10, input: "test1test2test3"]\n```\n\n上面代码中，由于`string.matchAll(regex)`返回的是遍历器，所以可以用`for...of`循环取出。相对于返回数组，返回遍历器的好处在于，如果匹配结果是一个很大的数组，那么遍历器比较节省资源。\n\n遍历器转为数组是非常简单的，使用`...`运算符和`Array.from`方法就可以了。\n\n```javascript\n// 转为数组方法一\n[...string.matchAll(regex)]\n\n// 转为数组方法二\nArray.from(string.matchAll(regex));\n```\n\n\n\n# 数值的扩展\n\n1. [二进制和八进制表示法](http://es6.ruanyifeng.com/#docs/number#%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%92%8C%E5%85%AB%E8%BF%9B%E5%88%B6%E8%A1%A8%E7%A4%BA%E6%B3%95)\n2. [Number.isFinite(), Number.isNaN()](http://es6.ruanyifeng.com/#docs/number#Number.isFinite(),%20Number.isNaN())\n3. [Number.parseInt(), Number.parseFloat()](http://es6.ruanyifeng.com/#docs/number#Number.parseInt(),%20Number.parseFloat())\n4. [Number.isInteger()](http://es6.ruanyifeng.com/#docs/number#Number.isInteger())\n5. [Number.EPSILON](http://es6.ruanyifeng.com/#docs/number#Number.EPSILON)\n6. [安全整数和 Number.isSafeInteger()](http://es6.ruanyifeng.com/#docs/number#%E5%AE%89%E5%85%A8%E6%95%B4%E6%95%B0%E5%92%8C%20Number.isSafeInteger())\n7. [Math 对象的扩展](http://es6.ruanyifeng.com/#docs/number#Math%20%E5%AF%B9%E8%B1%A1%E7%9A%84%E6%89%A9%E5%B1%95)\n8. [指数运算符](http://es6.ruanyifeng.com/#docs/number#%E6%8C%87%E6%95%B0%E8%BF%90%E7%AE%97%E7%AC%A6)\n\n## 二进制和八进制表示法\n\nES6 提供了二进制和八进制数值的新的写法，分别用前缀`0b`（或`0B`）和`0o`（或`0O`）表示。\n\n```javascript\n0b111110111 === 503 // true\n0o767 === 503 // true\n```\n\n从 ES5 开始，在严格模式之中，八进制就不再允许使用前缀`0`表示，ES6 进一步明确，要使用前缀`0o`表示。\n\n```javascript\n// 非严格模式\n(function(){\n  console.log(0o11 === 011);\n})() // true\n\n// 严格模式\n(function(){\n  \'use strict\';\n  console.log(0o11 === 011);\n})() // Uncaught SyntaxError: Octal literals are not allowed in strict mode.\n```\n\n如果要将`0b`和`0o`前缀的字符串数值转为十进制，要使用`Number`方法。\n\n```javascript\nNumber(\'0b111\')  // 7\nNumber(\'0o10\')  // 8\n```\n\n## Number.isFinite(), Number.isNaN()\n\nES6 在`Number`对象上，新提供了`Number.isFinite()`和`Number.isNaN()`两个方法。\n\n`Number.isFinite()`用来检查一个数值是否为有限的（finite），即不是`Infinity`。\n\n```javascript\nNumber.isFinite(15); // true\nNumber.isFinite(0.8); // true\nNumber.isFinite(NaN); // false\nNumber.isFinite(Infinity); // false\nNumber.isFinite(-Infinity); // false\nNumber.isFinite(\'foo\'); // false\nNumber.isFinite(\'15\'); // false\nNumber.isFinite(true); // false\n```\n\n注意，如果参数类型不是数值，`Number.isFinite`一律返回`false`。\n\n`Number.isNaN()`用来检查一个值是否为`NaN`。\n\n```javascript\nNumber.isNaN(NaN) // true\nNumber.isNaN(15) // false\nNumber.isNaN(\'15\') // false\nNumber.isNaN(true) // false\nNumber.isNaN(9/NaN) // true\nNumber.isNaN(\'true\' / 0) // true\nNumber.isNaN(\'true\' / \'true\') // true\n```\n\n如果参数类型不是`NaN`，`Number.isNaN`一律返回`false`。\n\n它们与传统的全局方法`isFinite()`和`isNaN()`的区别在于，传统方法先调用`Number()`将非数值的值转为数值，再进行判断，而这两个新方法只对数值有效，`Number.isFinite()`对于非数值一律返回`false`, `Number.isNaN()`只有对于`NaN`才返回`true`，非`NaN`一律返回`false`。\n\n```javascript\nisFinite(25) // true\nisFinite("25") // true\nNumber.isFinite(25) // true\nNumber.isFinite("25") // false\n\nisNaN(NaN) // true\nisNaN("NaN") // true\nNumber.isNaN(NaN) // true\nNumber.isNaN("NaN") // false\nNumber.isNaN(1) // false\n```\n\n## Number.parseInt(), Number.parseFloat()\n\nES6 将全局方法`parseInt()`和`parseFloat()`，移植到`Number`对象上面，行为完全保持不变。\n\n```javascript\n// ES5的写法\nparseInt(\'12.34\') // 12\nparseFloat(\'123.45#\') // 123.45\n\n// ES6的写法\nNumber.parseInt(\'12.34\') // 12\nNumber.parseFloat(\'123.45#\') // 123.45\n```\n\n这样做的目的，是逐步减少全局性方法，使得语言逐步模块化。\n\n```javascript\nNumber.parseInt === parseInt // true\nNumber.parseFloat === parseFloat // true\n```\n\n## Number.isInteger()\n\n`Number.isInteger()`用来判断一个数值是否为整数。\n\n```javascript\nNumber.isInteger(25) // true\nNumber.isInteger(25.1) // false\n```\n\nJavaScript 内部，整数和浮点数采用的是同样的储存方法，所以 25 和 25.0 被视为同一个值。\n\n```javascript\nNumber.isInteger(25) // true\nNumber.isInteger(25.0) // true\n```\n\n如果参数不是数值，`Number.isInteger`返回`false`。\n\n```javascript\nNumber.isInteger() // false\nNumber.isInteger(null) // false\nNumber.isInteger(\'15\') // false\nNumber.isInteger(true) // false\n```\n\n注意，由于 JavaScript 采用 IEEE 754 标准，数值存储为64位双精度格式，数值精度最多可以达到 53 个二进制位（1 个隐藏位与 52 个有效位）。如果数值的精度超过这个限度，第54位及后面的位就会被丢弃，这种情况下，`Number.isInteger`可能会误判。\n\n```javascript\nNumber.isInteger(3.0000000000000002) // true\n```\n\n上面代码中，`Number.isInteger`的参数明明不是整数，但是会返回`true`。原因就是这个小数的精度达到了小数点后16个十进制位，转成二进制位超过了53个二进制位，导致最后的那个`2`被丢弃了。\n\n类似的情况还有，如果一个数值的绝对值小于`Number.MIN_VALUE`（5E-324），即小于 JavaScript 能够分辨的最小值，会被自动转为 0。这时，`Number.isInteger`也会误判。\n\n```javascript\nNumber.isInteger(5E-324) // false\nNumber.isInteger(5E-325) // true\n```\n\n上面代码中，`5E-325`由于值太小，会被自动转为0，因此返回`true`。\n\n总之，如果对数据精度的要求较高，不建议使用`Number.isInteger()`判断一个数值是否为整数。\n\n## Number.EPSILON\n\nES6 在`Number`对象上面，新增一个极小的常量`Number.EPSILON`。根据规格，它表示 1 与大于 1 的最小浮点数之间的差。\n\n对于 64 位浮点数来说，大于 1 的最小浮点数相当于二进制的`1.00..001`，小数点后面有连续 51 个零。这个值减去 1 之后，就等于 2 的 -52 次方。\n\n```javascript\nNumber.EPSILON === Math.pow(2, -52)\n// true\nNumber.EPSILON\n// 2.220446049250313e-16\nNumber.EPSILON.toFixed(20)\n// "0.00000000000000022204"\n```\n\n`Number.EPSILON`实际上是 JavaScript 能够表示的最小精度。误差如果小于这个值，就可以认为已经没有意义了，即不存在误差了。\n\n引入一个这么小的量的目的，在于为浮点数计算，设置一个误差范围。我们知道浮点数计算是不精确的。\n\n```javascript\n0.1 + 0.2\n// 0.30000000000000004\n\n0.1 + 0.2 - 0.3\n// 5.551115123125783e-17\n\n5.551115123125783e-17.toFixed(20)\n// \'0.00000000000000005551\'\n```\n\n上面代码解释了，为什么比较`0.1 + 0.2`与`0.3`得到的结果是`false`。\n\n```javascript\n0.1 + 0.2 === 0.3 // false\n```\n\n`Number.EPSILON`可以用来设置“能够接受的误差范围”。比如，误差范围设为 2 的-50 次方（即`Number.EPSILON * Math.pow(2, 2)`），即如果两个浮点数的差小于这个值，我们就认为这两个浮点数相等。\n\n```javascript\n5.551115123125783e-17 < Number.EPSILON * Math.pow(2, 2)\n// true\n```\n\n因此，`Number.EPSILON`的实质是一个可以接受的最小误差范围。\n\n```javascript\nfunction withinErrorMargin (left, right) {\n  return Math.abs(left - right) < Number.EPSILON * Math.pow(2, 2);\n}\n\n0.1 + 0.2 === 0.3 // false\nwithinErrorMargin(0.1 + 0.2, 0.3) // true\n\n1.1 + 1.3 === 2.4 // false\nwithinErrorMargin(1.1 + 1.3, 2.4) // true\n```\n\n上面的代码为浮点数运算，部署了一个误差检查函数。\n\n## 安全整数和 Number.isSafeInteger()\n\nJavaScript 能够准确表示的整数范围在`-2^53`到`2^53`之间（不含两个端点），超过这个范围，无法精确表示这个值。\n\n```javascript\nMath.pow(2, 53) // 9007199254740992\n\n9007199254740992  // 9007199254740992\n9007199254740993  // 9007199254740992\n\nMath.pow(2, 53) === Math.pow(2, 53) + 1\n// true\n```\n\n上面代码中，超出 2 的 53 次方之后，一个数就不精确了。\n\nES6 引入了`Number.MAX_SAFE_INTEGER`和`Number.MIN_SAFE_INTEGER`这两个常量，用来表示这个范围的上下限。\n\n```javascript\nNumber.MAX_SAFE_INTEGER === Math.pow(2, 53) - 1\n// true\nNumber.MAX_SAFE_INTEGER === 9007199254740991\n// true\n\nNumber.MIN_SAFE_INTEGER === -Number.MAX_SAFE_INTEGER\n// true\nNumber.MIN_SAFE_INTEGER === -9007199254740991\n// true\n```\n\n上面代码中，可以看到 JavaScript 能够精确表示的极限。\n\n`Number.isSafeInteger()`则是用来判断一个整数是否落在这个范围之内。\n\n```javascript\nNumber.isSafeInteger(\'a\') // false\nNumber.isSafeInteger(null) // false\nNumber.isSafeInteger(NaN) // false\nNumber.isSafeInteger(Infinity) // false\nNumber.isSafeInteger(-Infinity) // false\n\nNumber.isSafeInteger(3) // true\nNumber.isSafeInteger(1.2) // false\nNumber.isSafeInteger(9007199254740990) // true\nNumber.isSafeInteger(9007199254740992) // false\n\nNumber.isSafeInteger(Number.MIN_SAFE_INTEGER - 1) // false\nNumber.isSafeInteger(Number.MIN_SAFE_INTEGER) // true\nNumber.isSafeInteger(Number.MAX_SAFE_INTEGER) // true\nNumber.isSafeInteger(Number.MAX_SAFE_INTEGER + 1) // false\n```\n\n这个函数的实现很简单，就是跟安全整数的两个边界值比较一下。\n\n```javascript\nNumber.isSafeInteger = function (n) {\n  return (typeof n === \'number\' &&\n    Math.round(n) === n &&\n    Number.MIN_SAFE_INTEGER <= n &&\n    n <= Number.MAX_SAFE_INTEGER);\n}\n```\n\n实际使用这个函数时，需要注意。验证运算结果是否落在安全整数的范围内，不要只验证运算结果，而要同时验证参与运算的每个值。\n\n```javascript\nNumber.isSafeInteger(9007199254740993)\n// false\nNumber.isSafeInteger(990)\n// true\nNumber.isSafeInteger(9007199254740993 - 990)\n// true\n9007199254740993 - 990\n// 返回结果 9007199254740002\n// 正确答案应该是 9007199254740003\n```\n\n上面代码中，`9007199254740993`不是一个安全整数，但是`Number.isSafeInteger`会返回结果，显示计算结果是安全的。这是因为，这个数超出了精度范围，导致在计算机内部，以`9007199254740992`的形式储存。\n\n```javascript\n9007199254740993 === 9007199254740992\n// true\n```\n\n所以，如果只验证运算结果是否为安全整数，很可能得到错误结果。下面的函数可以同时验证两个运算数和运算结果。\n\n```javascript\nfunction trusty (left, right, result) {\n  if (\n    Number.isSafeInteger(left) &&\n    Number.isSafeInteger(right) &&\n    Number.isSafeInteger(result)\n  ) {\n    return result;\n  }\n  throw new RangeError(\'Operation cannot be trusted!\');\n}\n\ntrusty(9007199254740993, 990, 9007199254740993 - 990)\n// RangeError: Operation cannot be trusted!\n\ntrusty(1, 2, 3)\n// 3\n```\n\n## Math 对象的扩展\n\nES6 在 Math 对象上新增了 17 个与数学相关的方法。所有这些方法都是静态方法，只能在 Math 对象上调用。\n\n### Math.trunc()\n\n`Math.trunc`方法用于去除一个数的小数部分，返回整数部分。\n\n```javascript\nMath.trunc(4.1) // 4\nMath.trunc(4.9) // 4\nMath.trunc(-4.1) // -4\nMath.trunc(-4.9) // -4\nMath.trunc(-0.1234) // -0\n```\n\n对于非数值，`Math.trunc`内部使用`Number`方法将其先转为数值。\n\n```javascript\nMath.trunc(\'123.456\') // 123\nMath.trunc(true) //1\nMath.trunc(false) // 0\nMath.trunc(null) // 0\n```\n\n对于空值和无法截取整数的值，返回`NaN`。\n\n```javascript\nMath.trunc(NaN);      // NaN\nMath.trunc(\'foo\');    // NaN\nMath.trunc();         // NaN\nMath.trunc(undefined) // NaN\n```\n\n对于没有部署这个方法的环境，可以用下面的代码模拟。\n\n```javascript\nMath.trunc = Math.trunc || function(x) {\n  return x < 0 ? Math.ceil(x) : Math.floor(x);\n};\n```\n\n### Math.sign()\n\n`Math.sign`方法用来判断一个数到底是正数、负数、还是零。对于非数值，会先将其转换为数值。\n\n它会返回五种值。\n\n- 参数为正数，返回`+1`；\n- 参数为负数，返回`-1`；\n- 参数为 0，返回`0`；\n- 参数为-0，返回`-0`;\n- 其他值，返回`NaN`。\n\n```javascript\nMath.sign(-5) // -1\nMath.sign(5) // +1\nMath.sign(0) // +0\nMath.sign(-0) // -0\nMath.sign(NaN) // NaN\n```\n\n如果参数是非数值，会自动转为数值。对于那些无法转为数值的值，会返回`NaN`。\n\n```javascript\nMath.sign(\'\')  // 0\nMath.sign(true)  // +1\nMath.sign(false)  // 0\nMath.sign(null)  // 0\nMath.sign(\'9\')  // +1\nMath.sign(\'foo\')  // NaN\nMath.sign()  // NaN\nMath.sign(undefined)  // NaN\n```\n\n对于没有部署这个方法的环境，可以用下面的代码模拟。\n\n```javascript\nMath.sign = Math.sign || function(x) {\n  x = +x; // convert to a number\n  if (x === 0 || isNaN(x)) {\n    return x;\n  }\n  return x > 0 ? 1 : -1;\n};\n```\n\n### Math.cbrt()\n\n`Math.cbrt`方法用于计算一个数的立方根。\n\n```javascript\nMath.cbrt(-1) // -1\nMath.cbrt(0)  // 0\nMath.cbrt(1)  // 1\nMath.cbrt(2)  // 1.2599210498948734\n```\n\n对于非数值，`Math.cbrt`方法内部也是先使用`Number`方法将其转为数值。\n\n```javascript\nMath.cbrt(\'8\') // 2\nMath.cbrt(\'hello\') // NaN\n```\n\n对于没有部署这个方法的环境，可以用下面的代码模拟。\n\n```javascript\nMath.cbrt = Math.cbrt || function(x) {\n  var y = Math.pow(Math.abs(x), 1/3);\n  return x < 0 ? -y : y;\n};\n```\n\n### Math.clz32()\n\nJavaScript 的整数使用 32 位二进制形式表示，`Math.clz32`方法返回一个数的 32 位无符号整数形式有多少个前导 0。\n\n```javascript\nMath.clz32(0) // 32\nMath.clz32(1) // 31\nMath.clz32(1000) // 22\nMath.clz32(0b01000000000000000000000000000000) // 1\nMath.clz32(0b00100000000000000000000000000000) // 2\n```\n\n上面代码中，0 的二进制形式全为 0，所以有 32 个前导 0；1 的二进制形式是`0b1`，只占 1 位，所以 32 位之中有 31 个前导 0；1000 的二进制形式是`0b1111101000`，一共有 10 位，所以 32 位之中有 22 个前导 0。\n\n`clz32`这个函数名就来自”count leading zero bits in 32-bit binary representation of a number“（计算一个数的 32 位二进制形式的前导 0 的个数）的缩写。\n\n左移运算符（`<<`）与`Math.clz32`方法直接相关。\n\n```javascript\nMath.clz32(0) // 32\nMath.clz32(1) // 31\nMath.clz32(1 << 1) // 30\nMath.clz32(1 << 2) // 29\nMath.clz32(1 << 29) // 2\n```\n\n对于小数，`Math.clz32`方法只考虑整数部分。\n\n```javascript\nMath.clz32(3.2) // 30\nMath.clz32(3.9) // 30\n```\n\n对于空值或其他类型的值，`Math.clz32`方法会将它们先转为数值，然后再计算。\n\n```javascript\nMath.clz32() // 32\nMath.clz32(NaN) // 32\nMath.clz32(Infinity) // 32\nMath.clz32(null) // 32\nMath.clz32(\'foo\') // 32\nMath.clz32([]) // 32\nMath.clz32({}) // 32\nMath.clz32(true) // 31\n```\n\n### Math.imul()\n\n`Math.imul`方法返回两个数以 32 位带符号整数形式相乘的结果，返回的也是一个 32 位的带符号整数。\n\n```javascript\nMath.imul(2, 4)   // 8\nMath.imul(-1, 8)  // -8\nMath.imul(-2, -2) // 4\n```\n\n如果只考虑最后 32 位，大多数情况下，`Math.imul(a, b)`与`a * b`的结果是相同的，即该方法等同于`(a * b)|0`的效果（超过 32 位的部分溢出）。之所以需要部署这个方法，是因为 JavaScript 有精度限制，超过 2 的 53 次方的值无法精确表示。这就是说，对于那些很大的数的乘法，低位数值往往都是不精确的，`Math.imul`方法可以返回正确的低位数值。\n\n```javascript\n(0x7fffffff * 0x7fffffff)|0 // 0\n```\n\n上面这个乘法算式，返回结果为 0。但是由于这两个二进制数的最低位都是 1，所以这个结果肯定是不正确的，因为根据二进制乘法，计算结果的二进制最低位应该也是 1。这个错误就是因为它们的乘积超过了 2 的 53 次方，JavaScript 无法保存额外的精度，就把低位的值都变成了 0。`Math.imul`方法可以返回正确的值 1。\n\n```javascript\nMath.imul(0x7fffffff, 0x7fffffff) // 1\n```\n\n### Math.fround()\n\n`Math.fround`方法返回一个数的32位单精度浮点数形式。\n\n对于32位单精度格式来说，数值精度是24个二进制位（1 位隐藏位与 23 位有效位），所以对于 -224 至 224 之间的整数（不含两个端点），返回结果与参数本身一致。\n\n```javascript\nMath.fround(0)   // 0\nMath.fround(1)   // 1\nMath.fround(2 ** 24 - 1)   // 16777215\n```\n\n如果参数的绝对值大于 224，返回的结果便开始丢失精度。\n\n```javascript\nMath.fround(2 ** 24)       // 16777216\nMath.fround(2 ** 24 + 1)   // 16777216\n```\n\n`Math.fround`方法的主要作用，是将64位双精度浮点数转为32位单精度浮点数。如果小数的精度超过24个二进制位，返回值就会不同于原值，否则返回值不变（即与64位双精度值一致）。\n\n```javascript\n// 未丢失有效精度\nMath.fround(1.125) // 1.125\nMath.fround(7.25)  // 7.25\n\n// 丢失精度\nMath.fround(0.3)   // 0.30000001192092896\nMath.fround(0.7)   // 0.699999988079071\nMath.fround(1.0000000123) // 1\n```\n\n对于 `NaN` 和 `Infinity`，此方法返回原值。对于其它类型的非数值，`Math.fround`方法会先将其转为数值，再返回单精度浮点数。\n\n```javascript\nMath.fround(NaN)      // NaN\nMath.fround(Infinity) // Infinity\n\nMath.fround(\'5\')      // 5\nMath.fround(true)     // 1\nMath.fround(null)     // 0\nMath.fround([])       // 0\nMath.fround({})       // NaN\n```\n\n对于没有部署这个方法的环境，可以用下面的代码模拟。\n\n```javascript\nMath.fround = Math.fround || function (x) {\n  return new Float32Array([x])[0];\n};\n```\n\n### Math.hypot()\n\n`Math.hypot`方法返回所有参数的平方和的平方根。\n\n```javascript\nMath.hypot(3, 4);        // 5\nMath.hypot(3, 4, 5);     // 7.0710678118654755\nMath.hypot();            // 0\nMath.hypot(NaN);         // NaN\nMath.hypot(3, 4, \'foo\'); // NaN\nMath.hypot(3, 4, \'5\');   // 7.0710678118654755\nMath.hypot(-3);          // 3\n```\n\n上面代码中，3 的平方加上 4 的平方，等于 5 的平方。\n\n如果参数不是数值，`Math.hypot`方法会将其转为数值。只要有一个参数无法转为数值，就会返回 NaN。\n\n### 对数方法\n\nES6 新增了 4 个对数相关方法。\n\n**（1） Math.expm1()**\n\n`Math.expm1(x)`返回 ex - 1，即`Math.exp(x) - 1`。\n\n```javascript\nMath.expm1(-1) // -0.6321205588285577\nMath.expm1(0)  // 0\nMath.expm1(1)  // 1.718281828459045\n```\n\n对于没有部署这个方法的环境，可以用下面的代码模拟。\n\n```javascript\nMath.expm1 = Math.expm1 || function(x) {\n  return Math.exp(x) - 1;\n};\n```\n\n**（2）Math.log1p()**\n\n`Math.log1p(x)`方法返回`1 + x`的自然对数，即`Math.log(1 + x)`。如果`x`小于-1，返回`NaN`。\n\n```javascript\nMath.log1p(1)  // 0.6931471805599453\nMath.log1p(0)  // 0\nMath.log1p(-1) // -Infinity\nMath.log1p(-2) // NaN\n```\n\n对于没有部署这个方法的环境，可以用下面的代码模拟。\n\n```javascript\nMath.log1p = Math.log1p || function(x) {\n  return Math.log(1 + x);\n};\n```\n\n**（3）Math.log10()**\n\n`Math.log10(x)`返回以 10 为底的`x`的对数。如果`x`小于 0，则返回 NaN。\n\n```javascript\nMath.log10(2)      // 0.3010299956639812\nMath.log10(1)      // 0\nMath.log10(0)      // -Infinity\nMath.log10(-2)     // NaN\nMath.log10(100000) // 5\n```\n\n对于没有部署这个方法的环境，可以用下面的代码模拟。\n\n```javascript\nMath.log10 = Math.log10 || function(x) {\n  return Math.log(x) / Math.LN10;\n};\n```\n\n**（4）Math.log2()**\n\n`Math.log2(x)`返回以 2 为底的`x`的对数。如果`x`小于 0，则返回 NaN。\n\n```javascript\nMath.log2(3)       // 1.584962500721156\nMath.log2(2)       // 1\nMath.log2(1)       // 0\nMath.log2(0)       // -Infinity\nMath.log2(-2)      // NaN\nMath.log2(1024)    // 10\nMath.log2(1 << 29) // 29\n```\n\n对于没有部署这个方法的环境，可以用下面的代码模拟。\n\n```javascript\nMath.log2 = Math.log2 || function(x) {\n  return Math.log(x) / Math.LN2;\n};\n```\n\n### 双曲函数方法\n\nES6 新增了 6 个双曲函数方法。\n\n- `Math.sinh(x)` 返回`x`的双曲正弦（hyperbolic sine）\n- `Math.cosh(x)` 返回`x`的双曲余弦（hyperbolic cosine）\n- `Math.tanh(x)` 返回`x`的双曲正切（hyperbolic tangent）\n- `Math.asinh(x)` 返回`x`的反双曲正弦（inverse hyperbolic sine）\n- `Math.acosh(x)` 返回`x`的反双曲余弦（inverse hyperbolic cosine）\n- `Math.atanh(x)` 返回`x`的反双曲正切（inverse hyperbolic tangent）\n\n## 指数运算符\n\nES2016 新增了一个指数运算符（`**`）。\n\n```javascript\n2 ** 2 // 4\n2 ** 3 // 8\n```\n\n这个运算符的一个特点是右结合，而不是常见的左结合。多个指数运算符连用时，是从最右边开始计算的。\n\n```javascript\n// 相当于 2 ** (3 ** 2)\n2 ** 3 ** 2\n// 512\n```\n\n上面代码中，首先计算的是第二个指数运算符，而不是第一个。\n\n指数运算符可以与等号结合，形成一个新的赋值运算符（`**=`）。\n\n```javascript\nlet a = 1.5;\na **= 2;\n// 等同于 a = a * a;\n\nlet b = 4;\nb **= 3;\n// 等同于 b = b * b * b;\n```\n\n注意，V8 引擎的指数运算符与`Math.pow`的实现不相同，对于特别大的运算结果，两者会有细微的差异。\n\n```javascript\nMath.pow(99, 99)\n// 3.697296376497263e+197\n\n99 ** 99\n// 3.697296376497268e+197\n```\n\n上面代码中，两个运算结果的最后一位有效数字是有差异的。\n\n\n\n# 函数的扩展\n\n1. [函数参数的默认值](http://es6.ruanyifeng.com/#docs/function#%E5%87%BD%E6%95%B0%E5%8F%82%E6%95%B0%E7%9A%84%E9%BB%98%E8%AE%A4%E5%80%BC)\n2. [rest 参数](http://es6.ruanyifeng.com/#docs/function#rest%20%E5%8F%82%E6%95%B0)\n3. [严格模式](http://es6.ruanyifeng.com/#docs/function#%E4%B8%A5%E6%A0%BC%E6%A8%A1%E5%BC%8F)\n4. [name 属性](http://es6.ruanyifeng.com/#docs/function#name%20%E5%B1%9E%E6%80%A7)\n5. [箭头函数](http://es6.ruanyifeng.com/#docs/function#%E7%AE%AD%E5%A4%B4%E5%87%BD%E6%95%B0)\n6. [双冒号运算符](http://es6.ruanyifeng.com/#docs/function#%E5%8F%8C%E5%86%92%E5%8F%B7%E8%BF%90%E7%AE%97%E7%AC%A6)\n7. [尾调用优化](http://es6.ruanyifeng.com/#docs/function#%E5%B0%BE%E8%B0%83%E7%94%A8%E4%BC%98%E5%8C%96)\n8. [函数参数的尾逗号](http://es6.ruanyifeng.com/#docs/function#%E5%87%BD%E6%95%B0%E5%8F%82%E6%95%B0%E7%9A%84%E5%B0%BE%E9%80%97%E5%8F%B7)\n\n## 函数参数的默认值\n\n### 基本用法\n\nES6 之前，不能直接为函数的参数指定默认值，只能采用变通的方法。\n\n```javascript\nfunction log(x, y) {\n  y = y || \'World\';\n  console.log(x, y);\n}\n\nlog(\'Hello\') // Hello World\nlog(\'Hello\', \'China\') // Hello China\nlog(\'Hello\', \'\') // Hello World\n```\n\n上面代码检查函数`log`的参数`y`有没有赋值，如果没有，则指定默认值为`World`。这种写法的缺点在于，如果参数`y`赋值了，但是对应的布尔值为`false`，则该赋值不起作用。就像上面代码的最后一行，参数`y`等于空字符，结果被改为默认值。\n\n为了避免这个问题，通常需要先判断一下参数`y`是否被赋值，如果没有，再等于默认值。\n\n```javascript\nif (typeof y === \'undefined\') {\n  y = \'World\';\n}\n```\n\nES6 允许为函数的参数设置默认值，即直接写在参数定义的后面。\n\n```javascript\nfunction log(x, y = \'World\') {\n  console.log(x, y);\n}\n\nlog(\'Hello\') // Hello World\nlog(\'Hello\', \'China\') // Hello China\nlog(\'Hello\', \'\') // Hello\n```\n\n可以看到，ES6 的写法比 ES5 简洁许多，而且非常自然。下面是另一个例子。\n\n```javascript\nfunction Point(x = 0, y = 0) {\n  this.x = x;\n  this.y = y;\n}\n\nconst p = new Point();\np // { x: 0, y: 0 }\n```\n\n除了简洁，ES6 的写法还有两个好处：首先，阅读代码的人，可以立刻意识到哪些参数是可以省略的，不用查看函数体或文档；其次，有利于将来的代码优化，即使未来的版本在对外接口中，彻底拿掉这个参数，也不会导致以前的代码无法运行。\n\n参数变量是默认声明的，所以不能用`let`或`const`再次声明。\n\n```javascript\nfunction foo(x = 5) {\n  let x = 1; // error\n  const x = 2; // error\n}\n```\n\n上面代码中，参数变量`x`是默认声明的，在函数体中，不能用`let`或`const`再次声明，否则会报错。\n\n使用参数默认值时，函数不能有同名参数。\n\n```javascript\n// 不报错\nfunction foo(x, x, y) {\n  // ...\n}\n\n// 报错\nfunction foo(x, x, y = 1) {\n  // ...\n}\n// SyntaxError: Duplicate parameter name not allowed in this context\n```\n\n另外，一个容易忽略的地方是，参数默认值不是传值的，而是每次都重新计算默认值表达式的值。也就是说，参数默认值是惰性求值的。\n\n```javascript\nlet x = 99;\nfunction foo(p = x + 1) {\n  console.log(p);\n}\n\nfoo() // 100\n\nx = 100;\nfoo() // 101\n```\n\n上面代码中，参数`p`的默认值是`x + 1`。这时，每次调用函数`foo`，都会重新计算`x + 1`，而不是默认`p`等于 100。\n\n### 与解构赋值默认值结合使用\n\n参数默认值可以与解构赋值的默认值，结合起来使用。\n\n```javascript\nfunction foo({x, y = 5}) {\n  console.log(x, y);\n}\n\nfoo({}) // undefined 5\nfoo({x: 1}) // 1 5\nfoo({x: 1, y: 2}) // 1 2\nfoo() // TypeError: Cannot read property \'x\' of undefined\n```\n\n上面代码只使用了对象的解构赋值默认值，没有使用函数参数的默认值。只有当函数`foo`的参数是一个对象时，变量`x`和`y`才会通过解构赋值生成。如果函数`foo`调用时没提供参数，变量`x`和`y`就不会生成，从而报错。通过提供函数参数的默认值，就可以避免这种情况。\n\n```javascript\nfunction foo({x, y = 5} = {}) {\n  console.log(x, y);\n}\n\nfoo() // undefined 5\n```\n\n上面代码指定，如果没有提供参数，函数`foo`的参数默认为一个空对象。\n\n下面是另一个解构赋值默认值的例子。\n\n```javascript\nfunction fetch(url, { body = \'\', method = \'GET\', headers = {} }) {\n  console.log(method);\n}\n\nfetch(\'http://example.com\', {})\n// "GET"\n\nfetch(\'http://example.com\')\n// 报错\n```\n\n上面代码中，如果函数`fetch`的第二个参数是一个对象，就可以为它的三个属性设置默认值。这种写法不能省略第二个参数，如果结合函数参数的默认值，就可以省略第二个参数。这时，就出现了双重默认值。\n\n```javascript\nfunction fetch(url, { body = \'\', method = \'GET\', headers = {} } = {}) {\n  console.log(method);\n}\n\nfetch(\'http://example.com\')\n// "GET"\n```\n\n上面代码中，函数`fetch`没有第二个参数时，函数参数的默认值就会生效，然后才是解构赋值的默认值生效，变量`method`才会取到默认值`GET`。\n\n作为练习，请问下面两种写法有什么差别？\n\n```javascript\n// 写法一\nfunction m1({x = 0, y = 0} = {}) {\n  return [x, y];\n}\n\n// 写法二\nfunction m2({x, y} = { x: 0, y: 0 }) {\n  return [x, y];\n}\n```\n\n上面两种写法都对函数的参数设定了默认值，区别是写法一函数参数的默认值是空对象，但是设置了对象解构赋值的默认值；写法二函数参数的默认值是一个有具体属性的对象，但是没有设置对象解构赋值的默认值。\n\n```javascript\n// 函数没有参数的情况\nm1() // [0, 0]\nm2() // [0, 0]\n\n// x 和 y 都有值的情况\nm1({x: 3, y: 8}) // [3, 8]\nm2({x: 3, y: 8}) // [3, 8]\n\n// x 有值，y 无值的情况\nm1({x: 3}) // [3, 0]\nm2({x: 3}) // [3, undefined]\n\n// x 和 y 都无值的情况\nm1({}) // [0, 0];\nm2({}) // [undefined, undefined]\n\nm1({z: 3}) // [0, 0]\nm2({z: 3}) // [undefined, undefined]\n```\n\n### 参数默认值的位置\n\n通常情况下，定义了默认值的参数，应该是函数的尾参数。因为这样比较容易看出来，到底省略了哪些参数。如果非尾部的参数设置默认值，实际上这个参数是没法省略的。\n\n```javascript\n// 例一\nfunction f(x = 1, y) {\n  return [x, y];\n}\n\nf() // [1, undefined]\nf(2) // [2, undefined])\nf(, 1) // 报错\nf(undefined, 1) // [1, 1]\n\n// 例二\nfunction f(x, y = 5, z) {\n  return [x, y, z];\n}\n\nf() // [undefined, 5, undefined]\nf(1) // [1, 5, undefined]\nf(1, ,2) // 报错\nf(1, undefined, 2) // [1, 5, 2]\n```\n\n上面代码中，有默认值的参数都不是尾参数。这时，无法只省略该参数，而不省略它后面的参数，除非显式输入`undefined`。\n\n如果传入`undefined`，将触发该参数等于默认值，`null`则没有这个效果。\n\n```javascript\nfunction foo(x = 5, y = 6) {\n  console.log(x, y);\n}\n\nfoo(undefined, null)\n// 5 null\n```\n\n上面代码中，`x`参数对应`undefined`，结果触发了默认值，`y`参数等于`null`，就没有触发默认值。\n\n### 函数的 length 属性\n\n指定了默认值以后，函数的`length`属性，将返回没有指定默认值的参数个数。也就是说，指定了默认值后，`length`属性将失真。\n\n```javascript\n(function (a) {}).length // 1\n(function (a = 5) {}).length // 0\n(function (a, b, c = 5) {}).length // 2\n```\n\n上面代码中，`length`属性的返回值，等于函数的参数个数减去指定了默认值的参数个数。比如，上面最后一个函数，定义了 3 个参数，其中有一个参数`c`指定了默认值，因此`length`属性等于`3`减去`1`，最后得到`2`。\n\n这是因为`length`属性的含义是，该函数预期传入的参数个数。某个参数指定默认值以后，预期传入的参数个数就不包括这个参数了。同理，后文的 rest 参数也不会计入`length`属性。\n\n```javascript\n(function(...args) {}).length // 0\n```\n\n如果设置了默认值的参数不是尾参数，那么`length`属性也不再计入后面的参数了。\n\n```javascript\n(function (a = 0, b, c) {}).length // 0\n(function (a, b = 1, c) {}).length // 1\n```\n\n### 作用域\n\n一旦设置了参数的默认值，函数进行声明初始化时，参数会形成一个单独的作用域（context）。等到初始化结束，这个作用域就会消失。这种语法行为，在不设置参数默认值时，是不会出现的。\n\n```javascript\nvar x = 1;\n\nfunction f(x, y = x) {\n  console.log(y);\n}\n\nf(2) // 2\n```\n\n上面代码中，参数`y`的默认值等于变量`x`。调用函数`f`时，参数形成一个单独的作用域。在这个作用域里面，默认值变量`x`指向第一个参数`x`，而不是全局变量`x`，所以输出是`2`。\n\n再看下面的例子。\n\n```javascript\nlet x = 1;\n\nfunction f(y = x) {\n  let x = 2;\n  console.log(y);\n}\n\nf() // 1\n```\n\n上面代码中，函数`f`调用时，参数`y = x`形成一个单独的作用域。这个作用域里面，变量`x`本身没有定义，所以指向外层的全局变量`x`。函数调用时，函数体内部的局部变量`x`影响不到默认值变量`x`。\n\n如果此时，全局变量`x`不存在，就会报错。\n\n```javascript\nfunction f(y = x) {\n  let x = 2;\n  console.log(y);\n}\n\nf() // ReferenceError: x is not defined\n```\n\n下面这样写，也会报错。\n\n```javascript\nvar x = 1;\n\nfunction foo(x = x) {\n  // ...\n}\n\nfoo() // ReferenceError: x is not defined\n```\n\n上面代码中，参数`x = x`形成一个单独作用域。实际执行的是`let x = x`，由于暂时性死区的原因，这行代码会报错”x 未定义“。\n\n如果参数的默认值是一个函数，该函数的作用域也遵守这个规则。请看下面的例子。\n\n```javascript\nlet foo = \'outer\';\n\nfunction bar(func = () => foo) {\n  let foo = \'inner\';\n  console.log(func());\n}\n\nbar(); // outer\n```\n\n上面代码中，函数`bar`的参数`func`的默认值是一个匿名函数，返回值为变量`foo`。函数参数形成的单独作用域里面，并没有定义变量`foo`，所以`foo`指向外层的全局变量`foo`，因此输出`outer`。\n\n如果写成下面这样，就会报错。\n\n```javascript\nfunction bar(func = () => foo) {\n  let foo = \'inner\';\n  console.log(func());\n}\n\nbar() // ReferenceError: foo is not defined\n```\n\n上面代码中，匿名函数里面的`foo`指向函数外层，但是函数外层并没有声明变量`foo`，所以就报错了。\n\n下面是一个更复杂的例子。\n\n```javascript\nvar x = 1;\nfunction foo(x, y = function() { x = 2; }) {\n  var x = 3;\n  y();\n  console.log(x);\n}\n\nfoo() // 3\nx // 1\n```\n\n上面代码中，函数`foo`的参数形成一个单独作用域。这个作用域里面，首先声明了变量`x`，然后声明了变量`y`，`y`的默认值是一个匿名函数。这个匿名函数内部的变量`x`，指向同一个作用域的第一个参数`x`。函数`foo`内部又声明了一个内部变量`x`，该变量与第一个参数`x`由于不是同一个作用域，所以不是同一个变量，因此执行`y`后，内部变量`x`和外部全局变量`x`的值都没变。\n\n如果将`var x = 3`的`var`去除，函数`foo`的内部变量`x`就指向第一个参数`x`，与匿名函数内部的`x`是一致的，所以最后输出的就是`2`，而外层的全局变量`x`依然不受影响。\n\n```javascript\nvar x = 1;\nfunction foo(x, y = function() { x = 2; }) {\n  x = 3;\n  y();\n  console.log(x);\n}\n\nfoo() // 2\nx // 1\n```\n\n### 应用\n\n利用参数默认值，可以指定某一个参数不得省略，如果省略就抛出一个错误。\n\n```javascript\nfunction throwIfMissing() {\n  throw new Error(\'Missing parameter\');\n}\n\nfunction foo(mustBeProvided = throwIfMissing()) {\n  return mustBeProvided;\n}\n\nfoo()\n// Error: Missing parameter\n```\n\n上面代码的`foo`函数，如果调用的时候没有参数，就会调用默认值`throwIfMissing`函数，从而抛出一个错误。\n\n从上面代码还可以看到，参数`mustBeProvided`的默认值等于`throwIfMissing`函数的运行结果（注意函数名`throwIfMissing`之后有一对圆括号），这表明参数的默认值不是在定义时执行，而是在运行时执行。如果参数已经赋值，默认值中的函数就不会运行。\n\n另外，可以将参数默认值设为`undefined`，表明这个参数是可以省略的。\n\n```javascript\nfunction foo(optional = undefined) { ··· }\n```\n\n## rest 参数\n\nES6 引入 rest 参数（形式为`...变量名`），用于获取函数的多余参数，这样就不需要使用`arguments`对象了。rest 参数搭配的变量是一个数组，该变量将多余的参数放入数组中。\n\n```javascript\nfunction add(...values) {\n  let sum = 0;\n\n  for (var val of values) {\n    sum += val;\n  }\n\n  return sum;\n}\n\nadd(2, 5, 3) // 10\n```\n\n上面代码的`add`函数是一个求和函数，利用 rest 参数，可以向该函数传入任意数目的参数。\n\n下面是一个 rest 参数代替`arguments`变量的例子。\n\n```javascript\n// arguments变量的写法\nfunction sortNumbers() {\n  return Array.prototype.slice.call(arguments).sort();\n}\n\n// rest参数的写法\nconst sortNumbers = (...numbers) => numbers.sort();\n```\n\n上面代码的两种写法，比较后可以发现，rest 参数的写法更自然也更简洁。\n\n`arguments`对象不是数组，而是一个类似数组的对象。所以为了使用数组的方法，必须使用`Array.prototype.slice.call`先将其转为数组。rest 参数就不存在这个问题，它就是一个真正的数组，数组特有的方法都可以使用。下面是一个利用 rest 参数改写数组`push`方法的例子。\n\n```javascript\nfunction push(array, ...items) {\n  items.forEach(function(item) {\n    array.push(item);\n    console.log(item);\n  });\n}\n\nvar a = [];\npush(a, 1, 2, 3)\n```\n\n注意，rest 参数之后不能再有其他参数（即只能是最后一个参数），否则会报错。\n\n```javascript\n// 报错\nfunction f(a, ...b, c) {\n  // ...\n}\n```\n\n函数的`length`属性，不包括 rest 参数。\n\n```javascript\n(function(a) {}).length  // 1\n(function(...a) {}).length  // 0\n(function(a, ...b) {}).length  // 1\n```\n\n## 严格模式\n\n从 ES5 开始，函数内部可以设定为严格模式。\n\n```javascript\nfunction doSomething(a, b) {\n  \'use strict\';\n  // code\n}\n```\n\nES2016 做了一点修改，规定只要函数参数使用了默认值、解构赋值、或者扩展运算符，那么函数内部就不能显式设定为严格模式，否则会报错。\n\n```javascript\n// 报错\nfunction doSomething(a, b = a) {\n  \'use strict\';\n  // code\n}\n\n// 报错\nconst doSomething = function ({a, b}) {\n  \'use strict\';\n  // code\n};\n\n// 报错\nconst doSomething = (...a) => {\n  \'use strict\';\n  // code\n};\n\nconst obj = {\n  // 报错\n  doSomething({a, b}) {\n    \'use strict\';\n    // code\n  }\n};\n```\n\n这样规定的原因是，函数内部的严格模式，同时适用于函数体和函数参数。但是，函数执行的时候，先执行函数参数，然后再执行函数体。这样就有一个不合理的地方，只有从函数体之中，才能知道参数是否应该以严格模式执行，但是参数却应该先于函数体执行。\n\n```javascript\n// 报错\nfunction doSomething(value = 070) {\n  \'use strict\';\n  return value;\n}\n```\n\n上面代码中，参数`value`的默认值是八进制数`070`，但是严格模式下不能用前缀`0`表示八进制，所以应该报错。但是实际上，JavaScript 引擎会先成功执行`value = 070`，然后进入函数体内部，发现需要用严格模式执行，这时才会报错。\n\n虽然可以先解析函数体代码，再执行参数代码，但是这样无疑就增加了复杂性。因此，标准索性禁止了这种用法，只要参数使用了默认值、解构赋值、或者扩展运算符，就不能显式指定严格模式。\n\n两种方法可以规避这种限制。第一种是设定全局性的严格模式，这是合法的。\n\n```javascript\n\'use strict\';\n\nfunction doSomething(a, b = a) {\n  // code\n}\n```\n\n第二种是把函数包在一个无参数的立即执行函数里面。\n\n```javascript\nconst doSomething = (function () {\n  \'use strict\';\n  return function(value = 42) {\n    return value;\n  };\n}());\n```\n\n## name 属性\n\n函数的`name`属性，返回该函数的函数名。\n\n```javascript\nfunction foo() {}\nfoo.name // "foo"\n```\n\n这个属性早就被浏览器广泛支持，但是直到 ES6，才将其写入了标准。\n\n需要注意的是，ES6 对这个属性的行为做出了一些修改。如果将一个匿名函数赋值给一个变量，ES5 的`name`属性，会返回空字符串，而 ES6 的`name`属性会返回实际的函数名。\n\n```javascript\nvar f = function () {};\n\n// ES5\nf.name // ""\n\n// ES6\nf.name // "f"\n```\n\n上面代码中，变量`f`等于一个匿名函数，ES5 和 ES6 的`name`属性返回的值不一样。\n\n如果将一个具名函数赋值给一个变量，则 ES5 和 ES6 的`name`属性都返回这个具名函数原本的名字。\n\n```javascript\nconst bar = function baz() {};\n\n// ES5\nbar.name // "baz"\n\n// ES6\nbar.name // "baz"\n```\n\n`Function`构造函数返回的函数实例，`name`属性的值为`anonymous`。\n\n```javascript\n(new Function).name // "anonymous"\n```\n\n`bind`返回的函数，`name`属性值会加上`bound`前缀。\n\n```javascript\nfunction foo() {};\nfoo.bind({}).name // "bound foo"\n\n(function(){}).bind({}).name // "bound "\n```\n\n## 箭头函数\n\n### 基本用法\n\nES6 允许使用“箭头”（`=>`）定义函数。\n\n```javascript\nvar f = v => v;\n\n// 等同于\nvar f = function (v) {\n  return v;\n};\n```\n\n如果箭头函数不需要参数或需要多个参数，就使用一个圆括号代表参数部分。\n\n```javascript\nvar f = () => 5;\n// 等同于\nvar f = function () { return 5 };\n\nvar sum = (num1, num2) => num1 + num2;\n// 等同于\nvar sum = function(num1, num2) {\n  return num1 + num2;\n};\n```\n\n如果箭头函数的代码块部分多于一条语句，就要使用大括号将它们括起来，并且使用`return`语句返回。\n\n```javascript\nvar sum = (num1, num2) => { return num1 + num2; }\n```\n\n由于大括号被解释为代码块，所以如果箭头函数直接返回一个对象，必须在对象外面加上括号，否则会报错。\n\n```javascript\n// 报错\nlet getTempItem = id => { id: id, name: "Temp" };\n\n// 不报错\nlet getTempItem = id => ({ id: id, name: "Temp" });\n```\n\n下面是一种特殊情况，虽然可以运行，但会得到错误的结果。\n\n```javascript\nlet foo = () => { a: 1 };\nfoo() // undefined\n```\n\n上面代码中，原始意图是返回一个对象`{ a: 1 }`，但是由于引擎认为大括号是代码块，所以执行了一行语句`a: 1`。这时，`a`可以被解释为语句的标签，因此实际执行的语句是`1;`，然后函数就结束了，没有返回值。\n\n如果箭头函数只有一行语句，且不需要返回值，可以采用下面的写法，就不用写大括号了。\n\n```javascript\nlet fn = () => void doesNotReturn();\n```\n\n箭头函数可以与变量解构结合使用。\n\n```javascript\nconst full = ({ first, last }) => first + \' \' + last;\n\n// 等同于\nfunction full(person) {\n  return person.first + \' \' + person.last;\n}\n```\n\n箭头函数使得表达更加简洁。\n\n```javascript\nconst isEven = n => n % 2 === 0;\nconst square = n => n * n;\n```\n\n上面代码只用了两行，就定义了两个简单的工具函数。如果不用箭头函数，可能就要占用多行，而且还不如现在这样写醒目。\n\n箭头函数的一个用处是简化回调函数。\n\n```javascript\n// 正常函数写法\n[1,2,3].map(function (x) {\n  return x * x;\n});\n\n// 箭头函数写法\n[1,2,3].map(x => x * x);\n```\n\n另一个例子是\n\n```javascript\n// 正常函数写法\nvar result = values.sort(function (a, b) {\n  return a - b;\n});\n\n// 箭头函数写法\nvar result = values.sort((a, b) => a - b);\n```\n\n下面是 rest 参数与箭头函数结合的例子。\n\n```javascript\nconst numbers = (...nums) => nums;\n\nnumbers(1, 2, 3, 4, 5)\n// [1,2,3,4,5]\n\nconst headAndTail = (head, ...tail) => [head, tail];\n\nheadAndTail(1, 2, 3, 4, 5)\n// [1,[2,3,4,5]]\n```\n\n### 使用注意点\n\n箭头函数有几个使用注意点。\n\n（1）函数体内的`this`对象，就是定义时所在的对象，而不是使用时所在的对象。\n\n（2）不可以当作构造函数，也就是说，不可以使用`new`命令，否则会抛出一个错误。\n\n（3）不可以使用`arguments`对象，该对象在函数体内不存在。如果要用，可以用 rest 参数代替。\n\n（4）不可以使用`yield`命令，因此箭头函数不能用作 Generator 函数。\n\n上面四点中，第一点尤其值得注意。`this`对象的指向是可变的，但是在箭头函数中，它是固定的。\n\n```javascript\nfunction foo() {\n  setTimeout(() => {\n    console.log(\'id:\', this.id);\n  }, 100);\n}\n\nvar id = 21;\n\nfoo.call({ id: 42 });\n// id: 42\n```\n\n上面代码中，`setTimeout`的参数是一个箭头函数，这个箭头函数的定义生效是在`foo`函数生成时，而它的真正执行要等到 100 毫秒后。如果是普通函数，执行时`this`应该指向全局对象`window`，这时应该输出`21`。但是，箭头函数导致`this`总是指向函数定义生效时所在的对象（本例是`{id: 42}`），所以输出的是`42`。\n\n箭头函数可以让`setTimeout`里面的`this`，绑定定义时所在的作用域，而不是指向运行时所在的作用域。下面是另一个例子。\n\n```javascript\nfunction Timer() {\n  this.s1 = 0;\n  this.s2 = 0;\n  // 箭头函数\n  setInterval(() => this.s1++, 1000);\n  // 普通函数\n  setInterval(function () {\n    this.s2++;\n  }, 1000);\n}\n\nvar timer = new Timer();\n\nsetTimeout(() => console.log(\'s1: \', timer.s1), 3100);\nsetTimeout(() => console.log(\'s2: \', timer.s2), 3100);\n// s1: 3\n// s2: 0\n```\n\n上面代码中，`Timer`函数内部设置了两个定时器，分别使用了箭头函数和普通函数。前者的`this`绑定定义时所在的作用域（即`Timer`函数），后者的`this`指向运行时所在的作用域（即全局对象）。所以，3100 毫秒之后，`timer.s1`被更新了 3 次，而`timer.s2`一次都没更新。\n\n箭头函数可以让`this`指向固定化，这种特性很有利于封装回调函数。下面是一个例子，DOM 事件的回调函数封装在一个对象里面。\n\n```javascript\nvar handler = {\n  id: \'123456\',\n\n  init: function() {\n    document.addEventListener(\'click\',\n      event => this.doSomething(event.type), false);\n  },\n\n  doSomething: function(type) {\n    console.log(\'Handling \' + type  + \' for \' + this.id);\n  }\n};\n```\n\n上面代码的`init`方法中，使用了箭头函数，这导致这个箭头函数里面的`this`，总是指向`handler`对象。否则，回调函数运行时，`this.doSomething`这一行会报错，因为此时`this`指向`document`对象。\n\n`this`指向的固定化，并不是因为箭头函数内部有绑定`this`的机制，实际原因是箭头函数根本没有自己的`this`，导致内部的`this`就是外层代码块的`this`。正是因为它没有`this`，所以也就不能用作构造函数。\n\n所以，箭头函数转成 ES5 的代码如下。\n\n```javascript\n// ES6\nfunction foo() {\n  setTimeout(() => {\n    console.log(\'id:\', this.id);\n  }, 100);\n}\n\n// ES5\nfunction foo() {\n  var _this = this;\n\n  setTimeout(function () {\n    console.log(\'id:\', _this.id);\n  }, 100);\n}\n```\n\n上面代码中，转换后的 ES5 版本清楚地说明了，箭头函数里面根本没有自己的`this`，而是引用外层的`this`。\n\n请问下面的代码之中有几个`this`？\n\n```javascript\nfunction foo() {\n  return () => {\n    return () => {\n      return () => {\n        console.log(\'id:\', this.id);\n      };\n    };\n  };\n}\n\nvar f = foo.call({id: 1});\n\nvar t1 = f.call({id: 2})()(); // id: 1\nvar t2 = f().call({id: 3})(); // id: 1\nvar t3 = f()().call({id: 4}); // id: 1\n```\n\n上面代码之中，只有一个`this`，就是函数`foo`的`this`，所以`t1`、`t2`、`t3`都输出同样的结果。因为所有的内层函数都是箭头函数，都没有自己的`this`，它们的`this`其实都是最外层`foo`函数的`this`。\n\n除了`this`，以下三个变量在箭头函数之中也是不存在的，指向外层函数的对应变量：`arguments`、`super`、`new.target`。\n\n```javascript\nfunction foo() {\n  setTimeout(() => {\n    console.log(\'args:\', arguments);\n  }, 100);\n}\n\nfoo(2, 4, 6, 8)\n// args: [2, 4, 6, 8]\n```\n\n上面代码中，箭头函数内部的变量`arguments`，其实是函数`foo`的`arguments`变量。\n\n另外，由于箭头函数没有自己的`this`，所以当然也就不能用`call()`、`apply()`、`bind()`这些方法去改变`this`的指向。\n\n```javascript\n(function() {\n  return [\n    (() => this.x).bind({ x: \'inner\' })()\n  ];\n}).call({ x: \'outer\' });\n// [\'outer\']\n```\n\n上面代码中，箭头函数没有自己的`this`，所以`bind`方法无效，内部的`this`指向外部的`this`。\n\n长期以来，JavaScript 语言的`this`对象一直是一个令人头痛的问题，在对象方法中使用`this`，必须非常小心。箭头函数”绑定”`this`，很大程度上解决了这个困扰。\n\n### 不适用场合\n\n由于箭头函数使得`this`从“动态”变成“静态”，下面两个场合不应该使用箭头函数。\n\n第一个场合是定义函数的方法，且该方法内部包括`this`。\n\n```javascript\nconst cat = {\n  lives: 9,\n  jumps: () => {\n    this.lives--;\n  }\n}\n```\n\n上面代码中，`cat.jumps()`方法是一个箭头函数，这是错误的。调用`cat.jumps()`时，如果是普通函数，该方法内部的`this`指向`cat`；如果写成上面那样的箭头函数，使得`this`指向全局对象，因此不会得到预期结果。\n\n第二个场合是需要动态`this`的时候，也不应使用箭头函数。\n\n```javascript\nvar button = document.getElementById(\'press\');\nbutton.addEventListener(\'click\', () => {\n  this.classList.toggle(\'on\');\n});\n```\n\n上面代码运行时，点击按钮会报错，因为`button`的监听函数是一个箭头函数，导致里面的`this`就是全局对象。如果改成普通函数，`this`就会动态指向被点击的按钮对象。\n\n另外，如果函数体很复杂，有许多行，或者函数内部有大量的读写操作，不单纯是为了计算值，这时也不应该使用箭头函数，而是要使用普通函数，这样可以提高代码可读性。\n\n### 嵌套的箭头函数\n\n箭头函数内部，还可以再使用箭头函数。下面是一个 ES5 语法的多重嵌套函数。\n\n```javascript\nfunction insert(value) {\n  return {into: function (array) {\n    return {after: function (afterValue) {\n      array.splice(array.indexOf(afterValue) + 1, 0, value);\n      return array;\n    }};\n  }};\n}\n\ninsert(2).into([1, 3]).after(1); //[1, 2, 3]\n```\n\n上面这个函数，可以使用箭头函数改写。\n\n```javascript\nlet insert = (value) => ({into: (array) => ({after: (afterValue) => {\n  array.splice(array.indexOf(afterValue) + 1, 0, value);\n  return array;\n}})});\n\ninsert(2).into([1, 3]).after(1); //[1, 2, 3]\n```\n\n下面是一个部署管道机制（pipeline）的例子，即前一个函数的输出是后一个函数的输入。\n\n```javascript\nconst pipeline = (...funcs) =>\n  val => funcs.reduce((a, b) => b(a), val);\n\nconst plus1 = a => a + 1;\nconst mult2 = a => a * 2;\nconst addThenMult = pipeline(plus1, mult2);\n\naddThenMult(5)\n// 12\n```\n\n如果觉得上面的写法可读性比较差，也可以采用下面的写法。\n\n```javascript\nconst plus1 = a => a + 1;\nconst mult2 = a => a * 2;\n\nmult2(plus1(5))\n// 12\n```\n\n箭头函数还有一个功能，就是可以很方便地改写 λ 演算。\n\n```javascript\n// λ演算的写法\nfix = λf.(λx.f(λv.x(x)(v)))(λx.f(λv.x(x)(v)))\n\n// ES6的写法\nvar fix = f => (x => f(v => x(x)(v)))\n               (x => f(v => x(x)(v)));\n```\n\n上面两种写法，几乎是一一对应的。由于 λ 演算对于计算机科学非常重要，这使得我们可以用 ES6 作为替代工具，探索计算机科学。\n\n## 双冒号运算符\n\n箭头函数可以绑定`this`对象，大大减少了显式绑定`this`对象的写法（`call`、`apply`、`bind`）。但是，箭头函数并不适用于所有场合，所以现在有一个[提案](https://github.com/zenparsing/es-function-bind)，提出了“函数绑定”（function bind）运算符，用来取代`call`、`apply`、`bind`调用。\n\n函数绑定运算符是并排的两个冒号（`::`），双冒号左边是一个对象，右边是一个函数。该运算符会自动将左边的对象，作为上下文环境（即`this`对象），绑定到右边的函数上面。\n\n```javascript\nfoo::bar;\n// 等同于\nbar.bind(foo);\n\nfoo::bar(...arguments);\n// 等同于\nbar.apply(foo, arguments);\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn(obj, key) {\n  return obj::hasOwnProperty(key);\n}\n```\n\n如果双冒号左边为空，右边是一个对象的方法，则等于将该方法绑定在该对象上面。\n\n```javascript\nvar method = obj::obj.foo;\n// 等同于\nvar method = ::obj.foo;\n\nlet log = ::console.log;\n// 等同于\nvar log = console.log.bind(console);\n```\n\n如果双冒号运算符的运算结果，还是一个对象，就可以采用链式写法。\n\n```javascript\nimport { map, takeWhile, forEach } from "iterlib";\n\ngetPlayers()\n::map(x => x.character())\n::takeWhile(x => x.strength > 100)\n::forEach(x => console.log(x));\n```\n\n## 尾调用优化\n\n### 什么是尾调用？\n\n尾调用（Tail Call）是函数式编程的一个重要概念，本身非常简单，一句话就能说清楚，就是指某个函数的最后一步是调用另一个函数。\n\n```javascript\nfunction f(x){\n  return g(x);\n}\n```\n\n上面代码中，函数`f`的最后一步是调用函数`g`，这就叫尾调用。\n\n以下三种情况，都不属于尾调用。\n\n```javascript\n// 情况一\nfunction f(x){\n  let y = g(x);\n  return y;\n}\n\n// 情况二\nfunction f(x){\n  return g(x) + 1;\n}\n\n// 情况三\nfunction f(x){\n  g(x);\n}\n```\n\n上面代码中，情况一是调用函数`g`之后，还有赋值操作，所以不属于尾调用，即使语义完全一样。情况二也属于调用后还有操作，即使写在一行内。情况三等同于下面的代码。\n\n```javascript\nfunction f(x){\n  g(x);\n  return undefined;\n}\n```\n\n尾调用不一定出现在函数尾部，只要是最后一步操作即可。\n\n```javascript\nfunction f(x) {\n  if (x > 0) {\n    return m(x)\n  }\n  return n(x);\n}\n```\n\n上面代码中，函数`m`和`n`都属于尾调用，因为它们都是函数`f`的最后一步操作。\n\n### 尾调用优化\n\n尾调用之所以与其他调用不同，就在于它的特殊的调用位置。\n\n我们知道，函数调用会在内存形成一个“调用记录”，又称“调用帧”（call frame），保存调用位置和内部变量等信息。如果在函数`A`的内部调用函数`B`，那么在`A`的调用帧上方，还会形成一个`B`的调用帧。等到`B`运行结束，将结果返回到`A`，`B`的调用帧才会消失。如果函数`B`内部还调用函数`C`，那就还有一个`C`的调用帧，以此类推。所有的调用帧，就形成一个“调用栈”（call stack）。\n\n尾调用由于是函数的最后一步操作，所以不需要保留外层函数的调用帧，因为调用位置、内部变量等信息都不会再用到了，只要直接用内层函数的调用帧，取代外层函数的调用帧就可以了。\n\n```javascript\nfunction f() {\n  let m = 1;\n  let n = 2;\n  return g(m + n);\n}\nf();\n\n// 等同于\nfunction f() {\n  return g(3);\n}\nf();\n\n// 等同于\ng(3);\n```\n\n上面代码中，如果函数`g`不是尾调用，函数`f`就需要保存内部变量`m`和`n`的值、`g`的调用位置等信息。但由于调用`g`之后，函数`f`就结束了，所以执行到最后一步，完全可以删除`f(x)`的调用帧，只保留`g(3)`的调用帧。\n\n这就叫做“尾调用优化”（Tail call optimization），即只保留内层函数的调用帧。如果所有函数都是尾调用，那么完全可以做到每次执行时，调用帧只有一项，这将大大节省内存。这就是“尾调用优化”的意义。\n\n注意，只有不再用到外层函数的内部变量，内层函数的调用帧才会取代外层函数的调用帧，否则就无法进行“尾调用优化”。\n\n```javascript\nfunction addOne(a){\n  var one = 1;\n  function inner(b){\n    return b + one;\n  }\n  return inner(a);\n}\n```\n\n上面的函数不会进行尾调用优化，因为内层函数`inner`用到了外层函数`addOne`的内部变量`one`。\n\n### 尾递归\n\n函数调用自身，称为递归。如果尾调用自身，就称为尾递归。\n\n递归非常耗费内存，因为需要同时保存成千上百个调用帧，很容易发生“栈溢出”错误（stack overflow）。但对于尾递归来说，由于只存在一个调用帧，所以永远不会发生“栈溢出”错误。\n\n```javascript\nfunction factorial(n) {\n  if (n === 1) return 1;\n  return n * factorial(n - 1);\n}\n\nfactorial(5) // 120\n```\n\n上面代码是一个阶乘函数，计算`n`的阶乘，最多需要保存`n`个调用记录，复杂度 O(n) 。\n\n如果改写成尾递归，只保留一个调用记录，复杂度 O(1) 。\n\n```javascript\nfunction factorial(n, total) {\n  if (n === 1) return total;\n  return factorial(n - 1, n * total);\n}\n\nfactorial(5, 1) // 120\n```\n\n还有一个比较著名的例子，就是计算 Fibonacci 数列，也能充分说明尾递归优化的重要性。\n\n非尾递归的 Fibonacci 数列实现如下。\n\n```javascript\nfunction Fibonacci (n) {\n  if ( n <= 1 ) {return 1};\n\n  return Fibonacci(n - 1) + Fibonacci(n - 2);\n}\n\nFibonacci(10) // 89\nFibonacci(100) // 堆栈溢出\nFibonacci(500) // 堆栈溢出\n```\n\n尾递归优化过的 Fibonacci 数列实现如下。\n\n```javascript\nfunction Fibonacci2 (n , ac1 = 1 , ac2 = 1) {\n  if( n <= 1 ) {return ac2};\n\n  return Fibonacci2 (n - 1, ac2, ac1 + ac2);\n}\n\nFibonacci2(100) // 573147844013817200000\nFibonacci2(1000) // 7.0330367711422765e+208\nFibonacci2(10000) // Infinity\n```\n\n由此可见，“尾调用优化”对递归操作意义重大，所以一些函数式编程语言将其写入了语言规格。ES6 是如此，第一次明确规定，所有 ECMAScript 的实现，都必须部署“尾调用优化”。这就是说，ES6 中只要使用尾递归，就不会发生栈溢出，相对节省内存。\n\n### 递归函数的改写\n\n尾递归的实现，往往需要改写递归函数，确保最后一步只调用自身。做到这一点的方法，就是把所有用到的内部变量改写成函数的参数。比如上面的例子，阶乘函数 factorial 需要用到一个中间变量`total`，那就把这个中间变量改写成函数的参数。这样做的缺点就是不太直观，第一眼很难看出来，为什么计算`5`的阶乘，需要传入两个参数`5`和`1`？\n\n两个方法可以解决这个问题。方法一是在尾递归函数之外，再提供一个正常形式的函数。\n\n```javascript\nfunction tailFactorial(n, total) {\n  if (n === 1) return total;\n  return tailFactorial(n - 1, n * total);\n}\n\nfunction factorial(n) {\n  return tailFactorial(n, 1);\n}\n\nfactorial(5) // 120\n```\n\n上面代码通过一个正常形式的阶乘函数`factorial`，调用尾递归函数`tailFactorial`，看起来就正常多了。\n\n函数式编程有一个概念，叫做柯里化（currying），意思是将多参数的函数转换成单参数的形式。这里也可以使用柯里化。\n\n```javascript\nfunction currying(fn, n) {\n  return function (m) {\n    return fn.call(this, m, n);\n  };\n}\n\nfunction tailFactorial(n, total) {\n  if (n === 1) return total;\n  return tailFactorial(n - 1, n * total);\n}\n\nconst factorial = currying(tailFactorial, 1);\n\nfactorial(5) // 120\n```\n\n上面代码通过柯里化，将尾递归函数`tailFactorial`变为只接受一个参数的`factorial`。\n\n第二种方法就简单多了，就是采用 ES6 的函数默认值。\n\n```javascript\nfunction factorial(n, total = 1) {\n  if (n === 1) return total;\n  return factorial(n - 1, n * total);\n}\n\nfactorial(5) // 120\n```\n\n上面代码中，参数`total`有默认值`1`，所以调用时不用提供这个值。\n\n总结一下，递归本质上是一种循环操作。纯粹的函数式编程语言没有循环操作命令，所有的循环都用递归实现，这就是为什么尾递归对这些语言极其重要。对于其他支持“尾调用优化”的语言（比如 Lua，ES6），只需要知道循环可以用递归代替，而一旦使用递归，就最好使用尾递归。\n\n### 严格模式\n\nES6 的尾调用优化只在严格模式下开启，正常模式是无效的。\n\n这是因为在正常模式下，函数内部有两个变量，可以跟踪函数的调用栈。\n\n- `func.arguments`：返回调用时函数的参数。\n- `func.caller`：返回调用当前函数的那个函数。\n\n尾调用优化发生时，函数的调用栈会改写，因此上面两个变量就会失真。严格模式禁用这两个变量，所以尾调用模式仅在严格模式下生效。\n\n```javascript\nfunction restricted() {\n  \'use strict\';\n  restricted.caller;    // 报错\n  restricted.arguments; // 报错\n}\nrestricted();\n```\n\n### 尾递归优化的实现\n\n尾递归优化只在严格模式下生效，那么正常模式下，或者那些不支持该功能的环境中，有没有办法也使用尾递归优化呢？回答是可以的，就是自己实现尾递归优化。\n\n它的原理非常简单。尾递归之所以需要优化，原因是调用栈太多，造成溢出，那么只要减少调用栈，就不会溢出。怎么做可以减少调用栈呢？就是采用“循环”换掉“递归”。\n\n下面是一个正常的递归函数。\n\n```javascript\nfunction sum(x, y) {\n  if (y > 0) {\n    return sum(x + 1, y - 1);\n  } else {\n    return x;\n  }\n}\n\nsum(1, 100000)\n// Uncaught RangeError: Maximum call stack size exceeded(…)\n```\n\n上面代码中，`sum`是一个递归函数，参数`x`是需要累加的值，参数`y`控制递归次数。一旦指定`sum`递归 100000 次，就会报错，提示超出调用栈的最大次数。\n\n蹦床函数（trampoline）可以将递归执行转为循环执行。\n\n```javascript\nfunction trampoline(f) {\n  while (f && f instanceof Function) {\n    f = f();\n  }\n  return f;\n}\n```\n\n上面就是蹦床函数的一个实现，它接受一个函数`f`作为参数。只要`f`执行后返回一个函数，就继续执行。注意，这里是返回一个函数，然后执行该函数，而不是函数里面调用函数，这样就避免了递归执行，从而就消除了调用栈过大的问题。\n\n然后，要做的就是将原来的递归函数，改写为每一步返回另一个函数。\n\n```javascript\nfunction sum(x, y) {\n  if (y > 0) {\n    return sum.bind(null, x + 1, y - 1);\n  } else {\n    return x;\n  }\n}\n```\n\n上面代码中，`sum`函数的每次执行，都会返回自身的另一个版本。\n\n现在，使用蹦床函数执行`sum`，就不会发生调用栈溢出。\n\n```javascript\ntrampoline(sum(1, 100000))\n// 100001\n```\n\n蹦床函数并不是真正的尾递归优化，下面的实现才是。\n\n```javascript\nfunction tco(f) {\n  var value;\n  var active = false;\n  var accumulated = [];\n\n  return function accumulator() {\n    accumulated.push(arguments);\n    if (!active) {\n      active = true;\n      while (accumulated.length) {\n        value = f.apply(this, accumulated.shift());\n      }\n      active = false;\n      return value;\n    }\n  };\n}\n\nvar sum = tco(function(x, y) {\n  if (y > 0) {\n    return sum(x + 1, y - 1)\n  }\n  else {\n    return x\n  }\n});\n\nsum(1, 100000)\n// 100001\n```\n\n上面代码中，`tco`函数是尾递归优化的实现，它的奥妙就在于状态变量`active`。默认情况下，这个变量是不激活的。一旦进入尾递归优化的过程，这个变量就激活了。然后，每一轮递归`sum`返回的都是`undefined`，所以就避免了递归执行；而`accumulated`数组存放每一轮`sum`执行的参数，总是有值的，这就保证了`accumulator`函数内部的`while`循环总是会执行。这样就很巧妙地将“递归”改成了“循环”，而后一轮的参数会取代前一轮的参数，保证了调用栈只有一层。\n\n## 函数参数的尾逗号\n\nES2017 [允许](https://github.com/jeffmo/es-trailing-function-commas)函数的最后一个参数有尾逗号（trailing comma）。\n\n此前，函数定义和调用时，都不允许最后一个参数后面出现逗号。\n\n```javascript\nfunction clownsEverywhere(\n  param1,\n  param2\n) { /* ... */ }\n\nclownsEverywhere(\n  \'foo\',\n  \'bar\'\n);\n```\n\n上面代码中，如果在`param2`或`bar`后面加一个逗号，就会报错。\n\n如果像上面这样，将参数写成多行（即每个参数占据一行），以后修改代码的时候，想为函数`clownsEverywhere`添加第三个参数，或者调整参数的次序，就势必要在原来最后一个参数后面添加一个逗号。这对于版本管理系统来说，就会显示添加逗号的那一行也发生了变动。这看上去有点冗余，因此新的语法允许定义和调用时，尾部直接有一个逗号。\n\n```javascript\nfunction clownsEverywhere(\n  param1,\n  param2,\n) { /* ... */ }\n\nclownsEverywhere(\n  \'foo\',\n  \'bar\',\n);\n```\n\n这样的规定也使得，函数参数与数组和对象的尾逗号规则，保持一致了。\n\n\n\n# 数组的扩展\n\n1. [扩展运算符](http://es6.ruanyifeng.com/#docs/array#%E6%89%A9%E5%B1%95%E8%BF%90%E7%AE%97%E7%AC%A6)\n2. [Array.from()](http://es6.ruanyifeng.com/#docs/array#Array.from())\n3. [Array.of()](http://es6.ruanyifeng.com/#docs/array#Array.of())\n4. [数组实例的 copyWithin()](http://es6.ruanyifeng.com/#docs/array#%E6%95%B0%E7%BB%84%E5%AE%9E%E4%BE%8B%E7%9A%84%20copyWithin())\n5. [数组实例的 find() 和 findIndex()](http://es6.ruanyifeng.com/#docs/array#%E6%95%B0%E7%BB%84%E5%AE%9E%E4%BE%8B%E7%9A%84%20find()%20%E5%92%8C%20findIndex())\n6. [数组实例的 fill()](http://es6.ruanyifeng.com/#docs/array#%E6%95%B0%E7%BB%84%E5%AE%9E%E4%BE%8B%E7%9A%84%20fill())\n7. [数组实例的 entries()，keys() 和 values()](http://es6.ruanyifeng.com/#docs/array#%E6%95%B0%E7%BB%84%E5%AE%9E%E4%BE%8B%E7%9A%84%20entries()%EF%BC%8Ckeys()%20%E5%92%8C%20values())\n8. [数组实例的 includes()](http://es6.ruanyifeng.com/#docs/array#%E6%95%B0%E7%BB%84%E5%AE%9E%E4%BE%8B%E7%9A%84%20includes())\n9. [数组实例的 flat()，flatMap()](http://es6.ruanyifeng.com/#docs/array#%E6%95%B0%E7%BB%84%E5%AE%9E%E4%BE%8B%E7%9A%84%20flat()%EF%BC%8CflatMap())\n10. [数组的空位](http://es6.ruanyifeng.com/#docs/array#%E6%95%B0%E7%BB%84%E7%9A%84%E7%A9%BA%E4%BD%8D)\n\n## 扩展运算符\n\n### 含义\n\n扩展运算符（spread）是三个点（`...`）。它好比 rest 参数的逆运算，将一个数组转为用逗号分隔的参数序列。\n\n```javascript\nconsole.log(...[1, 2, 3])\n// 1 2 3\n\nconsole.log(1, ...[2, 3, 4], 5)\n// 1 2 3 4 5\n\n[...document.querySelectorAll(\'div\')]\n// [<div>, <div>, <div>]\n```\n\n该运算符主要用于函数调用。\n\n```javascript\nfunction push(array, ...items) {\n  array.push(...items);\n}\n\nfunction add(x, y) {\n  return x + y;\n}\n\nconst numbers = [4, 38];\nadd(...numbers) // 42\n```\n\n上面代码中，`array.push(...items)`和`add(...numbers)`这两行，都是函数的调用，它们的都使用了扩展运算符。该运算符将一个数组，变为参数序列。\n\n扩展运算符与正常的函数参数可以结合使用，非常灵活。\n\n```javascript\nfunction f(v, w, x, y, z) { }\nconst args = [0, 1];\nf(-1, ...args, 2, ...[3]);\n```\n\n扩展运算符后面还可以放置表达式。\n\n```javascript\nconst arr = [\n  ...(x > 0 ? [\'a\'] : []),\n  \'b\',\n];\n```\n\n如果扩展运算符后面是一个空数组，则不产生任何效果。\n\n```javascript\n[...[], 1]\n// [1]\n```\n\n### 替代函数的 apply 方法\n\n由于扩展运算符可以展开数组，所以不再需要`apply`方法，将数组转为函数的参数了。\n\n```javascript\n// ES5 的写法\nfunction f(x, y, z) {\n  // ...\n}\nvar args = [0, 1, 2];\nf.apply(null, args);\n\n// ES6的写法\nfunction f(x, y, z) {\n  // ...\n}\nlet args = [0, 1, 2];\nf(...args);\n```\n\n下面是扩展运算符取代`apply`方法的一个实际的例子，应用`Math.max`方法，简化求出一个数组最大元素的写法。\n\n```javascript\n// ES5 的写法\nMath.max.apply(null, [14, 3, 77])\n\n// ES6 的写法\nMath.max(...[14, 3, 77])\n\n// 等同于\nMath.max(14, 3, 77);\n```\n\n上面代码中，由于 JavaScript 不提供求数组最大元素的函数，所以只能套用`Math.max`函数，将数组转为一个参数序列，然后求最大值。有了扩展运算符以后，就可以直接用`Math.max`了。\n\n另一个例子是通过`push`函数，将一个数组添加到另一个数组的尾部。\n\n```javascript\n// ES5的 写法\nvar arr1 = [0, 1, 2];\nvar arr2 = [3, 4, 5];\nArray.prototype.push.apply(arr1, arr2);\n\n// ES6 的写法\nlet arr1 = [0, 1, 2];\nlet arr2 = [3, 4, 5];\narr1.push(...arr2);\n```\n\n上面代码的 ES5 写法中，`push`方法的参数不能是数组，所以只好通过`apply`方法变通使用`push`方法。有了扩展运算符，就可以直接将数组传入`push`方法。\n\n下面是另外一个例子。\n\n```javascript\n// ES5\nnew (Date.bind.apply(Date, [null, 2015, 1, 1]))\n// ES6\nnew Date(...[2015, 1, 1]);\n```\n\n### 扩展运算符的应用\n\n**（1）复制数组**\n\n数组是复合的数据类型，直接复制的话，只是复制了指向底层数据结构的指针，而不是克隆一个全新的数组。\n\n```javascript\nconst a1 = [1, 2];\nconst a2 = a1;\n\na2[0] = 2;\na1 // [2, 2]\n```\n\n上面代码中，`a2`并不是`a1`的克隆，而是指向同一份数据的另一个指针。修改`a2`，会直接导致`a1`的变化。\n\nES5 只能用变通方法来复制数组。\n\n```javascript\nconst a1 = [1, 2];\nconst a2 = a1.concat();\n\na2[0] = 2;\na1 // [1, 2]\n```\n\n上面代码中，`a1`会返回原数组的克隆，再修改`a2`就不会对`a1`产生影响。\n\n扩展运算符提供了复制数组的简便写法。\n\n```javascript\nconst a1 = [1, 2];\n// 写法一\nconst a2 = [...a1];\n// 写法二\nconst [...a2] = a1;\n```\n\n上面的两种写法，`a2`都是`a1`的克隆。\n\n**（2）合并数组**\n\n扩展运算符提供了数组合并的新写法。\n\n```javascript\nconst arr1 = [\'a\', \'b\'];\nconst arr2 = [\'c\'];\nconst arr3 = [\'d\', \'e\'];\n\n// ES5 的合并数组\narr1.concat(arr2, arr3);\n// [ \'a\', \'b\', \'c\', \'d\', \'e\' ]\n\n// ES6 的合并数组\n[...arr1, ...arr2, ...arr3]\n// [ \'a\', \'b\', \'c\', \'d\', \'e\' ]\n```\n\n不过，这两种方法都是浅拷贝，使用的时候需要注意。\n\n```javascript\nconst a1 = [{ foo: 1 }];\nconst a2 = [{ bar: 2 }];\n\nconst a3 = a1.concat(a2);\nconst a4 = [...a1, ...a2];\n\na3[0] === a1[0] // true\na4[0] === a1[0] // true\n```\n\n上面代码中，`a3`和`a4`是用两种不同方法合并而成的新数组，但是它们的成员都是对原数组成员的引用，这就是浅拷贝。如果修改了原数组的成员，会同步反映到新数组。\n\n**（3）与解构赋值结合**\n\n扩展运算符可以与解构赋值结合起来，用于生成数组。\n\n```javascript\n// ES5\na = list[0], rest = list.slice(1)\n// ES6\n[a, ...rest] = list\n```\n\n下面是另外一些例子。\n\n```javascript\nconst [first, ...rest] = [1, 2, 3, 4, 5];\nfirst // 1\nrest  // [2, 3, 4, 5]\n\nconst [first, ...rest] = [];\nfirst // undefined\nrest  // []\n\nconst [first, ...rest] = ["foo"];\nfirst  // "foo"\nrest   // []\n```\n\n如果将扩展运算符用于数组赋值，只能放在参数的最后一位，否则会报错。\n\n```javascript\nconst [...butLast, last] = [1, 2, 3, 4, 5];\n// 报错\n\nconst [first, ...middle, last] = [1, 2, 3, 4, 5];\n// 报错\n```\n\n**（4）字符串**\n\n扩展运算符还可以将字符串转为真正的数组。\n\n```javascript\n[...\'hello\']\n// [ "h", "e", "l", "l", "o" ]\n```\n\n上面的写法，有一个重要的好处，那就是能够正确识别四个字节的 Unicode 字符。\n\n```javascript\n\'x\\uD83D\\uDE80y\'.length // 4\n[...\'x\\uD83D\\uDE80y\'].length // 3\n```\n\n上面代码的第一种写法，JavaScript 会将四个字节的 Unicode 字符，识别为 2 个字符，采用扩展运算符就没有这个问题。因此，正确返回字符串长度的函数，可以像下面这样写。\n\n```javascript\nfunction length(str) {\n  return [...str].length;\n}\n\nlength(\'x\\uD83D\\uDE80y\') // 3\n```\n\n凡是涉及到操作四个字节的 Unicode 字符的函数，都有这个问题。因此，最好都用扩展运算符改写。\n\n```javascript\nlet str = \'x\\uD83D\\uDE80y\';\n\nstr.split(\'\').reverse().join(\'\')\n// \'y\\uDE80\\uD83Dx\'\n\n[...str].reverse().join(\'\')\n// \'y\\uD83D\\uDE80x\'\n```\n\n上面代码中，如果不用扩展运算符，字符串的`reverse`操作就不正确。\n\n**（5）实现了 Iterator 接口的对象**\n\n任何 Iterator 接口的对象（参阅 Iterator 一章），都可以用扩展运算符转为真正的数组。\n\n```javascript\nlet nodeList = document.querySelectorAll(\'div\');\nlet array = [...nodeList];\n```\n\n上面代码中，`querySelectorAll`方法返回的是一个`nodeList`对象。它不是数组，而是一个类似数组的对象。这时，扩展运算符可以将其转为真正的数组，原因就在于`NodeList`对象实现了 Iterator 。\n\n对于那些没有部署 Iterator 接口的类似数组的对象，扩展运算符就无法将其转为真正的数组。\n\n```javascript\nlet arrayLike = {\n  \'0\': \'a\',\n  \'1\': \'b\',\n  \'2\': \'c\',\n  length: 3\n};\n\n// TypeError: Cannot spread non-iterable object.\nlet arr = [...arrayLike];\n```\n\n上面代码中，`arrayLike`是一个类似数组的对象，但是没有部署 Iterator 接口，扩展运算符就会报错。这时，可以改为使用`Array.from`方法将`arrayLike`转为真正的数组。\n\n**（6）Map 和 Set 结构，Generator 函数**\n\n扩展运算符内部调用的是数据结构的 Iterator 接口，因此只要具有 Iterator 接口的对象，都可以使用扩展运算符，比如 Map 结构。\n\n```javascript\nlet map = new Map([\n  [1, \'one\'],\n  [2, \'two\'],\n  [3, \'three\'],\n]);\n\nlet arr = [...map.keys()]; // [1, 2, 3]\n```\n\nGenerator 函数运行后，返回一个遍历器对象，因此也可以使用扩展运算符。\n\n```javascript\nconst go = function*(){\n  yield 1;\n  yield 2;\n  yield 3;\n};\n\n[...go()] // [1, 2, 3]\n```\n\n上面代码中，变量`go`是一个 Generator 函数，执行后返回的是一个遍历器对象，对这个遍历器对象执行扩展运算符，就会将内部遍历得到的值，转为一个数组。\n\n如果对没有 Iterator 接口的对象，使用扩展运算符，将会报错。\n\n```javascript\nconst obj = {a: 1, b: 2};\nlet arr = [...obj]; // TypeError: Cannot spread non-iterable object\n```\n\n## Array.from()\n\n`Array.from`方法用于将两类对象转为真正的数组：类似数组的对象（array-like object）和可遍历（iterable）的对象（包括 ES6 新增的数据结构 Set 和 Map）。\n\n下面是一个类似数组的对象，`Array.from`将它转为真正的数组。\n\n```javascript\nlet arrayLike = {\n    \'0\': \'a\',\n    \'1\': \'b\',\n    \'2\': \'c\',\n    length: 3\n};\n\n// ES5的写法\nvar arr1 = [].slice.call(arrayLike); // [\'a\', \'b\', \'c\']\n\n// ES6的写法\nlet arr2 = Array.from(arrayLike); // [\'a\', \'b\', \'c\']\n```\n\n实际应用中，常见的类似数组的对象是 DOM 操作返回的 NodeList 集合，以及函数内部的`arguments`对象。`Array.from`都可以将它们转为真正的数组。\n\n```javascript\n// NodeList对象\nlet ps = document.querySelectorAll(\'p\');\nArray.from(ps).filter(p => {\n  return p.textContent.length > 100;\n});\n\n// arguments对象\nfunction foo() {\n  var args = Array.from(arguments);\n  // ...\n}\n```\n\n上面代码中，`querySelectorAll`方法返回的是一个类似数组的对象，可以将这个对象转为真正的数组，再使用`filter`方法。\n\n只要是部署了 Iterator 接口的数据结构，`Array.from`都能将其转为数组。\n\n```javascript\nArray.from(\'hello\')\n// [\'h\', \'e\', \'l\', \'l\', \'o\']\n\nlet namesSet = new Set([\'a\', \'b\'])\nArray.from(namesSet) // [\'a\', \'b\']\n```\n\n上面代码中，字符串和 Set 结构都具有 Iterator 接口，因此可以被`Array.from`转为真正的数组。\n\n如果参数是一个真正的数组，`Array.from`会返回一个一模一样的新数组。\n\n```javascript\nArray.from([1, 2, 3])\n// [1, 2, 3]\n```\n\n值得提醒的是，扩展运算符（`...`）也可以将某些数据结构转为数组。\n\n```javascript\n// arguments对象\nfunction foo() {\n  const args = [...arguments];\n}\n\n// NodeList对象\n[...document.querySelectorAll(\'div\')]\n```\n\n扩展运算符背后调用的是遍历器接口（`Symbol.iterator`），如果一个对象没有部署这个接口，就无法转换。`Array.from`方法还支持类似数组的对象。所谓类似数组的对象，本质特征只有一点，即必须有`length`属性。因此，任何有`length`属性的对象，都可以通过`Array.from`方法转为数组，而此时扩展运算符就无法转换。\n\n```javascript\nArray.from({ length: 3 });\n// [ undefined, undefined, undefined ]\n```\n\n上面代码中，`Array.from`返回了一个具有三个成员的数组，每个位置的值都是`undefined`。扩展运算符转换不了这个对象。\n\n对于还没有部署该方法的浏览器，可以用`Array.prototype.slice`方法替代。\n\n```javascript\nconst toArray = (() =>\n  Array.from ? Array.from : obj => [].slice.call(obj)\n)();\n```\n\n`Array.from`还可以接受第二个参数，作用类似于数组的`map`方法，用来对每个元素进行处理，将处理后的值放入返回的数组。\n\n```javascript\nArray.from(arrayLike, x => x * x);\n// 等同于\nArray.from(arrayLike).map(x => x * x);\n\nArray.from([1, 2, 3], (x) => x * x)\n// [1, 4, 9]\n```\n\n下面的例子是取出一组 DOM 节点的文本内容。\n\n```javascript\nlet spans = document.querySelectorAll(\'span.name\');\n\n// map()\nlet names1 = Array.prototype.map.call(spans, s => s.textContent);\n\n// Array.from()\nlet names2 = Array.from(spans, s => s.textContent)\n```\n\n下面的例子将数组中布尔值为`false`的成员转为`0`。\n\n```javascript\nArray.from([1, , 2, , 3], (n) => n || 0)\n// [1, 0, 2, 0, 3]\n```\n\n另一个例子是返回各种数据的类型。\n\n```javascript\nfunction typesOf () {\n  return Array.from(arguments, value => typeof value)\n}\ntypesOf(null, [], NaN)\n// [\'object\', \'object\', \'number\']\n```\n\n如果`map`函数里面用到了`this`关键字，还可以传入`Array.from`的第三个参数，用来绑定`this`。\n\n`Array.from()`可以将各种值转为真正的数组，并且还提供`map`功能。这实际上意味着，只要有一个原始的数据结构，你就可以先对它的值进行处理，然后转成规范的数组结构，进而就可以使用数量众多的数组方法。\n\n```javascript\nArray.from({ length: 2 }, () => \'jack\')\n// [\'jack\', \'jack\']\n```\n\n上面代码中，`Array.from`的第一个参数指定了第二个参数运行的次数。这种特性可以让该方法的用法变得非常灵活。\n\n`Array.from()`的另一个应用是，将字符串转为数组，然后返回字符串的长度。因为它能正确处理各种 Unicode 字符，可以避免 JavaScript 将大于`\\uFFFF`的 Unicode 字符，算作两个字符的 bug。\n\n```javascript\nfunction countSymbols(string) {\n  return Array.from(string).length;\n}\n```\n\n## Array.of()\n\n`Array.of`方法用于将一组值，转换为数组。\n\n```javascript\nArray.of(3, 11, 8) // [3,11,8]\nArray.of(3) // [3]\nArray.of(3).length // 1\n```\n\n这个方法的主要目的，是弥补数组构造函数`Array()`的不足。因为参数个数的不同，会导致`Array()`的行为有差异。\n\n```javascript\nArray() // []\nArray(3) // [, , ,]\nArray(3, 11, 8) // [3, 11, 8]\n```\n\n上面代码中，`Array`方法没有参数、一个参数、三个参数时，返回结果都不一样。只有当参数个数不少于 2 个时，`Array()`才会返回由参数组成的新数组。参数个数只有一个时，实际上是指定数组的长度。\n\n`Array.of`基本上可以用来替代`Array()`或`new Array()`，并且不存在由于参数不同而导致的重载。它的行为非常统一。\n\n```javascript\nArray.of() // []\nArray.of(undefined) // [undefined]\nArray.of(1) // [1]\nArray.of(1, 2) // [1, 2]\n```\n\n`Array.of`总是返回参数值组成的数组。如果没有参数，就返回一个空数组。\n\n`Array.of`方法可以用下面的代码模拟实现。\n\n```javascript\nfunction ArrayOf(){\n  return [].slice.call(arguments);\n}\n```\n\n## 数组实例的 copyWithin()\n\n数组实例的`copyWithin`方法，在当前数组内部，将指定位置的成员复制到其他位置（会覆盖原有成员），然后返回当前数组。也就是说，使用这个方法，会修改当前数组。\n\n```javascript\nArray.prototype.copyWithin(target, start = 0, end = this.length)\n```\n\n它接受三个参数。\n\n- target（必需）：从该位置开始替换数据。如果为负值，表示倒数。\n- start（可选）：从该位置开始读取数据，默认为 0。如果为负值，表示倒数。\n- end（可选）：到该位置前停止读取数据，默认等于数组长度。如果为负值，表示倒数。\n\n这三个参数都应该是数值，如果不是，会自动转为数值。\n\n```javascript\n[1, 2, 3, 4, 5].copyWithin(0, 3)\n// [4, 5, 3, 4, 5]\n```\n\n上面代码表示将从 3 号位直到数组结束的成员（4 和 5），复制到从 0 号位开始的位置，结果覆盖了原来的 1 和 2。\n\n下面是更多例子。\n\n```javascript\n// 将3号位复制到0号位\n[1, 2, 3, 4, 5].copyWithin(0, 3, 4)\n// [4, 2, 3, 4, 5]\n\n// -2相当于3号位，-1相当于4号位\n[1, 2, 3, 4, 5].copyWithin(0, -2, -1)\n// [4, 2, 3, 4, 5]\n\n// 将3号位复制到0号位\n[].copyWithin.call({length: 5, 3: 1}, 0, 3)\n// {0: 1, 3: 1, length: 5}\n\n// 将2号位到数组结束，复制到0号位\nlet i32a = new Int32Array([1, 2, 3, 4, 5]);\ni32a.copyWithin(0, 2);\n// Int32Array [3, 4, 5, 4, 5]\n\n// 对于没有部署 TypedArray 的 copyWithin 方法的平台\n// 需要采用下面的写法\n[].copyWithin.call(new Int32Array([1, 2, 3, 4, 5]), 0, 3, 4);\n// Int32Array [4, 2, 3, 4, 5]\n```\n\n## 数组实例的 find() 和 findIndex()\n\n数组实例的`find`方法，用于找出第一个符合条件的数组成员。它的参数是一个回调函数，所有数组成员依次执行该回调函数，直到找出第一个返回值为`true`的成员，然后返回该成员。如果没有符合条件的成员，则返回`undefined`。\n\n```javascript\n[1, 4, -5, 10].find((n) => n < 0)\n// -5\n```\n\n上面代码找出数组中第一个小于 0 的成员。\n\n```javascript\n[1, 5, 10, 15].find(function(value, index, arr) {\n  return value > 9;\n}) // 10\n```\n\n上面代码中，`find`方法的回调函数可以接受三个参数，依次为当前的值、当前的位置和原数组。\n\n数组实例的`findIndex`方法的用法与`find`方法非常类似，返回第一个符合条件的数组成员的位置，如果所有成员都不符合条件，则返回`-1`。\n\n```javascript\n[1, 5, 10, 15].findIndex(function(value, index, arr) {\n  return value > 9;\n}) // 2\n```\n\n这两个方法都可以接受第二个参数，用来绑定回调函数的`this`对象。\n\n```javascript\nfunction f(v){\n  return v > this.age;\n}\nlet person = {name: \'John\', age: 20};\n[10, 12, 26, 15].find(f, person);    // 26\n```\n\n上面的代码中，`find`函数接收了第二个参数`person`对象，回调函数中的`this`对象指向`person`对象。\n\n另外，这两个方法都可以发现`NaN`，弥补了数组的`indexOf`方法的不足。\n\n```javascript\n[NaN].indexOf(NaN)\n// -1\n\n[NaN].findIndex(y => Object.is(NaN, y))\n// 0\n```\n\n上面代码中，`indexOf`方法无法识别数组的`NaN`成员，但是`findIndex`方法可以借助`Object.is`方法做到。\n\n## 数组实例的 fill()\n\n`fill`方法使用给定值，填充一个数组。\n\n```javascript\n[\'a\', \'b\', \'c\'].fill(7)\n// [7, 7, 7]\n\nnew Array(3).fill(7)\n// [7, 7, 7]\n```\n\n上面代码表明，`fill`方法用于空数组的初始化非常方便。数组中已有的元素，会被全部抹去。\n\n`fill`方法还可以接受第二个和第三个参数，用于指定填充的起始位置和结束位置。\n\n```javascript\n[\'a\', \'b\', \'c\'].fill(7, 1, 2)\n// [\'a\', 7, \'c\']\n```\n\n上面代码表示，`fill`方法从 1 号位开始，向原数组填充 7，到 2 号位之前结束。\n\n注意，如果填充的类型为对象，那么被赋值的是同一个内存地址的对象，而不是深拷贝对象。\n\n```javascript\nlet arr = new Array(3).fill({name: "Mike"});\narr[0].name = "Ben";\narr\n// [{name: "Ben"}, {name: "Ben"}, {name: "Ben"}]\n\nlet arr = new Array(3).fill([]);\narr[0].push(5);\narr\n// [[5], [5], [5]]\n```\n\n## 数组实例的 entries()，keys() 和 values()\n\nES6 提供三个新的方法——`entries()`，`keys()`和`values()`——用于遍历数组。它们都返回一个遍历器对象（详见《Iterator》一章），可以用`for...of`循环进行遍历，唯一的区别是`keys()`是对键名的遍历、`values()`是对键值的遍历，`entries()`是对键值对的遍历。\n\n```javascript\nfor (let index of [\'a\', \'b\'].keys()) {\n  console.log(index);\n}\n// 0\n// 1\n\nfor (let elem of [\'a\', \'b\'].values()) {\n  console.log(elem);\n}\n// \'a\'\n// \'b\'\n\nfor (let [index, elem] of [\'a\', \'b\'].entries()) {\n  console.log(index, elem);\n}\n// 0 "a"\n// 1 "b"\n```\n\n如果不使用`for...of`循环，可以手动调用遍历器对象的`next`方法，进行遍历。\n\n```javascript\nlet letter = [\'a\', \'b\', \'c\'];\nlet entries = letter.entries();\nconsole.log(entries.next().value); // [0, \'a\']\nconsole.log(entries.next().value); // [1, \'b\']\nconsole.log(entries.next().value); // [2, \'c\']\n```\n\n## 数组实例的 includes()\n\n`Array.prototype.includes`方法返回一个布尔值，表示某个数组是否包含给定的值，与字符串的`includes`方法类似。ES2016 引入了该方法。\n\n```javascript\n[1, 2, 3].includes(2)     // true\n[1, 2, 3].includes(4)     // false\n[1, 2, NaN].includes(NaN) // true\n```\n\n该方法的第二个参数表示搜索的起始位置，默认为`0`。如果第二个参数为负数，则表示倒数的位置，如果这时它大于数组长度（比如第二个参数为`-4`，但数组长度为`3`），则会重置为从`0`开始。\n\n```javascript\n[1, 2, 3].includes(3, 3);  // false\n[1, 2, 3].includes(3, -1); // true\n```\n\n没有该方法之前，我们通常使用数组的`indexOf`方法，检查是否包含某个值。\n\n```javascript\nif (arr.indexOf(el) !== -1) {\n  // ...\n}\n```\n\n`indexOf`方法有两个缺点，一是不够语义化，它的含义是找到参数值的第一个出现位置，所以要去比较是否不等于`-1`，表达起来不够直观。二是，它内部使用严格相等运算符（`===`）进行判断，这会导致对`NaN`的误判。\n\n```javascript\n[NaN].indexOf(NaN)\n// -1\n```\n\n`includes`使用的是不一样的判断算法，就没有这个问题。\n\n```javascript\n[NaN].includes(NaN)\n// true\n```\n\n下面代码用来检查当前环境是否支持该方法，如果不支持，部署一个简易的替代版本。\n\n```javascript\nconst contains = (() =>\n  Array.prototype.includes\n    ? (arr, value) => arr.includes(value)\n    : (arr, value) => arr.some(el => el === value)\n)();\ncontains([\'foo\', \'bar\'], \'baz\'); // => false\n```\n\n另外，Map 和 Set 数据结构有一个`has`方法，需要注意与`includes`区分。\n\n- Map 结构的`has`方法，是用来查找键名的，比如`Map.prototype.has(key)`、`WeakMap.prototype.has(key)`、`Reflect.has(target, propertyKey)`。\n- Set 结构的`has`方法，是用来查找值的，比如`Set.prototype.has(value)`、`WeakSet.prototype.has(value)`。\n\n## 数组实例的 flat()，flatMap()\n\n数组的成员有时还是数组，`Array.prototype.flat()`用于将嵌套的数组“拉平”，变成一维的数组。该方法返回一个新数组，对原数据没有影响。\n\n```javascript\n[1, 2, [3, 4]].flat()\n// [1, 2, 3, 4]\n```\n\n上面代码中，原数组的成员里面有一个数组，`flat()`方法将子数组的成员取出来，添加在原来的位置。\n\n`flat()`默认只会“拉平”一层，如果想要“拉平”多层的嵌套数组，可以将`flat()`方法的参数写成一个整数，表示想要拉平的层数，默认为1。\n\n```javascript\n[1, 2, [3, [4, 5]]].flat()\n// [1, 2, 3, [4, 5]]\n\n[1, 2, [3, [4, 5]]].flat(2)\n// [1, 2, 3, 4, 5]\n```\n\n上面代码中，`flat()`的参数为2，表示要“拉平”两层的嵌套数组。\n\n如果不管有多少层嵌套，都要转成一维数组，可以用`Infinity`关键字作为参数。\n\n```javascript\n[1, [2, [3]]].flat(Infinity)\n// [1, 2, 3]\n```\n\n如果原数组有空位，`flat()`方法会跳过空位。\n\n```javascript\n[1, 2, , 4, 5].flat()\n// [1, 2, 4, 5]\n```\n\n`flatMap()`方法对原数组的每个成员执行一个函数（相当于执行`Array.prototype.map()`），然后对返回值组成的数组执行`flat()`方法。该方法返回一个新数组，不改变原数组。\n\n```javascript\n// 相当于 [[2, 4], [3, 6], [4, 8]].flat()\n[2, 3, 4].flatMap((x) => [x, x * 2])\n// [2, 4, 3, 6, 4, 8]\n```\n\n`flatMap()`只能展开一层数组。\n\n```javascript\n// 相当于 [[[2]], [[4]], [[6]], [[8]]].flat()\n[1, 2, 3, 4].flatMap(x => [[x * 2]])\n// [[2], [4], [6], [8]]\n```\n\n上面代码中，遍历函数返回的是一个双层的数组，但是默认只能展开一层，因此`flatMap()`返回的还是一个嵌套数组。\n\n`flatMap()`方法的参数是一个遍历函数，该函数可以接受三个参数，分别是当前数组成员、当前数组成员的位置（从零开始）、原数组。\n\n```javascript\narr.flatMap(function callback(currentValue[, index[, array]]) {\n  // ...\n}[, thisArg])\n```\n\n`flatMap()`方法还可以有第二个参数，用来绑定遍历函数里面的`this`。\n\n## 数组的空位\n\n数组的空位指，数组的某一个位置没有任何值。比如，`Array`构造函数返回的数组都是空位。\n\n```javascript\nArray(3) // [, , ,]\n```\n\n上面代码中，`Array(3)`返回一个具有 3 个空位的数组。\n\n注意，空位不是`undefined`，一个位置的值等于`undefined`，依然是有值的。空位是没有任何值，`in`运算符可以说明这一点。\n\n```javascript\n0 in [undefined, undefined, undefined] // true\n0 in [, , ,] // false\n```\n\n上面代码说明，第一个数组的 0 号位置是有值的，第二个数组的 0 号位置没有值。\n\nES5 对空位的处理，已经很不一致了，大多数情况下会忽略空位。\n\n- `forEach()`, `filter()`, `reduce()`, `every()` 和`some()`都会跳过空位。\n- `map()`会跳过空位，但会保留这个值\n- `join()`和`toString()`会将空位视为`undefined`，而`undefined`和`null`会被处理成空字符串。\n\n```javascript\n// forEach方法\n[,\'a\'].forEach((x,i) => console.log(i)); // 1\n\n// filter方法\n[\'a\',,\'b\'].filter(x => true) // [\'a\',\'b\']\n\n// every方法\n[,\'a\'].every(x => x===\'a\') // true\n\n// reduce方法\n[1,,2].reduce((x,y) => x+y) // 3\n\n// some方法\n[,\'a\'].some(x => x !== \'a\') // false\n\n// map方法\n[,\'a\'].map(x => 1) // [,1]\n\n// join方法\n[,\'a\',undefined,null].join(\'#\') // "#a##"\n\n// toString方法\n[,\'a\',undefined,null].toString() // ",a,,"\n```\n\nES6 则是明确将空位转为`undefined`。\n\n`Array.from`方法会将数组的空位，转为`undefined`，也就是说，这个方法不会忽略空位。\n\n```javascript\nArray.from([\'a\',,\'b\'])\n// [ "a", undefined, "b" ]\n```\n\n扩展运算符（`...`）也会将空位转为`undefined`。\n\n```javascript\n[...[\'a\',,\'b\']]\n// [ "a", undefined, "b" ]\n```\n\n`copyWithin()`会连空位一起拷贝。\n\n```javascript\n[,\'a\',\'b\',,].copyWithin(2,0) // [,"a",,"a"]\n```\n\n`fill()`会将空位视为正常的数组位置。\n\n```javascript\nnew Array(3).fill(\'a\') // ["a","a","a"]\n```\n\n`for...of`循环也会遍历空位。\n\n```javascript\nlet arr = [, ,];\nfor (let i of arr) {\n  console.log(1);\n}\n// 1\n// 1\n```\n\n上面代码中，数组`arr`有两个空位，`for...of`并没有忽略它们。如果改成`map`方法遍历，空位是会跳过的。\n\n`entries()`、`keys()`、`values()`、`find()`和`findIndex()`会将空位处理成`undefined`。\n\n```javascript\n// entries()\n[...[,\'a\'].entries()] // [[0,undefined], [1,"a"]]\n\n// keys()\n[...[,\'a\'].keys()] // [0,1]\n\n// values()\n[...[,\'a\'].values()] // [undefined,"a"]\n\n// find()\n[,\'a\'].find(x => true) // undefined\n\n// findIndex()\n[,\'a\'].findIndex(x => true) // 0\n```\n\n由于空位的处理规则非常不统一，所以建议避免出现空位。\n\n\n\n# 对象的扩展\n\n1. [属性的简洁表示法](http://es6.ruanyifeng.com/#docs/object#%E5%B1%9E%E6%80%A7%E7%9A%84%E7%AE%80%E6%B4%81%E8%A1%A8%E7%A4%BA%E6%B3%95)\n2. [属性名表达式](http://es6.ruanyifeng.com/#docs/object#%E5%B1%9E%E6%80%A7%E5%90%8D%E8%A1%A8%E8%BE%BE%E5%BC%8F)\n3. [方法的 name 属性](http://es6.ruanyifeng.com/#docs/object#%E6%96%B9%E6%B3%95%E7%9A%84%20name%20%E5%B1%9E%E6%80%A7)\n4. [Object.is()](http://es6.ruanyifeng.com/#docs/object#Object.is())\n5. [Object.assign()](http://es6.ruanyifeng.com/#docs/object#Object.assign())\n6. [属性的可枚举性和遍历](http://es6.ruanyifeng.com/#docs/object#%E5%B1%9E%E6%80%A7%E7%9A%84%E5%8F%AF%E6%9E%9A%E4%B8%BE%E6%80%A7%E5%92%8C%E9%81%8D%E5%8E%86)\n7. [Object.getOwnPropertyDescriptors()](http://es6.ruanyifeng.com/#docs/object#Object.getOwnPropertyDescriptors())\n8. [__proto__属性，Object.setPrototypeOf()，Object.getPrototypeOf()](http://es6.ruanyifeng.com/#docs/object#__proto__%E5%B1%9E%E6%80%A7%EF%BC%8CObject.setPrototypeOf()%EF%BC%8CObject.getPrototypeOf())\n9. [super 关键字](http://es6.ruanyifeng.com/#docs/object#super%20%E5%85%B3%E9%94%AE%E5%AD%97)\n10. [Object.keys()，Object.values()，Object.entries()](http://es6.ruanyifeng.com/#docs/object#Object.keys()%EF%BC%8CObject.values()%EF%BC%8CObject.entries())\n11. [对象的扩展运算符](http://es6.ruanyifeng.com/#docs/object#%E5%AF%B9%E8%B1%A1%E7%9A%84%E6%89%A9%E5%B1%95%E8%BF%90%E7%AE%97%E7%AC%A6)\n\n## 属性的简洁表示法\n\nES6 允许直接写入变量和函数，作为对象的属性和方法。这样的书写更加简洁。\n\n```javascript\nconst foo = \'bar\';\nconst baz = {foo};\nbaz // {foo: "bar"}\n\n// 等同于\nconst baz = {foo: foo};\n```\n\n上面代码表明，ES6 允许在对象之中，直接写变量。这时，属性名为变量名, 属性值为变量的值。下面是另一个例子。\n\n```javascript\nfunction f(x, y) {\n  return {x, y};\n}\n\n// 等同于\n\nfunction f(x, y) {\n  return {x: x, y: y};\n}\n\nf(1, 2) // Object {x: 1, y: 2}\n```\n\n除了属性简写，方法也可以简写。\n\n```javascript\nconst o = {\n  method() {\n    return "Hello!";\n  }\n};\n\n// 等同于\n\nconst o = {\n  method: function() {\n    return "Hello!";\n  }\n};\n```\n\n下面是一个实际的例子。\n\n```javascript\nlet birth = \'2000/01/01\';\n\nconst Person = {\n\n  name: \'张三\',\n\n  //等同于birth: birth\n  birth,\n\n  // 等同于hello: function ()...\n  hello() { console.log(\'我的名字是\', this.name); }\n\n};\n```\n\n这种写法用于函数的返回值，将会非常方便。\n\n```javascript\nfunction getPoint() {\n  const x = 1;\n  const y = 10;\n  return {x, y};\n}\n\ngetPoint()\n// {x:1, y:10}\n```\n\nCommonJS 模块输出一组变量，就非常合适使用简洁写法。\n\n```javascript\nlet ms = {};\n\nfunction getItem (key) {\n  return key in ms ? ms[key] : null;\n}\n\nfunction setItem (key, value) {\n  ms[key] = value;\n}\n\nfunction clear () {\n  ms = {};\n}\n\nmodule.exports = { getItem, setItem, clear };\n// 等同于\nmodule.exports = {\n  getItem: getItem,\n  setItem: setItem,\n  clear: clear\n};\n```\n\n属性的赋值器（setter）和取值器（getter），事实上也是采用这种写法。\n\n```javascript\nconst cart = {\n  _wheels: 4,\n\n  get wheels () {\n    return this._wheels;\n  },\n\n  set wheels (value) {\n    if (value < this._wheels) {\n      throw new Error(\'数值太小了！\');\n    }\n    this._wheels = value;\n  }\n}\n```\n\n注意，简洁写法的属性名总是字符串，这会导致一些看上去比较奇怪的结果。\n\n```javascript\nconst obj = {\n  class () {}\n};\n\n// 等同于\n\nvar obj = {\n  \'class\': function() {}\n};\n```\n\n上面代码中，`class`是字符串，所以不会因为它属于关键字，而导致语法解析报错。\n\n如果某个方法的值是一个 Generator 函数，前面需要加上星号。\n\n```javascript\nconst obj = {\n  * m() {\n    yield \'hello world\';\n  }\n};\n```\n\n## 属性名表达式\n\nJavaScript 定义对象的属性，有两种方法。\n\n```javascript\n// 方法一\nobj.foo = true;\n\n// 方法二\nobj[\'a\' + \'bc\'] = 123;\n```\n\n上面代码的方法一是直接用标识符作为属性名，方法二是用表达式作为属性名，这时要将表达式放在方括号之内。\n\n但是，如果使用字面量方式定义对象（使用大括号），在 ES5 中只能使用方法一（标识符）定义属性。\n\n```javascript\nvar obj = {\n  foo: true,\n  abc: 123\n};\n```\n\nES6 允许字面量定义对象时，用方法二（表达式）作为对象的属性名，即把表达式放在方括号内。\n\n```javascript\nlet propKey = \'foo\';\n\nlet obj = {\n  [propKey]: true,\n  [\'a\' + \'bc\']: 123\n};\n```\n\n下面是另一个例子。\n\n```javascript\nlet lastWord = \'last word\';\n\nconst a = {\n  \'first word\': \'hello\',\n  [lastWord]: \'world\'\n};\n\na[\'first word\'] // "hello"\na[lastWord] // "world"\na[\'last word\'] // "world"\n```\n\n表达式还可以用于定义方法名。\n\n```javascript\nlet obj = {\n  [\'h\' + \'ello\']() {\n    return \'hi\';\n  }\n};\n\nobj.hello() // hi\n```\n\n注意，属性名表达式与简洁表示法，不能同时使用，会报错。\n\n```javascript\n// 报错\nconst foo = \'bar\';\nconst bar = \'abc\';\nconst baz = { [foo] };\n\n// 正确\nconst foo = \'bar\';\nconst baz = { [foo]: \'abc\'};\n```\n\n注意，属性名表达式如果是一个对象，默认情况下会自动将对象转为字符串`[object Object]`，这一点要特别小心。\n\n```javascript\nconst keyA = {a: 1};\nconst keyB = {b: 2};\n\nconst myObject = {\n  [keyA]: \'valueA\',\n  [keyB]: \'valueB\'\n};\n\nmyObject // Object {[object Object]: "valueB"}\n```\n\n上面代码中，`[keyA]`和`[keyB]`得到的都是`[object Object]`，所以`[keyB]`会把`[keyA]`覆盖掉，而`myObject`最后只有一个`[object Object]`属性。\n\n## 方法的 name 属性\n\n函数的`name`属性，返回函数名。对象方法也是函数，因此也有`name`属性。\n\n```javascript\nconst person = {\n  sayName() {\n    console.log(\'hello!\');\n  },\n};\n\nperson.sayName.name   // "sayName"\n```\n\n上面代码中，方法的`name`属性返回函数名（即方法名）。\n\n如果对象的方法使用了取值函数（`getter`）和存值函数（`setter`），则`name`属性不是在该方法上面，而是该方法的属性的描述对象的`get`和`set`属性上面，返回值是方法名前加上`get`和`set`。\n\n```javascript\nconst obj = {\n  get foo() {},\n  set foo(x) {}\n};\n\nobj.foo.name\n// TypeError: Cannot read property \'name\' of undefined\n\nconst descriptor = Object.getOwnPropertyDescriptor(obj, \'foo\');\n\ndescriptor.get.name // "get foo"\ndescriptor.set.name // "set foo"\n```\n\n有两种特殊情况：`bind`方法创造的函数，`name`属性返回`bound`加上原函数的名字；`Function`构造函数创造的函数，`name`属性返回`anonymous`。\n\n```javascript\n(new Function()).name // "anonymous"\n\nvar doSomething = function() {\n  // ...\n};\ndoSomething.bind().name // "bound doSomething"\n```\n\n如果对象的方法是一个 Symbol 值，那么`name`属性返回的是这个 Symbol 值的描述。\n\n```javascript\nconst key1 = Symbol(\'description\');\nconst key2 = Symbol();\nlet obj = {\n  [key1]() {},\n  [key2]() {},\n};\nobj[key1].name // "[description]"\nobj[key2].name // ""\n```\n\n上面代码中，`key1`对应的 Symbol 值有描述，`key2`没有。\n\n## Object.is()\n\nES5 比较两个值是否相等，只有两个运算符：相等运算符（`==`）和严格相等运算符（`===`）。它们都有缺点，前者会自动转换数据类型，后者的`NaN`不等于自身，以及`+0`等于`-0`。JavaScript 缺乏一种运算，在所有环境中，只要两个值是一样的，它们就应该相等。\n\nES6 提出“Same-value equality”（同值相等）算法，用来解决这个问题。`Object.is`就是部署这个算法的新方法。它用来比较两个值是否严格相等，与严格比较运算符（===）的行为基本一致。\n\n```javascript\nObject.is(\'foo\', \'foo\')\n// true\nObject.is({}, {})\n// false\n```\n\n不同之处只有两个：一是`+0`不等于`-0`，二是`NaN`等于自身。\n\n```javascript\n+0 === -0 //true\nNaN === NaN // false\n\nObject.is(+0, -0) // false\nObject.is(NaN, NaN) // true\n```\n\nES5 可以通过下面的代码，部署`Object.is`。\n\n```javascript\nObject.defineProperty(Object, \'is\', {\n  value: function(x, y) {\n    if (x === y) {\n      // 针对+0 不等于 -0的情况\n      return x !== 0 || 1 / x === 1 / y;\n    }\n    // 针对NaN的情况\n    return x !== x && y !== y;\n  },\n  configurable: true,\n  enumerable: false,\n  writable: true\n});\n```\n\n## Object.assign()\n\n### 基本用法\n\n`Object.assign`方法用于对象的合并，将源对象（source）的所有可枚举属性，复制到目标对象（target）。\n\n```javascript\nconst target = { a: 1 };\n\nconst source1 = { b: 2 };\nconst source2 = { c: 3 };\n\nObject.assign(target, source1, source2);\ntarget // {a:1, b:2, c:3}\n```\n\n`Object.assign`方法的第一个参数是目标对象，后面的参数都是源对象。\n\n注意，如果目标对象与源对象有同名属性，或多个源对象有同名属性，则后面的属性会覆盖前面的属性。\n\n```javascript\nconst target = { a: 1, b: 1 };\n\nconst source1 = { b: 2, c: 2 };\nconst source2 = { c: 3 };\n\nObject.assign(target, source1, source2);\ntarget // {a:1, b:2, c:3}\n```\n\n如果只有一个参数，`Object.assign`会直接返回该参数。\n\n```javascript\nconst obj = {a: 1};\nObject.assign(obj) === obj // true\n```\n\n如果该参数不是对象，则会先转成对象，然后返回。\n\n```javascript\ntypeof Object.assign(2) // "object"\n```\n\n由于`undefined`和`null`无法转成对象，所以如果它们作为参数，就会报错。\n\n```javascript\nObject.assign(undefined) // 报错\nObject.assign(null) // 报错\n```\n\n如果非对象参数出现在源对象的位置（即非首参数），那么处理规则有所不同。首先，这些参数都会转成对象，如果无法转成对象，就会跳过。这意味着，如果`undefined`和`null`不在首参数，就不会报错。\n\n```javascript\nlet obj = {a: 1};\nObject.assign(obj, undefined) === obj // true\nObject.assign(obj, null) === obj // true\n```\n\n其他类型的值（即数值、字符串和布尔值）不在首参数，也不会报错。但是，除了字符串会以数组形式，拷贝入目标对象，其他值都不会产生效果。\n\n```javascript\nconst v1 = \'abc\';\nconst v2 = true;\nconst v3 = 10;\n\nconst obj = Object.assign({}, v1, v2, v3);\nconsole.log(obj); // { "0": "a", "1": "b", "2": "c" }\n```\n\n上面代码中，`v1`、`v2`、`v3`分别是字符串、布尔值和数值，结果只有字符串合入目标对象（以字符数组的形式），数值和布尔值都会被忽略。这是因为只有字符串的包装对象，会产生可枚举属性。\n\n```javascript\nObject(true) // {[[PrimitiveValue]]: true}\nObject(10)  //  {[[PrimitiveValue]]: 10}\nObject(\'abc\') // {0: "a", 1: "b", 2: "c", length: 3, [[PrimitiveValue]]: "abc"}\n```\n\n上面代码中，布尔值、数值、字符串分别转成对应的包装对象，可以看到它们的原始值都在包装对象的内部属性`[[PrimitiveValue]]`上面，这个属性是不会被`Object.assign`拷贝的。只有字符串的包装对象，会产生可枚举的实义属性，那些属性则会被拷贝。\n\n`Object.assign`拷贝的属性是有限制的，只拷贝源对象的自身属性（不拷贝继承属性），也不拷贝不可枚举的属性（`enumerable: false`）。\n\n```javascript\nObject.assign({b: \'c\'},\n  Object.defineProperty({}, \'invisible\', {\n    enumerable: false,\n    value: \'hello\'\n  })\n)\n// { b: \'c\' }\n```\n\n上面代码中，`Object.assign`要拷贝的对象只有一个不可枚举属性`invisible`，这个属性并没有被拷贝进去。\n\n属性名为 Symbol 值的属性，也会被`Object.assign`拷贝。\n\n```javascript\nObject.assign({ a: \'b\' }, { [Symbol(\'c\')]: \'d\' })\n// { a: \'b\', Symbol(c): \'d\' }\n```\n\n### 注意点\n\n**（1）浅拷贝**\n\n`Object.assign`方法实行的是浅拷贝，而不是深拷贝。也就是说，如果源对象某个属性的值是对象，那么目标对象拷贝得到的是这个对象的引用。\n\n```javascript\nconst obj1 = {a: {b: 1}};\nconst obj2 = Object.assign({}, obj1);\n\nobj1.a.b = 2;\nobj2.a.b // 2\n```\n\n上面代码中，源对象`obj1`的`a`属性的值是一个对象，`Object.assign`拷贝得到的是这个对象的引用。这个对象的任何变化，都会反映到目标对象上面。\n\n**（2）同名属性的替换**\n\n对于这种嵌套的对象，一旦遇到同名属性，`Object.assign`的处理方法是替换，而不是添加。\n\n```javascript\nconst target = { a: { b: \'c\', d: \'e\' } }\nconst source = { a: { b: \'hello\' } }\nObject.assign(target, source)\n// { a: { b: \'hello\' } }\n```\n\n上面代码中，`target`对象的`a`属性被`source`对象的`a`属性整个替换掉了，而不会得到`{ a: { b: \'hello\', d: \'e\' } }`的结果。这通常不是开发者想要的，需要特别小心。\n\n一些函数库提供`Object.assign`的定制版本（比如 Lodash 的`_.defaultsDeep`方法），可以得到深拷贝的合并。\n\n**（3）数组的处理**\n\n`Object.assign`可以用来处理数组，但是会把数组视为对象。\n\n```javascript\nObject.assign([1, 2, 3], [4, 5])\n// [4, 5, 3]\n```\n\n上面代码中，`Object.assign`把数组视为属性名为 0、1、2 的对象，因此源数组的 0 号属性`4`覆盖了目标数组的 0 号属性`1`。\n\n**（4）取值函数的处理**\n\n`Object.assign`只能进行值的复制，如果要复制的值是一个取值函数，那么将求值后再复制。\n\n```javascript\nconst source = {\n  get foo() { return 1 }\n};\nconst target = {};\n\nObject.assign(target, source)\n// { foo: 1 }\n```\n\n上面代码中，`source`对象的`foo`属性是一个取值函数，`Object.assign`不会复制这个取值函数，只会拿到值以后，将这个值复制过去。\n\n### 常见用途\n\n`Object.assign`方法有很多用处。\n\n**（1）为对象添加属性**\n\n```javascript\nclass Point {\n  constructor(x, y) {\n    Object.assign(this, {x, y});\n  }\n}\n```\n\n上面方法通过`Object.assign`方法，将`x`属性和`y`属性添加到`Point`类的对象实例。\n\n**（2）为对象添加方法**\n\n```javascript\nObject.assign(SomeClass.prototype, {\n  someMethod(arg1, arg2) {\n    ···\n  },\n  anotherMethod() {\n    ···\n  }\n});\n\n// 等同于下面的写法\nSomeClass.prototype.someMethod = function (arg1, arg2) {\n  ···\n};\nSomeClass.prototype.anotherMethod = function () {\n  ···\n};\n```\n\n上面代码使用了对象属性的简洁表示法，直接将两个函数放在大括号中，再使用`assign`方法添加到`SomeClass.prototype`之中。\n\n**（3）克隆对象**\n\n```javascript\nfunction clone(origin) {\n  return Object.assign({}, origin);\n}\n```\n\n上面代码将原始对象拷贝到一个空对象，就得到了原始对象的克隆。\n\n不过，采用这种方法克隆，只能克隆原始对象自身的值，不能克隆它继承的值。如果想要保持继承链，可以采用下面的代码。\n\n```javascript\nfunction clone(origin) {\n  let originProto = Object.getPrototypeOf(origin);\n  return Object.assign(Object.create(originProto), origin);\n}\n```\n\n**（4）合并多个对象**\n\n将多个对象合并到某个对象。\n\n```javascript\nconst merge =\n  (target, ...sources) => Object.assign(target, ...sources);\n```\n\n如果希望合并后返回一个新对象，可以改写上面函数，对一个空对象合并。\n\n```javascript\nconst merge =\n  (...sources) => Object.assign({}, ...sources);\n```\n\n**（5）为属性指定默认值**\n\n```javascript\nconst DEFAULTS = {\n  logLevel: 0,\n  outputFormat: \'html\'\n};\n\nfunction processContent(options) {\n  options = Object.assign({}, DEFAULTS, options);\n  console.log(options);\n  // ...\n}\n```\n\n上面代码中，`DEFAULTS`对象是默认值，`options`对象是用户提供的参数。`Object.assign`方法将`DEFAULTS`和`options`合并成一个新对象，如果两者有同名属性，则`option`的属性值会覆盖`DEFAULTS`的属性值。\n\n注意，由于存在浅拷贝的问题，`DEFAULTS`对象和`options`对象的所有属性的值，最好都是简单类型，不要指向另一个对象。否则，`DEFAULTS`对象的该属性很可能不起作用。\n\n```javascript\nconst DEFAULTS = {\n  url: {\n    host: \'example.com\',\n    port: 7070\n  },\n};\n\nprocessContent({ url: {port: 8000} })\n// {\n//   url: {port: 8000}\n// }\n```\n\n上面代码的原意是将`url.port`改成 8000，`url.host`不变。实际结果却是`options.url`覆盖掉`DEFAULTS.url`，所以`url.host`就不存在了。\n\n## 属性的可枚举性和遍历\n\n### 可枚举性\n\n对象的每个属性都有一个描述对象（Descriptor），用来控制该属性的行为。`Object.getOwnPropertyDescriptor`方法可以获取该属性的描述对象。\n\n```javascript\nlet obj = { foo: 123 };\nObject.getOwnPropertyDescriptor(obj, \'foo\')\n//  {\n//    value: 123,\n//    writable: true,\n//    enumerable: true,\n//    configurable: true\n//  }\n```\n\n描述对象的`enumerable`属性，称为”可枚举性“，如果该属性为`false`，就表示某些操作会忽略当前属性。\n\n目前，有四个操作会忽略`enumerable`为`false`的属性。\n\n- `for...in`循环：只遍历对象自身的和继承的可枚举的属性。\n- `Object.keys()`：返回对象自身的所有可枚举的属性的键名。\n- `JSON.stringify()`：只串行化对象自身的可枚举的属性。\n- `Object.assign()`： 忽略`enumerable`为`false`的属性，只拷贝对象自身的可枚举的属性。\n\n这四个操作之中，前三个是 ES5 就有的，最后一个`Object.assign()`是 ES6 新增的。其中，只有`for...in`会返回继承的属性，其他三个方法都会忽略继承的属性，只处理对象自身的属性。实际上，引入“可枚举”（`enumerable`）这个概念的最初目的，就是让某些属性可以规避掉`for...in`操作，不然所有内部属性和方法都会被遍历到。比如，对象原型的`toString`方法，以及数组的`length`属性，就通过“可枚举性”，从而避免被`for...in`遍历到。\n\n```javascript\nObject.getOwnPropertyDescriptor(Object.prototype, \'toString\').enumerable\n// false\n\nObject.getOwnPropertyDescriptor([], \'length\').enumerable\n// false\n```\n\n上面代码中，`toString`和`length`属性的`enumerable`都是`false`，因此`for...in`不会遍历到这两个继承自原型的属性。\n\n另外，ES6 规定，所有 Class 的原型的方法都是不可枚举的。\n\n```javascript\nObject.getOwnPropertyDescriptor(class {foo() {}}.prototype, \'foo\').enumerable\n// false\n```\n\n总的来说，操作中引入继承的属性会让问题复杂化，大多数时候，我们只关心对象自身的属性。所以，尽量不要用`for...in`循环，而用`Object.keys()`代替。\n\n### 属性的遍历\n\nES6 一共有 5 种方法可以遍历对象的属性。\n\n**（1）for...in**\n\n`for...in`循环遍历对象自身的和继承的可枚举属性（不含 Symbol 属性）。\n\n**（2）Object.keys(obj)**\n\n`Object.keys`返回一个数组，包括对象自身的（不含继承的）所有可枚举属性（不含 Symbol 属性）的键名。\n\n**（3）Object.getOwnPropertyNames(obj)**\n\n`Object.getOwnPropertyNames`返回一个数组，包含对象自身的所有属性（不含 Symbol 属性，但是包括不可枚举属性）的键名。\n\n**（4）Object.getOwnPropertySymbols(obj)**\n\n`Object.getOwnPropertySymbols`返回一个数组，包含对象自身的所有 Symbol 属性的键名。\n\n**（5）Reflect.ownKeys(obj)**\n\n`Reflect.ownKeys`返回一个数组，包含对象自身的所有键名，不管键名是 Symbol 或字符串，也不管是否可枚举。\n\n以上的 5 种方法遍历对象的键名，都遵守同样的属性遍历的次序规则。\n\n- 首先遍历所有数值键，按照数值升序排列。\n- 其次遍历所有字符串键，按照加入时间升序排列。\n- 最后遍历所有 Symbol 键，按照加入时间升序排列。\n\n```javascript\nReflect.ownKeys({ [Symbol()]:0, b:0, 10:0, 2:0, a:0 })\n// [\'2\', \'10\', \'b\', \'a\', Symbol()]\n```\n\n上面代码中，`Reflect.ownKeys`方法返回一个数组，包含了参数对象的所有属性。这个数组的属性次序是这样的，首先是数值属性`2`和`10`，其次是字符串属性`b`和`a`，最后是 Symbol 属性。\n\n## Object.getOwnPropertyDescriptors()\n\n前面说过，`Object.getOwnPropertyDescriptor`方法会返回某个对象属性的描述对象（descriptor）。ES2017 引入了`Object.getOwnPropertyDescriptors`方法，返回指定对象所有自身属性（非继承属性）的描述对象。\n\n```javascript\nconst obj = {\n  foo: 123,\n  get bar() { return \'abc\' }\n};\n\nObject.getOwnPropertyDescriptors(obj)\n// { foo:\n//    { value: 123,\n//      writable: true,\n//      enumerable: true,\n//      configurable: true },\n//   bar:\n//    { get: [Function: get bar],\n//      set: undefined,\n//      enumerable: true,\n//      configurable: true } }\n```\n\n上面代码中，`Object.getOwnPropertyDescriptors`方法返回一个对象，所有原对象的属性名都是该对象的属性名，对应的属性值就是该属性的描述对象。\n\n该方法的实现非常容易。\n\n```javascript\nfunction getOwnPropertyDescriptors(obj) {\n  const result = {};\n  for (let key of Reflect.ownKeys(obj)) {\n    result[key] = Object.getOwnPropertyDescriptor(obj, key);\n  }\n  return result;\n}\n```\n\n该方法的引入目的，主要是为了解决`Object.assign()`无法正确拷贝`get`属性和`set`属性的问题。\n\n```javascript\nconst source = {\n  set foo(value) {\n    console.log(value);\n  }\n};\n\nconst target1 = {};\nObject.assign(target1, source);\n\nObject.getOwnPropertyDescriptor(target1, \'foo\')\n// { value: undefined,\n//   writable: true,\n//   enumerable: true,\n//   configurable: true }\n```\n\n上面代码中，`source`对象的`foo`属性的值是一个赋值函数，`Object.assign`方法将这个属性拷贝给`target1`对象，结果该属性的值变成了`undefined`。这是因为`Object.assign`方法总是拷贝一个属性的值，而不会拷贝它背后的赋值方法或取值方法。\n\n这时，`Object.getOwnPropertyDescriptors`方法配合`Object.defineProperties`方法，就可以实现正确拷贝。\n\n```javascript\nconst source = {\n  set foo(value) {\n    console.log(value);\n  }\n};\n\nconst target2 = {};\nObject.defineProperties(target2, Object.getOwnPropertyDescriptors(source));\nObject.getOwnPropertyDescriptor(target2, \'foo\')\n// { get: undefined,\n//   set: [Function: set foo],\n//   enumerable: true,\n//   configurable: true }\n```\n\n上面代码中，两个对象合并的逻辑可以写成一个函数。\n\n```javascript\nconst shallowMerge = (target, source) => Object.defineProperties(\n  target,\n  Object.getOwnPropertyDescriptors(source)\n);\n```\n\n`Object.getOwnPropertyDescriptors`方法的另一个用处，是配合`Object.create`方法，将对象属性克隆到一个新对象。这属于浅拷贝。\n\n```javascript\nconst clone = Object.create(Object.getPrototypeOf(obj),\n  Object.getOwnPropertyDescriptors(obj));\n\n// 或者\n\nconst shallowClone = (obj) => Object.create(\n  Object.getPrototypeOf(obj),\n  Object.getOwnPropertyDescriptors(obj)\n);\n```\n\n上面代码会克隆对象`obj`。\n\n另外，`Object.getOwnPropertyDescriptors`方法可以实现一个对象继承另一个对象。以前，继承另一个对象，常常写成下面这样。\n\n```javascript\nconst obj = {\n  __proto__: prot,\n  foo: 123,\n};\n```\n\nES6 规定`__proto__`只有浏览器要部署，其他环境不用部署。如果去除`__proto__`，上面代码就要改成下面这样。\n\n```javascript\nconst obj = Object.create(prot);\nobj.foo = 123;\n\n// 或者\n\nconst obj = Object.assign(\n  Object.create(prot),\n  {\n    foo: 123,\n  }\n);\n```\n\n有了`Object.getOwnPropertyDescriptors`，我们就有了另一种写法。\n\n```javascript\nconst obj = Object.create(\n  prot,\n  Object.getOwnPropertyDescriptors({\n    foo: 123,\n  })\n);\n```\n\n`Object.getOwnPropertyDescriptors`也可以用来实现 Mixin（混入）模式。\n\n```javascript\nlet mix = (object) => ({\n  with: (...mixins) => mixins.reduce(\n    (c, mixin) => Object.create(\n      c, Object.getOwnPropertyDescriptors(mixin)\n    ), object)\n});\n\n// multiple mixins example\nlet a = {a: \'a\'};\nlet b = {b: \'b\'};\nlet c = {c: \'c\'};\nlet d = mix(c).with(a, b);\n\nd.c // "c"\nd.b // "b"\nd.a // "a"\n```\n\n上面代码返回一个新的对象`d`，代表了对象`a`和`b`被混入了对象`c`的操作。\n\n出于完整性的考虑，`Object.getOwnPropertyDescriptors`进入标准以后，以后还会新增`Reflect.getOwnPropertyDescriptors`方法。\n\n## `__proto__`属性，Object.setPrototypeOf()，Object.getPrototypeOf()\n\nJavaScript 语言的对象继承是通过原型链实现的。ES6 提供了更多原型对象的操作方法。\n\n### `__proto__`属性\n\n`__proto__`属性（前后各两个下划线），用来读取或设置当前对象的`prototype`对象。目前，所有浏览器（包括 IE11）都部署了这个属性。\n\n```javascript\n// es5 的写法\nconst obj = {\n  method: function() { ... }\n};\nobj.__proto__ = someOtherObj;\n\n// es6 的写法\nvar obj = Object.create(someOtherObj);\nobj.method = function() { ... };\n```\n\n该属性没有写入 ES6 的正文，而是写入了附录，原因是`__proto__`前后的双下划线，说明它本质上是一个内部属性，而不是一个正式的对外的 API，只是由于浏览器广泛支持，才被加入了 ES6。标准明确规定，只有浏览器必须部署这个属性，其他运行环境不一定需要部署，而且新的代码最好认为这个属性是不存在的。因此，无论从语义的角度，还是从兼容性的角度，都不要使用这个属性，而是使用下面的`Object.setPrototypeOf()`（写操作）、`Object.getPrototypeOf()`（读操作）、`Object.create()`（生成操作）代替。\n\n实现上，`__proto__`调用的是`Object.prototype.__proto__`，具体实现如下。\n\n```javascript\nObject.defineProperty(Object.prototype, \'__proto__\', {\n  get() {\n    let _thisObj = Object(this);\n    return Object.getPrototypeOf(_thisObj);\n  },\n  set(proto) {\n    if (this === undefined || this === null) {\n      throw new TypeError();\n    }\n    if (!isObject(this)) {\n      return undefined;\n    }\n    if (!isObject(proto)) {\n      return undefined;\n    }\n    let status = Reflect.setPrototypeOf(this, proto);\n    if (!status) {\n      throw new TypeError();\n    }\n  },\n});\n\nfunction isObject(value) {\n  return Object(value) === value;\n}\n```\n\n如果一个对象本身部署了`__proto__`属性，该属性的值就是对象的原型。\n\n```javascript\nObject.getPrototypeOf({ __proto__: null })\n// null\n```\n\n### Object.setPrototypeOf()\n\n`Object.setPrototypeOf`方法的作用与`__proto__`相同，用来设置一个对象的`prototype`对象，返回参数对象本身。它是 ES6 正式推荐的设置原型对象的方法。\n\n```javascript\n// 格式\nObject.setPrototypeOf(object, prototype)\n\n// 用法\nconst o = Object.setPrototypeOf({}, null);\n```\n\n该方法等同于下面的函数。\n\n```javascript\nfunction (obj, proto) {\n  obj.__proto__ = proto;\n  return obj;\n}\n```\n\n下面是一个例子。\n\n```javascript\nlet proto = {};\nlet obj = { x: 10 };\nObject.setPrototypeOf(obj, proto);\n\nproto.y = 20;\nproto.z = 40;\n\nobj.x // 10\nobj.y // 20\nobj.z // 40\n```\n\n上面代码将`proto`对象设为`obj`对象的原型，所以从`obj`对象可以读取`proto`对象的属性。\n\n如果第一个参数不是对象，会自动转为对象。但是由于返回的还是第一个参数，所以这个操作不会产生任何效果。\n\n```javascript\nObject.setPrototypeOf(1, {}) === 1 // true\nObject.setPrototypeOf(\'foo\', {}) === \'foo\' // true\nObject.setPrototypeOf(true, {}) === true // true\n```\n\n由于`undefined`和`null`无法转为对象，所以如果第一个参数是`undefined`或`null`，就会报错。\n\n```javascript\nObject.setPrototypeOf(undefined, {})\n// TypeError: Object.setPrototypeOf called on null or undefined\n\nObject.setPrototypeOf(null, {})\n// TypeError: Object.setPrototypeOf called on null or undefined\n```\n\n### Object.getPrototypeOf()\n\n该方法与`Object.setPrototypeOf`方法配套，用于读取一个对象的原型对象。\n\n```javascript\nObject.getPrototypeOf(obj);\n```\n\n下面是一个例子。\n\n```javascript\nfunction Rectangle() {\n  // ...\n}\n\nconst rec = new Rectangle();\n\nObject.getPrototypeOf(rec) === Rectangle.prototype\n// true\n\nObject.setPrototypeOf(rec, Object.prototype);\nObject.getPrototypeOf(rec) === Rectangle.prototype\n// false\n```\n\n如果参数不是对象，会被自动转为对象。\n\n```javascript\n// 等同于 Object.getPrototypeOf(Number(1))\nObject.getPrototypeOf(1)\n// Number {[[PrimitiveValue]]: 0}\n\n// 等同于 Object.getPrototypeOf(String(\'foo\'))\nObject.getPrototypeOf(\'foo\')\n// String {length: 0, [[PrimitiveValue]]: ""}\n\n// 等同于 Object.getPrototypeOf(Boolean(true))\nObject.getPrototypeOf(true)\n// Boolean {[[PrimitiveValue]]: false}\n\nObject.getPrototypeOf(1) === Number.prototype // true\nObject.getPrototypeOf(\'foo\') === String.prototype // true\nObject.getPrototypeOf(true) === Boolean.prototype // true\n```\n\n如果参数是`undefined`或`null`，它们无法转为对象，所以会报错。\n\n```javascript\nObject.getPrototypeOf(null)\n// TypeError: Cannot convert undefined or null to object\n\nObject.getPrototypeOf(undefined)\n// TypeError: Cannot convert undefined or null to object\n```\n\n## super 关键字\n\n我们知道，`this`关键字总是指向函数所在的当前对象，ES6 又新增了另一个类似的关键字`super`，指向当前对象的原型对象。\n\n```javascript\nconst proto = {\n  foo: \'hello\'\n};\n\nconst obj = {\n  foo: \'world\',\n  find() {\n    return super.foo;\n  }\n};\n\nObject.setPrototypeOf(obj, proto);\nobj.find() // "hello"\n```\n\n上面代码中，对象`obj`的`find`方法之中，通过`super.foo`引用了原型对象`proto`的`foo`属性。\n\n注意，`super`关键字表示原型对象时，只能用在对象的方法之中，用在其他地方都会报错。\n\n```javascript\n// 报错\nconst obj = {\n  foo: super.foo\n}\n\n// 报错\nconst obj = {\n  foo: () => super.foo\n}\n\n// 报错\nconst obj = {\n  foo: function () {\n    return super.foo\n  }\n}\n```\n\n上面三种`super`的用法都会报错，因为对于 JavaScript 引擎来说，这里的`super`都没有用在对象的方法之中。第一种写法是`super`用在属性里面，第二种和第三种写法是`super`用在一个函数里面，然后赋值给`foo`属性。目前，只有对象方法的简写法可以让 JavaScript 引擎确认，定义的是对象的方法。\n\nJavaScript 引擎内部，`super.foo`等同于`Object.getPrototypeOf(this).foo`（属性）或`Object.getPrototypeOf(this).foo.call(this)`（方法）。\n\n```javascript\nconst proto = {\n  x: \'hello\',\n  foo() {\n    console.log(this.x);\n  },\n};\n\nconst obj = {\n  x: \'world\',\n  foo() {\n    super.foo();\n  }\n}\n\nObject.setPrototypeOf(obj, proto);\n\nobj.foo() // "world"\n```\n\n上面代码中，`super.foo`指向原型对象`proto`的`foo`方法，但是绑定的`this`却还是当前对象`obj`，因此输出的就是`world`。\n\n## Object.keys()，Object.values()，Object.entries()\n\n### Object.keys()\n\nES5 引入了`Object.keys`方法，返回一个数组，成员是参数对象自身的（不含继承的）所有可遍历（enumerable）属性的键名。\n\n```javascript\nvar obj = { foo: \'bar\', baz: 42 };\nObject.keys(obj)\n// ["foo", "baz"]\n```\n\nES2017 [引入](https://github.com/tc39/proposal-object-values-entries)了跟`Object.keys`配套的`Object.values`和`Object.entries`，作为遍历一个对象的补充手段，供`for...of`循环使用。\n\n```javascript\nlet {keys, values, entries} = Object;\nlet obj = { a: 1, b: 2, c: 3 };\n\nfor (let key of keys(obj)) {\n  console.log(key); // \'a\', \'b\', \'c\'\n}\n\nfor (let value of values(obj)) {\n  console.log(value); // 1, 2, 3\n}\n\nfor (let [key, value] of entries(obj)) {\n  console.log([key, value]); // [\'a\', 1], [\'b\', 2], [\'c\', 3]\n}\n```\n\n### Object.values()\n\n`Object.values`方法返回一个数组，成员是参数对象自身的（不含继承的）所有可遍历（enumerable）属性的键值。\n\n```javascript\nconst obj = { foo: \'bar\', baz: 42 };\nObject.values(obj)\n// ["bar", 42]\n```\n\n返回数组的成员顺序，与本章的《属性的遍历》部分介绍的排列规则一致。\n\n```javascript\nconst obj = { 100: \'a\', 2: \'b\', 7: \'c\' };\nObject.values(obj)\n// ["b", "c", "a"]\n```\n\n上面代码中，属性名为数值的属性，是按照数值大小，从小到大遍历的，因此返回的顺序是`b`、`c`、`a`。\n\n`Object.values`只返回对象自身的可遍历属性。\n\n```javascript\nconst obj = Object.create({}, {p: {value: 42}});\nObject.values(obj) // []\n```\n\n上面代码中，`Object.create`方法的第二个参数添加的对象属性（属性`p`），如果不显式声明，默认是不可遍历的，因为`p`的属性描述对象的`enumerable`默认是`false`，`Object.values`不会返回这个属性。只要把`enumerable`改成`true`，`Object.values`就会返回属性`p`的值。\n\n```javascript\nconst obj = Object.create({}, {p:\n  {\n    value: 42,\n    enumerable: true\n  }\n});\nObject.values(obj) // [42]\n```\n\n`Object.values`会过滤属性名为 Symbol 值的属性。\n\n```javascript\nObject.values({ [Symbol()]: 123, foo: \'abc\' });\n// [\'abc\']\n```\n\n如果`Object.values`方法的参数是一个字符串，会返回各个字符组成的一个数组。\n\n```javascript\nObject.values(\'foo\')\n// [\'f\', \'o\', \'o\']\n```\n\n上面代码中，字符串会先转成一个类似数组的对象。字符串的每个字符，就是该对象的一个属性。因此，`Object.values`返回每个属性的键值，就是各个字符组成的一个数组。\n\n如果参数不是对象，`Object.values`会先将其转为对象。由于数值和布尔值的包装对象，都不会为实例添加非继承的属性。所以，`Object.values`会返回空数组。\n\n```javascript\nObject.values(42) // []\nObject.values(true) // []\n```\n\n### Object.entries\n\n`Object.entries`方法返回一个数组，成员是参数对象自身的（不含继承的）所有可遍历（enumerable）属性的键值对数组。\n\n```javascript\nconst obj = { foo: \'bar\', baz: 42 };\nObject.entries(obj)\n// [ ["foo", "bar"], ["baz", 42] ]\n```\n\n除了返回值不一样，该方法的行为与`Object.values`基本一致。\n\n如果原对象的属性名是一个 Symbol 值，该属性会被忽略。\n\n```javascript\nObject.entries({ [Symbol()]: 123, foo: \'abc\' });\n// [ [ \'foo\', \'abc\' ] ]\n```\n\n上面代码中，原对象有两个属性，`Object.entries`只输出属性名非 Symbol 值的属性。将来可能会有`Reflect.ownEntries()`方法，返回对象自身的所有属性。\n\n`Object.entries`的基本用途是遍历对象的属性。\n\n```javascript\nlet obj = { one: 1, two: 2 };\nfor (let [k, v] of Object.entries(obj)) {\n  console.log(\n    `${JSON.stringify(k)}: ${JSON.stringify(v)}`\n  );\n}\n// "one": 1\n// "two": 2\n```\n\n`Object.entries`方法的另一个用处是，将对象转为真正的`Map`结构。\n\n```javascript\nconst obj = { foo: \'bar\', baz: 42 };\nconst map = new Map(Object.entries(obj));\nmap // Map { foo: "bar", baz: 42 }\n```\n\n自己实现`Object.entries`方法，非常简单。\n\n```javascript\n// Generator函数的版本\nfunction* entries(obj) {\n  for (let key of Object.keys(obj)) {\n    yield [key, obj[key]];\n  }\n}\n\n// 非Generator函数的版本\nfunction entries(obj) {\n  let arr = [];\n  for (let key of Object.keys(obj)) {\n    arr.push([key, obj[key]]);\n  }\n  return arr;\n}\n```\n\n## 对象的扩展运算符\n\n《数组的扩展》一章中，已经介绍过扩展运算符（`...`）。\n\n```javascript\nconst [a, ...b] = [1, 2, 3];\na // 1\nb // [2, 3]\n```\n\nES2018 将这个运算符[引入](https://github.com/sebmarkbage/ecmascript-rest-spread)了对象。\n\n### 解构赋值\n\n对象的解构赋值用于从一个对象取值，相当于将目标对象自身的所有可遍历的（enumerable）、但尚未被读取的属性，分配到指定的对象上面。所有的键和它们的值，都会拷贝到新对象上面。\n\n```javascript\nlet { x, y, ...z } = { x: 1, y: 2, a: 3, b: 4 };\nx // 1\ny // 2\nz // { a: 3, b: 4 }\n```\n\n上面代码中，变量`z`是解构赋值所在的对象。它获取等号右边的所有尚未读取的键（`a`和`b`），将它们连同值一起拷贝过来。\n\n由于解构赋值要求等号右边是一个对象，所以如果等号右边是`undefined`或`null`，就会报错，因为它们无法转为对象。\n\n```javascript\nlet { x, y, ...z } = null; // 运行时错误\nlet { x, y, ...z } = undefined; // 运行时错误\n```\n\n解构赋值必须是最后一个参数，否则会报错。\n\n```javascript\nlet { ...x, y, z } = obj; // 句法错误\nlet { x, ...y, ...z } = obj; // 句法错误\n```\n\n上面代码中，解构赋值不是最后一个参数，所以会报错。\n\n注意，解构赋值的拷贝是浅拷贝，即如果一个键的值是复合类型的值（数组、对象、函数）、那么解构赋值拷贝的是这个值的引用，而不是这个值的副本。\n\n```javascript\nlet obj = { a: { b: 1 } };\nlet { ...x } = obj;\nobj.a.b = 2;\nx.a.b // 2\n```\n\n上面代码中，`x`是解构赋值所在的对象，拷贝了对象`obj`的`a`属性。`a`属性引用了一个对象，修改这个对象的值，会影响到解构赋值对它的引用。\n\n另外，扩展运算符的解构赋值，不能复制继承自原型对象的属性。\n\n```javascript\nlet o1 = { a: 1 };\nlet o2 = { b: 2 };\no2.__proto__ = o1;\nlet { ...o3 } = o2;\no3 // { b: 2 }\no3.a // undefined\n```\n\n上面代码中，对象`o3`复制了`o2`，但是只复制了`o2`自身的属性，没有复制它的原型对象`o1`的属性。\n\n下面是另一个例子。\n\n```javascript\nconst o = Object.create({ x: 1, y: 2 });\no.z = 3;\n\nlet { x, ...newObj } = o;\nlet { y, z } = newObj;\nx // 1\ny // undefined\nz // 3\n```\n\n上面代码中，变量`x`是单纯的解构赋值，所以可以读取对象`o`继承的属性；变量`y`和`z`是扩展运算符的解构赋值，只能读取对象`o`自身的属性，所以变量`z`可以赋值成功，变量`y`取不到值。ES6 规定，变量声明语句之中，如果使用解构赋值，扩展运算符后面必须是一个变量名，而不能是一个解构赋值表达式，所以上面代码引入了中间变量`newObj`，如果写成下面这样会报错。\n\n```javascript\nlet { x, ...{ y, z } } = o;\n// SyntaxError: ... must be followed by an identifier in declaration contexts\n```\n\n解构赋值的一个用处，是扩展某个函数的参数，引入其他操作。\n\n```javascript\nfunction baseFunction({ a, b }) {\n  // ...\n}\nfunction wrapperFunction({ x, y, ...restConfig }) {\n  // 使用 x 和 y 参数进行操作\n  // 其余参数传给原始函数\n  return baseFunction(restConfig);\n}\n```\n\n上面代码中，原始函数`baseFunction`接受`a`和`b`作为参数，函数`wrapperFunction`在`baseFunction`的基础上进行了扩展，能够接受多余的参数，并且保留原始函数的行为。\n\n### 扩展运算符\n\n对象的扩展运算符（`...`）用于取出参数对象的所有可遍历属性，拷贝到当前对象之中。\n\n```javascript\nlet z = { a: 3, b: 4 };\nlet n = { ...z };\nn // { a: 3, b: 4 }\n```\n\n这等同于使用`Object.assign`方法。\n\n```javascript\nlet aClone = { ...a };\n// 等同于\nlet aClone = Object.assign({}, a);\n```\n\n上面的例子只是拷贝了对象实例的属性，如果想完整克隆一个对象，还拷贝对象原型的属性，可以采用下面的写法。\n\n```javascript\n// 写法一\nconst clone1 = {\n  __proto__: Object.getPrototypeOf(obj),\n  ...obj\n};\n\n// 写法二\nconst clone2 = Object.assign(\n  Object.create(Object.getPrototypeOf(obj)),\n  obj\n);\n\n// 写法三\nconst clone3 = Object.create(\n  Object.getPrototypeOf(obj),\n  Object.getOwnPropertyDescriptors(obj)\n)\n```\n\n上面代码中，写法一的`__proto__`属性在非浏览器的环境不一定部署，因此推荐使用写法二和写法三。\n\n扩展运算符可以用于合并两个对象。\n\n```javascript\nlet ab = { ...a, ...b };\n// 等同于\nlet ab = Object.assign({}, a, b);\n```\n\n如果用户自定义的属性，放在扩展运算符后面，则扩展运算符内部的同名属性会被覆盖掉。\n\n```javascript\nlet aWithOverrides = { ...a, x: 1, y: 2 };\n// 等同于\nlet aWithOverrides = { ...a, ...{ x: 1, y: 2 } };\n// 等同于\nlet x = 1, y = 2, aWithOverrides = { ...a, x, y };\n// 等同于\nlet aWithOverrides = Object.assign({}, a, { x: 1, y: 2 });\n```\n\n上面代码中，`a`对象的`x`属性和`y`属性，拷贝到新对象后会被覆盖掉。\n\n这用来修改现有对象部分的属性就很方便了。\n\n```javascript\nlet newVersion = {\n  ...previousVersion,\n  name: \'New Name\' // Override the name property\n};\n```\n\n上面代码中，`newVersion`对象自定义了`name`属性，其他属性全部复制自`previousVersion`对象。\n\n如果把自定义属性放在扩展运算符前面，就变成了设置新对象的默认属性值。\n\n```javascript\nlet aWithDefaults = { x: 1, y: 2, ...a };\n// 等同于\nlet aWithDefaults = Object.assign({}, { x: 1, y: 2 }, a);\n// 等同于\nlet aWithDefaults = Object.assign({ x: 1, y: 2 }, a);\n```\n\n与数组的扩展运算符一样，对象的扩展运算符后面可以跟表达式。\n\n```javascript\nconst obj = {\n  ...(x > 1 ? {a: 1} : {}),\n  b: 2,\n};\n```\n\n如果扩展运算符后面是一个空对象，则没有任何效果。\n\n```javascript\n{...{}, a: 1}\n// { a: 1 }\n```\n\n如果扩展运算符的参数是`null`或`undefined`，这两个值会被忽略，不会报错。\n\n```javascript\nlet emptyObject = { ...null, ...undefined }; // 不报错\n```\n\n扩展运算符的参数对象之中，如果有取值函数`get`，这个函数是会执行的。\n\n```javascript\n// 并不会抛出错误，因为 x 属性只是被定义，但没执行\nlet aWithXGetter = {\n  ...a,\n  get x() {\n    throw new Error(\'not throw yet\');\n  }\n};\n\n// 会抛出错误，因为 x 属性被执行了\nlet runtimeError = {\n  ...a,\n  ...{\n    get x() {\n      throw new Error(\'throw now\');\n    }\n  }\n};\n```\n\n\n\n# Symbol\n\n1. [概述](http://es6.ruanyifeng.com/#docs/symbol#%E6%A6%82%E8%BF%B0)\n2. [作为属性名的 Symbol](http://es6.ruanyifeng.com/#docs/symbol#%E4%BD%9C%E4%B8%BA%E5%B1%9E%E6%80%A7%E5%90%8D%E7%9A%84%20Symbol)\n3. [实例：消除魔术字符串](http://es6.ruanyifeng.com/#docs/symbol#%E5%AE%9E%E4%BE%8B%EF%BC%9A%E6%B6%88%E9%99%A4%E9%AD%94%E6%9C%AF%E5%AD%97%E7%AC%A6%E4%B8%B2)\n4. [属性名的遍历](http://es6.ruanyifeng.com/#docs/symbol#%E5%B1%9E%E6%80%A7%E5%90%8D%E7%9A%84%E9%81%8D%E5%8E%86)\n5. [Symbol.for()，Symbol.keyFor()](http://es6.ruanyifeng.com/#docs/symbol#Symbol.for()%EF%BC%8CSymbol.keyFor())\n6. [实例：模块的 Singleton 模式](http://es6.ruanyifeng.com/#docs/symbol#%E5%AE%9E%E4%BE%8B%EF%BC%9A%E6%A8%A1%E5%9D%97%E7%9A%84%20Singleton%20%E6%A8%A1%E5%BC%8F)\n7. [内置的 Symbol 值](http://es6.ruanyifeng.com/#docs/symbol#%E5%86%85%E7%BD%AE%E7%9A%84%20Symbol%20%E5%80%BC)\n\n## 概述\n\nES5 的对象属性名都是字符串，这容易造成属性名的冲突。比如，你使用了一个他人提供的对象，但又想为这个对象添加新的方法（mixin 模式），新方法的名字就有可能与现有方法产生冲突。如果有一种机制，保证每个属性的名字都是独一无二的就好了，这样就从根本上防止属性名的冲突。这就是 ES6 引入`Symbol`的原因。\n\nES6 引入了一种新的原始数据类型`Symbol`，表示独一无二的值。它是 JavaScript 语言的第七种数据类型，前六种是：`undefined`、`null`、布尔值（Boolean）、字符串（String）、数值（Number）、对象（Object）。\n\nSymbol 值通过`Symbol`函数生成。这就是说，对象的属性名现在可以有两种类型，一种是原来就有的字符串，另一种就是新增的 Symbol 类型。凡是属性名属于 Symbol 类型，就都是独一无二的，可以保证不会与其他属性名产生冲突。\n\n```javascript\nlet s = Symbol();\n\ntypeof s\n// "symbol"\n```\n\n上面代码中，变量`s`就是一个独一无二的值。`typeof`运算符的结果，表明变量`s`是 Symbol 数据类型，而不是字符串之类的其他类型。\n\n注意，`Symbol`函数前不能使用`new`命令，否则会报错。这是因为生成的 Symbol 是一个原始类型的值，不是对象。也就是说，由于 Symbol 值不是对象，所以不能添加属性。基本上，它是一种类似于字符串的数据类型。\n\n`Symbol`函数可以接受一个字符串作为参数，表示对 Symbol 实例的描述，主要是为了在控制台显示，或者转为字符串时，比较容易区分。\n\n```javascript\nlet s1 = Symbol(\'foo\');\nlet s2 = Symbol(\'bar\');\n\ns1 // Symbol(foo)\ns2 // Symbol(bar)\n\ns1.toString() // "Symbol(foo)"\ns2.toString() // "Symbol(bar)"\n```\n\n上面代码中，`s1`和`s2`是两个 Symbol 值。如果不加参数，它们在控制台的输出都是`Symbol()`，不利于区分。有了参数以后，就等于为它们加上了描述，输出的时候就能够分清，到底是哪一个值。\n\n如果 Symbol 的参数是一个对象，就会调用该对象的`toString`方法，将其转为字符串，然后才生成一个 Symbol 值。\n\n```javascript\nconst obj = {\n  toString() {\n    return \'abc\';\n  }\n};\nconst sym = Symbol(obj);\nsym // Symbol(abc)\n```\n\n注意，`Symbol`函数的参数只是表示对当前 Symbol 值的描述，因此相同参数的`Symbol`函数的返回值是不相等的。\n\n```javascript\n// 没有参数的情况\nlet s1 = Symbol();\nlet s2 = Symbol();\n\ns1 === s2 // false\n\n// 有参数的情况\nlet s1 = Symbol(\'foo\');\nlet s2 = Symbol(\'foo\');\n\ns1 === s2 // false\n```\n\n上面代码中，`s1`和`s2`都是`Symbol`函数的返回值，而且参数相同，但是它们是不相等的。\n\nSymbol 值不能与其他类型的值进行运算，会报错。\n\n```javascript\nlet sym = Symbol(\'My symbol\');\n\n"your symbol is " + sym\n// TypeError: can\'t convert symbol to string\n`your symbol is ${sym}`\n// TypeError: can\'t convert symbol to string\n```\n\n但是，Symbol 值可以显式转为字符串。\n\n```javascript\nlet sym = Symbol(\'My symbol\');\n\nString(sym) // \'Symbol(My symbol)\'\nsym.toString() // \'Symbol(My symbol)\'\n```\n\n另外，Symbol 值也可以转为布尔值，但是不能转为数值。\n\n```javascript\nlet sym = Symbol();\nBoolean(sym) // true\n!sym  // false\n\nif (sym) {\n  // ...\n}\n\nNumber(sym) // TypeError\nsym + 2 // TypeError\n```\n\n## 作为属性名的 Symbol\n\n由于每一个 Symbol 值都是不相等的，这意味着 Symbol 值可以作为标识符，用于对象的属性名，就能保证不会出现同名的属性。这对于一个对象由多个模块构成的情况非常有用，能防止某一个键被不小心改写或覆盖。\n\n```javascript\nlet mySymbol = Symbol();\n\n// 第一种写法\nlet a = {};\na[mySymbol] = \'Hello!\';\n\n// 第二种写法\nlet a = {\n  [mySymbol]: \'Hello!\'\n};\n\n// 第三种写法\nlet a = {};\nObject.defineProperty(a, mySymbol, { value: \'Hello!\' });\n\n// 以上写法都得到同样结果\na[mySymbol] // "Hello!"\n```\n\n上面代码通过方括号结构和`Object.defineProperty`，将对象的属性名指定为一个 Symbol 值。\n\n注意，Symbol 值作为对象属性名时，不能用点运算符。\n\n```javascript\nconst mySymbol = Symbol();\nconst a = {};\n\na.mySymbol = \'Hello!\';\na[mySymbol] // undefined\na[\'mySymbol\'] // "Hello!"\n```\n\n上面代码中，因为点运算符后面总是字符串，所以不会读取`mySymbol`作为标识名所指代的那个值，导致`a`的属性名实际上是一个字符串，而不是一个 Symbol 值。\n\n同理，在对象的内部，使用 Symbol 值定义属性时，Symbol 值必须放在方括号之中。\n\n```javascript\nlet s = Symbol();\n\nlet obj = {\n  [s]: function (arg) { ... }\n};\n\nobj[s](123);\n```\n\n上面代码中，如果`s`不放在方括号中，该属性的键名就是字符串`s`，而不是`s`所代表的那个 Symbol 值。\n\n采用增强的对象写法，上面代码的`obj`对象可以写得更简洁一些。\n\n```javascript\nlet obj = {\n  [s](arg) { ... }\n};\n```\n\nSymbol 类型还可以用于定义一组常量，保证这组常量的值都是不相等的。\n\n```javascript\nconst log = {};\n\nlog.levels = {\n  DEBUG: Symbol(\'debug\'),\n  INFO: Symbol(\'info\'),\n  WARN: Symbol(\'warn\')\n};\nconsole.log(log.levels.DEBUG, \'debug message\');\nconsole.log(log.levels.INFO, \'info message\');\n```\n\n下面是另外一个例子。\n\n```javascript\nconst COLOR_RED    = Symbol();\nconst COLOR_GREEN  = Symbol();\n\nfunction getComplement(color) {\n  switch (color) {\n    case COLOR_RED:\n      return COLOR_GREEN;\n    case COLOR_GREEN:\n      return COLOR_RED;\n    default:\n      throw new Error(\'Undefined color\');\n    }\n}\n```\n\n常量使用 Symbol 值最大的好处，就是其他任何值都不可能有相同的值了，因此可以保证上面的`switch`语句会按设计的方式工作。\n\n还有一点需要注意，Symbol 值作为属性名时，该属性还是公开属性，不是私有属性。\n\n## 实例：消除魔术字符串\n\n魔术字符串指的是，在代码之中多次出现、与代码形成强耦合的某一个具体的字符串或者数值。风格良好的代码，应该尽量消除魔术字符串，改由含义清晰的变量代替。\n\n```javascript\nfunction getArea(shape, options) {\n  let area = 0;\n\n  switch (shape) {\n    case \'Triangle\': // 魔术字符串\n      area = .5 * options.width * options.height;\n      break;\n    /* ... more code ... */\n  }\n\n  return area;\n}\n\ngetArea(\'Triangle\', { width: 100, height: 100 }); // 魔术字符串\n```\n\n上面代码中，字符串`Triangle`就是一个魔术字符串。它多次出现，与代码形成“强耦合”，不利于将来的修改和维护。\n\n常用的消除魔术字符串的方法，就是把它写成一个变量。\n\n```javascript\nconst shapeType = {\n  triangle: \'Triangle\'\n};\n\nfunction getArea(shape, options) {\n  let area = 0;\n  switch (shape) {\n    case shapeType.triangle:\n      area = .5 * options.width * options.height;\n      break;\n  }\n  return area;\n}\n\ngetArea(shapeType.triangle, { width: 100, height: 100 });\n```\n\n上面代码中，我们把`Triangle`写成`shapeType`对象的`triangle`属性，这样就消除了强耦合。\n\n如果仔细分析，可以发现`shapeType.triangle`等于哪个值并不重要，只要确保不会跟其他`shapeType`属性的值冲突即可。因此，这里就很适合改用 Symbol 值。\n\n```javascript\nconst shapeType = {\n  triangle: Symbol()\n};\n```\n\n上面代码中，除了将`shapeType.triangle`的值设为一个 Symbol，其他地方都不用修改。\n\n## 属性名的遍历\n\nSymbol 作为属性名，该属性不会出现在`for...in`、`for...of`循环中，也不会被`Object.keys()`、`Object.getOwnPropertyNames()`、`JSON.stringify()`返回。但是，它也不是私有属性，有一个`Object.getOwnPropertySymbols`方法，可以获取指定对象的所有 Symbol 属性名。\n\n`Object.getOwnPropertySymbols`方法返回一个数组，成员是当前对象的所有用作属性名的 Symbol 值。\n\n```javascript\nconst obj = {};\nlet a = Symbol(\'a\');\nlet b = Symbol(\'b\');\n\nobj[a] = \'Hello\';\nobj[b] = \'World\';\n\nconst objectSymbols = Object.getOwnPropertySymbols(obj);\n\nobjectSymbols\n// [Symbol(a), Symbol(b)]\n```\n\n下面是另一个例子，`Object.getOwnPropertySymbols`方法与`for...in`循环、`Object.getOwnPropertyNames`方法进行对比的例子。\n\n```javascript\nconst obj = {};\n\nlet foo = Symbol("foo");\n\nObject.defineProperty(obj, foo, {\n  value: "foobar",\n});\n\nfor (let i in obj) {\n  console.log(i); // 无输出\n}\n\nObject.getOwnPropertyNames(obj)\n// []\n\nObject.getOwnPropertySymbols(obj)\n// [Symbol(foo)]\n```\n\n上面代码中，使用`Object.getOwnPropertyNames`方法得不到`Symbol`属性名，需要使用`Object.getOwnPropertySymbols`方法。\n\n另一个新的 API，`Reflect.ownKeys`方法可以返回所有类型的键名，包括常规键名和 Symbol 键名。\n\n```javascript\nlet obj = {\n  [Symbol(\'my_key\')]: 1,\n  enum: 2,\n  nonEnum: 3\n};\n\nReflect.ownKeys(obj)\n//  ["enum", "nonEnum", Symbol(my_key)]\n```\n\n由于以 Symbol 值作为名称的属性，不会被常规方法遍历得到。我们可以利用这个特性，为对象定义一些非私有的、但又希望只用于内部的方法。\n\n```javascript\nlet size = Symbol(\'size\');\n\nclass Collection {\n  constructor() {\n    this[size] = 0;\n  }\n\n  add(item) {\n    this[this[size]] = item;\n    this[size]++;\n  }\n\n  static sizeOf(instance) {\n    return instance[size];\n  }\n}\n\nlet x = new Collection();\nCollection.sizeOf(x) // 0\n\nx.add(\'foo\');\nCollection.sizeOf(x) // 1\n\nObject.keys(x) // [\'0\']\nObject.getOwnPropertyNames(x) // [\'0\']\nObject.getOwnPropertySymbols(x) // [Symbol(size)]\n```\n\n上面代码中，对象`x`的`size`属性是一个 Symbol 值，所以`Object.keys(x)`、`Object.getOwnPropertyNames(x)`都无法获取它。这就造成了一种非私有的内部方法的效果。\n\n## Symbol.for()，Symbol.keyFor()\n\n有时，我们希望重新使用同一个 Symbol 值，`Symbol.for`方法可以做到这一点。它接受一个字符串作为参数，然后搜索有没有以该参数作为名称的 Symbol 值。如果有，就返回这个 Symbol 值，否则就新建并返回一个以该字符串为名称的 Symbol 值。\n\n```javascript\nlet s1 = Symbol.for(\'foo\');\nlet s2 = Symbol.for(\'foo\');\n\ns1 === s2 // true\n```\n\n上面代码中，`s1`和`s2`都是 Symbol 值，但是它们都是同样参数的`Symbol.for`方法生成的，所以实际上是同一个值。\n\n`Symbol.for()`与`Symbol()`这两种写法，都会生成新的 Symbol。它们的区别是，前者会被登记在全局环境中供搜索，后者不会。`Symbol.for()`不会每次调用就返回一个新的 Symbol 类型的值，而是会先检查给定的`key`是否已经存在，如果不存在才会新建一个值。比如，如果你调用`Symbol.for("cat")`30 次，每次都会返回同一个 Symbol 值，但是调用`Symbol("cat")`30 次，会返回 30 个不同的 Symbol 值。\n\n```javascript\nSymbol.for("bar") === Symbol.for("bar")\n// true\n\nSymbol("bar") === Symbol("bar")\n// false\n```\n\n上面代码中，由于`Symbol()`写法没有登记机制，所以每次调用都会返回一个不同的值。\n\n`Symbol.keyFor`方法返回一个已登记的 Symbol 类型值的`key`。\n\n```javascript\nlet s1 = Symbol.for("foo");\nSymbol.keyFor(s1) // "foo"\n\nlet s2 = Symbol("foo");\nSymbol.keyFor(s2) // undefined\n```\n\n上面代码中，变量`s2`属于未登记的 Symbol 值，所以返回`undefined`。\n\n需要注意的是，`Symbol.for`为 Symbol 值登记的名字，是全局环境的，可以在不同的 iframe 或 service worker 中取到同一个值。\n\n```javascript\niframe = document.createElement(\'iframe\');\niframe.src = String(window.location);\ndocument.body.appendChild(iframe);\n\niframe.contentWindow.Symbol.for(\'foo\') === Symbol.for(\'foo\')\n// true\n```\n\n上面代码中，iframe 窗口生成的 Symbol 值，可以在主页面得到。\n\n## 实例：模块的 Singleton 模式\n\nSingleton 模式指的是调用一个类，任何时候返回的都是同一个实例。\n\n对于 Node 来说，模块文件可以看成是一个类。怎么保证每次执行这个模块文件，返回的都是同一个实例呢？\n\n很容易想到，可以把实例放到顶层对象`global`。\n\n```javascript\n// mod.js\nfunction A() {\n  this.foo = \'hello\';\n}\n\nif (!global._foo) {\n  global._foo = new A();\n}\n\nmodule.exports = global._foo;\n```\n\n然后，加载上面的`mod.js`。\n\n```javascript\nconst a = require(\'./mod.js\');\nconsole.log(a.foo);\n```\n\n上面代码中，变量`a`任何时候加载的都是`A`的同一个实例。\n\n但是，这里有一个问题，全局变量`global._foo`是可写的，任何文件都可以修改。\n\n```javascript\nglobal._foo = { foo: \'world\' };\n\nconst a = require(\'./mod.js\');\nconsole.log(a.foo);\n```\n\n上面的代码，会使得加载`mod.js`的脚本都失真。\n\n为了防止这种情况出现，我们就可以使用 Symbol。\n\n```javascript\n// mod.js\nconst FOO_KEY = Symbol.for(\'foo\');\n\nfunction A() {\n  this.foo = \'hello\';\n}\n\nif (!global[FOO_KEY]) {\n  global[FOO_KEY] = new A();\n}\n\nmodule.exports = global[FOO_KEY];\n```\n\n上面代码中，可以保证`global[FOO_KEY]`不会被无意间覆盖，但还是可以被改写。\n\n```javascript\nglobal[Symbol.for(\'foo\')] = { foo: \'world\' };\n\nconst a = require(\'./mod.js\');\n```\n\n如果键名使用`Symbol`方法生成，那么外部将无法引用这个值，当然也就无法改写。\n\n```javascript\n// mod.js\nconst FOO_KEY = Symbol(\'foo\');\n\n// 后面代码相同 ……\n```\n\n上面代码将导致其他脚本都无法引用`FOO_KEY`。但这样也有一个问题，就是如果多次执行这个脚本，每次得到的`FOO_KEY`都是不一样的。虽然 Node 会将脚本的执行结果缓存，一般情况下，不会多次执行同一个脚本，但是用户可以手动清除缓存，所以也不是绝对可靠。\n\n## 内置的 Symbol 值\n\n除了定义自己使用的 Symbol 值以外，ES6 还提供了 11 个内置的 Symbol 值，指向语言内部使用的方法。\n\n### Symbol.hasInstance\n\n对象的`Symbol.hasInstance`属性，指向一个内部方法。当其他对象使用`instanceof`运算符，判断是否为该对象的实例时，会调用这个方法。比如，`foo instanceof Foo`在语言内部，实际调用的是`Foo[Symbol.hasInstance](foo)`。\n\n```javascript\nclass MyClass {\n  [Symbol.hasInstance](foo) {\n    return foo instanceof Array;\n  }\n}\n\n[1, 2, 3] instanceof new MyClass() // true\n```\n\n上面代码中，`MyClass`是一个类，`new MyClass()`会返回一个实例。该实例的`Symbol.hasInstance`方法，会在进行`instanceof`运算时自动调用，判断左侧的运算子是否为`Array`的实例。\n\n下面是另一个例子。\n\n```javascript\nclass Even {\n  static [Symbol.hasInstance](obj) {\n    return Number(obj) % 2 === 0;\n  }\n}\n\n// 等同于\nconst Even = {\n  [Symbol.hasInstance](obj) {\n    return Number(obj) % 2 === 0;\n  }\n};\n\n1 instanceof Even // false\n2 instanceof Even // true\n12345 instanceof Even // false\n```\n\n### Symbol.isConcatSpreadable\n\n对象的`Symbol.isConcatSpreadable`属性等于一个布尔值，表示该对象用于`Array.prototype.concat()`时，是否可以展开。\n\n```javascript\nlet arr1 = [\'c\', \'d\'];\n[\'a\', \'b\'].concat(arr1, \'e\') // [\'a\', \'b\', \'c\', \'d\', \'e\']\narr1[Symbol.isConcatSpreadable] // undefined\n\nlet arr2 = [\'c\', \'d\'];\narr2[Symbol.isConcatSpreadable] = false;\n[\'a\', \'b\'].concat(arr2, \'e\') // [\'a\', \'b\', [\'c\',\'d\'], \'e\']\n```\n\n上面代码说明，数组的默认行为是可以展开，`Symbol.isConcatSpreadable`默认等于`undefined`。该属性等于`true`时，也有展开的效果。\n\n类似数组的对象正好相反，默认不展开。它的`Symbol.isConcatSpreadable`属性设为`true`，才可以展开。\n\n```javascript\nlet obj = {length: 2, 0: \'c\', 1: \'d\'};\n[\'a\', \'b\'].concat(obj, \'e\') // [\'a\', \'b\', obj, \'e\']\n\nobj[Symbol.isConcatSpreadable] = true;\n[\'a\', \'b\'].concat(obj, \'e\') // [\'a\', \'b\', \'c\', \'d\', \'e\']\n```\n\n`Symbol.isConcatSpreadable`属性也可以定义在类里面。\n\n```javascript\nclass A1 extends Array {\n  constructor(args) {\n    super(args);\n    this[Symbol.isConcatSpreadable] = true;\n  }\n}\nclass A2 extends Array {\n  constructor(args) {\n    super(args);\n  }\n  get [Symbol.isConcatSpreadable] () {\n    return false;\n  }\n}\nlet a1 = new A1();\na1[0] = 3;\na1[1] = 4;\nlet a2 = new A2();\na2[0] = 5;\na2[1] = 6;\n[1, 2].concat(a1).concat(a2)\n// [1, 2, 3, 4, [5, 6]]\n```\n\n上面代码中，类`A1`是可展开的，类`A2`是不可展开的，所以使用`concat`时有不一样的结果。\n\n注意，`Symbol.isConcatSpreadable`的位置差异，`A1`是定义在实例上，`A2`是定义在类本身，效果相同。\n\n### Symbol.species\n\n对象的`Symbol.species`属性，指向一个构造函数。创建衍生对象时，会使用该属性。\n\n```javascript\nclass MyArray extends Array {\n}\n\nconst a = new MyArray(1, 2, 3);\nconst b = a.map(x => x);\nconst c = a.filter(x => x > 1);\n\nb instanceof MyArray // true\nc instanceof MyArray // true\n```\n\n上面代码中，子类`MyArray`继承了父类`Array`，`a`是`MyArray`的实例，`b`和`c`是`a`的衍生对象。你可能会认为，`b`和`c`都是调用数组方法生成的，所以应该是数组（`Array`的实例），但实际上它们也是`MyArray`的实例。\n\n`Symbol.species`属性就是为了解决这个问题而提供的。现在，我们可以为`MyArray`设置`Symbol.species`属性。\n\n```javascript\nclass MyArray extends Array {\n  static get [Symbol.species]() { return Array; }\n}\n```\n\n上面代码中，由于定义了`Symbol.species`属性，创建衍生对象时就会使用这个属性返回的函数，作为构造函数。这个例子也说明，定义`Symbol.species`属性要采用`get`取值器。默认的`Symbol.species`属性等同于下面的写法。\n\n```javascript\nstatic get [Symbol.species]() {\n  return this;\n}\n```\n\n现在，再来看前面的例子。\n\n```javascript\nclass MyArray extends Array {\n  static get [Symbol.species]() { return Array; }\n}\n\nconst a = new MyArray();\nconst b = a.map(x => x);\n\nb instanceof MyArray // false\nb instanceof Array // true\n```\n\n上面代码中，`a.map(x => x)`生成的衍生对象，就不是`MyArray`的实例，而直接就是`Array`的实例。\n\n再看一个例子。\n\n```javascript\nclass T1 extends Promise {\n}\n\nclass T2 extends Promise {\n  static get [Symbol.species]() {\n    return Promise;\n  }\n}\n\nnew T1(r => r()).then(v => v) instanceof T1 // true\nnew T2(r => r()).then(v => v) instanceof T2 // false\n```\n\n上面代码中，`T2`定义了`Symbol.species`属性，`T1`没有。结果就导致了创建衍生对象时（`then`方法），`T1`调用的是自身的构造方法，而`T2`调用的是`Promise`的构造方法。\n\n总之，`Symbol.species`的作用在于，实例对象在运行过程中，需要再次调用自身的构造函数时，会调用该属性指定的构造函数。它主要的用途是，有些类库是在基类的基础上修改的，那么子类使用继承的方法时，作者可能希望返回基类的实例，而不是子类的实例。\n\n### Symbol.match\n\n对象的`Symbol.match`属性，指向一个函数。当执行`str.match(myObject)`时，如果该属性存在，会调用它，返回该方法的返回值。\n\n```javascript\nString.prototype.match(regexp)\n// 等同于\nregexp[Symbol.match](this)\n\nclass MyMatcher {\n  [Symbol.match](string) {\n    return \'hello world\'.indexOf(string);\n  }\n}\n\n\'e\'.match(new MyMatcher()) // 1\n```\n\n### Symbol.replace\n\n对象的`Symbol.replace`属性，指向一个方法，当该对象被`String.prototype.replace`方法调用时，会返回该方法的返回值。\n\n```javascript\nString.prototype.replace(searchValue, replaceValue)\n// 等同于\nsearchValue[Symbol.replace](this, replaceValue)\n```\n\n下面是一个例子。\n\n```javascript\nconst x = {};\nx[Symbol.replace] = (...s) => console.log(s);\n\n\'Hello\'.replace(x, \'World\') // ["Hello", "World"]\n```\n\n`Symbol.replace`方法会收到两个参数，第一个参数是`replace`方法正在作用的对象，上面例子是`Hello`，第二个参数是替换后的值，上面例子是`World`。\n\n### Symbol.search\n\n对象的`Symbol.search`属性，指向一个方法，当该对象被`String.prototype.search`方法调用时，会返回该方法的返回值。\n\n```javascript\nString.prototype.search(regexp)\n// 等同于\nregexp[Symbol.search](this)\n\nclass MySearch {\n  constructor(value) {\n    this.value = value;\n  }\n  [Symbol.search](string) {\n    return string.indexOf(this.value);\n  }\n}\n\'foobar\'.search(new MySearch(\'foo\')) // 0\n```\n\n### Symbol.split\n\n对象的`Symbol.split`属性，指向一个方法，当该对象被`String.prototype.split`方法调用时，会返回该方法的返回值。\n\n```javascript\nString.prototype.split(separator, limit)\n// 等同于\nseparator[Symbol.split](this, limit)\n```\n\n下面是一个例子。\n\n```javascript\nclass MySplitter {\n  constructor(value) {\n    this.value = value;\n  }\n  [Symbol.split](string) {\n    let index = string.indexOf(this.value);\n    if (index === -1) {\n      return string;\n    }\n    return [\n      string.substr(0, index),\n      string.substr(index + this.value.length)\n    ];\n  }\n}\n\n\'foobar\'.split(new MySplitter(\'foo\'))\n// [\'\', \'bar\']\n\n\'foobar\'.split(new MySplitter(\'bar\'))\n// [\'foo\', \'\']\n\n\'foobar\'.split(new MySplitter(\'baz\'))\n// \'foobar\'\n```\n\n上面方法使用`Symbol.split`方法，重新定义了字符串对象的`split`方法的行为，\n\n### Symbol.iterator\n\n对象的`Symbol.iterator`属性，指向该对象的默认遍历器方法。\n\n```javascript\nconst myIterable = {};\nmyIterable[Symbol.iterator] = function* () {\n  yield 1;\n  yield 2;\n  yield 3;\n};\n\n[...myIterable] // [1, 2, 3]\n```\n\n对象进行`for...of`循环时，会调用`Symbol.iterator`方法，返回该对象的默认遍历器，详细介绍参见《Iterator 和 for...of 循环》一章。\n\n```javascript\nclass Collection {\n  *[Symbol.iterator]() {\n    let i = 0;\n    while(this[i] !== undefined) {\n      yield this[i];\n      ++i;\n    }\n  }\n}\n\nlet myCollection = new Collection();\nmyCollection[0] = 1;\nmyCollection[1] = 2;\n\nfor(let value of myCollection) {\n  console.log(value);\n}\n// 1\n// 2\n```\n\n### Symbol.toPrimitive\n\n对象的`Symbol.toPrimitive`属性，指向一个方法。该对象被转为原始类型的值时，会调用这个方法，返回该对象对应的原始类型值。\n\n`Symbol.toPrimitive`被调用时，会接受一个字符串参数，表示当前运算的模式，一共有三种模式。\n\n- Number：该场合需要转成数值\n- String：该场合需要转成字符串\n- Default：该场合可以转成数值，也可以转成字符串\n\n```javascript\nlet obj = {\n  [Symbol.toPrimitive](hint) {\n    switch (hint) {\n      case \'number\':\n        return 123;\n      case \'string\':\n        return \'str\';\n      case \'default\':\n        return \'default\';\n      default:\n        throw new Error();\n     }\n   }\n};\n\n2 * obj // 246\n3 + obj // \'3default\'\nobj == \'default\' // true\nString(obj) // \'str\'\n```\n\n### Symbol.toStringTag\n\n对象的`Symbol.toStringTag`属性，指向一个方法。在该对象上面调用`Object.prototype.toString`方法时，如果这个属性存在，它的返回值会出现在`toString`方法返回的字符串之中，表示对象的类型。也就是说，这个属性可以用来定制`[object Object]`或`[object Array]`中`object`后面的那个字符串。\n\n```javascript\n// 例一\n({[Symbol.toStringTag]: \'Foo\'}.toString())\n// "[object Foo]"\n\n// 例二\nclass Collection {\n  get [Symbol.toStringTag]() {\n    return \'xxx\';\n  }\n}\nlet x = new Collection();\nObject.prototype.toString.call(x) // "[object xxx]"\n```\n\nES6 新增内置对象的`Symbol.toStringTag`属性值如下。\n\n- `JSON[Symbol.toStringTag]`：\'JSON\'\n- `Math[Symbol.toStringTag]`：\'Math\'\n- Module 对象`M[Symbol.toStringTag]`：\'Module\'\n- `ArrayBuffer.prototype[Symbol.toStringTag]`：\'ArrayBuffer\'\n- `DataView.prototype[Symbol.toStringTag]`：\'DataView\'\n- `Map.prototype[Symbol.toStringTag]`：\'Map\'\n- `Promise.prototype[Symbol.toStringTag]`：\'Promise\'\n- `Set.prototype[Symbol.toStringTag]`：\'Set\'\n- `%TypedArray%.prototype[Symbol.toStringTag]`：\'Uint8Array\'等\n- `WeakMap.prototype[Symbol.toStringTag]`：\'WeakMap\'\n- `WeakSet.prototype[Symbol.toStringTag]`：\'WeakSet\'\n- `%MapIteratorPrototype%[Symbol.toStringTag]`：\'Map Iterator\'\n- `%SetIteratorPrototype%[Symbol.toStringTag]`：\'Set Iterator\'\n- `%StringIteratorPrototype%[Symbol.toStringTag]`：\'String Iterator\'\n- `Symbol.prototype[Symbol.toStringTag]`：\'Symbol\'\n- `Generator.prototype[Symbol.toStringTag]`：\'Generator\'\n- `GeneratorFunction.prototype[Symbol.toStringTag]`：\'GeneratorFunction\'\n\n### Symbol.unscopables\n\n对象的`Symbol.unscopables`属性，指向一个对象。该对象指定了使用`with`关键字时，哪些属性会被`with`环境排除。\n\n```javascript\nArray.prototype[Symbol.unscopables]\n// {\n//   copyWithin: true,\n//   entries: true,\n//   fill: true,\n//   find: true,\n//   findIndex: true,\n//   includes: true,\n//   keys: true\n// }\n\nObject.keys(Array.prototype[Symbol.unscopables])\n// [\'copyWithin\', \'entries\', \'fill\', \'find\', \'findIndex\', \'includes\', \'keys\']\n```\n\n上面代码说明，数组有 7 个属性，会被`with`命令排除。\n\n```javascript\n// 没有 unscopables 时\nclass MyClass {\n  foo() { return 1; }\n}\n\nvar foo = function () { return 2; };\n\nwith (MyClass.prototype) {\n  foo(); // 1\n}\n\n// 有 unscopables 时\nclass MyClass {\n  foo() { return 1; }\n  get [Symbol.unscopables]() {\n    return { foo: true };\n  }\n}\n\nvar foo = function () { return 2; };\n\nwith (MyClass.prototype) {\n  foo(); // 2\n}\n```\n\n上面代码通过指定`Symbol.unscopables`属性，使得`with`语法块不会在当前作用域寻找`foo`属性，即`foo`将指向外层作用域的变量。\n\n\n\n# Set 和 Map 数据结构\n\n1. [Set](http://es6.ruanyifeng.com/#docs/set-map#Set)\n2. [WeakSet](http://es6.ruanyifeng.com/#docs/set-map#WeakSet)\n3. [Map](http://es6.ruanyifeng.com/#docs/set-map#Map)\n4. [WeakMap](http://es6.ruanyifeng.com/#docs/set-map#WeakMap)\n\n## Set\n\n### 基本用法\n\nES6 提供了新的数据结构 Set。它类似于数组，但是成员的值都是唯一的，没有重复的值。\n\nSet 本身是一个构造函数，用来生成 Set 数据结构。\n\n```javascript\nconst s = new Set();\n\n[2, 3, 5, 4, 5, 2, 2].forEach(x => s.add(x));\n\nfor (let i of s) {\n  console.log(i);\n}\n// 2 3 5 4\n```\n\n上面代码通过`add`方法向 Set 结构加入成员，结果表明 Set 结构不会添加重复的值。\n\nSet 函数可以接受一个数组（或者具有 iterable 接口的其他数据结构）作为参数，用来初始化。\n\n```javascript\n// 例一\nconst set = new Set([1, 2, 3, 4, 4]);\n[...set]\n// [1, 2, 3, 4]\n\n// 例二\nconst items = new Set([1, 2, 3, 4, 5, 5, 5, 5]);\nitems.size // 5\n\n// 例三\nconst set = new Set(document.querySelectorAll(\'div\'));\nset.size // 56\n\n// 类似于\nconst set = new Set();\ndocument\n .querySelectorAll(\'div\')\n .forEach(div => set.add(div));\nset.size // 56\n```\n\n上面代码中，例一和例二都是`Set`函数接受数组作为参数，例三是接受类似数组的对象作为参数。\n\n上面代码也展示了一种去除数组重复成员的方法。\n\n```javascript\n// 去除数组的重复成员\n[...new Set(array)]\n```\n\n向 Set 加入值的时候，不会发生类型转换，所以`5`和`"5"`是两个不同的值。Set 内部判断两个值是否不同，使用的算法叫做“Same-value-zero equality”，它类似于精确相等运算符（`===`），主要的区别是`NaN`等于自身，而精确相等运算符认为`NaN`不等于自身。\n\n```javascript\nlet set = new Set();\nlet a = NaN;\nlet b = NaN;\nset.add(a);\nset.add(b);\nset // Set {NaN}\n```\n\n上面代码向 Set 实例添加了两个`NaN`，但是只能加入一个。这表明，在 Set 内部，两个`NaN`是相等。\n\n另外，两个对象总是不相等的。\n\n```javascript\nlet set = new Set();\n\nset.add({});\nset.size // 1\n\nset.add({});\nset.size // 2\n```\n\n上面代码表示，由于两个空对象不相等，所以它们被视为两个值。\n\n### Set 实例的属性和方法\n\nSet 结构的实例有以下属性。\n\n- `Set.prototype.constructor`：构造函数，默认就是`Set`函数。\n- `Set.prototype.size`：返回`Set`实例的成员总数。\n\nSet 实例的方法分为两大类：操作方法（用于操作数据）和遍历方法（用于遍历成员）。下面先介绍四个操作方法。\n\n- `add(value)`：添加某个值，返回 Set 结构本身。\n- `delete(value)`：删除某个值，返回一个布尔值，表示删除是否成功。\n- `has(value)`：返回一个布尔值，表示该值是否为`Set`的成员。\n- `clear()`：清除所有成员，没有返回值。\n\n上面这些属性和方法的实例如下。\n\n```javascript\ns.add(1).add(2).add(2);\n// 注意2被加入了两次\n\ns.size // 2\n\ns.has(1) // true\ns.has(2) // true\ns.has(3) // false\n\ns.delete(2);\ns.has(2) // false\n```\n\n下面是一个对比，看看在判断是否包括一个键上面，`Object`结构和`Set`结构的写法不同。\n\n```javascript\n// 对象的写法\nconst properties = {\n  \'width\': 1,\n  \'height\': 1\n};\n\nif (properties[someName]) {\n  // do something\n}\n\n// Set的写法\nconst properties = new Set();\n\nproperties.add(\'width\');\nproperties.add(\'height\');\n\nif (properties.has(someName)) {\n  // do something\n}\n```\n\n`Array.from`方法可以将 Set 结构转为数组。\n\n```javascript\nconst items = new Set([1, 2, 3, 4, 5]);\nconst array = Array.from(items);\n```\n\n这就提供了去除数组重复成员的另一种方法。\n\n```javascript\nfunction dedupe(array) {\n  return Array.from(new Set(array));\n}\n\ndedupe([1, 1, 2, 3]) // [1, 2, 3]\n```\n\n### 遍历操作\n\nSet 结构的实例有四个遍历方法，可以用于遍历成员。\n\n- `keys()`：返回键名的遍历器\n- `values()`：返回键值的遍历器\n- `entries()`：返回键值对的遍历器\n- `forEach()`：使用回调函数遍历每个成员\n\n需要特别指出的是，`Set`的遍历顺序就是插入顺序。这个特性有时非常有用，比如使用 Set 保存一个回调函数列表，调用时就能保证按照添加顺序调用。\n\n**（1）keys()，values()，entries()**\n\n`keys`方法、`values`方法、`entries`方法返回的都是遍历器对象（详见《Iterator 对象》一章）。由于 Set 结构没有键名，只有键值（或者说键名和键值是同一个值），所以`keys`方法和`values`方法的行为完全一致。\n\n```javascript\nlet set = new Set([\'red\', \'green\', \'blue\']);\n\nfor (let item of set.keys()) {\n  console.log(item);\n}\n// red\n// green\n// blue\n\nfor (let item of set.values()) {\n  console.log(item);\n}\n// red\n// green\n// blue\n\nfor (let item of set.entries()) {\n  console.log(item);\n}\n// ["red", "red"]\n// ["green", "green"]\n// ["blue", "blue"]\n```\n\n上面代码中，`entries`方法返回的遍历器，同时包括键名和键值，所以每次输出一个数组，它的两个成员完全相等。\n\nSet 结构的实例默认可遍历，它的默认遍历器生成函数就是它的`values`方法。\n\n```javascript\nSet.prototype[Symbol.iterator] === Set.prototype.values\n// true\n```\n\n这意味着，可以省略`values`方法，直接用`for...of`循环遍历 Set。\n\n```javascript\nlet set = new Set([\'red\', \'green\', \'blue\']);\n\nfor (let x of set) {\n  console.log(x);\n}\n// red\n// green\n// blue\n```\n\n**（2）forEach()**\n\nSet 结构的实例与数组一样，也拥有`forEach`方法，用于对每个成员执行某种操作，没有返回值。\n\n```javascript\nset = new Set([1, 4, 9]);\nset.forEach((value, key) => console.log(key + \' : \' + value))\n// 1 : 1\n// 4 : 4\n// 9 : 9\n```\n\n上面代码说明，`forEach`方法的参数就是一个处理函数。该函数的参数与数组的`forEach`一致，依次为键值、键名、集合本身（上例省略了该参数）。这里需要注意，Set 结构的键名就是键值（两者是同一个值），因此第一个参数与第二个参数的值永远都是一样的。\n\n另外，`forEach`方法还可以有第二个参数，表示绑定处理函数内部的`this`对象。\n\n**（3）遍历的应用**\n\n扩展运算符（`...`）内部使用`for...of`循环，所以也可以用于 Set 结构。\n\n```javascript\nlet set = new Set([\'red\', \'green\', \'blue\']);\nlet arr = [...set];\n// [\'red\', \'green\', \'blue\']\n```\n\n扩展运算符和 Set 结构相结合，就可以去除数组的重复成员。\n\n```javascript\nlet arr = [3, 5, 2, 2, 5, 5];\nlet unique = [...new Set(arr)];\n// [3, 5, 2]\n```\n\n而且，数组的`map`和`filter`方法也可以间接用于 Set 了。\n\n```javascript\nlet set = new Set([1, 2, 3]);\nset = new Set([...set].map(x => x * 2));\n// 返回Set结构：{2, 4, 6}\n\nlet set = new Set([1, 2, 3, 4, 5]);\nset = new Set([...set].filter(x => (x % 2) == 0));\n// 返回Set结构：{2, 4}\n```\n\n因此使用 Set 可以很容易地实现并集（Union）、交集（Intersect）和差集（Difference）。\n\n```javascript\nlet a = new Set([1, 2, 3]);\nlet b = new Set([4, 3, 2]);\n\n// 并集\nlet union = new Set([...a, ...b]);\n// Set {1, 2, 3, 4}\n\n// 交集\nlet intersect = new Set([...a].filter(x => b.has(x)));\n// set {2, 3}\n\n// 差集\nlet difference = new Set([...a].filter(x => !b.has(x)));\n// Set {1}\n```\n\n如果想在遍历操作中，同步改变原来的 Set 结构，目前没有直接的方法，但有两种变通方法。一种是利用原 Set 结构映射出一个新的结构，然后赋值给原来的 Set 结构；另一种是利用`Array.from`方法。\n\n```javascript\n// 方法一\nlet set = new Set([1, 2, 3]);\nset = new Set([...set].map(val => val * 2));\n// set的值是2, 4, 6\n\n// 方法二\nlet set = new Set([1, 2, 3]);\nset = new Set(Array.from(set, val => val * 2));\n// set的值是2, 4, 6\n```\n\n上面代码提供了两种方法，直接在遍历操作中改变原来的 Set 结构。\n\n## WeakSet\n\n### 含义\n\nWeakSet 结构与 Set 类似，也是不重复的值的集合。但是，它与 Set 有两个区别。\n\n首先，WeakSet 的成员只能是对象，而不能是其他类型的值。\n\n```javascript\nconst ws = new WeakSet();\nws.add(1)\n// TypeError: Invalid value used in weak set\nws.add(Symbol())\n// TypeError: invalid value used in weak set\n```\n\n上面代码试图向 WeakSet 添加一个数值和`Symbol`值，结果报错，因为 WeakSet 只能放置对象。\n\n其次，WeakSet 中的对象都是弱引用，即垃圾回收机制不考虑 WeakSet 对该对象的引用，也就是说，如果其他对象都不再引用该对象，那么垃圾回收机制会自动回收该对象所占用的内存，不考虑该对象还存在于 WeakSet 之中。\n\n这是因为垃圾回收机制依赖引用计数，如果一个值的引用次数不为`0`，垃圾回收机制就不会释放这块内存。结束使用该值之后，有时会忘记取消引用，导致内存无法释放，进而可能会引发内存泄漏。WeakSet 里面的引用，都不计入垃圾回收机制，所以就不存在这个问题。因此，WeakSet 适合临时存放一组对象，以及存放跟对象绑定的信息。只要这些对象在外部消失，它在 WeakSet 里面的引用就会自动消失。\n\n由于上面这个特点，WeakSet 的成员是不适合引用的，因为它会随时消失。另外，由于 WeakSet 内部有多少个成员，取决于垃圾回收机制有没有运行，运行前后很可能成员个数是不一样的，而垃圾回收机制何时运行是不可预测的，因此 ES6 规定 WeakSet 不可遍历。\n\n这些特点同样适用于本章后面要介绍的 WeakMap 结构。\n\n### 语法\n\nWeakSet 是一个构造函数，可以使用`new`命令，创建 WeakSet 数据结构。\n\n```javascript\nconst ws = new WeakSet();\n```\n\n作为构造函数，WeakSet 可以接受一个数组或类似数组的对象作为参数。（实际上，任何具有 Iterable 接口的对象，都可以作为 WeakSet 的参数。）该数组的所有成员，都会自动成为 WeakSet 实例对象的成员。\n\n```javascript\nconst a = [[1, 2], [3, 4]];\nconst ws = new WeakSet(a);\n// WeakSet {[1, 2], [3, 4]}\n```\n\n上面代码中，`a`是一个数组，它有两个成员，也都是数组。将`a`作为 WeakSet 构造函数的参数，`a`的成员会自动成为 WeakSet 的成员。\n\n注意，是`a`数组的成员成为 WeakSet 的成员，而不是`a`数组本身。这意味着，数组的成员只能是对象。\n\n```javascript\nconst b = [3, 4];\nconst ws = new WeakSet(b);\n// Uncaught TypeError: Invalid value used in weak set(…)\n```\n\n上面代码中，数组`b`的成员不是对象，加入 WeaKSet 就会报错。\n\nWeakSet 结构有以下三个方法。\n\n- **WeakSet.prototype.add(value)**：向 WeakSet 实例添加一个新成员。\n- **WeakSet.prototype.delete(value)**：清除 WeakSet 实例的指定成员。\n- **WeakSet.prototype.has(value)**：返回一个布尔值，表示某个值是否在 WeakSet 实例之中。\n\n下面是一个例子。\n\n```javascript\nconst ws = new WeakSet();\nconst obj = {};\nconst foo = {};\n\nws.add(window);\nws.add(obj);\n\nws.has(window); // true\nws.has(foo);    // false\n\nws.delete(window);\nws.has(window);    // false\n```\n\nWeakSet 没有`size`属性，没有办法遍历它的成员。\n\n```javascript\nws.size // undefined\nws.forEach // undefined\n\nws.forEach(function(item){ console.log(\'WeakSet has \' + item)})\n// TypeError: undefined is not a function\n```\n\n上面代码试图获取`size`和`forEach`属性，结果都不能成功。\n\nWeakSet 不能遍历，是因为成员都是弱引用，随时可能消失，遍历机制无法保证成员的存在，很可能刚刚遍历结束，成员就取不到了。WeakSet 的一个用处，是储存 DOM 节点，而不用担心这些节点从文档移除时，会引发内存泄漏。\n\n下面是 WeakSet 的另一个例子。\n\n```javascript\nconst foos = new WeakSet()\nclass Foo {\n  constructor() {\n    foos.add(this)\n  }\n  method () {\n    if (!foos.has(this)) {\n      throw new TypeError(\'Foo.prototype.method 只能在Foo的实例上调用！\');\n    }\n  }\n}\n```\n\n上面代码保证了`Foo`的实例方法，只能在`Foo`的实例上调用。这里使用 WeakSet 的好处是，`foos`对实例的引用，不会被计入内存回收机制，所以删除实例的时候，不用考虑`foos`，也不会出现内存泄漏。\n\n## Map\n\n### 含义和基本用法\n\nJavaScript 的对象（Object），本质上是键值对的集合（Hash 结构），但是传统上只能用字符串当作键。这给它的使用带来了很大的限制。\n\n```javascript\nconst data = {};\nconst element = document.getElementById(\'myDiv\');\n\ndata[element] = \'metadata\';\ndata[\'[object HTMLDivElement]\'] // "metadata"\n```\n\n上面代码原意是将一个 DOM 节点作为对象`data`的键，但是由于对象只接受字符串作为键名，所以`element`被自动转为字符串`[object HTMLDivElement]`。\n\n为了解决这个问题，ES6 提供了 Map 数据结构。它类似于对象，也是键值对的集合，但是“键”的范围不限于字符串，各种类型的值（包括对象）都可以当作键。也就是说，Object 结构提供了“字符串—值”的对应，Map 结构提供了“值—值”的对应，是一种更完善的 Hash 结构实现。如果你需要“键值对”的数据结构，Map 比 Object 更合适。\n\n```javascript\nconst m = new Map();\nconst o = {p: \'Hello World\'};\n\nm.set(o, \'content\')\nm.get(o) // "content"\n\nm.has(o) // true\nm.delete(o) // true\nm.has(o) // false\n```\n\n上面代码使用 Map 结构的`set`方法，将对象`o`当作`m`的一个键，然后又使用`get`方法读取这个键，接着使用`delete`方法删除了这个键。\n\n上面的例子展示了如何向 Map 添加成员。作为构造函数，Map 也可以接受一个数组作为参数。该数组的成员是一个个表示键值对的数组。\n\n```javascript\nconst map = new Map([\n  [\'name\', \'张三\'],\n  [\'title\', \'Author\']\n]);\n\nmap.size // 2\nmap.has(\'name\') // true\nmap.get(\'name\') // "张三"\nmap.has(\'title\') // true\nmap.get(\'title\') // "Author"\n```\n\n上面代码在新建 Map 实例时，就指定了两个键`name`和`title`。\n\n`Map`构造函数接受数组作为参数，实际上执行的是下面的算法。\n\n```javascript\nconst items = [\n  [\'name\', \'张三\'],\n  [\'title\', \'Author\']\n];\n\nconst map = new Map();\n\nitems.forEach(\n  ([key, value]) => map.set(key, value)\n);\n```\n\n事实上，不仅仅是数组，任何具有 Iterator 接口、且每个成员都是一个双元素的数组的数据结构（详见《Iterator》一章）都可以当作`Map`构造函数的参数。这就是说，`Set`和`Map`都可以用来生成新的 Map。\n\n```javascript\nconst set = new Set([\n  [\'foo\', 1],\n  [\'bar\', 2]\n]);\nconst m1 = new Map(set);\nm1.get(\'foo\') // 1\n\nconst m2 = new Map([[\'baz\', 3]]);\nconst m3 = new Map(m2);\nm3.get(\'baz\') // 3\n```\n\n上面代码中，我们分别使用 Set 对象和 Map 对象，当作`Map`构造函数的参数，结果都生成了新的 Map 对象。\n\n如果对同一个键多次赋值，后面的值将覆盖前面的值。\n\n```javascript\nconst map = new Map();\n\nmap\n.set(1, \'aaa\')\n.set(1, \'bbb\');\n\nmap.get(1) // "bbb"\n```\n\n上面代码对键`1`连续赋值两次，后一次的值覆盖前一次的值。\n\n如果读取一个未知的键，则返回`undefined`。\n\n```javascript\nnew Map().get(\'asfddfsasadf\')\n// undefined\n```\n\n注意，只有对同一个对象的引用，Map 结构才将其视为同一个键。这一点要非常小心。\n\n```javascript\nconst map = new Map();\n\nmap.set([\'a\'], 555);\nmap.get([\'a\']) // undefined\n```\n\n上面代码的`set`和`get`方法，表面是针对同一个键，但实际上这是两个值，内存地址是不一样的，因此`get`方法无法读取该键，返回`undefined`。\n\n同理，同样的值的两个实例，在 Map 结构中被视为两个键。\n\n```javascript\nconst map = new Map();\n\nconst k1 = [\'a\'];\nconst k2 = [\'a\'];\n\nmap\n.set(k1, 111)\n.set(k2, 222);\n\nmap.get(k1) // 111\nmap.get(k2) // 222\n```\n\n上面代码中，变量`k1`和`k2`的值是一样的，但是它们在 Map 结构中被视为两个键。\n\n由上可知，Map 的键实际上是跟内存地址绑定的，只要内存地址不一样，就视为两个键。这就解决了同名属性碰撞（clash）的问题，我们扩展别人的库的时候，如果使用对象作为键名，就不用担心自己的属性与原作者的属性同名。\n\n如果 Map 的键是一个简单类型的值（数字、字符串、布尔值），则只要两个值严格相等，Map 将其视为一个键，比如`0`和`-0`就是一个键，布尔值`true`和字符串`true`则是两个不同的键。另外，`undefined`和`null`也是两个不同的键。虽然`NaN`不严格相等于自身，但 Map 将其视为同一个键。\n\n```javascript\nlet map = new Map();\n\nmap.set(-0, 123);\nmap.get(+0) // 123\n\nmap.set(true, 1);\nmap.set(\'true\', 2);\nmap.get(true) // 1\n\nmap.set(undefined, 3);\nmap.set(null, 4);\nmap.get(undefined) // 3\n\nmap.set(NaN, 123);\nmap.get(NaN) // 123\n```\n\n### 实例的属性和操作方法\n\nMap 结构的实例有以下属性和操作方法。\n\n**（1）size 属性**\n\n`size`属性返回 Map 结构的成员总数。\n\n```javascript\nconst map = new Map();\nmap.set(\'foo\', true);\nmap.set(\'bar\', false);\n\nmap.size // 2\n```\n\n**（2）set(key, value)**\n\n`set`方法设置键名`key`对应的键值为`value`，然后返回整个 Map 结构。如果`key`已经有值，则键值会被更新，否则就新生成该键。\n\n```javascript\nconst m = new Map();\n\nm.set(\'edition\', 6)        // 键是字符串\nm.set(262, \'standard\')     // 键是数值\nm.set(undefined, \'nah\')    // 键是 undefined\n```\n\n`set`方法返回的是当前的`Map`对象，因此可以采用链式写法。\n\n```javascript\nlet map = new Map()\n  .set(1, \'a\')\n  .set(2, \'b\')\n  .set(3, \'c\');\n```\n\n**（3）get(key)**\n\n`get`方法读取`key`对应的键值，如果找不到`key`，返回`undefined`。\n\n```javascript\nconst m = new Map();\n\nconst hello = function() {console.log(\'hello\');};\nm.set(hello, \'Hello ES6!\') // 键是函数\n\nm.get(hello)  // Hello ES6!\n```\n\n**（4）has(key)**\n\n`has`方法返回一个布尔值，表示某个键是否在当前 Map 对象之中。\n\n```javascript\nconst m = new Map();\n\nm.set(\'edition\', 6);\nm.set(262, \'standard\');\nm.set(undefined, \'nah\');\n\nm.has(\'edition\')     // true\nm.has(\'years\')       // false\nm.has(262)           // true\nm.has(undefined)     // true\n```\n\n**（5）delete(key)**\n\n`delete`方法删除某个键，返回`true`。如果删除失败，返回`false`。\n\n```javascript\nconst m = new Map();\nm.set(undefined, \'nah\');\nm.has(undefined)     // true\n\nm.delete(undefined)\nm.has(undefined)       // false\n```\n\n**（6）clear()**\n\n`clear`方法清除所有成员，没有返回值。\n\n```javascript\nlet map = new Map();\nmap.set(\'foo\', true);\nmap.set(\'bar\', false);\n\nmap.size // 2\nmap.clear()\nmap.size // 0\n```\n\n### 遍历方法\n\nMap 结构原生提供三个遍历器生成函数和一个遍历方法。\n\n- `keys()`：返回键名的遍历器。\n- `values()`：返回键值的遍历器。\n- `entries()`：返回所有成员的遍历器。\n- `forEach()`：遍历 Map 的所有成员。\n\n需要特别注意的是，Map 的遍历顺序就是插入顺序。\n\n```javascript\nconst map = new Map([\n  [\'F\', \'no\'],\n  [\'T\',  \'yes\'],\n]);\n\nfor (let key of map.keys()) {\n  console.log(key);\n}\n// "F"\n// "T"\n\nfor (let value of map.values()) {\n  console.log(value);\n}\n// "no"\n// "yes"\n\nfor (let item of map.entries()) {\n  console.log(item[0], item[1]);\n}\n// "F" "no"\n// "T" "yes"\n\n// 或者\nfor (let [key, value] of map.entries()) {\n  console.log(key, value);\n}\n// "F" "no"\n// "T" "yes"\n\n// 等同于使用map.entries()\nfor (let [key, value] of map) {\n  console.log(key, value);\n}\n// "F" "no"\n// "T" "yes"\n```\n\n上面代码最后的那个例子，表示 Map 结构的默认遍历器接口（`Symbol.iterator`属性），就是`entries`方法。\n\n```javascript\nmap[Symbol.iterator] === map.entries\n// true\n```\n\nMap 结构转为数组结构，比较快速的方法是使用扩展运算符（`...`）。\n\n```javascript\nconst map = new Map([\n  [1, \'one\'],\n  [2, \'two\'],\n  [3, \'three\'],\n]);\n\n[...map.keys()]\n// [1, 2, 3]\n\n[...map.values()]\n// [\'one\', \'two\', \'three\']\n\n[...map.entries()]\n// [[1,\'one\'], [2, \'two\'], [3, \'three\']]\n\n[...map]\n// [[1,\'one\'], [2, \'two\'], [3, \'three\']]\n```\n\n结合数组的`map`方法、`filter`方法，可以实现 Map 的遍历和过滤（Map 本身没有`map`和`filter`方法）。\n\n```javascript\nconst map0 = new Map()\n  .set(1, \'a\')\n  .set(2, \'b\')\n  .set(3, \'c\');\n\nconst map1 = new Map(\n  [...map0].filter(([k, v]) => k < 3)\n);\n// 产生 Map 结构 {1 => \'a\', 2 => \'b\'}\n\nconst map2 = new Map(\n  [...map0].map(([k, v]) => [k * 2, \'_\' + v])\n    );\n// 产生 Map 结构 {2 => \'_a\', 4 => \'_b\', 6 => \'_c\'}\n```\n\n此外，Map 还有一个`forEach`方法，与数组的`forEach`方法类似，也可以实现遍历。\n\n```javascript\nmap.forEach(function(value, key, map) {\n  console.log("Key: %s, Value: %s", key, value);\n});\n```\n\n`forEach`方法还可以接受第二个参数，用来绑定`this`。\n\n```javascript\nconst reporter = {\n  report: function(key, value) {\n    console.log("Key: %s, Value: %s", key, value);\n  }\n};\n\nmap.forEach(function(value, key, map) {\n  this.report(key, value);\n}, reporter);\n```\n\n上面代码中，`forEach`方法的回调函数的`this`，就指向`reporter`。\n\n### 与其他数据结构的互相转换\n\n**（1）Map 转为数组**\n\n前面已经提过，Map 转为数组最方便的方法，就是使用扩展运算符（`...`）。\n\n```javascript\nconst myMap = new Map()\n  .set(true, 7)\n  .set({foo: 3}, [\'abc\']);\n[...myMap]\n// [ [ true, 7 ], [ { foo: 3 }, [ \'abc\' ] ] ]\n```\n\n**（2）数组 转为 Map**\n\n将数组传入 Map 构造函数，就可以转为 Map。\n\n```javascript\nnew Map([\n  [true, 7],\n  [{foo: 3}, [\'abc\']]\n])\n// Map {\n//   true => 7,\n//   Object {foo: 3} => [\'abc\']\n// }\n```\n\n**（3）Map 转为对象**\n\n如果所有 Map 的键都是字符串，它可以无损地转为对象。\n\n```javascript\nfunction strMapToObj(strMap) {\n  let obj = Object.create(null);\n  for (let [k,v] of strMap) {\n    obj[k] = v;\n  }\n  return obj;\n}\n\nconst myMap = new Map()\n  .set(\'yes\', true)\n  .set(\'no\', false);\nstrMapToObj(myMap)\n// { yes: true, no: false }\n```\n\n如果有非字符串的键名，那么这个键名会被转成字符串，再作为对象的键名。\n\n**（4）对象转为 Map**\n\n```javascript\nfunction objToStrMap(obj) {\n  let strMap = new Map();\n  for (let k of Object.keys(obj)) {\n    strMap.set(k, obj[k]);\n  }\n  return strMap;\n}\n\nobjToStrMap({yes: true, no: false})\n// Map {"yes" => true, "no" => false}\n```\n\n**（5）Map 转为 JSON**\n\nMap 转为 JSON 要区分两种情况。一种情况是，Map 的键名都是字符串，这时可以选择转为对象 JSON。\n\n```javascript\nfunction strMapToJson(strMap) {\n  return JSON.stringify(strMapToObj(strMap));\n}\n\nlet myMap = new Map().set(\'yes\', true).set(\'no\', false);\nstrMapToJson(myMap)\n// \'{"yes":true,"no":false}\'\n```\n\n另一种情况是，Map 的键名有非字符串，这时可以选择转为数组 JSON。\n\n```javascript\nfunction mapToArrayJson(map) {\n  return JSON.stringify([...map]);\n}\n\nlet myMap = new Map().set(true, 7).set({foo: 3}, [\'abc\']);\nmapToArrayJson(myMap)\n// \'[[true,7],[{"foo":3},["abc"]]]\'\n```\n\n**（6）JSON 转为 Map**\n\nJSON 转为 Map，正常情况下，所有键名都是字符串。\n\n```javascript\nfunction jsonToStrMap(jsonStr) {\n  return objToStrMap(JSON.parse(jsonStr));\n}\n\njsonToStrMap(\'{"yes": true, "no": false}\')\n// Map {\'yes\' => true, \'no\' => false}\n```\n\n但是，有一种特殊情况，整个 JSON 就是一个数组，且每个数组成员本身，又是一个有两个成员的数组。这时，它可以一一对应地转为 Map。这往往是 Map 转为数组 JSON 的逆操作。\n\n```javascript\nfunction jsonToMap(jsonStr) {\n  return new Map(JSON.parse(jsonStr));\n}\n\njsonToMap(\'[[true,7],[{"foo":3},["abc"]]]\')\n// Map {true => 7, Object {foo: 3} => [\'abc\']}\n```\n\n## WeakMap\n\n### 含义\n\n`WeakMap`结构与`Map`结构类似，也是用于生成键值对的集合。\n\n```javascript\n// WeakMap 可以使用 set 方法添加成员\nconst wm1 = new WeakMap();\nconst key = {foo: 1};\nwm1.set(key, 2);\nwm1.get(key) // 2\n\n// WeakMap 也可以接受一个数组，\n// 作为构造函数的参数\nconst k1 = [1, 2, 3];\nconst k2 = [4, 5, 6];\nconst wm2 = new WeakMap([[k1, \'foo\'], [k2, \'bar\']]);\nwm2.get(k2) // "bar"\n```\n\n`WeakMap`与`Map`的区别有两点。\n\n首先，`WeakMap`只接受对象作为键名（`null`除外），不接受其他类型的值作为键名。\n\n```javascript\nconst map = new WeakMap();\nmap.set(1, 2)\n// TypeError: 1 is not an object!\nmap.set(Symbol(), 2)\n// TypeError: Invalid value used as weak map key\nmap.set(null, 2)\n// TypeError: Invalid value used as weak map key\n```\n\n上面代码中，如果将数值`1`和`Symbol`值作为 WeakMap 的键名，都会报错。\n\n其次，`WeakMap`的键名所指向的对象，不计入垃圾回收机制。\n\n`WeakMap`的设计目的在于，有时我们想在某个对象上面存放一些数据，但是这会形成对于这个对象的引用。请看下面的例子。\n\n```javascript\nconst e1 = document.getElementById(\'foo\');\nconst e2 = document.getElementById(\'bar\');\nconst arr = [\n  [e1, \'foo 元素\'],\n  [e2, \'bar 元素\'],\n];\n```\n\n上面代码中，`e1`和`e2`是两个对象，我们通过`arr`数组对这两个对象添加一些文字说明。这就形成了`arr`对`e1`和`e2`的引用。\n\n一旦不再需要这两个对象，我们就必须手动删除这个引用，否则垃圾回收机制就不会释放`e1`和`e2`占用的内存。\n\n```javascript\n// 不需要 e1 和 e2 的时候\n// 必须手动删除引用\narr [0] = null;\narr [1] = null;\n```\n\n上面这样的写法显然很不方便。一旦忘了写，就会造成内存泄露。\n\nWeakMap 就是为了解决这个问题而诞生的，它的键名所引用的对象都是弱引用，即垃圾回收机制不将该引用考虑在内。因此，只要所引用的对象的其他引用都被清除，垃圾回收机制就会释放该对象所占用的内存。也就是说，一旦不再需要，WeakMap 里面的键名对象和所对应的键值对会自动消失，不用手动删除引用。\n\n基本上，如果你要往对象上添加数据，又不想干扰垃圾回收机制，就可以使用 WeakMap。一个典型应用场景是，在网页的 DOM 元素上添加数据，就可以使用`WeakMap`结构。当该 DOM 元素被清除，其所对应的`WeakMap`记录就会自动被移除。\n\n```javascript\nconst wm = new WeakMap();\n\nconst element = document.getElementById(\'example\');\n\nwm.set(element, \'some information\');\nwm.get(element) // "some information"\n```\n\n上面代码中，先新建一个 Weakmap 实例。然后，将一个 DOM 节点作为键名存入该实例，并将一些附加信息作为键值，一起存放在 WeakMap 里面。这时，WeakMap 里面对`element`的引用就是弱引用，不会被计入垃圾回收机制。\n\n也就是说，上面的 DOM 节点对象的引用计数是`1`，而不是`2`。这时，一旦消除对该节点的引用，它占用的内存就会被垃圾回收机制释放。Weakmap 保存的这个键值对，也会自动消失。\n\n总之，`WeakMap`的专用场合就是，它的键所对应的对象，可能会在将来消失。`WeakMap`结构有助于防止内存泄漏。\n\n注意，WeakMap 弱引用的只是键名，而不是键值。键值依然是正常引用。\n\n```javascript\nconst wm = new WeakMap();\nlet key = {};\nlet obj = {foo: 1};\n\nwm.set(key, obj);\nobj = null;\nwm.get(key)\n// Object {foo: 1}\n```\n\n上面代码中，键值`obj`是正常引用。所以，即使在 WeakMap 外部消除了`obj`的引用，WeakMap 内部的引用依然存在。\n\n### WeakMap 的语法\n\nWeakMap 与 Map 在 API 上的区别主要是两个，一是没有遍历操作（即没有`keys()`、`values()`和`entries()`方法），也没有`size`属性。因为没有办法列出所有键名，某个键名是否存在完全不可预测，跟垃圾回收机制是否运行相关。这一刻可以取到键名，下一刻垃圾回收机制突然运行了，这个键名就没了，为了防止出现不确定性，就统一规定不能取到键名。二是无法清空，即不支持`clear`方法。因此，`WeakMap`只有四个方法可用：`get()`、`set()`、`has()`、`delete()`。\n\n```javascript\nconst wm = new WeakMap();\n\n// size、forEach、clear 方法都不存在\nwm.size // undefined\nwm.forEach // undefined\nwm.clear // undefined\n```\n\n### WeakMap 的示例\n\nWeakMap 的例子很难演示，因为无法观察它里面的引用会自动消失。此时，其他引用都解除了，已经没有引用指向 WeakMap 的键名了，导致无法证实那个键名是不是存在。\n\n贺师俊老师[提示](https://github.com/ruanyf/es6tutorial/issues/362#issuecomment-292109104)，如果引用所指向的值占用特别多的内存，就可以通过 Node 的`process.memoryUsage`方法看出来。根据这个思路，网友[vtxf](https://github.com/ruanyf/es6tutorial/issues/362#issuecomment-292451925)补充了下面的例子。\n\n首先，打开 Node 命令行。\n\n```bash\n$ node --expose-gc\n```\n\n上面代码中，`--expose-gc`参数表示允许手动执行垃圾回收机制。\n\n然后，执行下面的代码。\n\n```javascript\n// 手动执行一次垃圾回收，保证获取的内存使用状态准确\n> global.gc();\nundefined\n\n// 查看内存占用的初始状态，heapUsed 为 4M 左右\n> process.memoryUsage();\n{ rss: 21106688,\n  heapTotal: 7376896,\n  heapUsed: 4153936,\n  external: 9059 }\n\n> let wm = new WeakMap();\nundefined\n\n// 新建一个变量 key，指向一个 5*1024*1024 的数组\n> let key = new Array(5 * 1024 * 1024);\nundefined\n\n// 设置 WeakMap 实例的键名，也指向 key 数组\n// 这时，key 数组实际被引用了两次，\n// 变量 key 引用一次，WeakMap 的键名引用了第二次\n// 但是，WeakMap 是弱引用，对于引擎来说，引用计数还是1\n> wm.set(key, 1);\nWeakMap {}\n\n> global.gc();\nundefined\n\n// 这时内存占用 heapUsed 增加到 45M 了\n> process.memoryUsage();\n{ rss: 67538944,\n  heapTotal: 7376896,\n  heapUsed: 45782816,\n  external: 8945 }\n\n// 清除变量 key 对数组的引用，\n// 但没有手动清除 WeakMap 实例的键名对数组的引用\n> key = null;\nnull\n\n// 再次执行垃圾回收\n> global.gc();\nundefined\n\n// 内存占用 heapUsed 变回 4M 左右，\n// 可以看到 WeakMap 的键名引用没有阻止 gc 对内存的回收\n> process.memoryUsage();\n{ rss: 20639744,\n  heapTotal: 8425472,\n  heapUsed: 3979792,\n  external: 8956 }\n```\n\n上面代码中，只要外部的引用消失，WeakMap 内部的引用，就会自动被垃圾回收清除。由此可见，有了 WeakMap 的帮助，解决内存泄漏就会简单很多。\n\n### WeakMap 的用途\n\n前文说过，WeakMap 应用的典型场合就是 DOM 节点作为键名。下面是一个例子。\n\n```javascript\nlet myElement = document.getElementById(\'logo\');\nlet myWeakmap = new WeakMap();\n\nmyWeakmap.set(myElement, {timesClicked: 0});\n\nmyElement.addEventListener(\'click\', function() {\n  let logoData = myWeakmap.get(myElement);\n  logoData.timesClicked++;\n}, false);\n```\n\n上面代码中，`myElement`是一个 DOM 节点，每当发生`click`事件，就更新一下状态。我们将这个状态作为键值放在 WeakMap 里，对应的键名就是`myElement`。一旦这个 DOM 节点删除，该状态就会自动消失，不存在内存泄漏风险。\n\nWeakMap 的另一个用处是部署私有属性。\n\n```javascript\nconst _counter = new WeakMap();\nconst _action = new WeakMap();\n\nclass Countdown {\n  constructor(counter, action) {\n    _counter.set(this, counter);\n    _action.set(this, action);\n  }\n  dec() {\n    let counter = _counter.get(this);\n    if (counter < 1) return;\n    counter--;\n    _counter.set(this, counter);\n    if (counter === 0) {\n      _action.get(this)();\n    }\n  }\n}\n\nconst c = new Countdown(2, () => console.log(\'DONE\'));\n\nc.dec()\nc.dec()\n// DONE\n```\n\n上面代码中，`Countdown`类的两个内部属性`_counter`和`_action`，是实例的弱引用，所以如果删除实例，它们也就随之消失，不会造成内存泄漏。\n\n\n\n# Proxy\n\n1. [概述](http://es6.ruanyifeng.com/#docs/proxy#%E6%A6%82%E8%BF%B0)\n2. [Proxy 实例的方法](http://es6.ruanyifeng.com/#docs/proxy#Proxy%20%E5%AE%9E%E4%BE%8B%E7%9A%84%E6%96%B9%E6%B3%95)\n3. [Proxy.revocable()](http://es6.ruanyifeng.com/#docs/proxy#Proxy.revocable())\n4. [this 问题](http://es6.ruanyifeng.com/#docs/proxy#this%20%E9%97%AE%E9%A2%98)\n5. [实例：Web 服务的客户端](http://es6.ruanyifeng.com/#docs/proxy#%E5%AE%9E%E4%BE%8B%EF%BC%9AWeb%20%E6%9C%8D%E5%8A%A1%E7%9A%84%E5%AE%A2%E6%88%B7%E7%AB%AF)\n\n## 概述\n\nProxy 用于修改某些操作的默认行为，等同于在语言层面做出修改，所以属于一种“元编程”（meta programming），即对编程语言进行编程。\n\nProxy 可以理解成，在目标对象之前架设一层“拦截”，外界对该对象的访问，都必须先通过这层拦截，因此提供了一种机制，可以对外界的访问进行过滤和改写。Proxy 这个词的原意是代理，用在这里表示由它来“代理”某些操作，可以译为“代理器”。\n\n```javascript\nvar obj = new Proxy({}, {\n  get: function (target, key, receiver) {\n    console.log(`getting ${key}!`);\n    return Reflect.get(target, key, receiver);\n  },\n  set: function (target, key, value, receiver) {\n    console.log(`setting ${key}!`);\n    return Reflect.set(target, key, value, receiver);\n  }\n});\n```\n\n上面代码对一个空对象架设了一层拦截，重定义了属性的读取（`get`）和设置（`set`）行为。这里暂时先不解释具体的语法，只看运行结果。对设置了拦截行为的对象`obj`，去读写它的属性，就会得到下面的结果。\n\n```javascript\nobj.count = 1\n//  setting count!\n++obj.count\n//  getting count!\n//  setting count!\n//  2\n```\n\n上面代码说明，Proxy 实际上重载（overload）了点运算符，即用自己的定义覆盖了语言的原始定义。\n\nES6 原生提供 Proxy 构造函数，用来生成 Proxy 实例。\n\n```javascript\nvar proxy = new Proxy(target, handler);\n```\n\nProxy 对象的所有用法，都是上面这种形式，不同的只是`handler`参数的写法。其中，`new Proxy()`表示生成一个`Proxy`实例，`target`参数表示所要拦截的目标对象，`handler`参数也是一个对象，用来定制拦截行为。\n\n下面是另一个拦截读取属性行为的例子。\n\n```javascript\nvar proxy = new Proxy({}, {\n  get: function(target, property) {\n    return 35;\n  }\n});\n\nproxy.time // 35\nproxy.name // 35\nproxy.title // 35\n```\n\n上面代码中，作为构造函数，`Proxy`接受两个参数。第一个参数是所要代理的目标对象（上例是一个空对象），即如果没有`Proxy`的介入，操作原来要访问的就是这个对象；第二个参数是一个配置对象，对于每一个被代理的操作，需要提供一个对应的处理函数，该函数将拦截对应的操作。比如，上面代码中，配置对象有一个`get`方法，用来拦截对目标对象属性的访问请求。`get`方法的两个参数分别是目标对象和所要访问的属性。可以看到，由于拦截函数总是返回`35`，所以访问任何属性都得到`35`。\n\n注意，要使得`Proxy`起作用，必须针对`Proxy`实例（上例是`proxy`对象）进行操作，而不是针对目标对象（上例是空对象）进行操作。\n\n如果`handler`没有设置任何拦截，那就等同于直接通向原对象。\n\n```javascript\nvar target = {};\nvar handler = {};\nvar proxy = new Proxy(target, handler);\nproxy.a = \'b\';\ntarget.a // "b"\n```\n\n上面代码中，`handler`是一个空对象，没有任何拦截效果，访问`proxy`就等同于访问`target`。\n\n一个技巧是将 Proxy 对象，设置到`object.proxy`属性，从而可以在`object`对象上调用。\n\n```javascript\nvar object = { proxy: new Proxy(target, handler) };\n```\n\nProxy 实例也可以作为其他对象的原型对象。\n\n```javascript\nvar proxy = new Proxy({}, {\n  get: function(target, property) {\n    return 35;\n  }\n});\n\nlet obj = Object.create(proxy);\nobj.time // 35\n```\n\n上面代码中，`proxy`对象是`obj`对象的原型，`obj`对象本身并没有`time`属性，所以根据原型链，会在`proxy`对象上读取该属性，导致被拦截。\n\n同一个拦截器函数，可以设置拦截多个操作。\n\n```javascript\nvar handler = {\n  get: function(target, name) {\n    if (name === \'prototype\') {\n      return Object.prototype;\n    }\n    return \'Hello, \' + name;\n  },\n\n  apply: function(target, thisBinding, args) {\n    return args[0];\n  },\n\n  construct: function(target, args) {\n    return {value: args[1]};\n  }\n};\n\nvar fproxy = new Proxy(function(x, y) {\n  return x + y;\n}, handler);\n\nfproxy(1, 2) // 1\nnew fproxy(1, 2) // {value: 2}\nfproxy.prototype === Object.prototype // true\nfproxy.foo === "Hello, foo" // true\n```\n\n对于可以设置、但没有设置拦截的操作，则直接落在目标对象上，按照原先的方式产生结果。\n\n下面是 Proxy 支持的拦截操作一览，一共 13 种。\n\n- **get(target, propKey, receiver)**：拦截对象属性的读取，比如`proxy.foo`和`proxy[\'foo\']`。\n- **set(target, propKey, value, receiver)**：拦截对象属性的设置，比如`proxy.foo = v`或`proxy[\'foo\'] = v`，返回一个布尔值。\n- **has(target, propKey)**：拦截`propKey in proxy`的操作，返回一个布尔值。\n- **deleteProperty(target, propKey)**：拦截`delete proxy[propKey]`的操作，返回一个布尔值。\n- **ownKeys(target)**：拦截`Object.getOwnPropertyNames(proxy)`、`Object.getOwnPropertySymbols(proxy)`、`Object.keys(proxy)`、`for...in`循环，返回一个数组。该方法返回目标对象所有自身的属性的属性名，而`Object.keys()`的返回结果仅包括目标对象自身的可遍历属性。\n- **getOwnPropertyDescriptor(target, propKey)**：拦截`Object.getOwnPropertyDescriptor(proxy, propKey)`，返回属性的描述对象。\n- **defineProperty(target, propKey, propDesc)**：拦截`Object.defineProperty(proxy, propKey, propDesc）`、`Object.defineProperties(proxy, propDescs)`，返回一个布尔值。\n- **preventExtensions(target)**：拦截`Object.preventExtensions(proxy)`，返回一个布尔值。\n- **getPrototypeOf(target)**：拦截`Object.getPrototypeOf(proxy)`，返回一个对象。\n- **isExtensible(target)**：拦截`Object.isExtensible(proxy)`，返回一个布尔值。\n- **setPrototypeOf(target, proto)**：拦截`Object.setPrototypeOf(proxy, proto)`，返回一个布尔值。如果目标对象是函数，那么还有两种额外操作可以拦截。\n- **apply(target, object, args)**：拦截 Proxy 实例作为函数调用的操作，比如`proxy(...args)`、`proxy.call(object, ...args)`、`proxy.apply(...)`。\n- **construct(target, args)**：拦截 Proxy 实例作为构造函数调用的操作，比如`new proxy(...args)`。\n\n## Proxy 实例的方法\n\n下面是上面这些拦截方法的详细介绍。\n\n### get()\n\n`get`方法用于拦截某个属性的读取操作，可以接受三个参数，依次为目标对象、属性名和 proxy 实例本身（严格地说，是操作行为所针对的对象），其中最后一个参数可选。\n\n`get`方法的用法，上文已经有一个例子，下面是另一个拦截读取操作的例子。\n\n```javascript\nvar person = {\n  name: "张三"\n};\n\nvar proxy = new Proxy(person, {\n  get: function(target, property) {\n    if (property in target) {\n      return target[property];\n    } else {\n      throw new ReferenceError("Property \\"" + property + "\\" does not exist.");\n    }\n  }\n});\n\nproxy.name // "张三"\nproxy.age // 抛出一个错误\n```\n\n上面代码表示，如果访问目标对象不存在的属性，会抛出一个错误。如果没有这个拦截函数，访问不存在的属性，只会返回`undefined`。\n\n`get`方法可以继承。\n\n```javascript\nlet proto = new Proxy({}, {\n  get(target, propertyKey, receiver) {\n    console.log(\'GET \' + propertyKey);\n    return target[propertyKey];\n  }\n});\n\nlet obj = Object.create(proto);\nobj.foo // "GET foo"\n```\n\n上面代码中，拦截操作定义在`Prototype`对象上面，所以如果读取`obj`对象继承的属性时，拦截会生效。\n\n下面的例子使用`get`拦截，实现数组读取负数的索引。\n\n```javascript\nfunction createArray(...elements) {\n  let handler = {\n    get(target, propKey, receiver) {\n      let index = Number(propKey);\n      if (index < 0) {\n        propKey = String(target.length + index);\n      }\n      return Reflect.get(target, propKey, receiver);\n    }\n  };\n\n  let target = [];\n  target.push(...elements);\n  return new Proxy(target, handler);\n}\n\nlet arr = createArray(\'a\', \'b\', \'c\');\narr[-1] // c\n```\n\n上面代码中，数组的位置参数是`-1`，就会输出数组的倒数第一个成员。\n\n利用 Proxy，可以将读取属性的操作（`get`），转变为执行某个函数，从而实现属性的链式操作。\n\n```javascript\nvar pipe = (function () {\n  return function (value) {\n    var funcStack = [];\n    var oproxy = new Proxy({} , {\n      get : function (pipeObject, fnName) {\n        if (fnName === \'get\') {\n          return funcStack.reduce(function (val, fn) {\n            return fn(val);\n          },value);\n        }\n        funcStack.push(window[fnName]);\n        return oproxy;\n      }\n    });\n\n    return oproxy;\n  }\n}());\n\nvar double = n => n * 2;\nvar pow    = n => n * n;\nvar reverseInt = n => n.toString().split("").reverse().join("") | 0;\n\npipe(3).double.pow.reverseInt.get; // 63\n```\n\n上面代码设置 Proxy 以后，达到了将函数名链式使用的效果。\n\n下面的例子则是利用`get`拦截，实现一个生成各种 DOM 节点的通用函数`dom`。\n\n```javascript\nconst dom = new Proxy({}, {\n  get(target, property) {\n    return function(attrs = {}, ...children) {\n      const el = document.createElement(property);\n      for (let prop of Object.keys(attrs)) {\n        el.setAttribute(prop, attrs[prop]);\n      }\n      for (let child of children) {\n        if (typeof child === \'string\') {\n          child = document.createTextNode(child);\n        }\n        el.appendChild(child);\n      }\n      return el;\n    }\n  }\n});\n\nconst el = dom.div({},\n  \'Hello, my name is \',\n  dom.a({href: \'//example.com\'}, \'Mark\'),\n  \'. I like:\',\n  dom.ul({},\n    dom.li({}, \'The web\'),\n    dom.li({}, \'Food\'),\n    dom.li({}, \'…actually that\\\'s it\')\n  )\n);\n\ndocument.body.appendChild(el);\n```\n\n下面是一个`get`方法的第三个参数的例子，它总是指向原始的读操作所在的那个对象，一般情况下就是 Proxy 实例。\n\n```javascript\nconst proxy = new Proxy({}, {\n  get: function(target, property, receiver) {\n    return receiver;\n  }\n});\nproxy.getReceiver === proxy // true\n```\n\n上面代码中，`proxy`对象的`getReceiver`属性是由`proxy`对象提供的，所以`receiver`指向`proxy`对象。\n\n```javascript\nconst proxy = new Proxy({}, {\n  get: function(target, property, receiver) {\n    return receiver;\n  }\n});\n\nconst d = Object.create(proxy);\nd.a === d // true\n```\n\n上面代码中，`d`对象本身没有`a`属性，所以读取`d.a`的时候，会去`d`的原型`proxy`对象找。这时，`receiver`就指向`d`，代表原始的读操作所在的那个对象。\n\n如果一个属性不可配置（configurable）且不可写（writable），则 Proxy 不能修改该属性，否则通过 Proxy 对象访问该属性会报错。\n\n```javascript\nconst target = Object.defineProperties({}, {\n  foo: {\n    value: 123,\n    writable: false,\n    configurable: false\n  },\n});\n\nconst handler = {\n  get(target, propKey) {\n    return \'abc\';\n  }\n};\n\nconst proxy = new Proxy(target, handler);\n\nproxy.foo\n// TypeError: Invariant check failed\n```\n\n### set()\n\n`set`方法用来拦截某个属性的赋值操作，可以接受四个参数，依次为目标对象、属性名、属性值和 Proxy 实例本身，其中最后一个参数可选。\n\n假定`Person`对象有一个`age`属性，该属性应该是一个不大于 200 的整数，那么可以使用`Proxy`保证`age`的属性值符合要求。\n\n```javascript\nlet validator = {\n  set: function(obj, prop, value) {\n    if (prop === \'age\') {\n      if (!Number.isInteger(value)) {\n        throw new TypeError(\'The age is not an integer\');\n      }\n      if (value > 200) {\n        throw new RangeError(\'The age seems invalid\');\n      }\n    }\n\n    // 对于满足条件的 age 属性以及其他属性，直接保存\n    obj[prop] = value;\n  }\n};\n\nlet person = new Proxy({}, validator);\n\nperson.age = 100;\n\nperson.age // 100\nperson.age = \'young\' // 报错\nperson.age = 300 // 报错\n```\n\n上面代码中，由于设置了存值函数`set`，任何不符合要求的`age`属性赋值，都会抛出一个错误，这是数据验证的一种实现方法。利用`set`方法，还可以数据绑定，即每当对象发生变化时，会自动更新 DOM。\n\n有时，我们会在对象上面设置内部属性，属性名的第一个字符使用下划线开头，表示这些属性不应该被外部使用。结合`get`和`set`方法，就可以做到防止这些内部属性被外部读写。\n\n```javascript\nconst handler = {\n  get (target, key) {\n    invariant(key, \'get\');\n    return target[key];\n  },\n  set (target, key, value) {\n    invariant(key, \'set\');\n    target[key] = value;\n    return true;\n  }\n};\nfunction invariant (key, action) {\n  if (key[0] === \'_\') {\n    throw new Error(`Invalid attempt to ${action} private "${key}" property`);\n  }\n}\nconst target = {};\nconst proxy = new Proxy(target, handler);\nproxy._prop\n// Error: Invalid attempt to get private "_prop" property\nproxy._prop = \'c\'\n// Error: Invalid attempt to set private "_prop" property\n```\n\n上面代码中，只要读写的属性名的第一个字符是下划线，一律抛错，从而达到禁止读写内部属性的目的。\n\n下面是`set`方法第四个参数的例子。\n\n```javascript\nconst handler = {\n  set: function(obj, prop, value, receiver) {\n    obj[prop] = receiver;\n  }\n};\nconst proxy = new Proxy({}, handler);\nproxy.foo = \'bar\';\nproxy.foo === proxy // true\n```\n\n上面代码中，`set`方法的第四个参数`receiver`，指的是原始的操作行为所在的那个对象，一般情况下是`proxy`实例本身，请看下面的例子。\n\n```javascript\nconst handler = {\n  set: function(obj, prop, value, receiver) {\n    obj[prop] = receiver;\n  }\n};\nconst proxy = new Proxy({}, handler);\nconst myObj = {};\nObject.setPrototypeOf(myObj, proxy);\n\nmyObj.foo = \'bar\';\nmyObj.foo === myObj // true\n```\n\n上面代码中，设置`myObj.foo`属性的值时，`myObj`并没有`foo`属性，因此引擎会到`myObj`的原型链去找`foo`属性。`myObj`的原型对象`proxy`是一个 Proxy 实例，设置它的`foo`属性会触发`set`方法。这时，第四个参数`receiver`就指向原始赋值行为所在的对象`myObj`。\n\n注意，如果目标对象自身的某个属性，不可写且不可配置，那么`set`方法将不起作用。\n\n```javascript\nconst obj = {};\nObject.defineProperty(obj, \'foo\', {\n  value: \'bar\',\n  writable: false,\n});\n\nconst handler = {\n  set: function(obj, prop, value, receiver) {\n    obj[prop] = \'baz\';\n  }\n};\n\nconst proxy = new Proxy(obj, handler);\nproxy.foo = \'baz\';\nproxy.foo // "bar"\n```\n\n上面代码中，`obj.foo`属性不可写，Proxy 对这个属性的`set`代理将不会生效。\n\n### apply()\n\n`apply`方法拦截函数的调用、`call`和`apply`操作。\n\n`apply`方法可以接受三个参数，分别是目标对象、目标对象的上下文对象（`this`）和目标对象的参数数组。\n\n```javascript\nvar handler = {\n  apply (target, ctx, args) {\n    return Reflect.apply(...arguments);\n  }\n};\n```\n\n下面是一个例子。\n\n```javascript\nvar target = function () { return \'I am the target\'; };\nvar handler = {\n  apply: function () {\n    return \'I am the proxy\';\n  }\n};\n\nvar p = new Proxy(target, handler);\n\np()\n// "I am the proxy"\n```\n\n上面代码中，变量`p`是 Proxy 的实例，当它作为函数调用时（`p()`），就会被`apply`方法拦截，返回一个字符串。\n\n下面是另外一个例子。\n\n```javascript\nvar twice = {\n  apply (target, ctx, args) {\n    return Reflect.apply(...arguments) * 2;\n  }\n};\nfunction sum (left, right) {\n  return left + right;\n};\nvar proxy = new Proxy(sum, twice);\nproxy(1, 2) // 6\nproxy.call(null, 5, 6) // 22\nproxy.apply(null, [7, 8]) // 30\n```\n\n上面代码中，每当执行`proxy`函数（直接调用或`call`和`apply`调用），就会被`apply`方法拦截。\n\n另外，直接调用`Reflect.apply`方法，也会被拦截。\n\n```javascript\nReflect.apply(proxy, null, [9, 10]) // 38\n```\n\n### has()\n\n`has`方法用来拦截`HasProperty`操作，即判断对象是否具有某个属性时，这个方法会生效。典型的操作就是`in`运算符。\n\n`has`方法可以接受两个参数，分别是目标对象、需查询的属性名。\n\n下面的例子使用`has`方法隐藏某些属性，不被`in`运算符发现。\n\n```javascript\nvar handler = {\n  has (target, key) {\n    if (key[0] === \'_\') {\n      return false;\n    }\n    return key in target;\n  }\n};\nvar target = { _prop: \'foo\', prop: \'foo\' };\nvar proxy = new Proxy(target, handler);\n\'_prop\' in proxy // false\n```\n\n上面代码中，如果原对象的属性名的第一个字符是下划线，`proxy.has`就会返回`false`，从而不会被`in`运算符发现。\n\n如果原对象不可配置或者禁止扩展，这时`has`拦截会报错。\n\n```javascript\nvar obj = { a: 10 };\nObject.preventExtensions(obj);\n\nvar p = new Proxy(obj, {\n  has: function(target, prop) {\n    return false;\n  }\n});\n\n\'a\' in p // TypeError is thrown\n```\n\n上面代码中，`obj`对象禁止扩展，结果使用`has`拦截就会报错。也就是说，如果某个属性不可配置（或者目标对象不可扩展），则`has`方法就不得“隐藏”（即返回`false`）目标对象的该属性。\n\n值得注意的是，`has`方法拦截的是`HasProperty`操作，而不是`HasOwnProperty`操作，即`has`方法不判断一个属性是对象自身的属性，还是继承的属性。\n\n另外，虽然`for...in`循环也用到了`in`运算符，但是`has`拦截对`for...in`循环不生效。\n\n```javascript\nlet stu1 = {name: \'张三\', score: 59};\nlet stu2 = {name: \'李四\', score: 99};\n\nlet handler = {\n  has(target, prop) {\n    if (prop === \'score\' && target[prop] < 60) {\n      console.log(`${target.name} 不及格`);\n      return false;\n    }\n    return prop in target;\n  }\n}\n\nlet oproxy1 = new Proxy(stu1, handler);\nlet oproxy2 = new Proxy(stu2, handler);\n\n\'score\' in oproxy1\n// 张三 不及格\n// false\n\n\'score\' in oproxy2\n// true\n\nfor (let a in oproxy1) {\n  console.log(oproxy1[a]);\n}\n// 张三\n// 59\n\nfor (let b in oproxy2) {\n  console.log(oproxy2[b]);\n}\n// 李四\n// 99\n```\n\n上面代码中，`has`拦截只对`in`运算符生效，对`for...in`循环不生效，导致不符合要求的属性没有被`for...in`循环所排除。\n\n### construct()\n\n`construct`方法用于拦截`new`命令，下面是拦截对象的写法。\n\n```javascript\nvar handler = {\n  construct (target, args, newTarget) {\n    return new target(...args);\n  }\n};\n```\n\n`construct`方法可以接受两个参数。\n\n- `target`：目标对象\n- `args`：构造函数的参数对象\n- `newTarget`：创造实例对象时，`new`命令作用的构造函数（下面例子的`p`）\n\n```javascript\nvar p = new Proxy(function () {}, {\n  construct: function(target, args) {\n    console.log(\'called: \' + args.join(\', \'));\n    return { value: args[0] * 10 };\n  }\n});\n\n(new p(1)).value\n// "called: 1"\n// 10\n```\n\n`construct`方法返回的必须是一个对象，否则会报错。\n\n```javascript\nvar p = new Proxy(function() {}, {\n  construct: function(target, argumentsList) {\n    return 1;\n  }\n});\n\nnew p() // 报错\n```\n\n### deleteProperty()\n\n`deleteProperty`方法用于拦截`delete`操作，如果这个方法抛出错误或者返回`false`，当前属性就无法被`delete`命令删除。\n\n```javascript\nvar handler = {\n  deleteProperty (target, key) {\n    invariant(key, \'delete\');\n    delete target[key];\n    return true;\n  }\n};\nfunction invariant (key, action) {\n  if (key[0] === \'_\') {\n    throw new Error(`Invalid attempt to ${action} private "${key}" property`);\n  }\n}\n\nvar target = { _prop: \'foo\' };\nvar proxy = new Proxy(target, handler);\ndelete proxy._prop\n// Error: Invalid attempt to delete private "_prop" property\n```\n\n上面代码中，`deleteProperty`方法拦截了`delete`操作符，删除第一个字符为下划线的属性会报错。\n\n注意，目标对象自身的不可配置（configurable）的属性，不能被`deleteProperty`方法删除，否则报错。\n\n### defineProperty()\n\n`defineProperty`方法拦截了`Object.defineProperty`操作。\n\n```javascript\nvar handler = {\n  defineProperty (target, key, descriptor) {\n    return false;\n  }\n};\nvar target = {};\nvar proxy = new Proxy(target, handler);\nproxy.foo = \'bar\' // 不会生效\n```\n\n上面代码中，`defineProperty`方法返回`false`，导致添加新属性总是无效。\n\n注意，如果目标对象不可扩展（extensible），则`defineProperty`不能增加目标对象上不存在的属性，否则会报错。另外，如果目标对象的某个属性不可写（writable）或不可配置（configurable），则`defineProperty`方法不得改变这两个设置。\n\n### getOwnPropertyDescriptor()\n\n`getOwnPropertyDescriptor`方法拦截`Object.getOwnPropertyDescriptor()`，返回一个属性描述对象或者`undefined`。\n\n```javascript\nvar handler = {\n  getOwnPropertyDescriptor (target, key) {\n    if (key[0] === \'_\') {\n      return;\n    }\n    return Object.getOwnPropertyDescriptor(target, key);\n  }\n};\nvar target = { _foo: \'bar\', baz: \'tar\' };\nvar proxy = new Proxy(target, handler);\nObject.getOwnPropertyDescriptor(proxy, \'wat\')\n// undefined\nObject.getOwnPropertyDescriptor(proxy, \'_foo\')\n// undefined\nObject.getOwnPropertyDescriptor(proxy, \'baz\')\n// { value: \'tar\', writable: true, enumerable: true, configurable: true }\n```\n\n上面代码中，`handler.getOwnPropertyDescriptor`方法对于第一个字符为下划线的属性名会返回`undefined`。\n\n### getPrototypeOf()\n\n`getPrototypeOf`方法主要用来拦截获取对象原型。具体来说，拦截下面这些操作。\n\n- `Object.prototype.__proto__`\n- `Object.prototype.isPrototypeOf()`\n- `Object.getPrototypeOf()`\n- `Reflect.getPrototypeOf()`\n- `instanceof`\n\n下面是一个例子。\n\n```javascript\nvar proto = {};\nvar p = new Proxy({}, {\n  getPrototypeOf(target) {\n    return proto;\n  }\n});\nObject.getPrototypeOf(p) === proto // true\n```\n\n上面代码中，`getPrototypeOf`方法拦截`Object.getPrototypeOf()`，返回`proto`对象。\n\n注意，`getPrototypeOf`方法的返回值必须是对象或者`null`，否则报错。另外，如果目标对象不可扩展（extensible）， `getPrototypeOf`方法必须返回目标对象的原型对象。\n\n### isExtensible()\n\n`isExtensible`方法拦截`Object.isExtensible`操作。\n\n```javascript\nvar p = new Proxy({}, {\n  isExtensible: function(target) {\n    console.log("called");\n    return true;\n  }\n});\n\nObject.isExtensible(p)\n// "called"\n// true\n```\n\n上面代码设置了`isExtensible`方法，在调用`Object.isExtensible`时会输出`called`。\n\n注意，该方法只能返回布尔值，否则返回值会被自动转为布尔值。\n\n这个方法有一个强限制，它的返回值必须与目标对象的`isExtensible`属性保持一致，否则就会抛出错误。\n\n```javascript\nObject.isExtensible(proxy) === Object.isExtensible(target)\n```\n\n下面是一个例子。\n\n```javascript\nvar p = new Proxy({}, {\n  isExtensible: function(target) {\n    return false;\n  }\n});\n\nObject.isExtensible(p) // 报错\n```\n\n### ownKeys()\n\n`ownKeys`方法用来拦截对象自身属性的读取操作。具体来说，拦截以下操作。\n\n- `Object.getOwnPropertyNames()`\n- `Object.getOwnPropertySymbols()`\n- `Object.keys()`\n- `for...in`循环\n\n下面是拦截`Object.keys()`的例子。\n\n```javascript\nlet target = {\n  a: 1,\n  b: 2,\n  c: 3\n};\n\nlet handler = {\n  ownKeys(target) {\n    return [\'a\'];\n  }\n};\n\nlet proxy = new Proxy(target, handler);\n\nObject.keys(proxy)\n// [ \'a\' ]\n```\n\n上面代码拦截了对于`target`对象的`Object.keys()`操作，只返回`a`、`b`、`c`三个属性之中的`a`属性。\n\n下面的例子是拦截第一个字符为下划线的属性名。\n\n```javascript\nlet target = {\n  _bar: \'foo\',\n  _prop: \'bar\',\n  prop: \'baz\'\n};\n\nlet handler = {\n  ownKeys (target) {\n    return Reflect.ownKeys(target).filter(key => key[0] !== \'_\');\n  }\n};\n\nlet proxy = new Proxy(target, handler);\nfor (let key of Object.keys(proxy)) {\n  console.log(target[key]);\n}\n// "baz"\n```\n\n注意，使用`Object.keys`方法时，有三类属性会被`ownKeys`方法自动过滤，不会返回。\n\n- 目标对象上不存在的属性\n- 属性名为 Symbol 值\n- 不可遍历（`enumerable`）的属性\n\n```javascript\nlet target = {\n  a: 1,\n  b: 2,\n  c: 3,\n  [Symbol.for(\'secret\')]: \'4\',\n};\n\nObject.defineProperty(target, \'key\', {\n  enumerable: false,\n  configurable: true,\n  writable: true,\n  value: \'static\'\n});\n\nlet handler = {\n  ownKeys(target) {\n    return [\'a\', \'d\', Symbol.for(\'secret\'), \'key\'];\n  }\n};\n\nlet proxy = new Proxy(target, handler);\n\nObject.keys(proxy)\n// [\'a\']\n```\n\n上面代码中，`ownKeys`方法之中，显式返回不存在的属性（`d`）、Symbol 值（`Symbol.for(\'secret\')`）、不可遍历的属性（`key`），结果都被自动过滤掉。\n\n`ownKeys`方法还可以拦截`Object.getOwnPropertyNames()`。\n\n```javascript\nvar p = new Proxy({}, {\n  ownKeys: function(target) {\n    return [\'a\', \'b\', \'c\'];\n  }\n});\n\nObject.getOwnPropertyNames(p)\n// [ \'a\', \'b\', \'c\' ]\n```\n\n`for...in`循环也受到`ownKeys`方法的拦截。\n\n```javascript\nconst obj = { hello: \'world\' };\nconst proxy = new Proxy(obj, {\n  ownKeys: function () {\n    return [\'a\', \'b\'];\n  }\n});\n\nfor (let key in proxy) {\n  console.log(key); // 没有任何输出\n}\n```\n\n上面代码中，`ownkeys`指定只返回`a`和`b`属性，由于`obj`没有这两个属性，因此`for...in`循环不会有任何输出。\n\n`ownKeys`方法返回的数组成员，只能是字符串或 Symbol 值。如果有其他类型的值，或者返回的根本不是数组，就会报错。\n\n```javascript\nvar obj = {};\n\nvar p = new Proxy(obj, {\n  ownKeys: function(target) {\n    return [123, true, undefined, null, {}, []];\n  }\n});\n\nObject.getOwnPropertyNames(p)\n// Uncaught TypeError: 123 is not a valid property name\n```\n\n上面代码中，`ownKeys`方法虽然返回一个数组，但是每一个数组成员都不是字符串或 Symbol 值，因此就报错了。\n\n如果目标对象自身包含不可配置的属性，则该属性必须被`ownKeys`方法返回，否则报错。\n\n```javascript\nvar obj = {};\nObject.defineProperty(obj, \'a\', {\n  configurable: false,\n  enumerable: true,\n  value: 10 }\n);\n\nvar p = new Proxy(obj, {\n  ownKeys: function(target) {\n    return [\'b\'];\n  }\n});\n\nObject.getOwnPropertyNames(p)\n// Uncaught TypeError: \'ownKeys\' on proxy: trap result did not include \'a\'\n```\n\n上面代码中，`obj`对象的`a`属性是不可配置的，这时`ownKeys`方法返回的数组之中，必须包含`a`，否则会报错。\n\n另外，如果目标对象是不可扩展的（non-extensition），这时`ownKeys`方法返回的数组之中，必须包含原对象的所有属性，且不能包含多余的属性，否则报错。\n\n```javascript\nvar obj = {\n  a: 1\n};\n\nObject.preventExtensions(obj);\n\nvar p = new Proxy(obj, {\n  ownKeys: function(target) {\n    return [\'a\', \'b\'];\n  }\n});\n\nObject.getOwnPropertyNames(p)\n// Uncaught TypeError: \'ownKeys\' on proxy: trap returned extra keys but proxy target is non-extensible\n```\n\n上面代码中，`obj`对象是不可扩展的，这时`ownKeys`方法返回的数组之中，包含了`obj`对象的多余属性`b`，所以导致了报错。\n\n### preventExtensions()\n\n`preventExtensions`方法拦截`Object.preventExtensions()`。该方法必须返回一个布尔值，否则会被自动转为布尔值。\n\n这个方法有一个限制，只有目标对象不可扩展时（即`Object.isExtensible(proxy)`为`false`），`proxy.preventExtensions`才能返回`true`，否则会报错。\n\n```javascript\nvar p = new Proxy({}, {\n  preventExtensions: function(target) {\n    return true;\n  }\n});\n\nObject.preventExtensions(p) // 报错\n```\n\n上面代码中，`proxy.preventExtensions`方法返回`true`，但这时`Object.isExtensible(proxy)`会返回`true`，因此报错。\n\n为了防止出现这个问题，通常要在`proxy.preventExtensions`方法里面，调用一次`Object.preventExtensions`。\n\n```javascript\nvar p = new Proxy({}, {\n  preventExtensions: function(target) {\n    console.log(\'called\');\n    Object.preventExtensions(target);\n    return true;\n  }\n});\n\nObject.preventExtensions(p)\n// "called"\n// true\n```\n\n### setPrototypeOf()\n\n`setPrototypeOf`方法主要用来拦截`Object.setPrototypeOf`方法。\n\n下面是一个例子。\n\n```javascript\nvar handler = {\n  setPrototypeOf (target, proto) {\n    throw new Error(\'Changing the prototype is forbidden\');\n  }\n};\nvar proto = {};\nvar target = function () {};\nvar proxy = new Proxy(target, handler);\nObject.setPrototypeOf(proxy, proto);\n// Error: Changing the prototype is forbidden\n```\n\n上面代码中，只要修改`target`的原型对象，就会报错。\n\n注意，该方法只能返回布尔值，否则会被自动转为布尔值。另外，如果目标对象不可扩展（extensible），`setPrototypeOf`方法不得改变目标对象的原型。\n\n## Proxy.revocable()\n\n`Proxy.revocable`方法返回一个可取消的 Proxy 实例。\n\n```javascript\nlet target = {};\nlet handler = {};\n\nlet {proxy, revoke} = Proxy.revocable(target, handler);\n\nproxy.foo = 123;\nproxy.foo // 123\n\nrevoke();\nproxy.foo // TypeError: Revoked\n```\n\n`Proxy.revocable`方法返回一个对象，该对象的`proxy`属性是`Proxy`实例，`revoke`属性是一个函数，可以取消`Proxy`实例。上面代码中，当执行`revoke`函数之后，再访问`Proxy`实例，就会抛出一个错误。\n\n`Proxy.revocable`的一个使用场景是，目标对象不允许直接访问，必须通过代理访问，一旦访问结束，就收回代理权，不允许再次访问。\n\n## this 问题\n\n虽然 Proxy 可以代理针对目标对象的访问，但它不是目标对象的透明代理，即不做任何拦截的情况下，也无法保证与目标对象的行为一致。主要原因就是在 Proxy 代理的情况下，目标对象内部的`this`关键字会指向 Proxy 代理。\n\n```javascript\nconst target = {\n  m: function () {\n    console.log(this === proxy);\n  }\n};\nconst handler = {};\n\nconst proxy = new Proxy(target, handler);\n\ntarget.m() // false\nproxy.m()  // true\n```\n\n上面代码中，一旦`proxy`代理`target.m`，后者内部的`this`就是指向`proxy`，而不是`target`。\n\n下面是一个例子，由于`this`指向的变化，导致 Proxy 无法代理目标对象。\n\n```javascript\nconst _name = new WeakMap();\n\nclass Person {\n  constructor(name) {\n    _name.set(this, name);\n  }\n  get name() {\n    return _name.get(this);\n  }\n}\n\nconst jane = new Person(\'Jane\');\njane.name // \'Jane\'\n\nconst proxy = new Proxy(jane, {});\nproxy.name // undefined\n```\n\n上面代码中，目标对象`jane`的`name`属性，实际保存在外部`WeakMap`对象`_name`上面，通过`this`键区分。由于通过`proxy.name`访问时，`this`指向`proxy`，导致无法取到值，所以返回`undefined`。\n\n此外，有些原生对象的内部属性，只有通过正确的`this`才能拿到，所以 Proxy 也无法代理这些原生对象的属性。\n\n```javascript\nconst target = new Date();\nconst handler = {};\nconst proxy = new Proxy(target, handler);\n\nproxy.getDate();\n// TypeError: this is not a Date object.\n```\n\n上面代码中，`getDate`方法只能在`Date`对象实例上面拿到，如果`this`不是`Date`对象实例就会报错。这时，`this`绑定原始对象，就可以解决这个问题。\n\n```javascript\nconst target = new Date(\'2015-01-01\');\nconst handler = {\n  get(target, prop) {\n    if (prop === \'getDate\') {\n      return target.getDate.bind(target);\n    }\n    return Reflect.get(target, prop);\n  }\n};\nconst proxy = new Proxy(target, handler);\n\nproxy.getDate() // 1\n```\n\n## 实例：Web 服务的客户端\n\nProxy 对象可以拦截目标对象的任意属性，这使得它很合适用来写 Web 服务的客户端。\n\n```javascript\nconst service = createWebService(\'http://example.com/data\');\n\nservice.employees().then(json => {\n  const employees = JSON.parse(json);\n  // ···\n});\n```\n\n上面代码新建了一个 Web 服务的接口，这个接口返回各种数据。Proxy 可以拦截这个对象的任意属性，所以不用为每一种数据写一个适配方法，只要写一个 Proxy 拦截就可以了。\n\n```javascript\nfunction createWebService(baseUrl) {\n  return new Proxy({}, {\n    get(target, propKey, receiver) {\n      return () => httpGet(baseUrl+\'/\' + propKey);\n    }\n  });\n}\n```\n\n同理，Proxy 也可以用来实现数据库的 ORM 层。\n\n\n\n# Reflect\n\n1. [概述](http://es6.ruanyifeng.com/#docs/reflect#%E6%A6%82%E8%BF%B0)\n2. [静态方法](http://es6.ruanyifeng.com/#docs/reflect#%E9%9D%99%E6%80%81%E6%96%B9%E6%B3%95)\n3. [实例：使用 Proxy 实现观察者模式](http://es6.ruanyifeng.com/#docs/reflect#%E5%AE%9E%E4%BE%8B%EF%BC%9A%E4%BD%BF%E7%94%A8%20Proxy%20%E5%AE%9E%E7%8E%B0%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F)\n\n## 概述\n\n`Reflect`对象与`Proxy`对象一样，也是 ES6 为了操作对象而提供的新 API。`Reflect`对象的设计目的有这样几个。\n\n（1） 将`Object`对象的一些明显属于语言内部的方法（比如`Object.defineProperty`），放到`Reflect`对象上。现阶段，某些方法同时在`Object`和`Reflect`对象上部署，未来的新方法将只部署在`Reflect`对象上。也就是说，从`Reflect`对象上可以拿到语言内部的方法。\n\n（2） 修改某些`Object`方法的返回结果，让其变得更合理。比如，`Object.defineProperty(obj, name, desc)`在无法定义属性时，会抛出一个错误，而`Reflect.defineProperty(obj, name, desc)`则会返回`false`。\n\n```javascript\n// 老写法\ntry {\n  Object.defineProperty(target, property, attributes);\n  // success\n} catch (e) {\n  // failure\n}\n\n// 新写法\nif (Reflect.defineProperty(target, property, attributes)) {\n  // success\n} else {\n  // failure\n}\n```\n\n（3） 让`Object`操作都变成函数行为。某些`Object`操作是命令式，比如`name in obj`和`delete obj[name]`，而`Reflect.has(obj, name)`和`Reflect.deleteProperty(obj, name)`让它们变成了函数行为。\n\n```javascript\n// 老写法\n\'assign\' in Object // true\n\n// 新写法\nReflect.has(Object, \'assign\') // true\n```\n\n（4）`Reflect`对象的方法与`Proxy`对象的方法一一对应，只要是`Proxy`对象的方法，就能在`Reflect`对象上找到对应的方法。这就让`Proxy`对象可以方便地调用对应的`Reflect`方法，完成默认行为，作为修改行为的基础。也就是说，不管`Proxy`怎么修改默认行为，你总可以在`Reflect`上获取默认行为。\n\n```javascript\nProxy(target, {\n  set: function(target, name, value, receiver) {\n    var success = Reflect.set(target,name, value, receiver);\n    if (success) {\n      log(\'property \' + name + \' on \' + target + \' set to \' + value);\n    }\n    return success;\n  }\n});\n```\n\n上面代码中，`Proxy`方法拦截`target`对象的属性赋值行为。它采用`Reflect.set`方法将值赋值给对象的属性，确保完成原有的行为，然后再部署额外的功能。\n\n下面是另一个例子。\n\n```javascript\nvar loggedObj = new Proxy(obj, {\n  get(target, name) {\n    console.log(\'get\', target, name);\n    return Reflect.get(target, name);\n  },\n  deleteProperty(target, name) {\n    console.log(\'delete\' + name);\n    return Reflect.deleteProperty(target, name);\n  },\n  has(target, name) {\n    console.log(\'has\' + name);\n    return Reflect.has(target, name);\n  }\n});\n```\n\n上面代码中，每一个`Proxy`对象的拦截操作（`get`、`delete`、`has`），内部都调用对应的`Reflect`方法，保证原生行为能够正常执行。添加的工作，就是将每一个操作输出一行日志。\n\n有了`Reflect`对象以后，很多操作会更易读。\n\n```javascript\n// 老写法\nFunction.prototype.apply.call(Math.floor, undefined, [1.75]) // 1\n\n// 新写法\nReflect.apply(Math.floor, undefined, [1.75]) // 1\n```\n\n## 静态方法\n\n`Reflect`对象一共有 13 个静态方法。\n\n- Reflect.apply(target, thisArg, args)\n- Reflect.construct(target, args)\n- Reflect.get(target, name, receiver)\n- Reflect.set(target, name, value, receiver)\n- Reflect.defineProperty(target, name, desc)\n- Reflect.deleteProperty(target, name)\n- Reflect.has(target, name)\n- Reflect.ownKeys(target)\n- Reflect.isExtensible(target)\n- Reflect.preventExtensions(target)\n- Reflect.getOwnPropertyDescriptor(target, name)\n- Reflect.getPrototypeOf(target)\n- Reflect.setPrototypeOf(target, prototype)\n\n上面这些方法的作用，大部分与`Object`对象的同名方法的作用都是相同的，而且它与`Proxy`对象的方法是一一对应的。下面是对它们的解释。\n\n### Reflect.get(target, name, receiver)\n\n`Reflect.get`方法查找并返回`target`对象的`name`属性，如果没有该属性，则返回`undefined`。\n\n```javascript\nvar myObject = {\n  foo: 1,\n  bar: 2,\n  get baz() {\n    return this.foo + this.bar;\n  },\n}\n\nReflect.get(myObject, \'foo\') // 1\nReflect.get(myObject, \'bar\') // 2\nReflect.get(myObject, \'baz\') // 3\n```\n\n如果`name`属性部署了读取函数（getter），则读取函数的`this`绑定`receiver`。\n\n```javascript\nvar myObject = {\n  foo: 1,\n  bar: 2,\n  get baz() {\n    return this.foo + this.bar;\n  },\n};\n\nvar myReceiverObject = {\n  foo: 4,\n  bar: 4,\n};\n\nReflect.get(myObject, \'baz\', myReceiverObject) // 8\n```\n\n如果第一个参数不是对象，`Reflect.get`方法会报错。\n\n```javascript\nReflect.get(1, \'foo\') // 报错\nReflect.get(false, \'foo\') // 报错\n```\n\n### Reflect.set(target, name, value, receiver)\n\n`Reflect.set`方法设置`target`对象的`name`属性等于`value`。\n\n```javascript\nvar myObject = {\n  foo: 1,\n  set bar(value) {\n    return this.foo = value;\n  },\n}\n\nmyObject.foo // 1\n\nReflect.set(myObject, \'foo\', 2);\nmyObject.foo // 2\n\nReflect.set(myObject, \'bar\', 3)\nmyObject.foo // 3\n```\n\n如果`name`属性设置了赋值函数，则赋值函数的`this`绑定`receiver`。\n\n```javascript\nvar myObject = {\n  foo: 4,\n  set bar(value) {\n    return this.foo = value;\n  },\n};\n\nvar myReceiverObject = {\n  foo: 0,\n};\n\nReflect.set(myObject, \'bar\', 1, myReceiverObject);\nmyObject.foo // 4\nmyReceiverObject.foo // 1\n```\n\n注意，如果 Proxy 对象和 Reflect 对象联合使用，前者拦截赋值操作，后者完成赋值的默认行为，而且传入了`receiver`，那么`Reflect.set`会触发`Proxy.defineProperty`拦截。\n\n```javascript\nlet p = {\n  a: \'a\'\n};\n\nlet handler = {\n  set(target, key, value, receiver) {\n    console.log(\'set\');\n    Reflect.set(target, key, value, receiver)\n  },\n  defineProperty(target, key, attribute) {\n    console.log(\'defineProperty\');\n    Reflect.defineProperty(target, key, attribute);\n  }\n};\n\nlet obj = new Proxy(p, handler);\nobj.a = \'A\';\n// set\n// defineProperty\n```\n\n上面代码中，`Proxy.set`拦截里面使用了`Reflect.set`，而且传入了`receiver`，导致触发`Proxy.defineProperty`拦截。这是因为`Proxy.set`的`receiver`参数总是指向当前的 Proxy 实例（即上例的`obj`），而`Reflect.set`一旦传入`receiver`，就会将属性赋值到`receiver`上面（即`obj`），导致触发`defineProperty`拦截。如果`Reflect.set`没有传入`receiver`，那么就不会触发`defineProperty`拦截。\n\n```javascript\nlet p = {\n  a: \'a\'\n};\n\nlet handler = {\n  set(target, key, value, receiver) {\n    console.log(\'set\');\n    Reflect.set(target, key, value)\n  },\n  defineProperty(target, key, attribute) {\n    console.log(\'defineProperty\');\n    Reflect.defineProperty(target, key, attribute);\n  }\n};\n\nlet obj = new Proxy(p, handler);\nobj.a = \'A\';\n// set\n```\n\n如果第一个参数不是对象，`Reflect.set`会报错。\n\n```javascript\nReflect.set(1, \'foo\', {}) // 报错\nReflect.set(false, \'foo\', {}) // 报错\n```\n\n### Reflect.has(obj, name)\n\n`Reflect.has`方法对应`name in obj`里面的`in`运算符。\n\n```javascript\nvar myObject = {\n  foo: 1,\n};\n\n// 旧写法\n\'foo\' in myObject // true\n\n// 新写法\nReflect.has(myObject, \'foo\') // true\n```\n\n如果第一个参数不是对象，`Reflect.has`和`in`运算符都会报错。\n\n### Reflect.deleteProperty(obj, name)\n\n`Reflect.deleteProperty`方法等同于`delete obj[name]`，用于删除对象的属性。\n\n```javascript\nconst myObj = { foo: \'bar\' };\n\n// 旧写法\ndelete myObj.foo;\n\n// 新写法\nReflect.deleteProperty(myObj, \'foo\');\n```\n\n该方法返回一个布尔值。如果删除成功，或者被删除的属性不存在，返回`true`；删除失败，被删除的属性依然存在，返回`false`。\n\n### Reflect.construct(target, args)\n\n`Reflect.construct`方法等同于`new target(...args)`，这提供了一种不使用`new`，来调用构造函数的方法。\n\n```javascript\nfunction Greeting(name) {\n  this.name = name;\n}\n\n// new 的写法\nconst instance = new Greeting(\'张三\');\n\n// Reflect.construct 的写法\nconst instance = Reflect.construct(Greeting, [\'张三\']);\n```\n\n### Reflect.getPrototypeOf(obj)\n\n`Reflect.getPrototypeOf`方法用于读取对象的`__proto__`属性，对应`Object.getPrototypeOf(obj)`。\n\n```javascript\nconst myObj = new FancyThing();\n\n// 旧写法\nObject.getPrototypeOf(myObj) === FancyThing.prototype;\n\n// 新写法\nReflect.getPrototypeOf(myObj) === FancyThing.prototype;\n```\n\n`Reflect.getPrototypeOf`和`Object.getPrototypeOf`的一个区别是，如果参数不是对象，`Object.getPrototypeOf`会将这个参数转为对象，然后再运行，而`Reflect.getPrototypeOf`会报错。\n\n```javascript\nObject.getPrototypeOf(1) // Number {[[PrimitiveValue]]: 0}\nReflect.getPrototypeOf(1) // 报错\n```\n\n### Reflect.setPrototypeOf(obj, newProto)\n\n`Reflect.setPrototypeOf`方法用于设置目标对象的原型（prototype），对应`Object.setPrototypeOf(obj, newProto)`方法。它返回一个布尔值，表示是否设置成功。\n\n```javascript\nconst myObj = {};\n\n// 旧写法\nObject.setPrototypeOf(myObj, Array.prototype);\n\n// 新写法\nReflect.setPrototypeOf(myObj, Array.prototype);\n\nmyObj.length // 0\n```\n\n如果无法设置目标对象的原型（比如，目标对象禁止扩展），`Reflect.setPrototypeOf`方法返回`false`。\n\n```javascript\nReflect.setPrototypeOf({}, null)\n// true\nReflect.setPrototypeOf(Object.freeze({}), null)\n// false\n```\n\n如果第一个参数不是对象，`Object.setPrototypeOf`会返回第一个参数本身，而`Reflect.setPrototypeOf`会报错。\n\n```javascript\nObject.setPrototypeOf(1, {})\n// 1\n\nReflect.setPrototypeOf(1, {})\n// TypeError: Reflect.setPrototypeOf called on non-object\n```\n\n如果第一个参数是`undefined`或`null`，`Object.setPrototypeOf`和`Reflect.setPrototypeOf`都会报错。\n\n```javascript\nObject.setPrototypeOf(null, {})\n// TypeError: Object.setPrototypeOf called on null or undefined\n\nReflect.setPrototypeOf(null, {})\n// TypeError: Reflect.setPrototypeOf called on non-object\n```\n\n### Reflect.apply(func, thisArg, args)\n\n`Reflect.apply`方法等同于`Function.prototype.apply.call(func, thisArg, args)`，用于绑定`this`对象后执行给定函数。\n\n一般来说，如果要绑定一个函数的`this`对象，可以这样写`fn.apply(obj, args)`，但是如果函数定义了自己的`apply`方法，就只能写成`Function.prototype.apply.call(fn, obj, args)`，采用`Reflect`对象可以简化这种操作。\n\n```javascript\nconst ages = [11, 33, 12, 54, 18, 96];\n\n// 旧写法\nconst youngest = Math.min.apply(Math, ages);\nconst oldest = Math.max.apply(Math, ages);\nconst type = Object.prototype.toString.call(youngest);\n\n// 新写法\nconst youngest = Reflect.apply(Math.min, Math, ages);\nconst oldest = Reflect.apply(Math.max, Math, ages);\nconst type = Reflect.apply(Object.prototype.toString, youngest, []);\n```\n\n### Reflect.defineProperty(target, propertyKey, attributes)\n\n`Reflect.defineProperty`方法基本等同于`Object.defineProperty`，用来为对象定义属性。未来，后者会被逐渐废除，请从现在开始就使用`Reflect.defineProperty`代替它。\n\n```javascript\nfunction MyDate() {\n  /*…*/\n}\n\n// 旧写法\nObject.defineProperty(MyDate, \'now\', {\n  value: () => Date.now()\n});\n\n// 新写法\nReflect.defineProperty(MyDate, \'now\', {\n  value: () => Date.now()\n});\n```\n\n如果`Reflect.defineProperty`的第一个参数不是对象，就会抛出错误，比如`Reflect.defineProperty(1, \'foo\')`。\n\n这个方法可以与`Proxy.defineProperty`配合使用。\n\n```javascript\nconst p = new Proxy({}, {\n  defineProperty(target, prop, descriptor) {\n    console.log(descriptor);\n    return Reflect.defineProperty(target, prop, descriptor);\n  }\n});\n\np.foo = \'bar\';\n// {value: "bar", writable: true, enumerable: true, configurable: true}\n\np.foo // "bar"\n```\n\n上面代码中，`Proxy.defineProperty`对属性赋值设置了拦截，然后使用`Reflect.defineProperty`完成了赋值。\n\n### Reflect.getOwnPropertyDescriptor(target, propertyKey)\n\n`Reflect.getOwnPropertyDescriptor`基本等同于`Object.getOwnPropertyDescriptor`，用于得到指定属性的描述对象，将来会替代掉后者。\n\n```javascript\nvar myObject = {};\nObject.defineProperty(myObject, \'hidden\', {\n  value: true,\n  enumerable: false,\n});\n\n// 旧写法\nvar theDescriptor = Object.getOwnPropertyDescriptor(myObject, \'hidden\');\n\n// 新写法\nvar theDescriptor = Reflect.getOwnPropertyDescriptor(myObject, \'hidden\');\n```\n\n`Reflect.getOwnPropertyDescriptor`和`Object.getOwnPropertyDescriptor`的一个区别是，如果第一个参数不是对象，`Object.getOwnPropertyDescriptor(1, \'foo\')`不报错，返回`undefined`，而`Reflect.getOwnPropertyDescriptor(1, \'foo\')`会抛出错误，表示参数非法。\n\n### Reflect.isExtensible (target)\n\n`Reflect.isExtensible`方法对应`Object.isExtensible`，返回一个布尔值，表示当前对象是否可扩展。\n\n```javascript\nconst myObject = {};\n\n// 旧写法\nObject.isExtensible(myObject) // true\n\n// 新写法\nReflect.isExtensible(myObject) // true\n```\n\n如果参数不是对象，`Object.isExtensible`会返回`false`，因为非对象本来就是不可扩展的，而`Reflect.isExtensible`会报错。\n\n```javascript\nObject.isExtensible(1) // false\nReflect.isExtensible(1) // 报错\n```\n\n### Reflect.preventExtensions(target)\n\n`Reflect.preventExtensions`对应`Object.preventExtensions`方法，用于让一个对象变为不可扩展。它返回一个布尔值，表示是否操作成功。\n\n```javascript\nvar myObject = {};\n\n// 旧写法\nObject.preventExtensions(myObject) // Object {}\n\n// 新写法\nReflect.preventExtensions(myObject) // true\n```\n\n如果参数不是对象，`Object.preventExtensions`在 ES5 环境报错，在 ES6 环境返回传入的参数，而`Reflect.preventExtensions`会报错。\n\n```javascript\n// ES5 环境\nObject.preventExtensions(1) // 报错\n\n// ES6 环境\nObject.preventExtensions(1) // 1\n\n// 新写法\nReflect.preventExtensions(1) // 报错\n```\n\n### Reflect.ownKeys (target)\n\n`Reflect.ownKeys`方法用于返回对象的所有属性，基本等同于`Object.getOwnPropertyNames`与`Object.getOwnPropertySymbols`之和。\n\n```javascript\nvar myObject = {\n  foo: 1,\n  bar: 2,\n  [Symbol.for(\'baz\')]: 3,\n  [Symbol.for(\'bing\')]: 4,\n};\n\n// 旧写法\nObject.getOwnPropertyNames(myObject)\n// [\'foo\', \'bar\']\n\nObject.getOwnPropertySymbols(myObject)\n//[Symbol(baz), Symbol(bing)]\n\n// 新写法\nReflect.ownKeys(myObject)\n// [\'foo\', \'bar\', Symbol(baz), Symbol(bing)]\n```\n\n## 实例：使用 Proxy 实现观察者模式\n\n观察者模式（Observer mode）指的是函数自动观察数据对象，一旦对象有变化，函数就会自动执行。\n\n```javascript\nconst person = observable({\n  name: \'张三\',\n  age: 20\n});\n\nfunction print() {\n  console.log(`${person.name}, ${person.age}`)\n}\n\nobserve(print);\nperson.name = \'李四\';\n// 输出\n// 李四, 20\n```\n\n上面代码中，数据对象`person`是观察目标，函数`print`是观察者。一旦数据对象发生变化，`print`就会自动执行。\n\n下面，使用 Proxy 写一个观察者模式的最简单实现，即实现`observable`和`observe`这两个函数。思路是`observable`函数返回一个原始对象的 Proxy 代理，拦截赋值操作，触发充当观察者的各个函数。\n\n```javascript\nconst queuedObservers = new Set();\n\nconst observe = fn => queuedObservers.add(fn);\nconst observable = obj => new Proxy(obj, {set});\n\nfunction set(target, key, value, receiver) {\n  const result = Reflect.set(target, key, value, receiver);\n  queuedObservers.forEach(observer => observer());\n  return result;\n}\n```\n\n上面代码中，先定义了一个`Set`集合，所有观察者函数都放进这个集合。然后，`observable`函数返回原始对象的代理，拦截赋值操作。拦截函数`set`之中，会自动执行所有观察者。\n\n\n\n# Promise 对象\n\n1. [Promise 的含义](http://es6.ruanyifeng.com/#docs/promise#Promise%20%E7%9A%84%E5%90%AB%E4%B9%89)\n2. [基本用法](http://es6.ruanyifeng.com/#docs/promise#%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95)\n3. [Promise.prototype.then()](http://es6.ruanyifeng.com/#docs/promise#Promise.prototype.then())\n4. [Promise.prototype.catch()](http://es6.ruanyifeng.com/#docs/promise#Promise.prototype.catch())\n5. [Promise.prototype.finally()](http://es6.ruanyifeng.com/#docs/promise#Promise.prototype.finally())\n6. [Promise.all()](http://es6.ruanyifeng.com/#docs/promise#Promise.all())\n7. [Promise.race()](http://es6.ruanyifeng.com/#docs/promise#Promise.race())\n8. [Promise.resolve()](http://es6.ruanyifeng.com/#docs/promise#Promise.resolve())\n9. [Promise.reject()](http://es6.ruanyifeng.com/#docs/promise#Promise.reject())\n10. [应用](http://es6.ruanyifeng.com/#docs/promise#%E5%BA%94%E7%94%A8)\n11. [Promise.try()](http://es6.ruanyifeng.com/#docs/promise#Promise.try())\n\n## Promise 的含义\n\nPromise 是异步编程的一种解决方案，比传统的解决方案——回调函数和事件——更合理和更强大。它由社区最早提出和实现，ES6 将其写进了语言标准，统一了用法，原生提供了`Promise`对象。\n\n所谓`Promise`，简单说就是一个容器，里面保存着某个未来才会结束的事件（通常是一个异步操作）的结果。从语法上说，Promise 是一个对象，从它可以获取异步操作的消息。Promise 提供统一的 API，各种异步操作都可以用同样的方法进行处理。\n\n`Promise`对象有以下两个特点。\n\n（1）对象的状态不受外界影响。`Promise`对象代表一个异步操作，有三种状态：`pending`（进行中）、`fulfilled`（已成功）和`rejected`（已失败）。只有异步操作的结果，可以决定当前是哪一种状态，任何其他操作都无法改变这个状态。这也是`Promise`这个名字的由来，它的英语意思就是“承诺”，表示其他手段无法改变。\n\n（2）一旦状态改变，就不会再变，任何时候都可以得到这个结果。`Promise`对象的状态改变，只有两种可能：从`pending`变为`fulfilled`和从`pending`变为`rejected`。只要这两种情况发生，状态就凝固了，不会再变了，会一直保持这个结果，这时就称为 resolved（已定型）。如果改变已经发生了，你再对`Promise`对象添加回调函数，也会立即得到这个结果。这与事件（Event）完全不同，事件的特点是，如果你错过了它，再去监听，是得不到结果的。\n\n注意，为了行文方便，本章后面的`resolved`统一只指`fulfilled`状态，不包含`rejected`状态。\n\n有了`Promise`对象，就可以将异步操作以同步操作的流程表达出来，避免了层层嵌套的回调函数。此外，`Promise`对象提供统一的接口，使得控制异步操作更加容易。\n\n`Promise`也有一些缺点。首先，无法取消`Promise`，一旦新建它就会立即执行，无法中途取消。其次，如果不设置回调函数，`Promise`内部抛出的错误，不会反应到外部。第三，当处于`pending`状态时，无法得知目前进展到哪一个阶段（刚刚开始还是即将完成）。\n\n如果某些事件不断地反复发生，一般来说，使用 [Stream](https://nodejs.org/api/stream.html) 模式是比部署`Promise`更好的选择。\n\n## 基本用法\n\nES6 规定，`Promise`对象是一个构造函数，用来生成`Promise`实例。\n\n下面代码创造了一个`Promise`实例。\n\n```javascript\nconst promise = new Promise(function(resolve, reject) {\n  // ... some code\n\n  if (/* 异步操作成功 */){\n    resolve(value);\n  } else {\n    reject(error);\n  }\n});\n```\n\n`Promise`构造函数接受一个函数作为参数，该函数的两个参数分别是`resolve`和`reject`。它们是两个函数，由 JavaScript 引擎提供，不用自己部署。\n\n`resolve`函数的作用是，将`Promise`对象的状态从“未完成”变为“成功”（即从 pending 变为 resolved），在异步操作成功时调用，并将异步操作的结果，作为参数传递出去；`reject`函数的作用是，将`Promise`对象的状态从“未完成”变为“失败”（即从 pending 变为 rejected），在异步操作失败时调用，并将异步操作报出的错误，作为参数传递出去。\n\n`Promise`实例生成以后，可以用`then`方法分别指定`resolved`状态和`rejected`状态的回调函数。\n\n```javascript\npromise.then(function(value) {\n  // success\n}, function(error) {\n  // failure\n});\n```\n\n`then`方法可以接受两个回调函数作为参数。第一个回调函数是`Promise`对象的状态变为`resolved`时调用，第二个回调函数是`Promise`对象的状态变为`rejected`时调用。其中，第二个函数是可选的，不一定要提供。这两个函数都接受`Promise`对象传出的值作为参数。\n\n下面是一个`Promise`对象的简单例子。\n\n```javascript\nfunction timeout(ms) {\n  return new Promise((resolve, reject) => {\n    setTimeout(resolve, ms, \'done\');\n  });\n}\n\ntimeout(100).then((value) => {\n  console.log(value);\n});\n```\n\n上面代码中，`timeout`方法返回一个`Promise`实例，表示一段时间以后才会发生的结果。过了指定的时间（`ms`参数）以后，`Promise`实例的状态变为`resolved`，就会触发`then`方法绑定的回调函数。\n\nPromise 新建后就会立即执行。\n\n```javascript\nlet promise = new Promise(function(resolve, reject) {\n  console.log(\'Promise\');\n  resolve();\n});\n\npromise.then(function() {\n  console.log(\'resolved.\');\n});\n\nconsole.log(\'Hi!\');\n\n// Promise\n// Hi!\n// resolved\n```\n\n上面代码中，Promise 新建后立即执行，所以首先输出的是`Promise`。然后，`then`方法指定的回调函数，将在当前脚本所有同步任务执行完才会执行，所以`resolved`最后输出。\n\n下面是异步加载图片的例子。\n\n```javascript\nfunction loadImageAsync(url) {\n  return new Promise(function(resolve, reject) {\n    const image = new Image();\n\n    image.onload = function() {\n      resolve(image);\n    };\n\n    image.onerror = function() {\n      reject(new Error(\'Could not load image at \' + url));\n    };\n\n    image.src = url;\n  });\n}\n```\n\n上面代码中，使用`Promise`包装了一个图片加载的异步操作。如果加载成功，就调用`resolve`方法，否则就调用`reject`方法。\n\n下面是一个用`Promise`对象实现的 Ajax 操作的例子。\n\n```javascript\nconst getJSON = function(url) {\n  const promise = new Promise(function(resolve, reject){\n    const handler = function() {\n      if (this.readyState !== 4) {\n        return;\n      }\n      if (this.status === 200) {\n        resolve(this.response);\n      } else {\n        reject(new Error(this.statusText));\n      }\n    };\n    const client = new XMLHttpRequest();\n    client.open("GET", url);\n    client.onreadystatechange = handler;\n    client.responseType = "json";\n    client.setRequestHeader("Accept", "application/json");\n    client.send();\n\n  });\n\n  return promise;\n};\n\ngetJSON("/posts.json").then(function(json) {\n  console.log(\'Contents: \' + json);\n}, function(error) {\n  console.error(\'出错了\', error);\n});\n```\n\n上面代码中，`getJSON`是对 XMLHttpRequest 对象的封装，用于发出一个针对 JSON 数据的 HTTP 请求，并且返回一个`Promise`对象。需要注意的是，在`getJSON`内部，`resolve`函数和`reject`函数调用时，都带有参数。\n\n如果调用`resolve`函数和`reject`函数时带有参数，那么它们的参数会被传递给回调函数。`reject`函数的参数通常是`Error`对象的实例，表示抛出的错误；`resolve`函数的参数除了正常的值以外，还可能是另一个 Promise 实例，比如像下面这样。\n\n```javascript\nconst p1 = new Promise(function (resolve, reject) {\n  // ...\n});\n\nconst p2 = new Promise(function (resolve, reject) {\n  // ...\n  resolve(p1);\n})\n```\n\n上面代码中，`p1`和`p2`都是 Promise 的实例，但是`p2`的`resolve`方法将`p1`作为参数，即一个异步操作的结果是返回另一个异步操作。\n\n注意，这时`p1`的状态就会传递给`p2`，也就是说，`p1`的状态决定了`p2`的状态。如果`p1`的状态是`pending`，那么`p2`的回调函数就会等待`p1`的状态改变；如果`p1`的状态已经是`resolved`或者`rejected`，那么`p2`的回调函数将会立刻执行。\n\n```javascript\nconst p1 = new Promise(function (resolve, reject) {\n  setTimeout(() => reject(new Error(\'fail\')), 3000)\n})\n\nconst p2 = new Promise(function (resolve, reject) {\n  setTimeout(() => resolve(p1), 1000)\n})\n\np2\n  .then(result => console.log(result))\n  .catch(error => console.log(error))\n// Error: fail\n```\n\n上面代码中，`p1`是一个 Promise，3 秒之后变为`rejected`。`p2`的状态在 1 秒之后改变，`resolve`方法返回的是`p1`。由于`p2`返回的是另一个 Promise，导致`p2`自己的状态无效了，由`p1`的状态决定`p2`的状态。所以，后面的`then`语句都变成针对后者（`p1`）。又过了 2 秒，`p1`变为`rejected`，导致触发`catch`方法指定的回调函数。\n\n注意，调用`resolve`或`reject`并不会终结 Promise 的参数函数的执行。\n\n```javascript\nnew Promise((resolve, reject) => {\n  resolve(1);\n  console.log(2);\n}).then(r => {\n  console.log(r);\n});\n// 2\n// 1\n```\n\n上面代码中，调用`resolve(1)`以后，后面的`console.log(2)`还是会执行，并且会首先打印出来。这是因为立即 resolved 的 Promise 是在本轮事件循环的末尾执行，总是晚于本轮循环的同步任务。\n\n一般来说，调用`resolve`或`reject`以后，Promise 的使命就完成了，后继操作应该放到`then`方法里面，而不应该直接写在`resolve`或`reject`的后面。所以，最好在它们前面加上`return`语句，这样就不会有意外。\n\n```javascript\nnew Promise((resolve, reject) => {\n  return resolve(1);\n  // 后面的语句不会执行\n  console.log(2);\n})\n```\n\n## Promise.prototype.then()\n\nPromise 实例具有`then`方法，也就是说，`then`方法是定义在原型对象`Promise.prototype`上的。它的作用是为 Promise 实例添加状态改变时的回调函数。前面说过，`then`方法的第一个参数是`resolved`状态的回调函数，第二个参数（可选）是`rejected`状态的回调函数。\n\n`then`方法返回的是一个新的`Promise`实例（注意，不是原来那个`Promise`实例）。因此可以采用链式写法，即`then`方法后面再调用另一个`then`方法。\n\n```javascript\ngetJSON("/posts.json").then(function(json) {\n  return json.post;\n}).then(function(post) {\n  // ...\n});\n```\n\n上面的代码使用`then`方法，依次指定了两个回调函数。第一个回调函数完成以后，会将返回结果作为参数，传入第二个回调函数。\n\n采用链式的`then`，可以指定一组按照次序调用的回调函数。这时，前一个回调函数，有可能返回的还是一个`Promise`对象（即有异步操作），这时后一个回调函数，就会等待该`Promise`对象的状态发生变化，才会被调用。\n\n```javascript\ngetJSON("/post/1.json").then(function(post) {\n  return getJSON(post.commentURL);\n}).then(function funcA(comments) {\n  console.log("resolved: ", comments);\n}, function funcB(err){\n  console.log("rejected: ", err);\n});\n```\n\n上面代码中，第一个`then`方法指定的回调函数，返回的是另一个`Promise`对象。这时，第二个`then`方法指定的回调函数，就会等待这个新的`Promise`对象状态发生变化。如果变为`resolved`，就调用`funcA`，如果状态变为`rejected`，就调用`funcB`。\n\n如果采用箭头函数，上面的代码可以写得更简洁。\n\n```javascript\ngetJSON("/post/1.json").then(\n  post => getJSON(post.commentURL)\n).then(\n  comments => console.log("resolved: ", comments),\n  err => console.log("rejected: ", err)\n);\n```\n\n## Promise.prototype.catch()\n\n`Promise.prototype.catch`方法是`.then(null, rejection)`的别名，用于指定发生错误时的回调函数。\n\n```javascript\ngetJSON(\'/posts.json\').then(function(posts) {\n  // ...\n}).catch(function(error) {\n  // 处理 getJSON 和 前一个回调函数运行时发生的错误\n  console.log(\'发生错误！\', error);\n});\n```\n\n上面代码中，`getJSON`方法返回一个 Promise 对象，如果该对象状态变为`resolved`，则会调用`then`方法指定的回调函数；如果异步操作抛出错误，状态就会变为`rejected`，就会调用`catch`方法指定的回调函数，处理这个错误。另外，`then`方法指定的回调函数，如果运行中抛出错误，也会被`catch`方法捕获。\n\n```javascript\np.then((val) => console.log(\'fulfilled:\', val))\n  .catch((err) => console.log(\'rejected\', err));\n\n// 等同于\np.then((val) => console.log(\'fulfilled:\', val))\n  .then(null, (err) => console.log("rejected:", err));\n```\n\n下面是一个例子。\n\n```javascript\nconst promise = new Promise(function(resolve, reject) {\n  throw new Error(\'test\');\n});\npromise.catch(function(error) {\n  console.log(error);\n});\n// Error: test\n```\n\n上面代码中，`promise`抛出一个错误，就被`catch`方法指定的回调函数捕获。注意，上面的写法与下面两种写法是等价的。\n\n```javascript\n// 写法一\nconst promise = new Promise(function(resolve, reject) {\n  try {\n    throw new Error(\'test\');\n  } catch(e) {\n    reject(e);\n  }\n});\npromise.catch(function(error) {\n  console.log(error);\n});\n\n// 写法二\nconst promise = new Promise(function(resolve, reject) {\n  reject(new Error(\'test\'));\n});\npromise.catch(function(error) {\n  console.log(error);\n});\n```\n\n比较上面两种写法，可以发现`reject`方法的作用，等同于抛出错误。\n\n如果 Promise 状态已经变成`resolved`，再抛出错误是无效的。\n\n```javascript\nconst promise = new Promise(function(resolve, reject) {\n  resolve(\'ok\');\n  throw new Error(\'test\');\n});\npromise\n  .then(function(value) { console.log(value) })\n  .catch(function(error) { console.log(error) });\n// ok\n```\n\n上面代码中，Promise 在`resolve`语句后面，再抛出错误，不会被捕获，等于没有抛出。因为 Promise 的状态一旦改变，就永久保持该状态，不会再变了。\n\nPromise 对象的错误具有“冒泡”性质，会一直向后传递，直到被捕获为止。也就是说，错误总是会被下一个`catch`语句捕获。\n\n```javascript\ngetJSON(\'/post/1.json\').then(function(post) {\n  return getJSON(post.commentURL);\n}).then(function(comments) {\n  // some code\n}).catch(function(error) {\n  // 处理前面三个Promise产生的错误\n});\n```\n\n上面代码中，一共有三个 Promise 对象：一个由`getJSON`产生，两个由`then`产生。它们之中任何一个抛出的错误，都会被最后一个`catch`捕获。\n\n一般来说，不要在`then`方法里面定义 Reject 状态的回调函数（即`then`的第二个参数），总是使用`catch`方法。\n\n```javascript\n// bad\npromise\n  .then(function(data) {\n    // success\n  }, function(err) {\n    // error\n  });\n\n// good\npromise\n  .then(function(data) { //cb\n    // success\n  })\n  .catch(function(err) {\n    // error\n  });\n```\n\n上面代码中，第二种写法要好于第一种写法，理由是第二种写法可以捕获前面`then`方法执行中的错误，也更接近同步的写法（`try/catch`）。因此，建议总是使用`catch`方法，而不使用`then`方法的第二个参数。\n\n跟传统的`try/catch`代码块不同的是，如果没有使用`catch`方法指定错误处理的回调函数，Promise 对象抛出的错误不会传递到外层代码，即不会有任何反应。\n\n```javascript\nconst someAsyncThing = function() {\n  return new Promise(function(resolve, reject) {\n    // 下面一行会报错，因为x没有声明\n    resolve(x + 2);\n  });\n};\n\nsomeAsyncThing().then(function() {\n  console.log(\'everything is great\');\n});\n\nsetTimeout(() => { console.log(123) }, 2000);\n// Uncaught (in promise) ReferenceError: x is not defined\n// 123\n```\n\n上面代码中，`someAsyncThing`函数产生的 Promise 对象，内部有语法错误。浏览器运行到这一行，会打印出错误提示`ReferenceError: x is not defined`，但是不会退出进程、终止脚本执行，2 秒之后还是会输出`123`。这就是说，Promise 内部的错误不会影响到 Promise 外部的代码，通俗的说法就是“Promise 会吃掉错误”。\n\n这个脚本放在服务器执行，退出码就是`0`（即表示执行成功）。不过，Node 有一个`unhandledRejection`事件，专门监听未捕获的`reject`错误，上面的脚本会触发这个事件的监听函数，可以在监听函数里面抛出错误。\n\n```javascript\nprocess.on(\'unhandledRejection\', function (err, p) {\n  throw err;\n});\n```\n\n上面代码中，`unhandledRejection`事件的监听函数有两个参数，第一个是错误对象，第二个是报错的 Promise 实例，它可以用来了解发生错误的环境信息。\n\n注意，Node 有计划在未来废除`unhandledRejection`事件。如果 Promise 内部有未捕获的错误，会直接终止进程，并且进程的退出码不为 0。\n\n再看下面的例子。\n\n```javascript\nconst promise = new Promise(function (resolve, reject) {\n  resolve(\'ok\');\n  setTimeout(function () { throw new Error(\'test\') }, 0)\n});\npromise.then(function (value) { console.log(value) });\n// ok\n// Uncaught Error: test\n```\n\n上面代码中，Promise 指定在下一轮“事件循环”再抛出错误。到了那个时候，Promise 的运行已经结束了，所以这个错误是在 Promise 函数体外抛出的，会冒泡到最外层，成了未捕获的错误。\n\n一般总是建议，Promise 对象后面要跟`catch`方法，这样可以处理 Promise 内部发生的错误。`catch`方法返回的还是一个 Promise 对象，因此后面还可以接着调用`then`方法。\n\n```javascript\nconst someAsyncThing = function() {\n  return new Promise(function(resolve, reject) {\n    // 下面一行会报错，因为x没有声明\n    resolve(x + 2);\n  });\n};\n\nsomeAsyncThing()\n.catch(function(error) {\n  console.log(\'oh no\', error);\n})\n.then(function() {\n  console.log(\'carry on\');\n});\n// oh no [ReferenceError: x is not defined]\n// carry on\n```\n\n上面代码运行完`catch`方法指定的回调函数，会接着运行后面那个`then`方法指定的回调函数。如果没有报错，则会跳过`catch`方法。\n\n```javascript\nPromise.resolve()\n.catch(function(error) {\n  console.log(\'oh no\', error);\n})\n.then(function() {\n  console.log(\'carry on\');\n});\n// carry on\n```\n\n上面的代码因为没有报错，跳过了`catch`方法，直接执行后面的`then`方法。此时，要是`then`方法里面报错，就与前面的`catch`无关了。\n\n`catch`方法之中，还能再抛出错误。\n\n```javascript\nconst someAsyncThing = function() {\n  return new Promise(function(resolve, reject) {\n    // 下面一行会报错，因为x没有声明\n    resolve(x + 2);\n  });\n};\n\nsomeAsyncThing().then(function() {\n  return someOtherAsyncThing();\n}).catch(function(error) {\n  console.log(\'oh no\', error);\n  // 下面一行会报错，因为 y 没有声明\n  y + 2;\n}).then(function() {\n  console.log(\'carry on\');\n});\n// oh no [ReferenceError: x is not defined]\n```\n\n上面代码中，`catch`方法抛出一个错误，因为后面没有别的`catch`方法了，导致这个错误不会被捕获，也不会传递到外层。如果改写一下，结果就不一样了。\n\n```javascript\nsomeAsyncThing().then(function() {\n  return someOtherAsyncThing();\n}).catch(function(error) {\n  console.log(\'oh no\', error);\n  // 下面一行会报错，因为y没有声明\n  y + 2;\n}).catch(function(error) {\n  console.log(\'carry on\', error);\n});\n// oh no [ReferenceError: x is not defined]\n// carry on [ReferenceError: y is not defined]\n```\n\n上面代码中，第二个`catch`方法用来捕获前一个`catch`方法抛出的错误。\n\n## Promise.prototype.finally()\n\n`finally`方法用于指定不管 Promise 对象最后状态如何，都会执行的操作。该方法是 ES2018 引入标准的。\n\n```javascript\npromise\n.then(result => {···})\n.catch(error => {···})\n.finally(() => {···});\n```\n\n上面代码中，不管`promise`最后的状态，在执行完`then`或`catch`指定的回调函数以后，都会执行`finally`方法指定的回调函数。\n\n下面是一个例子，服务器使用 Promise 处理请求，然后使用`finally`方法关掉服务器。\n\n```javascript\nserver.listen(port)\n  .then(function () {\n    // ...\n  })\n  .finally(server.stop);\n```\n\n`finally`方法的回调函数不接受任何参数，这意味着没有办法知道，前面的 Promise 状态到底是`fulfilled`还是`rejected`。这表明，`finally`方法里面的操作，应该是与状态无关的，不依赖于 Promise 的执行结果。\n\n`finally`本质上是`then`方法的特例。\n\n```javascript\npromise\n.finally(() => {\n  // 语句\n});\n\n// 等同于\npromise\n.then(\n  result => {\n    // 语句\n    return result;\n  },\n  error => {\n    // 语句\n    throw error;\n  }\n);\n```\n\n上面代码中，如果不使用`finally`方法，同样的语句需要为成功和失败两种情况各写一次。有了`finally`方法，则只需要写一次。\n\n它的实现也很简单。\n\n```javascript\nPromise.prototype.finally = function (callback) {\n  let P = this.constructor;\n  return this.then(\n    value  => P.resolve(callback()).then(() => value),\n    reason => P.resolve(callback()).then(() => { throw reason })\n  );\n};\n```\n\n上面代码中，不管前面的 Promise 是`fulfilled`还是`rejected`，都会执行回调函数`callback`。\n\n从上面的实现还可以看到，`finally`方法总是会返回原来的值。\n\n```javascript\n// resolve 的值是 undefined\nPromise.resolve(2).then(() => {}, () => {})\n\n// resolve 的值是 2\nPromise.resolve(2).finally(() => {})\n\n// reject 的值是 undefined\nPromise.reject(3).then(() => {}, () => {})\n\n// reject 的值是 3\nPromise.reject(3).finally(() => {})\n```\n\n## Promise.all()\n\n`Promise.all`方法用于将多个 Promise 实例，包装成一个新的 Promise 实例。\n\n```javascript\nconst p = Promise.all([p1, p2, p3]);\n```\n\n上面代码中，`Promise.all`方法接受一个数组作为参数，`p1`、`p2`、`p3`都是 Promise 实例，如果不是，就会先调用下面讲到的`Promise.resolve`方法，将参数转为 Promise 实例，再进一步处理。（`Promise.all`方法的参数可以不是数组，但必须具有 Iterator 接口，且返回的每个成员都是 Promise 实例。）\n\n`p`的状态由`p1`、`p2`、`p3`决定，分成两种情况。\n\n（1）只有`p1`、`p2`、`p3`的状态都变成`fulfilled`，`p`的状态才会变成`fulfilled`，此时`p1`、`p2`、`p3`的返回值组成一个数组，传递给`p`的回调函数。\n\n（2）只要`p1`、`p2`、`p3`之中有一个被`rejected`，`p`的状态就变成`rejected`，此时第一个被`reject`的实例的返回值，会传递给`p`的回调函数。\n\n下面是一个具体的例子。\n\n```javascript\n// 生成一个Promise对象的数组\nconst promises = [2, 3, 5, 7, 11, 13].map(function (id) {\n  return getJSON(\'/post/\' + id + ".json");\n});\n\nPromise.all(promises).then(function (posts) {\n  // ...\n}).catch(function(reason){\n  // ...\n});\n```\n\n上面代码中，`promises`是包含 6 个 Promise 实例的数组，只有这 6 个实例的状态都变成`fulfilled`，或者其中有一个变为`rejected`，才会调用`Promise.all`方法后面的回调函数。\n\n下面是另一个例子。\n\n```javascript\nconst databasePromise = connectDatabase();\n\nconst booksPromise = databasePromise\n  .then(findAllBooks);\n\nconst userPromise = databasePromise\n  .then(getCurrentUser);\n\nPromise.all([\n  booksPromise,\n  userPromise\n])\n.then(([books, user]) => pickTopRecommentations(books, user));\n```\n\n上面代码中，`booksPromise`和`userPromise`是两个异步操作，只有等到它们的结果都返回了，才会触发`pickTopRecommentations`这个回调函数。\n\n注意，如果作为参数的 Promise 实例，自己定义了`catch`方法，那么它一旦被`rejected`，并不会触发`Promise.all()`的`catch`方法。\n\n```javascript\nconst p1 = new Promise((resolve, reject) => {\n  resolve(\'hello\');\n})\n.then(result => result)\n.catch(e => e);\n\nconst p2 = new Promise((resolve, reject) => {\n  throw new Error(\'报错了\');\n})\n.then(result => result)\n.catch(e => e);\n\nPromise.all([p1, p2])\n.then(result => console.log(result))\n.catch(e => console.log(e));\n// ["hello", Error: 报错了]\n```\n\n上面代码中，`p1`会`resolved`，`p2`首先会`rejected`，但是`p2`有自己的`catch`方法，该方法返回的是一个新的 Promise 实例，`p2`指向的实际上是这个实例。该实例执行完`catch`方法后，也会变成`resolved`，导致`Promise.all()`方法参数里面的两个实例都会`resolved`，因此会调用`then`方法指定的回调函数，而不会调用`catch`方法指定的回调函数。\n\n如果`p2`没有自己的`catch`方法，就会调用`Promise.all()`的`catch`方法。\n\n```javascript\nconst p1 = new Promise((resolve, reject) => {\n  resolve(\'hello\');\n})\n.then(result => result);\n\nconst p2 = new Promise((resolve, reject) => {\n  throw new Error(\'报错了\');\n})\n.then(result => result);\n\nPromise.all([p1, p2])\n.then(result => console.log(result))\n.catch(e => console.log(e));\n// Error: 报错了\n```\n\n## Promise.race()\n\n`Promise.race`方法同样是将多个 Promise 实例，包装成一个新的 Promise 实例。\n\n```javascript\nconst p = Promise.race([p1, p2, p3]);\n```\n\n上面代码中，只要`p1`、`p2`、`p3`之中有一个实例率先改变状态，`p`的状态就跟着改变。那个率先改变的 Promise 实例的返回值，就传递给`p`的回调函数。\n\n`Promise.race`方法的参数与`Promise.all`方法一样，如果不是 Promise 实例，就会先调用下面讲到的`Promise.resolve`方法，将参数转为 Promise 实例，再进一步处理。\n\n下面是一个例子，如果指定时间内没有获得结果，就将 Promise 的状态变为`reject`，否则变为`resolve`。\n\n```javascript\nconst p = Promise.race([\n  fetch(\'/resource-that-may-take-a-while\'),\n  new Promise(function (resolve, reject) {\n    setTimeout(() => reject(new Error(\'request timeout\')), 5000)\n  })\n]);\n\np\n.then(console.log)\n.catch(console.error);\n```\n\n上面代码中，如果 5 秒之内`fetch`方法无法返回结果，变量`p`的状态就会变为`rejected`，从而触发`catch`方法指定的回调函数。\n\n## Promise.resolve()\n\n有时需要将现有对象转为 Promise 对象，`Promise.resolve`方法就起到这个作用。\n\n```javascript\nconst jsPromise = Promise.resolve($.ajax(\'/whatever.json\'));\n```\n\n上面代码将 jQuery 生成的`deferred`对象，转为一个新的 Promise 对象。\n\n`Promise.resolve`等价于下面的写法。\n\n```javascript\nPromise.resolve(\'foo\')\n// 等价于\nnew Promise(resolve => resolve(\'foo\'))\n```\n\n`Promise.resolve`方法的参数分成四种情况。\n\n**（1）参数是一个 Promise 实例**\n\n如果参数是 Promise 实例，那么`Promise.resolve`将不做任何修改、原封不动地返回这个实例。\n\n**（2）参数是一个thenable对象**\n\n`thenable`对象指的是具有`then`方法的对象，比如下面这个对象。\n\n```javascript\nlet thenable = {\n  then: function(resolve, reject) {\n    resolve(42);\n  }\n};\n```\n\n`Promise.resolve`方法会将这个对象转为 Promise 对象，然后就立即执行`thenable`对象的`then`方法。\n\n```javascript\nlet thenable = {\n  then: function(resolve, reject) {\n    resolve(42);\n  }\n};\n\nlet p1 = Promise.resolve(thenable);\np1.then(function(value) {\n  console.log(value);  // 42\n});\n```\n\n上面代码中，`thenable`对象的`then`方法执行后，对象`p1`的状态就变为`resolved`，从而立即执行最后那个`then`方法指定的回调函数，输出 42。\n\n**（3）参数不是具有then方法的对象，或根本就不是对象**\n\n如果参数是一个原始值，或者是一个不具有`then`方法的对象，则`Promise.resolve`方法返回一个新的 Promise 对象，状态为`resolved`。\n\n```javascript\nconst p = Promise.resolve(\'Hello\');\n\np.then(function (s){\n  console.log(s)\n});\n// Hello\n```\n\n上面代码生成一个新的 Promise 对象的实例`p`。由于字符串`Hello`不属于异步操作（判断方法是字符串对象不具有 then 方法），返回 Promise 实例的状态从一生成就是`resolved`，所以回调函数会立即执行。`Promise.resolve`方法的参数，会同时传给回调函数。\n\n**（4）不带有任何参数**\n\n`Promise.resolve`方法允许调用时不带参数，直接返回一个`resolved`状态的 Promise 对象。\n\n所以，如果希望得到一个 Promise 对象，比较方便的方法就是直接调用`Promise.resolve`方法。\n\n```javascript\nconst p = Promise.resolve();\n\np.then(function () {\n  // ...\n});\n```\n\n上面代码的变量`p`就是一个 Promise 对象。\n\n需要注意的是，立即`resolve`的 Promise 对象，是在本轮“事件循环”（event loop）的结束时，而不是在下一轮“事件循环”的开始时。\n\n```javascript\nsetTimeout(function () {\n  console.log(\'three\');\n}, 0);\n\nPromise.resolve().then(function () {\n  console.log(\'two\');\n});\n\nconsole.log(\'one\');\n\n// one\n// two\n// three\n```\n\n上面代码中，`setTimeout(fn, 0)`在下一轮“事件循环”开始时执行，`Promise.resolve()`在本轮“事件循环”结束时执行，`console.log(\'one\')`则是立即执行，因此最先输出。\n\n## Promise.reject()\n\n`Promise.reject(reason)`方法也会返回一个新的 Promise 实例，该实例的状态为`rejected`。\n\n```javascript\nconst p = Promise.reject(\'出错了\');\n// 等同于\nconst p = new Promise((resolve, reject) => reject(\'出错了\'))\n\np.then(null, function (s) {\n  console.log(s)\n});\n// 出错了\n```\n\n上面代码生成一个 Promise 对象的实例`p`，状态为`rejected`，回调函数会立即执行。\n\n注意，`Promise.reject()`方法的参数，会原封不动地作为`reject`的理由，变成后续方法的参数。这一点与`Promise.resolve`方法不一致。\n\n```javascript\nconst thenable = {\n  then(resolve, reject) {\n    reject(\'出错了\');\n  }\n};\n\nPromise.reject(thenable)\n.catch(e => {\n  console.log(e === thenable)\n})\n// true\n```\n\n上面代码中，`Promise.reject`方法的参数是一个`thenable`对象，执行以后，后面`catch`方法的参数不是`reject`抛出的“出错了”这个字符串，而是`thenable`对象。\n\n## 应用\n\n### 加载图片\n\n我们可以将图片的加载写成一个`Promise`，一旦加载完成，`Promise`的状态就发生变化。\n\n```javascript\nconst preloadImage = function (path) {\n  return new Promise(function (resolve, reject) {\n    const image = new Image();\n    image.onload  = resolve;\n    image.onerror = reject;\n    image.src = path;\n  });\n};\n```\n\n### Generator 函数与 Promise 的结合\n\n使用 Generator 函数管理流程，遇到异步操作的时候，通常返回一个`Promise`对象。\n\n```javascript\nfunction getFoo () {\n  return new Promise(function (resolve, reject){\n    resolve(\'foo\');\n  });\n}\n\nconst g = function* () {\n  try {\n    const foo = yield getFoo();\n    console.log(foo);\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nfunction run (generator) {\n  const it = generator();\n\n  function go(result) {\n    if (result.done) return result.value;\n\n    return result.value.then(function (value) {\n      return go(it.next(value));\n    }, function (error) {\n      return go(it.throw(error));\n    });\n  }\n\n  go(it.next());\n}\n\nrun(g);\n```\n\n上面代码的 Generator 函数`g`之中，有一个异步操作`getFoo`，它返回的就是一个`Promise`对象。函数`run`用来处理这个`Promise`对象，并调用下一个`next`方法。\n\n## Promise.try()\n\n实际开发中，经常遇到一种情况：不知道或者不想区分，函数`f`是同步函数还是异步操作，但是想用 Promise 来处理它。因为这样就可以不管`f`是否包含异步操作，都用`then`方法指定下一步流程，用`catch`方法处理`f`抛出的错误。一般就会采用下面的写法。\n\n```javascript\nPromise.resolve().then(f)\n```\n\n上面的写法有一个缺点，就是如果`f`是同步函数，那么它会在本轮事件循环的末尾执行。\n\n```javascript\nconst f = () => console.log(\'now\');\nPromise.resolve().then(f);\nconsole.log(\'next\');\n// next\n// now\n```\n\n上面代码中，函数`f`是同步的，但是用 Promise 包装了以后，就变成异步执行了。\n\n那么有没有一种方法，让同步函数同步执行，异步函数异步执行，并且让它们具有统一的 API 呢？回答是可以的，并且还有两种写法。第一种写法是用`async`函数来写。\n\n```javascript\nconst f = () => console.log(\'now\');\n(async () => f())();\nconsole.log(\'next\');\n// now\n// next\n```\n\n上面代码中，第二行是一个立即执行的匿名函数，会立即执行里面的`async`函数，因此如果`f`是同步的，就会得到同步的结果；如果`f`是异步的，就可以用`then`指定下一步，就像下面的写法。\n\n```javascript\n(async () => f())()\n.then(...)\n```\n\n需要注意的是，`async () => f()`会吃掉`f()`抛出的错误。所以，如果想捕获错误，要使用`promise.catch`方法。\n\n```javascript\n(async () => f())()\n.then(...)\n.catch(...)\n```\n\n第二种写法是使用`new Promise()`。\n\n```javascript\nconst f = () => console.log(\'now\');\n(\n  () => new Promise(\n    resolve => resolve(f())\n  )\n)();\nconsole.log(\'next\');\n// now\n// next\n```\n\n上面代码也是使用立即执行的匿名函数，执行`new Promise()`。这种情况下，同步函数也是同步执行的。\n\n鉴于这是一个很常见的需求，所以现在有一个[提案](https://github.com/ljharb/proposal-promise-try)，提供`Promise.try`方法替代上面的写法。\n\n```javascript\nconst f = () => console.log(\'now\');\nPromise.try(f);\nconsole.log(\'next\');\n// now\n// next\n```\n\n事实上，`Promise.try`存在已久，Promise 库[`Bluebird`](http://bluebirdjs.com/docs/api/promise.try.html)、[`Q`](https://github.com/kriskowal/q/wiki/API-Reference#promisefcallargs)和[`when`](https://github.com/cujojs/when/blob/master/docs/api.md#whentry)，早就提供了这个方法。\n\n由于`Promise.try`为所有操作提供了统一的处理机制，所以如果想用`then`方法管理流程，最好都用`Promise.try`包装一下。这样有[许多好处](http://cryto.net/~joepie91/blog/2016/05/11/what-is-promise-try-and-why-does-it-matter/)，其中一点就是可以更好地管理异常。\n\n```javascript\nfunction getUsername(userId) {\n  return database.users.get({id: userId})\n  .then(function(user) {\n    return user.name;\n  });\n}\n```\n\n上面代码中，`database.users.get()`返回一个 Promise 对象，如果抛出异步错误，可以用`catch`方法捕获，就像下面这样写。\n\n```javascript\ndatabase.users.get({id: userId})\n.then(...)\n.catch(...)\n```\n\n但是`database.users.get()`可能还会抛出同步错误（比如数据库连接错误，具体要看实现方法），这时你就不得不用`try...catch`去捕获。\n\n```javascript\ntry {\n  database.users.get({id: userId})\n  .then(...)\n  .catch(...)\n} catch (e) {\n  // ...\n}\n```\n\n上面这样的写法就很笨拙了，这时就可以统一用`promise.catch()`捕获所有同步和异步的错误。\n\n```javascript\nPromise.try(database.users.get({id: userId}))\n  .then(...)\n  .catch(...)\n```\n\n事实上，`Promise.try`就是模拟`try`代码块，就像`promise.catch`模拟的是`catch`代码块。\n\n\n\n# Iterator 和 for...of 循环\n\n1. [Iterator（遍历器）的概念](http://es6.ruanyifeng.com/#docs/iterator#Iterator%EF%BC%88%E9%81%8D%E5%8E%86%E5%99%A8%EF%BC%89%E7%9A%84%E6%A6%82%E5%BF%B5)\n2. [默认 Iterator 接口](http://es6.ruanyifeng.com/#docs/iterator#%E9%BB%98%E8%AE%A4%20Iterator%20%E6%8E%A5%E5%8F%A3)\n3. [调用 Iterator 接口的场合](http://es6.ruanyifeng.com/#docs/iterator#%E8%B0%83%E7%94%A8%20Iterator%20%E6%8E%A5%E5%8F%A3%E7%9A%84%E5%9C%BA%E5%90%88)\n4. [字符串的 Iterator 接口](http://es6.ruanyifeng.com/#docs/iterator#%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%20Iterator%20%E6%8E%A5%E5%8F%A3)\n5. [Iterator 接口与 Generator 函数](http://es6.ruanyifeng.com/#docs/iterator#Iterator%20%E6%8E%A5%E5%8F%A3%E4%B8%8E%20Generator%20%E5%87%BD%E6%95%B0)\n6. [遍历器对象的 return()，throw()](http://es6.ruanyifeng.com/#docs/iterator#%E9%81%8D%E5%8E%86%E5%99%A8%E5%AF%B9%E8%B1%A1%E7%9A%84%20return()%EF%BC%8Cthrow())\n7. [for...of 循环](http://es6.ruanyifeng.com/#docs/iterator#for...of%20%E5%BE%AA%E7%8E%AF)\n\n## Iterator（遍历器）的概念\n\nJavaScript 原有的表示“集合”的数据结构，主要是数组（`Array`）和对象（`Object`），ES6 又添加了`Map`和`Set`。这样就有了四种数据集合，用户还可以组合使用它们，定义自己的数据结构，比如数组的成员是`Map`，`Map`的成员是对象。这样就需要一种统一的接口机制，来处理所有不同的数据结构。\n\n遍历器（Iterator）就是这样一种机制。它是一种接口，为各种不同的数据结构提供统一的访问机制。任何数据结构只要部署 Iterator 接口，就可以完成遍历操作（即依次处理该数据结构的所有成员）。\n\nIterator 的作用有三个：一是为各种数据结构，提供一个统一的、简便的访问接口；二是使得数据结构的成员能够按某种次序排列；三是 ES6 创造了一种新的遍历命令`for...of`循环，Iterator 接口主要供`for...of`消费。\n\nIterator 的遍历过程是这样的。\n\n（1）创建一个指针对象，指向当前数据结构的起始位置。也就是说，遍历器对象本质上，就是一个指针对象。\n\n（2）第一次调用指针对象的`next`方法，可以将指针指向数据结构的第一个成员。\n\n（3）第二次调用指针对象的`next`方法，指针就指向数据结构的第二个成员。\n\n（4）不断调用指针对象的`next`方法，直到它指向数据结构的结束位置。\n\n每一次调用`next`方法，都会返回数据结构的当前成员的信息。具体来说，就是返回一个包含`value`和`done`两个属性的对象。其中，`value`属性是当前成员的值，`done`属性是一个布尔值，表示遍历是否结束。\n\n下面是一个模拟`next`方法返回值的例子。\n\n```javascript\nvar it = makeIterator([\'a\', \'b\']);\n\nit.next() // { value: "a", done: false }\nit.next() // { value: "b", done: false }\nit.next() // { value: undefined, done: true }\n\nfunction makeIterator(array) {\n  var nextIndex = 0;\n  return {\n    next: function() {\n      return nextIndex < array.length ?\n        {value: array[nextIndex++], done: false} :\n        {value: undefined, done: true};\n    }\n  };\n}\n```\n\n上面代码定义了一个`makeIterator`函数，它是一个遍历器生成函数，作用就是返回一个遍历器对象。对数组`[\'a\', \'b\']`执行这个函数，就会返回该数组的遍历器对象（即指针对象）`it`。\n\n指针对象的`next`方法，用来移动指针。开始时，指针指向数组的开始位置。然后，每次调用`next`方法，指针就会指向数组的下一个成员。第一次调用，指向`a`；第二次调用，指向`b`。\n\n`next`方法返回一个对象，表示当前数据成员的信息。这个对象具有`value`和`done`两个属性，`value`属性返回当前位置的成员，`done`属性是一个布尔值，表示遍历是否结束，即是否还有必要再一次调用`next`方法。\n\n总之，调用指针对象的`next`方法，就可以遍历事先给定的数据结构。\n\n对于遍历器对象来说，`done: false`和`value: undefined`属性都是可以省略的，因此上面的`makeIterator`函数可以简写成下面的形式。\n\n```javascript\nfunction makeIterator(array) {\n  var nextIndex = 0;\n  return {\n    next: function() {\n      return nextIndex < array.length ?\n        {value: array[nextIndex++]} :\n        {done: true};\n    }\n  };\n}\n```\n\n由于 Iterator 只是把接口规格加到数据结构之上，所以，遍历器与它所遍历的那个数据结构，实际上是分开的，完全可以写出没有对应数据结构的遍历器对象，或者说用遍历器对象模拟出数据结构。下面是一个无限运行的遍历器对象的例子。\n\n```javascript\nvar it = idMaker();\n\nit.next().value // 0\nit.next().value // 1\nit.next().value // 2\n// ...\n\nfunction idMaker() {\n  var index = 0;\n\n  return {\n    next: function() {\n      return {value: index++, done: false};\n    }\n  };\n}\n```\n\n上面的例子中，遍历器生成函数`idMaker`，返回一个遍历器对象（即指针对象）。但是并没有对应的数据结构，或者说，遍历器对象自己描述了一个数据结构出来。\n\n如果使用 TypeScript 的写法，遍历器接口（Iterable）、指针对象（Iterator）和`next`方法返回值的规格可以描述如下。\n\n```javascript\ninterface Iterable {\n  [Symbol.iterator]() : Iterator,\n}\n\ninterface Iterator {\n  next(value?: any) : IterationResult,\n}\n\ninterface IterationResult {\n  value: any,\n  done: boolean,\n}\n```\n\n## 默认 Iterator 接口\n\nIterator 接口的目的，就是为所有数据结构，提供了一种统一的访问机制，即`for...of`循环（详见下文）。当使用`for...of`循环遍历某种数据结构时，该循环会自动去寻找 Iterator 接口。\n\n一种数据结构只要部署了 Iterator 接口，我们就称这种数据结构是“可遍历的”（iterable）。\n\nES6 规定，默认的 Iterator 接口部署在数据结构的`Symbol.iterator`属性，或者说，一个数据结构只要具有`Symbol.iterator`属性，就可以认为是“可遍历的”（iterable）。`Symbol.iterator`属性本身是一个函数，就是当前数据结构默认的遍历器生成函数。执行这个函数，就会返回一个遍历器。至于属性名`Symbol.iterator`，它是一个表达式，返回`Symbol`对象的`iterator`属性，这是一个预定义好的、类型为 Symbol 的特殊值，所以要放在方括号内（参见《Symbol》一章）。\n\n```javascript\nconst obj = {\n  [Symbol.iterator] : function () {\n    return {\n      next: function () {\n        return {\n          value: 1,\n          done: true\n        };\n      }\n    };\n  }\n};\n```\n\n上面代码中，对象`obj`是可遍历的（iterable），因为具有`Symbol.iterator`属性。执行这个属性，会返回一个遍历器对象。该对象的根本特征就是具有`next`方法。每次调用`next`方法，都会返回一个代表当前成员的信息对象，具有`value`和`done`两个属性。\n\nES6 的有些数据结构原生具备 Iterator 接口（比如数组），即不用任何处理，就可以被`for...of`循环遍历。原因在于，这些数据结构原生部署了`Symbol.iterator`属性（详见下文），另外一些数据结构没有（比如对象）。凡是部署了`Symbol.iterator`属性的数据结构，就称为部署了遍历器接口。调用这个接口，就会返回一个遍历器对象。\n\n原生具备 Iterator 接口的数据结构如下。\n\n- Array\n- Map\n- Set\n- String\n- TypedArray\n- 函数的 arguments 对象\n- NodeList 对象\n\n下面的例子是数组的`Symbol.iterator`属性。\n\n```javascript\nlet arr = [\'a\', \'b\', \'c\'];\nlet iter = arr[Symbol.iterator]();\n\niter.next() // { value: \'a\', done: false }\niter.next() // { value: \'b\', done: false }\niter.next() // { value: \'c\', done: false }\niter.next() // { value: undefined, done: true }\n```\n\n上面代码中，变量`arr`是一个数组，原生就具有遍历器接口，部署在`arr`的`Symbol.iterator`属性上面。所以，调用这个属性，就得到遍历器对象。\n\n对于原生部署 Iterator 接口的数据结构，不用自己写遍历器生成函数，`for...of`循环会自动遍历它们。除此之外，其他数据结构（主要是对象）的 Iterator 接口，都需要自己在`Symbol.iterator`属性上面部署，这样才会被`for...of`循环遍历。\n\n对象（Object）之所以没有默认部署 Iterator 接口，是因为对象的哪个属性先遍历，哪个属性后遍历是不确定的，需要开发者手动指定。本质上，遍历器是一种线性处理，对于任何非线性的数据结构，部署遍历器接口，就等于部署一种线性转换。不过，严格地说，对象部署遍历器接口并不是很必要，因为这时对象实际上被当作 Map 结构使用，ES5 没有 Map 结构，而 ES6 原生提供了。\n\n一个对象如果要具备可被`for...of`循环调用的 Iterator 接口，就必须在`Symbol.iterator`的属性上部署遍历器生成方法（原型链上的对象具有该方法也可）。\n\n```javascript\nclass RangeIterator {\n  constructor(start, stop) {\n    this.value = start;\n    this.stop = stop;\n  }\n\n  [Symbol.iterator]() { return this; }\n\n  next() {\n    var value = this.value;\n    if (value < this.stop) {\n      this.value++;\n      return {done: false, value: value};\n    }\n    return {done: true, value: undefined};\n  }\n}\n\nfunction range(start, stop) {\n  return new RangeIterator(start, stop);\n}\n\nfor (var value of range(0, 3)) {\n  console.log(value); // 0, 1, 2\n}\n```\n\n上面代码是一个类部署 Iterator 接口的写法。`Symbol.iterator`属性对应一个函数，执行后返回当前对象的遍历器对象。\n\n下面是通过遍历器实现指针结构的例子。\n\n```javascript\nfunction Obj(value) {\n  this.value = value;\n  this.next = null;\n}\n\nObj.prototype[Symbol.iterator] = function() {\n  var iterator = { next: next };\n\n  var current = this;\n\n  function next() {\n    if (current) {\n      var value = current.value;\n      current = current.next;\n      return { done: false, value: value };\n    } else {\n      return { done: true };\n    }\n  }\n  return iterator;\n}\n\nvar one = new Obj(1);\nvar two = new Obj(2);\nvar three = new Obj(3);\n\none.next = two;\ntwo.next = three;\n\nfor (var i of one){\n  console.log(i); // 1, 2, 3\n}\n```\n\n上面代码首先在构造函数的原型链上部署`Symbol.iterator`方法，调用该方法会返回遍历器对象`iterator`，调用该对象的`next`方法，在返回一个值的同时，自动将内部指针移到下一个实例。\n\n下面是另一个为对象添加 Iterator 接口的例子。\n\n```javascript\nlet obj = {\n  data: [ \'hello\', \'world\' ],\n  [Symbol.iterator]() {\n    const self = this;\n    let index = 0;\n    return {\n      next() {\n        if (index < self.data.length) {\n          return {\n            value: self.data[index++],\n            done: false\n          };\n        } else {\n          return { value: undefined, done: true };\n        }\n      }\n    };\n  }\n};\n```\n\n对于类似数组的对象（存在数值键名和`length`属性），部署 Iterator 接口，有一个简便方法，就是`Symbol.iterator`方法直接引用数组的 Iterator 接口。\n\n```javascript\nNodeList.prototype[Symbol.iterator] = Array.prototype[Symbol.iterator];\n// 或者\nNodeList.prototype[Symbol.iterator] = [][Symbol.iterator];\n\n[...document.querySelectorAll(\'div\')] // 可以执行了\n```\n\nNodeList 对象是类似数组的对象，本来就具有遍历接口，可以直接遍历。上面代码中，我们将它的遍历接口改成数组的`Symbol.iterator`属性，可以看到没有任何影响。\n\n下面是另一个类似数组的对象调用数组的`Symbol.iterator`方法的例子。\n\n```javascript\nlet iterable = {\n  0: \'a\',\n  1: \'b\',\n  2: \'c\',\n  length: 3,\n  [Symbol.iterator]: Array.prototype[Symbol.iterator]\n};\nfor (let item of iterable) {\n  console.log(item); // \'a\', \'b\', \'c\'\n}\n```\n\n注意，普通对象部署数组的`Symbol.iterator`方法，并无效果。\n\n```javascript\nlet iterable = {\n  a: \'a\',\n  b: \'b\',\n  c: \'c\',\n  length: 3,\n  [Symbol.iterator]: Array.prototype[Symbol.iterator]\n};\nfor (let item of iterable) {\n  console.log(item); // undefined, undefined, undefined\n}\n```\n\n如果`Symbol.iterator`方法对应的不是遍历器生成函数（即会返回一个遍历器对象），解释引擎将会报错。\n\n```javascript\nvar obj = {};\n\nobj[Symbol.iterator] = () => 1;\n\n[...obj] // TypeError: [] is not a function\n```\n\n上面代码中，变量`obj`的`Symbol.iterator`方法对应的不是遍历器生成函数，因此报错。\n\n有了遍历器接口，数据结构就可以用`for...of`循环遍历（详见下文），也可以使用`while`循环遍历。\n\n```javascript\nvar $iterator = ITERABLE[Symbol.iterator]();\nvar $result = $iterator.next();\nwhile (!$result.done) {\n  var x = $result.value;\n  // ...\n  $result = $iterator.next();\n}\n```\n\n上面代码中，`ITERABLE`代表某种可遍历的数据结构，`$iterator`是它的遍历器对象。遍历器对象每次移动指针（`next`方法），都检查一下返回值的`done`属性，如果遍历还没结束，就移动遍历器对象的指针到下一步（`next`方法），不断循环。\n\n## 调用 Iterator 接口的场合\n\n有一些场合会默认调用 Iterator 接口（即`Symbol.iterator`方法），除了下文会介绍的`for...of`循环，还有几个别的场合。\n\n**（1）解构赋值**\n\n对数组和 Set 结构进行解构赋值时，会默认调用`Symbol.iterator`方法。\n\n```javascript\nlet set = new Set().add(\'a\').add(\'b\').add(\'c\');\n\nlet [x,y] = set;\n// x=\'a\'; y=\'b\'\n\nlet [first, ...rest] = set;\n// first=\'a\'; rest=[\'b\',\'c\'];\n```\n\n**（2）扩展运算符**\n\n扩展运算符（...）也会调用默认的 Iterator 接口。\n\n```javascript\n// 例一\nvar str = \'hello\';\n[...str] //  [\'h\',\'e\',\'l\',\'l\',\'o\']\n\n// 例二\nlet arr = [\'b\', \'c\'];\n[\'a\', ...arr, \'d\']\n// [\'a\', \'b\', \'c\', \'d\']\n```\n\n上面代码的扩展运算符内部就调用 Iterator 接口。\n\n实际上，这提供了一种简便机制，可以将任何部署了 Iterator 接口的数据结构，转为数组。也就是说，只要某个数据结构部署了 Iterator 接口，就可以对它使用扩展运算符，将其转为数组。\n\n```javascript\nlet arr = [...iterable];\n```\n\n**（3）yield\\***\n\n`yield*`后面跟的是一个可遍历的结构，它会调用该结构的遍历器接口。\n\n```javascript\nlet generator = function* () {\n  yield 1;\n  yield* [2,3,4];\n  yield 5;\n};\n\nvar iterator = generator();\n\niterator.next() // { value: 1, done: false }\niterator.next() // { value: 2, done: false }\niterator.next() // { value: 3, done: false }\niterator.next() // { value: 4, done: false }\niterator.next() // { value: 5, done: false }\niterator.next() // { value: undefined, done: true }\n```\n\n**（4）其他场合**\n\n由于数组的遍历会调用遍历器接口，所以任何接受数组作为参数的场合，其实都调用了遍历器接口。下面是一些例子。\n\n- for...of\n- Array.from()\n- Map(), Set(), WeakMap(), WeakSet()（比如`new Map([[\'a\',1],[\'b\',2]])`）\n- Promise.all()\n- Promise.race()\n\n## 字符串的 Iterator 接口\n\n字符串是一个类似数组的对象，也原生具有 Iterator 接口。\n\n```javascript\nvar someString = "hi";\ntypeof someString[Symbol.iterator]\n// "function"\n\nvar iterator = someString[Symbol.iterator]();\n\niterator.next()  // { value: "h", done: false }\niterator.next()  // { value: "i", done: false }\niterator.next()  // { value: undefined, done: true }\n```\n\n上面代码中，调用`Symbol.iterator`方法返回一个遍历器对象，在这个遍历器上可以调用 next 方法，实现对于字符串的遍历。\n\n可以覆盖原生的`Symbol.iterator`方法，达到修改遍历器行为的目的。\n\n```javascript\nvar str = new String("hi");\n\n[...str] // ["h", "i"]\n\nstr[Symbol.iterator] = function() {\n  return {\n    next: function() {\n      if (this._first) {\n        this._first = false;\n        return { value: "bye", done: false };\n      } else {\n        return { done: true };\n      }\n    },\n    _first: true\n  };\n};\n\n[...str] // ["bye"]\nstr // "hi"\n```\n\n上面代码中，字符串 str 的`Symbol.iterator`方法被修改了，所以扩展运算符（`...`）返回的值变成了`bye`，而字符串本身还是`hi`。\n\n## Iterator 接口与 Generator 函数\n\n`Symbol.iterator`方法的最简单实现，还是使用下一章要介绍的 Generator 函数。\n\n```javascript\nlet myIterable = {\n  [Symbol.iterator]: function* () {\n    yield 1;\n    yield 2;\n    yield 3;\n  }\n}\n[...myIterable] // [1, 2, 3]\n\n// 或者采用下面的简洁写法\n\nlet obj = {\n  * [Symbol.iterator]() {\n    yield \'hello\';\n    yield \'world\';\n  }\n};\n\nfor (let x of obj) {\n  console.log(x);\n}\n// "hello"\n// "world"\n```\n\n上面代码中，`Symbol.iterator`方法几乎不用部署任何代码，只要用 yield 命令给出每一步的返回值即可。\n\n## 遍历器对象的 return()，throw()\n\n遍历器对象除了具有`next`方法，还可以具有`return`方法和`throw`方法。如果你自己写遍历器对象生成函数，那么`next`方法是必须部署的，`return`方法和`throw`方法是否部署是可选的。\n\n`return`方法的使用场合是，如果`for...of`循环提前退出（通常是因为出错，或者有`break`语句），就会调用`return`方法。如果一个对象在完成遍历前，需要清理或释放资源，就可以部署`return`方法。\n\n```javascript\nfunction readLinesSync(file) {\n  return {\n    [Symbol.iterator]() {\n      return {\n        next() {\n          return { done: false };\n        },\n        return() {\n          file.close();\n          return { done: true };\n        }\n      };\n    },\n  };\n}\n```\n\n上面代码中，函数`readLinesSync`接受一个文件对象作为参数，返回一个遍历器对象，其中除了`next`方法，还部署了`return`方法。下面的两种情况，都会触发执行`return`方法。\n\n```javascript\n// 情况一\nfor (let line of readLinesSync(fileName)) {\n  console.log(line);\n  break;\n}\n\n// 情况二\nfor (let line of readLinesSync(fileName)) {\n  console.log(line);\n  throw new Error();\n}\n```\n\n上面代码中，情况一输出文件的第一行以后，就会执行`return`方法，关闭这个文件；情况二会在执行`return`方法关闭文件之后，再抛出错误。\n\n注意，`return`方法必须返回一个对象，这是 Generator 规格决定的。\n\n`throw`方法主要是配合 Generator 函数使用，一般的遍历器对象用不到这个方法。请参阅《Generator 函数》一章。\n\n## for...of 循环\n\nES6 借鉴 C++、Java、C# 和 Python 语言，引入了`for...of`循环，作为遍历所有数据结构的统一的方法。\n\n一个数据结构只要部署了`Symbol.iterator`属性，就被视为具有 iterator 接口，就可以用`for...of`循环遍历它的成员。也就是说，`for...of`循环内部调用的是数据结构的`Symbol.iterator`方法。\n\n`for...of`循环可以使用的范围包括数组、Set 和 Map 结构、某些类似数组的对象（比如`arguments`对象、DOM NodeList 对象）、后文的 Generator 对象，以及字符串。\n\n### 数组\n\n数组原生具备`iterator`接口（即默认部署了`Symbol.iterator`属性），`for...of`循环本质上就是调用这个接口产生的遍历器，可以用下面的代码证明。\n\n```javascript\nconst arr = [\'red\', \'green\', \'blue\'];\n\nfor(let v of arr) {\n  console.log(v); // red green blue\n}\n\nconst obj = {};\nobj[Symbol.iterator] = arr[Symbol.iterator].bind(arr);\n\nfor(let v of obj) {\n  console.log(v); // red green blue\n}\n```\n\n上面代码中，空对象`obj`部署了数组`arr`的`Symbol.iterator`属性，结果`obj`的`for...of`循环，产生了与`arr`完全一样的结果。\n\n`for...of`循环可以代替数组实例的`forEach`方法。\n\n```javascript\nconst arr = [\'red\', \'green\', \'blue\'];\n\narr.forEach(function (element, index) {\n  console.log(element); // red green blue\n  console.log(index);   // 0 1 2\n});\n```\n\nJavaScript 原有的`for...in`循环，只能获得对象的键名，不能直接获取键值。ES6 提供`for...of`循环，允许遍历获得键值。\n\n```javascript\nvar arr = [\'a\', \'b\', \'c\', \'d\'];\n\nfor (let a in arr) {\n  console.log(a); // 0 1 2 3\n}\n\nfor (let a of arr) {\n  console.log(a); // a b c d\n}\n```\n\n上面代码表明，`for...in`循环读取键名，`for...of`循环读取键值。如果要通过`for...of`循环，获取数组的索引，可以借助数组实例的`entries`方法和`keys`方法（参见《数组的扩展》一章）。\n\n`for...of`循环调用遍历器接口，数组的遍历器接口只返回具有数字索引的属性。这一点跟`for...in`循环也不一样。\n\n```javascript\nlet arr = [3, 5, 7];\narr.foo = \'hello\';\n\nfor (let i in arr) {\n  console.log(i); // "0", "1", "2", "foo"\n}\n\nfor (let i of arr) {\n  console.log(i); //  "3", "5", "7"\n}\n```\n\n上面代码中，`for...of`循环不会返回数组`arr`的`foo`属性。\n\n### Set 和 Map 结构\n\nSet 和 Map 结构也原生具有 Iterator 接口，可以直接使用`for...of`循环。\n\n```javascript\nvar engines = new Set(["Gecko", "Trident", "Webkit", "Webkit"]);\nfor (var e of engines) {\n  console.log(e);\n}\n// Gecko\n// Trident\n// Webkit\n\nvar es6 = new Map();\nes6.set("edition", 6);\nes6.set("committee", "TC39");\nes6.set("standard", "ECMA-262");\nfor (var [name, value] of es6) {\n  console.log(name + ": " + value);\n}\n// edition: 6\n// committee: TC39\n// standard: ECMA-262\n```\n\n上面代码演示了如何遍历 Set 结构和 Map 结构。值得注意的地方有两个，首先，遍历的顺序是按照各个成员被添加进数据结构的顺序。其次，Set 结构遍历时，返回的是一个值，而 Map 结构遍历时，返回的是一个数组，该数组的两个成员分别为当前 Map 成员的键名和键值。\n\n```javascript\nlet map = new Map().set(\'a\', 1).set(\'b\', 2);\nfor (let pair of map) {\n  console.log(pair);\n}\n// [\'a\', 1]\n// [\'b\', 2]\n\nfor (let [key, value] of map) {\n  console.log(key + \' : \' + value);\n}\n// a : 1\n// b : 2\n```\n\n### 计算生成的数据结构\n\n有些数据结构是在现有数据结构的基础上，计算生成的。比如，ES6 的数组、Set、Map 都部署了以下三个方法，调用后都返回遍历器对象。\n\n- `entries()` 返回一个遍历器对象，用来遍历`[键名, 键值]`组成的数组。对于数组，键名就是索引值；对于 Set，键名与键值相同。Map 结构的 Iterator 接口，默认就是调用`entries`方法。\n- `keys()` 返回一个遍历器对象，用来遍历所有的键名。\n- `values()` 返回一个遍历器对象，用来遍历所有的键值。\n\n这三个方法调用后生成的遍历器对象，所遍历的都是计算生成的数据结构。\n\n```javascript\nlet arr = [\'a\', \'b\', \'c\'];\nfor (let pair of arr.entries()) {\n  console.log(pair);\n}\n// [0, \'a\']\n// [1, \'b\']\n// [2, \'c\']\n```\n\n### 类似数组的对象\n\n类似数组的对象包括好几类。下面是`for...of`循环用于字符串、DOM NodeList 对象、`arguments`对象的例子。\n\n```javascript\n// 字符串\nlet str = "hello";\n\nfor (let s of str) {\n  console.log(s); // h e l l o\n}\n\n// DOM NodeList对象\nlet paras = document.querySelectorAll("p");\n\nfor (let p of paras) {\n  p.classList.add("test");\n}\n\n// arguments对象\nfunction printArgs() {\n  for (let x of arguments) {\n    console.log(x);\n  }\n}\nprintArgs(\'a\', \'b\');\n// \'a\'\n// \'b\'\n```\n\n对于字符串来说，`for...of`循环还有一个特点，就是会正确识别 32 位 UTF-16 字符。\n\n```javascript\nfor (let x of \'a\\uD83D\\uDC0A\') {\n  console.log(x);\n}\n// \'a\'\n// \'\\uD83D\\uDC0A\'\n```\n\n并不是所有类似数组的对象都具有 Iterator 接口，一个简便的解决方法，就是使用`Array.from`方法将其转为数组。\n\n```javascript\nlet arrayLike = { length: 2, 0: \'a\', 1: \'b\' };\n\n// 报错\nfor (let x of arrayLike) {\n  console.log(x);\n}\n\n// 正确\nfor (let x of Array.from(arrayLike)) {\n  console.log(x);\n}\n```\n\n### 对象\n\n对于普通的对象，`for...of`结构不能直接使用，会报错，必须部署了 Iterator 接口后才能使用。但是，这样情况下，`for...in`循环依然可以用来遍历键名。\n\n```javascript\nlet es6 = {\n  edition: 6,\n  committee: "TC39",\n  standard: "ECMA-262"\n};\n\nfor (let e in es6) {\n  console.log(e);\n}\n// edition\n// committee\n// standard\n\nfor (let e of es6) {\n  console.log(e);\n}\n// TypeError: es6[Symbol.iterator] is not a function\n```\n\n上面代码表示，对于普通的对象，`for...in`循环可以遍历键名，`for...of`循环会报错。\n\n一种解决方法是，使用`Object.keys`方法将对象的键名生成一个数组，然后遍历这个数组。\n\n```javascript\nfor (var key of Object.keys(someObject)) {\n  console.log(key + \': \' + someObject[key]);\n}\n```\n\n另一个方法是使用 Generator 函数将对象重新包装一下。\n\n```javascript\nfunction* entries(obj) {\n  for (let key of Object.keys(obj)) {\n    yield [key, obj[key]];\n  }\n}\n\nfor (let [key, value] of entries(obj)) {\n  console.log(key, \'->\', value);\n}\n// a -> 1\n// b -> 2\n// c -> 3\n```\n\n### 与其他遍历语法的比较\n\n以数组为例，JavaScript 提供多种遍历语法。最原始的写法就是`for`循环。\n\n```javascript\nfor (var index = 0; index < myArray.length; index++) {\n  console.log(myArray[index]);\n}\n```\n\n这种写法比较麻烦，因此数组提供内置的`forEach`方法。\n\n```javascript\nmyArray.forEach(function (value) {\n  console.log(value);\n});\n```\n\n这种写法的问题在于，无法中途跳出`forEach`循环，`break`命令或`return`命令都不能奏效。\n\n`for...in`循环可以遍历数组的键名。\n\n```javascript\nfor (var index in myArray) {\n  console.log(myArray[index]);\n}\n```\n\n`for...in`循环有几个缺点。\n\n- 数组的键名是数字，但是`for...in`循环是以字符串作为键名“0”、“1”、“2”等等。\n- `for...in`循环不仅遍历数字键名，还会遍历手动添加的其他键，甚至包括原型链上的键。\n- 某些情况下，`for...in`循环会以任意顺序遍历键名。\n\n总之，`for...in`循环主要是为遍历对象而设计的，不适用于遍历数组。\n\n`for...of`循环相比上面几种做法，有一些显著的优点。\n\n```javascript\nfor (let value of myArray) {\n  console.log(value);\n}\n```\n\n- 有着同`for...in`一样的简洁语法，但是没有`for...in`那些缺点。\n- 不同于`forEach`方法，它可以与`break`、`continue`和`return`配合使用。\n- 提供了遍历所有数据结构的统一操作接口。\n\n下面是一个使用 break 语句，跳出`for...of`循环的例子。\n\n```javascript\nfor (var n of fibonacci) {\n  if (n > 1000)\n    break;\n  console.log(n);\n}\n```\n\n上面的例子，会输出斐波纳契数列小于等于 1000 的项。如果当前项大于 1000，就会使用`break`语句跳出`for...of`循环。\n\n\n\n# Generator 函数的语法\n\n1. [简介](http://es6.ruanyifeng.com/#docs/generator#%E7%AE%80%E4%BB%8B)\n2. [next 方法的参数](http://es6.ruanyifeng.com/#docs/generator#next%20%E6%96%B9%E6%B3%95%E7%9A%84%E5%8F%82%E6%95%B0)\n3. [for...of 循环](http://es6.ruanyifeng.com/#docs/generator#for...of%20%E5%BE%AA%E7%8E%AF)\n4. [Generator.prototype.throw()](http://es6.ruanyifeng.com/#docs/generator#Generator.prototype.throw())\n5. [Generator.prototype.return()](http://es6.ruanyifeng.com/#docs/generator#Generator.prototype.return())\n6. [next()、throw()、return() 的共同点](http://es6.ruanyifeng.com/#docs/generator#next()%E3%80%81throw()%E3%80%81return()%20%E7%9A%84%E5%85%B1%E5%90%8C%E7%82%B9)\n7. [yield* 表达式](http://es6.ruanyifeng.com/#docs/generator#yield*%20%E8%A1%A8%E8%BE%BE%E5%BC%8F)\n8. [作为对象属性的 Generator 函数](http://es6.ruanyifeng.com/#docs/generator#%E4%BD%9C%E4%B8%BA%E5%AF%B9%E8%B1%A1%E5%B1%9E%E6%80%A7%E7%9A%84%20Generator%20%E5%87%BD%E6%95%B0)\n9. [Generator 函数的this](http://es6.ruanyifeng.com/#docs/generator#Generator%20%E5%87%BD%E6%95%B0%E7%9A%84this)\n10. [含义](http://es6.ruanyifeng.com/#docs/generator#%E5%90%AB%E4%B9%89)\n11. [应用](http://es6.ruanyifeng.com/#docs/generator#%E5%BA%94%E7%94%A8)\n\n## 简介\n\n### 基本概念\n\nGenerator 函数是 ES6 提供的一种异步编程解决方案，语法行为与传统函数完全不同。本章详细介绍 Generator 函数的语法和 API，它的异步编程应用请看《Generator 函数的异步应用》一章。\n\nGenerator 函数有多种理解角度。语法上，首先可以把它理解成，Generator 函数是一个状态机，封装了多个内部状态。\n\n执行 Generator 函数会返回一个遍历器对象，也就是说，Generator 函数除了状态机，还是一个遍历器对象生成函数。返回的遍历器对象，可以依次遍历 Generator 函数内部的每一个状态。\n\n形式上，Generator 函数是一个普通函数，但是有两个特征。一是，`function`关键字与函数名之间有一个星号；二是，函数体内部使用`yield`表达式，定义不同的内部状态（`yield`在英语里的意思就是“产出”）。\n\n```javascript\nfunction* helloWorldGenerator() {\n  yield \'hello\';\n  yield \'world\';\n  return \'ending\';\n}\n\nvar hw = helloWorldGenerator();\n```\n\n上面代码定义了一个 Generator 函数`helloWorldGenerator`，它内部有两个`yield`表达式（`hello`和`world`），即该函数有三个状态：hello，world 和 return 语句（结束执行）。\n\n然后，Generator 函数的调用方法与普通函数一样，也是在函数名后面加上一对圆括号。不同的是，调用 Generator 函数后，该函数并不执行，返回的也不是函数运行结果，而是一个指向内部状态的指针对象，也就是上一章介绍的遍历器对象（Iterator Object）。\n\n下一步，必须调用遍历器对象的`next`方法，使得指针移向下一个状态。也就是说，每次调用`next`方法，内部指针就从函数头部或上一次停下来的地方开始执行，直到遇到下一个`yield`表达式（或`return`语句）为止。换言之，Generator 函数是分段执行的，`yield`表达式是暂停执行的标记，而`next`方法可以恢复执行。\n\n```javascript\nhw.next()\n// { value: \'hello\', done: false }\n\nhw.next()\n// { value: \'world\', done: false }\n\nhw.next()\n// { value: \'ending\', done: true }\n\nhw.next()\n// { value: undefined, done: true }\n```\n\n上面代码一共调用了四次`next`方法。\n\n第一次调用，Generator 函数开始执行，直到遇到第一个`yield`表达式为止。`next`方法返回一个对象，它的`value`属性就是当前`yield`表达式的值`hello`，`done`属性的值`false`，表示遍历还没有结束。\n\n第二次调用，Generator 函数从上次`yield`表达式停下的地方，一直执行到下一个`yield`表达式。`next`方法返回的对象的`value`属性就是当前`yield`表达式的值`world`，`done`属性的值`false`，表示遍历还没有结束。\n\n第三次调用，Generator 函数从上次`yield`表达式停下的地方，一直执行到`return`语句（如果没有`return`语句，就执行到函数结束）。`next`方法返回的对象的`value`属性，就是紧跟在`return`语句后面的表达式的值（如果没有`return`语句，则`value`属性的值为`undefined`），`done`属性的值`true`，表示遍历已经结束。\n\n第四次调用，此时 Generator 函数已经运行完毕，`next`方法返回对象的`value`属性为`undefined`，`done`属性为`true`。以后再调用`next`方法，返回的都是这个值。\n\n总结一下，调用 Generator 函数，返回一个遍历器对象，代表 Generator 函数的内部指针。以后，每次调用遍历器对象的`next`方法，就会返回一个有着`value`和`done`两个属性的对象。`value`属性表示当前的内部状态的值，是`yield`表达式后面那个表达式的值；`done`属性是一个布尔值，表示是否遍历结束。\n\nES6 没有规定，`function`关键字与函数名之间的星号，写在哪个位置。这导致下面的写法都能通过。\n\n```javascript\nfunction * foo(x, y) { ··· }\nfunction *foo(x, y) { ··· }\nfunction* foo(x, y) { ··· }\nfunction*foo(x, y) { ··· }\n```\n\n由于 Generator 函数仍然是普通函数，所以一般的写法是上面的第三种，即星号紧跟在`function`关键字后面。本书也采用这种写法。\n\n### yield 表达式\n\n由于 Generator 函数返回的遍历器对象，只有调用`next`方法才会遍历下一个内部状态，所以其实提供了一种可以暂停执行的函数。`yield`表达式就是暂停标志。\n\n遍历器对象的`next`方法的运行逻辑如下。\n\n（1）遇到`yield`表达式，就暂停执行后面的操作，并将紧跟在`yield`后面的那个表达式的值，作为返回的对象的`value`属性值。\n\n（2）下一次调用`next`方法时，再继续往下执行，直到遇到下一个`yield`表达式。\n\n（3）如果没有再遇到新的`yield`表达式，就一直运行到函数结束，直到`return`语句为止，并将`return`语句后面的表达式的值，作为返回的对象的`value`属性值。\n\n（4）如果该函数没有`return`语句，则返回的对象的`value`属性值为`undefined`。\n\n需要注意的是，`yield`表达式后面的表达式，只有当调用`next`方法、内部指针指向该语句时才会执行，因此等于为 JavaScript 提供了手动的“惰性求值”（Lazy Evaluation）的语法功能。\n\n```javascript\nfunction* gen() {\n  yield  123 + 456;\n}\n```\n\n上面代码中，`yield`后面的表达式`123 + 456`，不会立即求值，只会在`next`方法将指针移到这一句时，才会求值。\n\n`yield`表达式与`return`语句既有相似之处，也有区别。相似之处在于，都能返回紧跟在语句后面的那个表达式的值。区别在于每次遇到`yield`，函数暂停执行，下一次再从该位置继续向后执行，而`return`语句不具备位置记忆的功能。一个函数里面，只能执行一次（或者说一个）`return`语句，但是可以执行多次（或者说多个）`yield`表达式。正常函数只能返回一个值，因为只能执行一次`return`；Generator 函数可以返回一系列的值，因为可以有任意多个`yield`。从另一个角度看，也可以说 Generator 生成了一系列的值，这也就是它的名称的来历（英语中，generator 这个词是“生成器”的意思）。\n\nGenerator 函数可以不用`yield`表达式，这时就变成了一个单纯的暂缓执行函数。\n\n```javascript\nfunction* f() {\n  console.log(\'执行了！\')\n}\n\nvar generator = f();\n\nsetTimeout(function () {\n  generator.next()\n}, 2000);\n```\n\n上面代码中，函数`f`如果是普通函数，在为变量`generator`赋值时就会执行。但是，函数`f`是一个 Generator 函数，就变成只有调用`next`方法时，函数`f`才会执行。\n\n另外需要注意，`yield`表达式只能用在 Generator 函数里面，用在其他地方都会报错。\n\n```javascript\n(function (){\n  yield 1;\n})()\n// SyntaxError: Unexpected number\n```\n\n上面代码在一个普通函数中使用`yield`表达式，结果产生一个句法错误。\n\n下面是另外一个例子。\n\n```javascript\nvar arr = [1, [[2, 3], 4], [5, 6]];\n\nvar flat = function* (a) {\n  a.forEach(function (item) {\n    if (typeof item !== \'number\') {\n      yield* flat(item);\n    } else {\n      yield item;\n    }\n  });\n};\n\nfor (var f of flat(arr)){\n  console.log(f);\n}\n```\n\n上面代码也会产生句法错误，因为`forEach`方法的参数是一个普通函数，但是在里面使用了`yield`表达式（这个函数里面还使用了`yield*`表达式，详细介绍见后文）。一种修改方法是改用`for`循环。\n\n```javascript\nvar arr = [1, [[2, 3], 4], [5, 6]];\n\nvar flat = function* (a) {\n  var length = a.length;\n  for (var i = 0; i < length; i++) {\n    var item = a[i];\n    if (typeof item !== \'number\') {\n      yield* flat(item);\n    } else {\n      yield item;\n    }\n  }\n};\n\nfor (var f of flat(arr)) {\n  console.log(f);\n}\n// 1, 2, 3, 4, 5, 6\n```\n\n另外，`yield`表达式如果用在另一个表达式之中，必须放在圆括号里面。\n\n```javascript\nfunction* demo() {\n  console.log(\'Hello\' + yield); // SyntaxError\n  console.log(\'Hello\' + yield 123); // SyntaxError\n\n  console.log(\'Hello\' + (yield)); // OK\n  console.log(\'Hello\' + (yield 123)); // OK\n}\n```\n\n`yield`表达式用作函数参数或放在赋值表达式的右边，可以不加括号。\n\n```javascript\nfunction* demo() {\n  foo(yield \'a\', yield \'b\'); // OK\n  let input = yield; // OK\n}\n```\n\n### 与 Iterator 接口的关系\n\n上一章说过，任意一个对象的`Symbol.iterator`方法，等于该对象的遍历器生成函数，调用该函数会返回该对象的一个遍历器对象。\n\n由于 Generator 函数就是遍历器生成函数，因此可以把 Generator 赋值给对象的`Symbol.iterator`属性，从而使得该对象具有 Iterator 接口。\n\n```javascript\nvar myIterable = {};\nmyIterable[Symbol.iterator] = function* () {\n  yield 1;\n  yield 2;\n  yield 3;\n};\n\n[...myIterable] // [1, 2, 3]\n```\n\n上面代码中，Generator 函数赋值给`Symbol.iterator`属性，从而使得`myIterable`对象具有了 Iterator 接口，可以被`...`运算符遍历了。\n\nGenerator 函数执行后，返回一个遍历器对象。该对象本身也具有`Symbol.iterator`属性，执行后返回自身。\n\n```javascript\nfunction* gen(){\n  // some code\n}\n\nvar g = gen();\n\ng[Symbol.iterator]() === g\n// true\n```\n\n上面代码中，`gen`是一个 Generator 函数，调用它会生成一个遍历器对象`g`。它的`Symbol.iterator`属性，也是一个遍历器对象生成函数，执行后返回它自己。\n\n## next 方法的参数\n\n`yield`表达式本身没有返回值，或者说总是返回`undefined`。`next`方法可以带一个参数，该参数就会被当作上一个`yield`表达式的返回值。\n\n```javascript\nfunction* f() {\n  for(var i = 0; true; i++) {\n    var reset = yield i;\n    if(reset) { i = -1; }\n  }\n}\n\nvar g = f();\n\ng.next() // { value: 0, done: false }\ng.next() // { value: 1, done: false }\ng.next(true) // { value: 0, done: false }\n```\n\n上面代码先定义了一个可以无限运行的 Generator 函数`f`，如果`next`方法没有参数，每次运行到`yield`表达式，变量`reset`的值总是`undefined`。当`next`方法带一个参数`true`时，变量`reset`就被重置为这个参数（即`true`），因此`i`会等于`-1`，下一轮循环就会从`-1`开始递增。\n\n这个功能有很重要的语法意义。Generator 函数从暂停状态到恢复运行，它的上下文状态（context）是不变的。通过`next`方法的参数，就有办法在 Generator 函数开始运行之后，继续向函数体内部注入值。也就是说，可以在 Generator 函数运行的不同阶段，从外部向内部注入不同的值，从而调整函数行为。\n\n再看一个例子。\n\n```javascript\nfunction* foo(x) {\n  var y = 2 * (yield (x + 1));\n  var z = yield (y / 3);\n  return (x + y + z);\n}\n\nvar a = foo(5);\na.next() // Object{value:6, done:false}\na.next() // Object{value:NaN, done:false}\na.next() // Object{value:NaN, done:true}\n\nvar b = foo(5);\nb.next() // { value:6, done:false }\nb.next(12) // { value:8, done:false }\nb.next(13) // { value:42, done:true }\n```\n\n上面代码中，第二次运行`next`方法的时候不带参数，导致 y 的值等于`2 * undefined`（即`NaN`），除以 3 以后还是`NaN`，因此返回对象的`value`属性也等于`NaN`。第三次运行`Next`方法的时候不带参数，所以`z`等于`undefined`，返回对象的`value`属性等于`5 + NaN + undefined`，即`NaN`。\n\n如果向`next`方法提供参数，返回结果就完全不一样了。上面代码第一次调用`b`的`next`方法时，返回`x+1`的值`6`；第二次调用`next`方法，将上一次`yield`表达式的值设为`12`，因此`y`等于`24`，返回`y / 3`的值`8`；第三次调用`next`方法，将上一次`yield`表达式的值设为`13`，因此`z`等于`13`，这时`x`等于`5`，`y`等于`24`，所以`return`语句的值等于`42`。\n\n注意，由于`next`方法的参数表示上一个`yield`表达式的返回值，所以在第一次使用`next`方法时，传递参数是无效的。V8 引擎直接忽略第一次使用`next`方法时的参数，只有从第二次使用`next`方法开始，参数才是有效的。从语义上讲，第一个`next`方法用来启动遍历器对象，所以不用带有参数。\n\n再看一个通过`next`方法的参数，向 Generator 函数内部输入值的例子。\n\n```javascript\nfunction* dataConsumer() {\n  console.log(\'Started\');\n  console.log(`1. ${yield}`);\n  console.log(`2. ${yield}`);\n  return \'result\';\n}\n\nlet genObj = dataConsumer();\ngenObj.next();\n// Started\ngenObj.next(\'a\')\n// 1. a\ngenObj.next(\'b\')\n// 2. b\n```\n\n上面代码是一个很直观的例子，每次通过`next`方法向 Generator 函数输入值，然后打印出来。\n\n如果想要第一次调用`next`方法时，就能够输入值，可以在 Generator 函数外面再包一层。\n\n```javascript\nfunction wrapper(generatorFunction) {\n  return function (...args) {\n    let generatorObject = generatorFunction(...args);\n    generatorObject.next();\n    return generatorObject;\n  };\n}\n\nconst wrapped = wrapper(function* () {\n  console.log(`First input: ${yield}`);\n  return \'DONE\';\n});\n\nwrapped().next(\'hello!\')\n// First input: hello!\n```\n\n上面代码中，Generator 函数如果不用`wrapper`先包一层，是无法第一次调用`next`方法，就输入参数的。\n\n## for...of 循环\n\n`for...of`循环可以自动遍历 Generator 函数时生成的`Iterator`对象，且此时不再需要调用`next`方法。\n\n```javascript\nfunction* foo() {\n  yield 1;\n  yield 2;\n  yield 3;\n  yield 4;\n  yield 5;\n  return 6;\n}\n\nfor (let v of foo()) {\n  console.log(v);\n}\n// 1 2 3 4 5\n```\n\n上面代码使用`for...of`循环，依次显示 5 个`yield`表达式的值。这里需要注意，一旦`next`方法的返回对象的`done`属性为`true`，`for...of`循环就会中止，且不包含该返回对象，所以上面代码的`return`语句返回的`6`，不包括在`for...of`循环之中。\n\n下面是一个利用 Generator 函数和`for...of`循环，实现斐波那契数列的例子。\n\n```javascript\nfunction* fibonacci() {\n  let [prev, curr] = [0, 1];\n  for (;;) {\n    yield curr;\n    [prev, curr] = [curr, prev + curr];\n  }\n}\n\nfor (let n of fibonacci()) {\n  if (n > 1000) break;\n  console.log(n);\n}\n```\n\n从上面代码可见，使用`for...of`语句时不需要使用`next`方法。\n\n利用`for...of`循环，可以写出遍历任意对象（object）的方法。原生的 JavaScript 对象没有遍历接口，无法使用`for...of`循环，通过 Generator 函数为它加上这个接口，就可以用了。\n\n```javascript\nfunction* objectEntries(obj) {\n  let propKeys = Reflect.ownKeys(obj);\n\n  for (let propKey of propKeys) {\n    yield [propKey, obj[propKey]];\n  }\n}\n\nlet jane = { first: \'Jane\', last: \'Doe\' };\n\nfor (let [key, value] of objectEntries(jane)) {\n  console.log(`${key}: ${value}`);\n}\n// first: Jane\n// last: Doe\n```\n\n上面代码中，对象`jane`原生不具备 Iterator 接口，无法用`for...of`遍历。这时，我们通过 Generator 函数`objectEntries`为它加上遍历器接口，就可以用`for...of`遍历了。加上遍历器接口的另一种写法是，将 Generator 函数加到对象的`Symbol.iterator`属性上面。\n\n```javascript\nfunction* objectEntries() {\n  let propKeys = Object.keys(this);\n\n  for (let propKey of propKeys) {\n    yield [propKey, this[propKey]];\n  }\n}\n\nlet jane = { first: \'Jane\', last: \'Doe\' };\n\njane[Symbol.iterator] = objectEntries;\n\nfor (let [key, value] of jane) {\n  console.log(`${key}: ${value}`);\n}\n// first: Jane\n// last: Doe\n```\n\n除了`for...of`循环以外，扩展运算符（`...`）、解构赋值和`Array.from`方法内部调用的，都是遍历器接口。这意味着，它们都可以将 Generator 函数返回的 Iterator 对象，作为参数。\n\n```javascript\nfunction* numbers () {\n  yield 1\n  yield 2\n  return 3\n  yield 4\n}\n\n// 扩展运算符\n[...numbers()] // [1, 2]\n\n// Array.from 方法\nArray.from(numbers()) // [1, 2]\n\n// 解构赋值\nlet [x, y] = numbers();\nx // 1\ny // 2\n\n// for...of 循环\nfor (let n of numbers()) {\n  console.log(n)\n}\n// 1\n// 2\n```\n\n## Generator.prototype.throw()\n\nGenerator 函数返回的遍历器对象，都有一个`throw`方法，可以在函数体外抛出错误，然后在 Generator 函数体内捕获。\n\n```javascript\nvar g = function* () {\n  try {\n    yield;\n  } catch (e) {\n    console.log(\'内部捕获\', e);\n  }\n};\n\nvar i = g();\ni.next();\n\ntry {\n  i.throw(\'a\');\n  i.throw(\'b\');\n} catch (e) {\n  console.log(\'外部捕获\', e);\n}\n// 内部捕获 a\n// 外部捕获 b\n```\n\n上面代码中，遍历器对象`i`连续抛出两个错误。第一个错误被 Generator 函数体内的`catch`语句捕获。`i`第二次抛出错误，由于 Generator 函数内部的`catch`语句已经执行过了，不会再捕捉到这个错误了，所以这个错误就被抛出了 Generator 函数体，被函数体外的`catch`语句捕获。\n\n`throw`方法可以接受一个参数，该参数会被`catch`语句接收，建议抛出`Error`对象的实例。\n\n```javascript\nvar g = function* () {\n  try {\n    yield;\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nvar i = g();\ni.next();\ni.throw(new Error(\'出错了！\'));\n// Error: 出错了！(…)\n```\n\n注意，不要混淆遍历器对象的`throw`方法和全局的`throw`命令。上面代码的错误，是用遍历器对象的`throw`方法抛出的，而不是用`throw`命令抛出的。后者只能被函数体外的`catch`语句捕获。\n\n```javascript\nvar g = function* () {\n  while (true) {\n    try {\n      yield;\n    } catch (e) {\n      if (e != \'a\') throw e;\n      console.log(\'内部捕获\', e);\n    }\n  }\n};\n\nvar i = g();\ni.next();\n\ntry {\n  throw new Error(\'a\');\n  throw new Error(\'b\');\n} catch (e) {\n  console.log(\'外部捕获\', e);\n}\n// 外部捕获 [Error: a]\n```\n\n上面代码之所以只捕获了`a`，是因为函数体外的`catch`语句块，捕获了抛出的`a`错误以后，就不会再继续`try`代码块里面剩余的语句了。\n\n如果 Generator 函数内部没有部署`try...catch`代码块，那么`throw`方法抛出的错误，将被外部`try...catch`代码块捕获。\n\n```javascript\nvar g = function* () {\n  while (true) {\n    yield;\n    console.log(\'内部捕获\', e);\n  }\n};\n\nvar i = g();\ni.next();\n\ntry {\n  i.throw(\'a\');\n  i.throw(\'b\');\n} catch (e) {\n  console.log(\'外部捕获\', e);\n}\n// 外部捕获 a\n```\n\n上面代码中，Generator 函数`g`内部没有部署`try...catch`代码块，所以抛出的错误直接被外部`catch`代码块捕获。\n\n如果 Generator 函数内部和外部，都没有部署`try...catch`代码块，那么程序将报错，直接中断执行。\n\n```javascript\nvar gen = function* gen(){\n  yield console.log(\'hello\');\n  yield console.log(\'world\');\n}\n\nvar g = gen();\ng.next();\ng.throw();\n// hello\n// Uncaught undefined\n```\n\n上面代码中，`g.throw`抛出错误以后，没有任何`try...catch`代码块可以捕获这个错误，导致程序报错，中断执行。\n\n`throw`方法抛出的错误要被内部捕获，前提是必须至少执行过一次`next`方法。\n\n```javascript\nfunction* gen() {\n  try {\n    yield 1;\n  } catch (e) {\n    console.log(\'内部捕获\');\n  }\n}\n\nvar g = gen();\ng.throw(1);\n// Uncaught 1\n```\n\n上面代码中，`g.throw(1)`执行时，`next`方法一次都没有执行过。这时，抛出的错误不会被内部捕获，而是直接在外部抛出，导致程序出错。这种行为其实很好理解，因为第一次执行`next`方法，等同于启动执行 Generator 函数的内部代码，否则 Generator 函数还没有开始执行，这时`throw`方法抛错只可能抛出在函数外部。\n\n`throw`方法被捕获以后，会附带执行下一条`yield`表达式。也就是说，会附带执行一次`next`方法。\n\n```javascript\nvar gen = function* gen(){\n  try {\n    yield console.log(\'a\');\n  } catch (e) {\n    // ...\n  }\n  yield console.log(\'b\');\n  yield console.log(\'c\');\n}\n\nvar g = gen();\ng.next() // a\ng.throw() // b\ng.next() // c\n```\n\n上面代码中，`g.throw`方法被捕获以后，自动执行了一次`next`方法，所以会打印`b`。另外，也可以看到，只要 Generator 函数内部部署了`try...catch`代码块，那么遍历器的`throw`方法抛出的错误，不影响下一次遍历。\n\n另外，`throw`命令与`g.throw`方法是无关的，两者互不影响。\n\n```javascript\nvar gen = function* gen(){\n  yield console.log(\'hello\');\n  yield console.log(\'world\');\n}\n\nvar g = gen();\ng.next();\n\ntry {\n  throw new Error();\n} catch (e) {\n  g.next();\n}\n// hello\n// world\n```\n\n上面代码中，`throw`命令抛出的错误不会影响到遍历器的状态，所以两次执行`next`方法，都进行了正确的操作。\n\n这种函数体内捕获错误的机制，大大方便了对错误的处理。多个`yield`表达式，可以只用一个`try...catch`代码块来捕获错误。如果使用回调函数的写法，想要捕获多个错误，就不得不为每个函数内部写一个错误处理语句，现在只在 Generator 函数内部写一次`catch`语句就可以了。\n\nGenerator 函数体外抛出的错误，可以在函数体内捕获；反过来，Generator 函数体内抛出的错误，也可以被函数体外的`catch`捕获。\n\n```javascript\nfunction* foo() {\n  var x = yield 3;\n  var y = x.toUpperCase();\n  yield y;\n}\n\nvar it = foo();\n\nit.next(); // { value:3, done:false }\n\ntry {\n  it.next(42);\n} catch (err) {\n  console.log(err);\n}\n```\n\n上面代码中，第二个`next`方法向函数体内传入一个参数 42，数值是没有`toUpperCase`方法的，所以会抛出一个 TypeError 错误，被函数体外的`catch`捕获。\n\n一旦 Generator 执行过程中抛出错误，且没有被内部捕获，就不会再执行下去了。如果此后还调用`next`方法，将返回一个`value`属性等于`undefined`、`done`属性等于`true`的对象，即 JavaScript 引擎认为这个 Generator 已经运行结束了。\n\n```javascript\nfunction* g() {\n  yield 1;\n  console.log(\'throwing an exception\');\n  throw new Error(\'generator broke!\');\n  yield 2;\n  yield 3;\n}\n\nfunction log(generator) {\n  var v;\n  console.log(\'starting generator\');\n  try {\n    v = generator.next();\n    console.log(\'第一次运行next方法\', v);\n  } catch (err) {\n    console.log(\'捕捉错误\', v);\n  }\n  try {\n    v = generator.next();\n    console.log(\'第二次运行next方法\', v);\n  } catch (err) {\n    console.log(\'捕捉错误\', v);\n  }\n  try {\n    v = generator.next();\n    console.log(\'第三次运行next方法\', v);\n  } catch (err) {\n    console.log(\'捕捉错误\', v);\n  }\n  console.log(\'caller done\');\n}\n\nlog(g());\n// starting generator\n// 第一次运行next方法 { value: 1, done: false }\n// throwing an exception\n// 捕捉错误 { value: 1, done: false }\n// 第三次运行next方法 { value: undefined, done: true }\n// caller done\n```\n\n上面代码一共三次运行`next`方法，第二次运行的时候会抛出错误，然后第三次运行的时候，Generator 函数就已经结束了，不再执行下去了。\n\n## Generator.prototype.return()\n\nGenerator 函数返回的遍历器对象，还有一个`return`方法，可以返回给定的值，并且终结遍历 Generator 函数。\n\n```javascript\nfunction* gen() {\n  yield 1;\n  yield 2;\n  yield 3;\n}\n\nvar g = gen();\n\ng.next()        // { value: 1, done: false }\ng.return(\'foo\') // { value: "foo", done: true }\ng.next()        // { value: undefined, done: true }\n```\n\n上面代码中，遍历器对象`g`调用`return`方法后，返回值的`value`属性就是`return`方法的参数`foo`。并且，Generator 函数的遍历就终止了，返回值的`done`属性为`true`，以后再调用`next`方法，`done`属性总是返回`true`。\n\n如果`return`方法调用时，不提供参数，则返回值的`value`属性为`undefined`。\n\n```javascript\nfunction* gen() {\n  yield 1;\n  yield 2;\n  yield 3;\n}\n\nvar g = gen();\n\ng.next()        // { value: 1, done: false }\ng.return() // { value: undefined, done: true }\n```\n\n如果 Generator 函数内部有`try...finally`代码块，那么`return`方法会推迟到`finally`代码块执行完再执行。\n\n```javascript\nfunction* numbers () {\n  yield 1;\n  try {\n    yield 2;\n    yield 3;\n  } finally {\n    yield 4;\n    yield 5;\n  }\n  yield 6;\n}\nvar g = numbers();\ng.next() // { value: 1, done: false }\ng.next() // { value: 2, done: false }\ng.return(7) // { value: 4, done: false }\ng.next() // { value: 5, done: false }\ng.next() // { value: 7, done: true }\n```\n\n上面代码中，调用`return`方法后，就开始执行`finally`代码块，然后等到`finally`代码块执行完，再执行`return`方法。\n\n## next()、throw()、return() 的共同点\n\n`next()`、`throw()`、`return()`这三个方法本质上是同一件事，可以放在一起理解。它们的作用都是让 Generator 函数恢复执行，并且使用不同的语句替换`yield`表达式。\n\n`next()`是将`yield`表达式替换成一个值。\n\n```javascript\nconst g = function* (x, y) {\n  let result = yield x + y;\n  return result;\n};\n\nconst gen = g(1, 2);\ngen.next(); // Object {value: 3, done: false}\n\ngen.next(1); // Object {value: 1, done: true}\n// 相当于将 let result = yield x + y\n// 替换成 let result = 1;\n```\n\n上面代码中，第二个`next(1)`方法就相当于将`yield`表达式替换成一个值`1`。如果`next`方法没有参数，就相当于替换成`undefined`。\n\n`throw()`是将`yield`表达式替换成一个`throw`语句。\n\n```javascript\ngen.throw(new Error(\'出错了\')); // Uncaught Error: 出错了\n// 相当于将 let result = yield x + y\n// 替换成 let result = throw(new Error(\'出错了\'));\n```\n\n`return()`是将`yield`表达式替换成一个`return`语句。\n\n```javascript\ngen.return(2); // Object {value: 2, done: true}\n// 相当于将 let result = yield x + y\n// 替换成 let result = return 2;\n```\n\n## yield* 表达式\n\n如果在 Generator 函数内部，调用另一个 Generator 函数，默认情况下是没有效果的。\n\n```javascript\nfunction* foo() {\n  yield \'a\';\n  yield \'b\';\n}\n\nfunction* bar() {\n  yield \'x\';\n  foo();\n  yield \'y\';\n}\n\nfor (let v of bar()){\n  console.log(v);\n}\n// "x"\n// "y"\n```\n\n上面代码中，`foo`和`bar`都是 Generator 函数，在`bar`里面调用`foo`，是不会有效果的。\n\n这个就需要用到`yield*`表达式，用来在一个 Generator 函数里面执行另一个 Generator 函数。\n\n```javascript\nfunction* bar() {\n  yield \'x\';\n  yield* foo();\n  yield \'y\';\n}\n\n// 等同于\nfunction* bar() {\n  yield \'x\';\n  yield \'a\';\n  yield \'b\';\n  yield \'y\';\n}\n\n// 等同于\nfunction* bar() {\n  yield \'x\';\n  for (let v of foo()) {\n    yield v;\n  }\n  yield \'y\';\n}\n\nfor (let v of bar()){\n  console.log(v);\n}\n// "x"\n// "a"\n// "b"\n// "y"\n```\n\n再来看一个对比的例子。\n\n```javascript\nfunction* inner() {\n  yield \'hello!\';\n}\n\nfunction* outer1() {\n  yield \'open\';\n  yield inner();\n  yield \'close\';\n}\n\nvar gen = outer1()\ngen.next().value // "open"\ngen.next().value // 返回一个遍历器对象\ngen.next().value // "close"\n\nfunction* outer2() {\n  yield \'open\'\n  yield* inner()\n  yield \'close\'\n}\n\nvar gen = outer2()\ngen.next().value // "open"\ngen.next().value // "hello!"\ngen.next().value // "close"\n```\n\n上面例子中，`outer2`使用了`yield*`，`outer1`没使用。结果就是，`outer1`返回一个遍历器对象，`outer2`返回该遍历器对象的内部值。\n\n从语法角度看，如果`yield`表达式后面跟的是一个遍历器对象，需要在`yield`表达式后面加上星号，表明它返回的是一个遍历器对象。这被称为`yield*`表达式。\n\n```javascript\nlet delegatedIterator = (function* () {\n  yield \'Hello!\';\n  yield \'Bye!\';\n}());\n\nlet delegatingIterator = (function* () {\n  yield \'Greetings!\';\n  yield* delegatedIterator;\n  yield \'Ok, bye.\';\n}());\n\nfor(let value of delegatingIterator) {\n  console.log(value);\n}\n// "Greetings!\n// "Hello!"\n// "Bye!"\n// "Ok, bye."\n```\n\n上面代码中，`delegatingIterator`是代理者，`delegatedIterator`是被代理者。由于`yield* delegatedIterator`语句得到的值，是一个遍历器，所以要用星号表示。运行结果就是使用一个遍历器，遍历了多个 Generator 函数，有递归的效果。\n\n`yield*`后面的 Generator 函数（没有`return`语句时），等同于在 Generator 函数内部，部署一个`for...of`循环。\n\n```javascript\nfunction* concat(iter1, iter2) {\n  yield* iter1;\n  yield* iter2;\n}\n\n// 等同于\n\nfunction* concat(iter1, iter2) {\n  for (var value of iter1) {\n    yield value;\n  }\n  for (var value of iter2) {\n    yield value;\n  }\n}\n```\n\n上面代码说明，`yield*`后面的 Generator 函数（没有`return`语句时），不过是`for...of`的一种简写形式，完全可以用后者替代前者。反之，在有`return`语句时，则需要用`var value = yield* iterator`的形式获取`return`语句的值。\n\n如果`yield*`后面跟着一个数组，由于数组原生支持遍历器，因此就会遍历数组成员。\n\n```javascript\nfunction* gen(){\n  yield* ["a", "b", "c"];\n}\n\ngen().next() // { value:"a", done:false }\n```\n\n上面代码中，`yield`命令后面如果不加星号，返回的是整个数组，加了星号就表示返回的是数组的遍历器对象。\n\n实际上，任何数据结构只要有 Iterator 接口，就可以被`yield*`遍历。\n\n```javascript\nlet read = (function* () {\n  yield \'hello\';\n  yield* \'hello\';\n})();\n\nread.next().value // "hello"\nread.next().value // "h"\n```\n\n上面代码中，`yield`表达式返回整个字符串，`yield*`语句返回单个字符。因为字符串具有 Iterator 接口，所以被`yield*`遍历。\n\n如果被代理的 Generator 函数有`return`语句，那么就可以向代理它的 Generator 函数返回数据。\n\n```javascript\nfunction* foo() {\n  yield 2;\n  yield 3;\n  return "foo";\n}\n\nfunction* bar() {\n  yield 1;\n  var v = yield* foo();\n  console.log("v: " + v);\n  yield 4;\n}\n\nvar it = bar();\n\nit.next()\n// {value: 1, done: false}\nit.next()\n// {value: 2, done: false}\nit.next()\n// {value: 3, done: false}\nit.next();\n// "v: foo"\n// {value: 4, done: false}\nit.next()\n// {value: undefined, done: true}\n```\n\n上面代码在第四次调用`next`方法的时候，屏幕上会有输出，这是因为函数`foo`的`return`语句，向函数`bar`提供了返回值。\n\n再看一个例子。\n\n```javascript\nfunction* genFuncWithReturn() {\n  yield \'a\';\n  yield \'b\';\n  return \'The result\';\n}\nfunction* logReturned(genObj) {\n  let result = yield* genObj;\n  console.log(result);\n}\n\n[...logReturned(genFuncWithReturn())]\n// The result\n// 值为 [ \'a\', \'b\' ]\n```\n\n上面代码中，存在两次遍历。第一次是扩展运算符遍历函数`logReturned`返回的遍历器对象，第二次是`yield*`语句遍历函数`genFuncWithReturn`返回的遍历器对象。这两次遍历的效果是叠加的，最终表现为扩展运算符遍历函数`genFuncWithReturn`返回的遍历器对象。所以，最后的数据表达式得到的值等于`[ \'a\', \'b\' ]`。但是，函数`genFuncWithReturn`的`return`语句的返回值`The result`，会返回给函数`logReturned`内部的`result`变量，因此会有终端输出。\n\n`yield*`命令可以很方便地取出嵌套数组的所有成员。\n\n```javascript\nfunction* iterTree(tree) {\n  if (Array.isArray(tree)) {\n    for(let i=0; i < tree.length; i++) {\n      yield* iterTree(tree[i]);\n    }\n  } else {\n    yield tree;\n  }\n}\n\nconst tree = [ \'a\', [\'b\', \'c\'], [\'d\', \'e\'] ];\n\nfor(let x of iterTree(tree)) {\n  console.log(x);\n}\n// a\n// b\n// c\n// d\n// e\n```\n\n下面是一个稍微复杂的例子，使用`yield*`语句遍历完全二叉树。\n\n```javascript\n// 下面是二叉树的构造函数，\n// 三个参数分别是左树、当前节点和右树\nfunction Tree(left, label, right) {\n  this.left = left;\n  this.label = label;\n  this.right = right;\n}\n\n// 下面是中序（inorder）遍历函数。\n// 由于返回的是一个遍历器，所以要用generator函数。\n// 函数体内采用递归算法，所以左树和右树要用yield*遍历\nfunction* inorder(t) {\n  if (t) {\n    yield* inorder(t.left);\n    yield t.label;\n    yield* inorder(t.right);\n  }\n}\n\n// 下面生成二叉树\nfunction make(array) {\n  // 判断是否为叶节点\n  if (array.length == 1) return new Tree(null, array[0], null);\n  return new Tree(make(array[0]), array[1], make(array[2]));\n}\nlet tree = make([[[\'a\'], \'b\', [\'c\']], \'d\', [[\'e\'], \'f\', [\'g\']]]);\n\n// 遍历二叉树\nvar result = [];\nfor (let node of inorder(tree)) {\n  result.push(node);\n}\n\nresult\n// [\'a\', \'b\', \'c\', \'d\', \'e\', \'f\', \'g\']\n```\n\n## 作为对象属性的 Generator 函数\n\n如果一个对象的属性是 Generator 函数，可以简写成下面的形式。\n\n```javascript\nlet obj = {\n  * myGeneratorMethod() {\n    ···\n  }\n};\n```\n\n上面代码中，`myGeneratorMethod`属性前面有一个星号，表示这个属性是一个 Generator 函数。\n\n它的完整形式如下，与上面的写法是等价的。\n\n```javascript\nlet obj = {\n  myGeneratorMethod: function* () {\n    // ···\n  }\n};\n```\n\n## Generator 函数的`this`\n\nGenerator 函数总是返回一个遍历器，ES6 规定这个遍历器是 Generator 函数的实例，也继承了 Generator 函数的`prototype`对象上的方法。\n\n```javascript\nfunction* g() {}\n\ng.prototype.hello = function () {\n  return \'hi!\';\n};\n\nlet obj = g();\n\nobj instanceof g // true\nobj.hello() // \'hi!\'\n```\n\n上面代码表明，Generator 函数`g`返回的遍历器`obj`，是`g`的实例，而且继承了`g.prototype`。但是，如果把`g`当作普通的构造函数，并不会生效，因为`g`返回的总是遍历器对象，而不是`this`对象。\n\n```javascript\nfunction* g() {\n  this.a = 11;\n}\n\nlet obj = g();\nobj.next();\nobj.a // undefined\n```\n\n上面代码中，Generator 函数`g`在`this`对象上面添加了一个属性`a`，但是`obj`对象拿不到这个属性。\n\nGenerator 函数也不能跟`new`命令一起用，会报错。\n\n```javascript\nfunction* F() {\n  yield this.x = 2;\n  yield this.y = 3;\n}\n\nnew F()\n// TypeError: F is not a constructor\n```\n\n上面代码中，`new`命令跟构造函数`F`一起使用，结果报错，因为`F`不是构造函数。\n\n那么，有没有办法让 Generator 函数返回一个正常的对象实例，既可以用`next`方法，又可以获得正常的`this`？\n\n下面是一个变通方法。首先，生成一个空对象，使用`call`方法绑定 Generator 函数内部的`this`。这样，构造函数调用以后，这个空对象就是 Generator 函数的实例对象了。\n\n```javascript\nfunction* F() {\n  this.a = 1;\n  yield this.b = 2;\n  yield this.c = 3;\n}\nvar obj = {};\nvar f = F.call(obj);\n\nf.next();  // Object {value: 2, done: false}\nf.next();  // Object {value: 3, done: false}\nf.next();  // Object {value: undefined, done: true}\n\nobj.a // 1\nobj.b // 2\nobj.c // 3\n```\n\n上面代码中，首先是`F`内部的`this`对象绑定`obj`对象，然后调用它，返回一个 Iterator 对象。这个对象执行三次`next`方法（因为`F`内部有两个`yield`表达式），完成 F 内部所有代码的运行。这时，所有内部属性都绑定在`obj`对象上了，因此`obj`对象也就成了`F`的实例。\n\n上面代码中，执行的是遍历器对象`f`，但是生成的对象实例是`obj`，有没有办法将这两个对象统一呢？\n\n一个办法就是将`obj`换成`F.prototype`。\n\n```javascript\nfunction* F() {\n  this.a = 1;\n  yield this.b = 2;\n  yield this.c = 3;\n}\nvar f = F.call(F.prototype);\n\nf.next();  // Object {value: 2, done: false}\nf.next();  // Object {value: 3, done: false}\nf.next();  // Object {value: undefined, done: true}\n\nf.a // 1\nf.b // 2\nf.c // 3\n```\n\n再将`F`改成构造函数，就可以对它执行`new`命令了。\n\n```javascript\nfunction* gen() {\n  this.a = 1;\n  yield this.b = 2;\n  yield this.c = 3;\n}\n\nfunction F() {\n  return gen.call(gen.prototype);\n}\n\nvar f = new F();\n\nf.next();  // Object {value: 2, done: false}\nf.next();  // Object {value: 3, done: false}\nf.next();  // Object {value: undefined, done: true}\n\nf.a // 1\nf.b // 2\nf.c // 3\n```\n\n## 含义\n\n### Generator 与状态机\n\nGenerator 是实现状态机的最佳结构。比如，下面的`clock`函数就是一个状态机。\n\n```javascript\nvar ticking = true;\nvar clock = function() {\n  if (ticking)\n    console.log(\'Tick!\');\n  else\n    console.log(\'Tock!\');\n  ticking = !ticking;\n}\n```\n\n上面代码的`clock`函数一共有两种状态（`Tick`和`Tock`），每运行一次，就改变一次状态。这个函数如果用 Generator 实现，就是下面这样。\n\n```javascript\nvar clock = function* () {\n  while (true) {\n    console.log(\'Tick!\');\n    yield;\n    console.log(\'Tock!\');\n    yield;\n  }\n};\n```\n\n上面的 Generator 实现与 ES5 实现对比，可以看到少了用来保存状态的外部变量`ticking`，这样就更简洁，更安全（状态不会被非法篡改）、更符合函数式编程的思想，在写法上也更优雅。Generator 之所以可以不用外部变量保存状态，是因为它本身就包含了一个状态信息，即目前是否处于暂停态。\n\n### Generator 与协程\n\n协程（coroutine）是一种程序运行的方式，可以理解成“协作的线程”或“协作的函数”。协程既可以用单线程实现，也可以用多线程实现。前者是一种特殊的子例程，后者是一种特殊的线程。\n\n**（1）协程与子例程的差异**\n\n传统的“子例程”（subroutine）采用堆栈式“后进先出”的执行方式，只有当调用的子函数完全执行完毕，才会结束执行父函数。协程与其不同，多个线程（单线程情况下，即多个函数）可以并行执行，但是只有一个线程（或函数）处于正在运行的状态，其他线程（或函数）都处于暂停态（suspended），线程（或函数）之间可以交换执行权。也就是说，一个线程（或函数）执行到一半，可以暂停执行，将执行权交给另一个线程（或函数），等到稍后收回执行权的时候，再恢复执行。这种可以并行执行、交换执行权的线程（或函数），就称为协程。\n\n从实现上看，在内存中，子例程只使用一个栈（stack），而协程是同时存在多个栈，但只有一个栈是在运行状态，也就是说，协程是以多占用内存为代价，实现多任务的并行。\n\n**（2）协程与普通线程的差异**\n\n不难看出，协程适合用于多任务运行的环境。在这个意义上，它与普通的线程很相似，都有自己的执行上下文、可以分享全局变量。它们的不同之处在于，同一时间可以有多个线程处于运行状态，但是运行的协程只能有一个，其他协程都处于暂停状态。此外，普通的线程是抢先式的，到底哪个线程优先得到资源，必须由运行环境决定，但是协程是合作式的，执行权由协程自己分配。\n\n由于 JavaScript 是单线程语言，只能保持一个调用栈。引入协程以后，每个任务可以保持自己的调用栈。这样做的最大好处，就是抛出错误的时候，可以找到原始的调用栈。不至于像异步操作的回调函数那样，一旦出错，原始的调用栈早就结束。\n\nGenerator 函数是 ES6 对协程的实现，但属于不完全实现。Generator 函数被称为“半协程”（semi-coroutine），意思是只有 Generator 函数的调用者，才能将程序的执行权还给 Generator 函数。如果是完全执行的协程，任何函数都可以让暂停的协程继续执行。\n\n如果将 Generator 函数当作协程，完全可以将多个需要互相协作的任务写成 Generator 函数，它们之间使用`yield`表达式交换控制权。\n\n### Generator 与上下文\n\nJavaScript 代码运行时，会产生一个全局的上下文环境（context，又称运行环境），包含了当前所有的变量和对象。然后，执行函数（或块级代码）的时候，又会在当前上下文环境的上层，产生一个函数运行的上下文，变成当前（active）的上下文，由此形成一个上下文环境的堆栈（context stack）。\n\n这个堆栈是“后进先出”的数据结构，最后产生的上下文环境首先执行完成，退出堆栈，然后再执行完成它下层的上下文，直至所有代码执行完成，堆栈清空。\n\nGenerator 函数不是这样，它执行产生的上下文环境，一旦遇到`yield`命令，就会暂时退出堆栈，但是并不消失，里面的所有变量和对象会冻结在当前状态。等到对它执行`next`命令时，这个上下文环境又会重新加入调用栈，冻结的变量和对象恢复执行。\n\n```javascript\nfunction* gen() {\n  yield 1;\n  return 2;\n}\n\nlet g = gen();\n\nconsole.log(\n  g.next().value,\n  g.next().value,\n);\n```\n\n上面代码中，第一次执行`g.next()`时，Generator 函数`gen`的上下文会加入堆栈，即开始运行`gen`内部的代码。等遇到`yield 1`时，`gen`上下文退出堆栈，内部状态冻结。第二次执行`g.next()`时，`gen`上下文重新加入堆栈，变成当前的上下文，重新恢复执行。\n\n## 应用\n\nGenerator 可以暂停函数执行，返回任意表达式的值。这种特点使得 Generator 有多种应用场景。\n\n### （1）异步操作的同步化表达\n\nGenerator 函数的暂停执行的效果，意味着可以把异步操作写在`yield`表达式里面，等到调用`next`方法时再往后执行。这实际上等同于不需要写回调函数了，因为异步操作的后续操作可以放在`yield`表达式下面，反正要等到调用`next`方法时再执行。所以，Generator 函数的一个重要实际意义就是用来处理异步操作，改写回调函数。\n\n```javascript\nfunction* loadUI() {\n  showLoadingScreen();\n  yield loadUIDataAsynchronously();\n  hideLoadingScreen();\n}\nvar loader = loadUI();\n// 加载UI\nloader.next()\n\n// 卸载UI\nloader.next()\n```\n\n上面代码中，第一次调用`loadUI`函数时，该函数不会执行，仅返回一个遍历器。下一次对该遍历器调用`next`方法，则会显示`Loading`界面（`showLoadingScreen`），并且异步加载数据（`loadUIDataAsynchronously`）。等到数据加载完成，再一次使用`next`方法，则会隐藏`Loading`界面。可以看到，这种写法的好处是所有`Loading`界面的逻辑，都被封装在一个函数，按部就班非常清晰。\n\nAjax 是典型的异步操作，通过 Generator 函数部署 Ajax 操作，可以用同步的方式表达。\n\n```javascript\nfunction* main() {\n  var result = yield request("http://some.url");\n  var resp = JSON.parse(result);\n    console.log(resp.value);\n}\n\nfunction request(url) {\n  makeAjaxCall(url, function(response){\n    it.next(response);\n  });\n}\n\nvar it = main();\nit.next();\n```\n\n上面代码的`main`函数，就是通过 Ajax 操作获取数据。可以看到，除了多了一个`yield`，它几乎与同步操作的写法完全一样。注意，`makeAjaxCall`函数中的`next`方法，必须加上`response`参数，因为`yield`表达式，本身是没有值的，总是等于`undefined`。\n\n下面是另一个例子，通过 Generator 函数逐行读取文本文件。\n\n```javascript\nfunction* numbers() {\n  let file = new FileReader("numbers.txt");\n  try {\n    while(!file.eof) {\n      yield parseInt(file.readLine(), 10);\n    }\n  } finally {\n    file.close();\n  }\n}\n```\n\n上面代码打开文本文件，使用`yield`表达式可以手动逐行读取文件。\n\n### （2）控制流管理\n\n如果有一个多步操作非常耗时，采用回调函数，可能会写成下面这样。\n\n```javascript\nstep1(function (value1) {\n  step2(value1, function(value2) {\n    step3(value2, function(value3) {\n      step4(value3, function(value4) {\n        // Do something with value4\n      });\n    });\n  });\n});\n```\n\n采用 Promise 改写上面的代码。\n\n```javascript\nPromise.resolve(step1)\n  .then(step2)\n  .then(step3)\n  .then(step4)\n  .then(function (value4) {\n    // Do something with value4\n  }, function (error) {\n    // Handle any error from step1 through step4\n  })\n  .done();\n```\n\n上面代码已经把回调函数，改成了直线执行的形式，但是加入了大量 Promise 的语法。Generator 函数可以进一步改善代码运行流程。\n\n```javascript\nfunction* longRunningTask(value1) {\n  try {\n    var value2 = yield step1(value1);\n    var value3 = yield step2(value2);\n    var value4 = yield step3(value3);\n    var value5 = yield step4(value4);\n    // Do something with value4\n  } catch (e) {\n    // Handle any error from step1 through step4\n  }\n}\n```\n\n然后，使用一个函数，按次序自动执行所有步骤。\n\n```javascript\nscheduler(longRunningTask(initialValue));\n\nfunction scheduler(task) {\n  var taskObj = task.next(task.value);\n  // 如果Generator函数未结束，就继续调用\n  if (!taskObj.done) {\n    task.value = taskObj.value\n    scheduler(task);\n  }\n}\n```\n\n注意，上面这种做法，只适合同步操作，即所有的`task`都必须是同步的，不能有异步操作。因为这里的代码一得到返回值，就继续往下执行，没有判断异步操作何时完成。如果要控制异步的操作流程，详见后面的《异步操作》一章。\n\n下面，利用`for...of`循环会自动依次执行`yield`命令的特性，提供一种更一般的控制流管理的方法。\n\n```javascript\nlet steps = [step1Func, step2Func, step3Func];\n\nfunction* iterateSteps(steps){\n  for (var i=0; i< steps.length; i++){\n    var step = steps[i];\n    yield step();\n  }\n}\n```\n\n上面代码中，数组`steps`封装了一个任务的多个步骤，Generator 函数`iterateSteps`则是依次为这些步骤加上`yield`命令。\n\n将任务分解成步骤之后，还可以将项目分解成多个依次执行的任务。\n\n```javascript\nlet jobs = [job1, job2, job3];\n\nfunction* iterateJobs(jobs){\n  for (var i=0; i< jobs.length; i++){\n    var job = jobs[i];\n    yield* iterateSteps(job.steps);\n  }\n}\n```\n\n上面代码中，数组`jobs`封装了一个项目的多个任务，Generator 函数`iterateJobs`则是依次为这些任务加上`yield*`命令。\n\n最后，就可以用`for...of`循环一次性依次执行所有任务的所有步骤。\n\n```javascript\nfor (var step of iterateJobs(jobs)){\n  console.log(step.id);\n}\n```\n\n再次提醒，上面的做法只能用于所有步骤都是同步操作的情况，不能有异步操作的步骤。如果想要依次执行异步的步骤，必须使用后面的《异步操作》一章介绍的方法。\n\n`for...of`的本质是一个`while`循环，所以上面的代码实质上执行的是下面的逻辑。\n\n```javascript\nvar it = iterateJobs(jobs);\nvar res = it.next();\n\nwhile (!res.done){\n  var result = res.value;\n  // ...\n  res = it.next();\n}\n```\n\n### （3）部署 Iterator 接口\n\n利用 Generator 函数，可以在任意对象上部署 Iterator 接口。\n\n```javascript\nfunction* iterEntries(obj) {\n  let keys = Object.keys(obj);\n  for (let i=0; i < keys.length; i++) {\n    let key = keys[i];\n    yield [key, obj[key]];\n  }\n}\n\nlet myObj = { foo: 3, bar: 7 };\n\nfor (let [key, value] of iterEntries(myObj)) {\n  console.log(key, value);\n}\n\n// foo 3\n// bar 7\n```\n\n上述代码中，`myObj`是一个普通对象，通过`iterEntries`函数，就有了 Iterator 接口。也就是说，可以在任意对象上部署`next`方法。\n\n下面是一个对数组部署 Iterator 接口的例子，尽管数组原生具有这个接口。\n\n```javascript\nfunction* makeSimpleGenerator(array){\n  var nextIndex = 0;\n\n  while(nextIndex < array.length){\n    yield array[nextIndex++];\n  }\n}\n\nvar gen = makeSimpleGenerator([\'yo\', \'ya\']);\n\ngen.next().value // \'yo\'\ngen.next().value // \'ya\'\ngen.next().done  // true\n```\n\n### （4）作为数据结构\n\nGenerator 可以看作是数据结构，更确切地说，可以看作是一个数组结构，因为 Generator 函数可以返回一系列的值，这意味着它可以对任意表达式，提供类似数组的接口。\n\n```javascript\nfunction* doStuff() {\n  yield fs.readFile.bind(null, \'hello.txt\');\n  yield fs.readFile.bind(null, \'world.txt\');\n  yield fs.readFile.bind(null, \'and-such.txt\');\n}\n```\n\n上面代码就是依次返回三个函数，但是由于使用了 Generator 函数，导致可以像处理数组那样，处理这三个返回的函数。\n\n```javascript\nfor (task of doStuff()) {\n  // task是一个函数，可以像回调函数那样使用它\n}\n```\n\n实际上，如果用 ES5 表达，完全可以用数组模拟 Generator 的这种用法。\n\n```javascript\nfunction doStuff() {\n  return [\n    fs.readFile.bind(null, \'hello.txt\'),\n    fs.readFile.bind(null, \'world.txt\'),\n    fs.readFile.bind(null, \'and-such.txt\')\n  ];\n}\n```\n\n上面的函数，可以用一模一样的`for...of`循环处理！两相一比较，就不难看出 Generator 使得数据或者操作，具备了类似数组的接口。\n\n\n\n# Generator 函数的异步应用\n\n1. [传统方法](http://es6.ruanyifeng.com/#docs/generator-async#%E4%BC%A0%E7%BB%9F%E6%96%B9%E6%B3%95)\n2. [基本概念](http://es6.ruanyifeng.com/#docs/generator-async#%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5)\n3. [Generator 函数](http://es6.ruanyifeng.com/#docs/generator-async#Generator%20%E5%87%BD%E6%95%B0)\n4. [Thunk 函数](http://es6.ruanyifeng.com/#docs/generator-async#Thunk%20%E5%87%BD%E6%95%B0)\n5. [co 模块](http://es6.ruanyifeng.com/#docs/generator-async#co%20%E6%A8%A1%E5%9D%97)\n\n异步编程对 JavaScript 语言太重要。Javascript 语言的执行环境是“单线程”的，如果没有异步编程，根本没法用，非卡死不可。本章主要介绍 Generator 函数如何完成异步操作。\n\n## 传统方法\n\nES6 诞生以前，异步编程的方法，大概有下面四种。\n\n- 回调函数\n- 事件监听\n- 发布/订阅\n- Promise 对象\n\nGenerator 函数将 JavaScript 异步编程带入了一个全新的阶段。\n\n## 基本概念\n\n### 异步\n\n所谓"异步"，简单说就是一个任务不是连续完成的，可以理解成该任务被人为分成两段，先执行第一段，然后转而执行其他任务，等做好了准备，再回过头执行第二段。\n\n比如，有一个任务是读取文件进行处理，任务的第一段是向操作系统发出请求，要求读取文件。然后，程序执行其他任务，等到操作系统返回文件，再接着执行任务的第二段（处理文件）。这种不连续的执行，就叫做异步。\n\n相应地，连续的执行就叫做同步。由于是连续执行，不能插入其他任务，所以操作系统从硬盘读取文件的这段时间，程序只能干等着。\n\n### 回调函数\n\nJavaScript 语言对异步编程的实现，就是回调函数。所谓回调函数，就是把任务的第二段单独写在一个函数里面，等到重新执行这个任务的时候，就直接调用这个函数。回调函数的英语名字`callback`，直译过来就是"重新调用"。\n\n读取文件进行处理，是这样写的。\n\n```javascript\nfs.readFile(\'/etc/passwd\', \'utf-8\', function (err, data) {\n  if (err) throw err;\n  console.log(data);\n});\n```\n\n上面代码中，`readFile`函数的第三个参数，就是回调函数，也就是任务的第二段。等到操作系统返回了`/etc/passwd`这个文件以后，回调函数才会执行。\n\n一个有趣的问题是，为什么 Node 约定，回调函数的第一个参数，必须是错误对象`err`（如果没有错误，该参数就是`null`）？\n\n原因是执行分成两段，第一段执行完以后，任务所在的上下文环境就已经结束了。在这以后抛出的错误，原来的上下文环境已经无法捕捉，只能当作参数，传入第二段。\n\n### Promise\n\n回调函数本身并没有问题，它的问题出现在多个回调函数嵌套。假定读取`A`文件之后，再读取`B`文件，代码如下。\n\n```javascript\nfs.readFile(fileA, \'utf-8\', function (err, data) {\n  fs.readFile(fileB, \'utf-8\', function (err, data) {\n    // ...\n  });\n});\n```\n\n不难想象，如果依次读取两个以上的文件，就会出现多重嵌套。代码不是纵向发展，而是横向发展，很快就会乱成一团，无法管理。因为多个异步操作形成了强耦合，只要有一个操作需要修改，它的上层回调函数和下层回调函数，可能都要跟着修改。这种情况就称为"回调函数地狱"（callback hell）。\n\nPromise 对象就是为了解决这个问题而提出的。它不是新的语法功能，而是一种新的写法，允许将回调函数的嵌套，改成链式调用。采用 Promise，连续读取多个文件，写法如下。\n\n```javascript\nvar readFile = require(\'fs-readfile-promise\');\n\nreadFile(fileA)\n.then(function (data) {\n  console.log(data.toString());\n})\n.then(function () {\n  return readFile(fileB);\n})\n.then(function (data) {\n  console.log(data.toString());\n})\n.catch(function (err) {\n  console.log(err);\n});\n```\n\n上面代码中，我使用了`fs-readfile-promise`模块，它的作用就是返回一个 Promise 版本的`readFile`函数。Promise 提供`then`方法加载回调函数，`catch`方法捕捉执行过程中抛出的错误。\n\n可以看到，Promise 的写法只是回调函数的改进，使用`then`方法以后，异步任务的两段执行看得更清楚了，除此以外，并无新意。\n\nPromise 的最大问题是代码冗余，原来的任务被 Promise 包装了一下，不管什么操作，一眼看去都是一堆`then`，原来的语义变得很不清楚。\n\n那么，有没有更好的写法呢？\n\n## Generator 函数\n\n### 协程\n\n传统的编程语言，早有异步编程的解决方案（其实是多任务的解决方案）。其中有一种叫做"协程"（coroutine），意思是多个线程互相协作，完成异步任务。\n\n协程有点像函数，又有点像线程。它的运行流程大致如下。\n\n- 第一步，协程`A`开始执行。\n- 第二步，协程`A`执行到一半，进入暂停，执行权转移到协程`B`。\n- 第三步，（一段时间后）协程`B`交还执行权。\n- 第四步，协程`A`恢复执行。\n\n上面流程的协程`A`，就是异步任务，因为它分成两段（或多段）执行。\n\n举例来说，读取文件的协程写法如下。\n\n```javascript\nfunction* asyncJob() {\n  // ...其他代码\n  var f = yield readFile(fileA);\n  // ...其他代码\n}\n```\n\n上面代码的函数`asyncJob`是一个协程，它的奥妙就在其中的`yield`命令。它表示执行到此处，执行权将交给其他协程。也就是说，`yield`命令是异步两个阶段的分界线。\n\n协程遇到`yield`命令就暂停，等到执行权返回，再从暂停的地方继续往后执行。它的最大优点，就是代码的写法非常像同步操作，如果去除`yield`命令，简直一模一样。\n\n### 协程的 Generator 函数实现\n\nGenerator 函数是协程在 ES6 的实现，最大特点就是可以交出函数的执行权（即暂停执行）。\n\n整个 Generator 函数就是一个封装的异步任务，或者说是异步任务的容器。异步操作需要暂停的地方，都用`yield`语句注明。Generator 函数的执行方法如下。\n\n```javascript\nfunction* gen(x) {\n  var y = yield x + 2;\n  return y;\n}\n\nvar g = gen(1);\ng.next() // { value: 3, done: false }\ng.next() // { value: undefined, done: true }\n```\n\n上面代码中，调用 Generator 函数，会返回一个内部指针（即遍历器）`g`。这是 Generator 函数不同于普通函数的另一个地方，即执行它不会返回结果，返回的是指针对象。调用指针`g`的`next`方法，会移动内部指针（即执行异步任务的第一段），指向第一个遇到的`yield`语句，上例是执行到`x + 2`为止。\n\n换言之，`next`方法的作用是分阶段执行`Generator`函数。每次调用`next`方法，会返回一个对象，表示当前阶段的信息（`value`属性和`done`属性）。`value`属性是`yield`语句后面表达式的值，表示当前阶段的值；`done`属性是一个布尔值，表示 Generator 函数是否执行完毕，即是否还有下一个阶段。\n\n### Generator 函数的数据交换和错误处理\n\nGenerator 函数可以暂停执行和恢复执行，这是它能封装异步任务的根本原因。除此之外，它还有两个特性，使它可以作为异步编程的完整解决方案：函数体内外的数据交换和错误处理机制。\n\n`next`返回值的 value 属性，是 Generator 函数向外输出数据；`next`方法还可以接受参数，向 Generator 函数体内输入数据。\n\n```javascript\nfunction* gen(x){\n  var y = yield x + 2;\n  return y;\n}\n\nvar g = gen(1);\ng.next() // { value: 3, done: false }\ng.next(2) // { value: 2, done: true }\n```\n\n上面代码中，第一个`next`方法的`value`属性，返回表达式`x + 2`的值`3`。第二个`next`方法带有参数`2`，这个参数可以传入 Generator 函数，作为上个阶段异步任务的返回结果，被函数体内的变量`y`接收。因此，这一步的`value`属性，返回的就是`2`（变量`y`的值）。\n\nGenerator 函数内部还可以部署错误处理代码，捕获函数体外抛出的错误。\n\n```javascript\nfunction* gen(x){\n  try {\n    var y = yield x + 2;\n  } catch (e){\n    console.log(e);\n  }\n  return y;\n}\n\nvar g = gen(1);\ng.next();\ng.throw(\'出错了\');\n// 出错了\n```\n\n上面代码的最后一行，Generator 函数体外，使用指针对象的`throw`方法抛出的错误，可以被函数体内的`try...catch`代码块捕获。这意味着，出错的代码与处理错误的代码，实现了时间和空间上的分离，这对于异步编程无疑是很重要的。\n\n### 异步任务的封装\n\n下面看看如何使用 Generator 函数，执行一个真实的异步任务。\n\n```javascript\nvar fetch = require(\'node-fetch\');\n\nfunction* gen(){\n  var url = \'https://api.github.com/users/github\';\n  var result = yield fetch(url);\n  console.log(result.bio);\n}\n```\n\n上面代码中，Generator 函数封装了一个异步操作，该操作先读取一个远程接口，然后从 JSON 格式的数据解析信息。就像前面说过的，这段代码非常像同步操作，除了加上了`yield`命令。\n\n执行这段代码的方法如下。\n\n```javascript\nvar g = gen();\nvar result = g.next();\n\nresult.value.then(function(data){\n  return data.json();\n}).then(function(data){\n  g.next(data);\n});\n```\n\n上面代码中，首先执行 Generator 函数，获取遍历器对象，然后使用`next`方法（第二行），执行异步任务的第一阶段。由于`Fetch`模块返回的是一个 Promise 对象，因此要用`then`方法调用下一个`next`方法。\n\n可以看到，虽然 Generator 函数将异步操作表示得很简洁，但是流程管理却不方便（即何时执行第一阶段、何时执行第二阶段）。\n\n## Thunk 函数\n\nThunk 函数是自动执行 Generator 函数的一种方法。\n\n### 参数的求值策略\n\nThunk 函数早在上个世纪 60 年代就诞生了。\n\n那时，编程语言刚刚起步，计算机学家还在研究，编译器怎么写比较好。一个争论的焦点是"求值策略"，即函数的参数到底应该何时求值。\n\n```javascript\nvar x = 1;\n\nfunction f(m) {\n  return m * 2;\n}\n\nf(x + 5)\n```\n\n上面代码先定义函数`f`，然后向它传入表达式`x + 5`。请问，这个表达式应该何时求值？\n\n一种意见是"传值调用"（call by value），即在进入函数体之前，就计算`x + 5`的值（等于 6），再将这个值传入函数`f`。C 语言就采用这种策略。\n\n```javascript\nf(x + 5)\n// 传值调用时，等同于\nf(6)\n```\n\n另一种意见是“传名调用”（call by name），即直接将表达式`x + 5`传入函数体，只在用到它的时候求值。Haskell 语言采用这种策略。\n\n```javascript\nf(x + 5)\n// 传名调用时，等同于\n(x + 5) * 2\n```\n\n传值调用和传名调用，哪一种比较好？\n\n回答是各有利弊。传值调用比较简单，但是对参数求值的时候，实际上还没用到这个参数，有可能造成性能损失。\n\n```javascript\nfunction f(a, b){\n  return b;\n}\n\nf(3 * x * x - 2 * x - 1, x);\n```\n\n上面代码中，函数`f`的第一个参数是一个复杂的表达式，但是函数体内根本没用到。对这个参数求值，实际上是不必要的。因此，有一些计算机学家倾向于"传名调用"，即只在执行时求值。\n\n### Thunk 函数的含义\n\n编译器的“传名调用”实现，往往是将参数放到一个临时函数之中，再将这个临时函数传入函数体。这个临时函数就叫做 Thunk 函数。\n\n```javascript\nfunction f(m) {\n  return m * 2;\n}\n\nf(x + 5);\n\n// 等同于\n\nvar thunk = function () {\n  return x + 5;\n};\n\nfunction f(thunk) {\n  return thunk() * 2;\n}\n```\n\n上面代码中，函数 f 的参数`x + 5`被一个函数替换了。凡是用到原参数的地方，对`Thunk`函数求值即可。\n\n这就是 Thunk 函数的定义，它是“传名调用”的一种实现策略，用来替换某个表达式。\n\n### JavaScript 语言的 Thunk 函数\n\nJavaScript 语言是传值调用，它的 Thunk 函数含义有所不同。在 JavaScript 语言中，Thunk 函数替换的不是表达式，而是多参数函数，将其替换成一个只接受回调函数作为参数的单参数函数。\n\n```javascript\n// 正常版本的readFile（多参数版本）\nfs.readFile(fileName, callback);\n\n// Thunk版本的readFile（单参数版本）\nvar Thunk = function (fileName) {\n  return function (callback) {\n    return fs.readFile(fileName, callback);\n  };\n};\n\nvar readFileThunk = Thunk(fileName);\nreadFileThunk(callback);\n```\n\n上面代码中，`fs`模块的`readFile`方法是一个多参数函数，两个参数分别为文件名和回调函数。经过转换器处理，它变成了一个单参数函数，只接受回调函数作为参数。这个单参数版本，就叫做 Thunk 函数。\n\n任何函数，只要参数有回调函数，就能写成 Thunk 函数的形式。下面是一个简单的 Thunk 函数转换器。\n\n```javascript\n// ES5版本\nvar Thunk = function(fn){\n  return function (){\n    var args = Array.prototype.slice.call(arguments);\n    return function (callback){\n      args.push(callback);\n      return fn.apply(this, args);\n    }\n  };\n};\n\n// ES6版本\nconst Thunk = function(fn) {\n  return function (...args) {\n    return function (callback) {\n      return fn.call(this, ...args, callback);\n    }\n  };\n};\n```\n\n使用上面的转换器，生成`fs.readFile`的 Thunk 函数。\n\n```javascript\nvar readFileThunk = Thunk(fs.readFile);\nreadFileThunk(fileA)(callback);\n```\n\n下面是另一个完整的例子。\n\n```javascript\nfunction f(a, cb) {\n  cb(a);\n}\nconst ft = Thunk(f);\n\nft(1)(console.log) // 1\n```\n\n### Thunkify 模块\n\n生产环境的转换器，建议使用 Thunkify 模块。\n\n首先是安装。\n\n```bash\n$ npm install thunkify\n```\n\n使用方式如下。\n\n```javascript\nvar thunkify = require(\'thunkify\');\nvar fs = require(\'fs\');\n\nvar read = thunkify(fs.readFile);\nread(\'package.json\')(function(err, str){\n  // ...\n});\n```\n\nThunkify 的源码与上一节那个简单的转换器非常像。\n\n```javascript\nfunction thunkify(fn) {\n  return function() {\n    var args = new Array(arguments.length);\n    var ctx = this;\n\n    for (var i = 0; i < args.length; ++i) {\n      args[i] = arguments[i];\n    }\n\n    return function (done) {\n      var called;\n\n      args.push(function () {\n        if (called) return;\n        called = true;\n        done.apply(null, arguments);\n      });\n\n      try {\n        fn.apply(ctx, args);\n      } catch (err) {\n        done(err);\n      }\n    }\n  }\n};\n```\n\n它的源码主要多了一个检查机制，变量`called`确保回调函数只运行一次。这样的设计与下文的 Generator 函数相关。请看下面的例子。\n\n```javascript\nfunction f(a, b, callback){\n  var sum = a + b;\n  callback(sum);\n  callback(sum);\n}\n\nvar ft = thunkify(f);\nvar print = console.log.bind(console);\nft(1, 2)(print);\n// 3\n```\n\n上面代码中，由于`thunkify`只允许回调函数执行一次，所以只输出一行结果。\n\n### Generator 函数的流程管理\n\n你可能会问， Thunk 函数有什么用？回答是以前确实没什么用，但是 ES6 有了 Generator 函数，Thunk 函数现在可以用于 Generator 函数的自动流程管理。\n\nGenerator 函数可以自动执行。\n\n```javascript\nfunction* gen() {\n  // ...\n}\n\nvar g = gen();\nvar res = g.next();\n\nwhile(!res.done){\n  console.log(res.value);\n  res = g.next();\n}\n```\n\n上面代码中，Generator 函数`gen`会自动执行完所有步骤。\n\n但是，这不适合异步操作。如果必须保证前一步执行完，才能执行后一步，上面的自动执行就不可行。这时，Thunk 函数就能派上用处。以读取文件为例。下面的 Generator 函数封装了两个异步操作。\n\n```javascript\nvar fs = require(\'fs\');\nvar thunkify = require(\'thunkify\');\nvar readFileThunk = thunkify(fs.readFile);\n\nvar gen = function* (){\n  var r1 = yield readFileThunk(\'/etc/fstab\');\n  console.log(r1.toString());\n  var r2 = yield readFileThunk(\'/etc/shells\');\n  console.log(r2.toString());\n};\n```\n\n上面代码中，`yield`命令用于将程序的执行权移出 Generator 函数，那么就需要一种方法，将执行权再交还给 Generator 函数。\n\n这种方法就是 Thunk 函数，因为它可以在回调函数里，将执行权交还给 Generator 函数。为了便于理解，我们先看如何手动执行上面这个 Generator 函数。\n\n```javascript\nvar g = gen();\n\nvar r1 = g.next();\nr1.value(function (err, data) {\n  if (err) throw err;\n  var r2 = g.next(data);\n  r2.value(function (err, data) {\n    if (err) throw err;\n    g.next(data);\n  });\n});\n```\n\n上面代码中，变量`g`是 Generator 函数的内部指针，表示目前执行到哪一步。`next`方法负责将指针移动到下一步，并返回该步的信息（`value`属性和`done`属性）。\n\n仔细查看上面的代码，可以发现 Generator 函数的执行过程，其实是将同一个回调函数，反复传入`next`方法的`value`属性。这使得我们可以用递归来自动完成这个过程。\n\n### Thunk 函数的自动流程管理\n\nThunk 函数真正的威力，在于可以自动执行 Generator 函数。下面就是一个基于 Thunk 函数的 Generator 执行器。\n\n```javascript\nfunction run(fn) {\n  var gen = fn();\n\n  function next(err, data) {\n    var result = gen.next(data);\n    if (result.done) return;\n    result.value(next);\n  }\n\n  next();\n}\n\nfunction* g() {\n  // ...\n}\n\nrun(g);\n```\n\n上面代码的`run`函数，就是一个 Generator 函数的自动执行器。内部的`next`函数就是 Thunk 的回调函数。`next`函数先将指针移到 Generator 函数的下一步（`gen.next`方法），然后判断 Generator 函数是否结束（`result.done`属性），如果没结束，就将`next`函数再传入 Thunk 函数（`result.value`属性），否则就直接退出。\n\n有了这个执行器，执行 Generator 函数方便多了。不管内部有多少个异步操作，直接把 Generator 函数传入`run`函数即可。当然，前提是每一个异步操作，都要是 Thunk 函数，也就是说，跟在`yield`命令后面的必须是 Thunk 函数。\n\n```javascript\nvar g = function* (){\n  var f1 = yield readFileThunk(\'fileA\');\n  var f2 = yield readFileThunk(\'fileB\');\n  // ...\n  var fn = yield readFileThunk(\'fileN\');\n};\n\nrun(g);\n```\n\n上面代码中，函数`g`封装了`n`个异步的读取文件操作，只要执行`run`函数，这些操作就会自动完成。这样一来，异步操作不仅可以写得像同步操作，而且一行代码就可以执行。\n\nThunk 函数并不是 Generator 函数自动执行的唯一方案。因为自动执行的关键是，必须有一种机制，自动控制 Generator 函数的流程，接收和交还程序的执行权。回调函数可以做到这一点，Promise 对象也可以做到这一点。\n\n## co 模块\n\n### 基本用法\n\n[co 模块](https://github.com/tj/co)是著名程序员 TJ Holowaychuk 于 2013 年 6 月发布的一个小工具，用于 Generator 函数的自动执行。\n\n下面是一个 Generator 函数，用于依次读取两个文件。\n\n```javascript\nvar gen = function* () {\n  var f1 = yield readFile(\'/etc/fstab\');\n  var f2 = yield readFile(\'/etc/shells\');\n  console.log(f1.toString());\n  console.log(f2.toString());\n};\n```\n\nco 模块可以让你不用编写 Generator 函数的执行器。\n\n```javascript\nvar co = require(\'co\');\nco(gen);\n```\n\n上面代码中，Generator 函数只要传入`co`函数，就会自动执行。\n\n`co`函数返回一个`Promise`对象，因此可以用`then`方法添加回调函数。\n\n```javascript\nco(gen).then(function (){\n  console.log(\'Generator 函数执行完成\');\n});\n```\n\n上面代码中，等到 Generator 函数执行结束，就会输出一行提示。\n\n### co 模块的原理\n\n为什么 co 可以自动执行 Generator 函数？\n\n前面说过，Generator 就是一个异步操作的容器。它的自动执行需要一种机制，当异步操作有了结果，能够自动交回执行权。\n\n两种方法可以做到这一点。\n\n（1）回调函数。将异步操作包装成 Thunk 函数，在回调函数里面交回执行权。\n\n（2）Promise 对象。将异步操作包装成 Promise 对象，用`then`方法交回执行权。\n\nco 模块其实就是将两种自动执行器（Thunk 函数和 Promise 对象），包装成一个模块。使用 co 的前提条件是，Generator 函数的`yield`命令后面，只能是 Thunk 函数或 Promise 对象。如果数组或对象的成员，全部都是 Promise 对象，也可以使用 co，详见后文的例子。\n\n上一节已经介绍了基于 Thunk 函数的自动执行器。下面来看，基于 Promise 对象的自动执行器。这是理解 co 模块必须的。\n\n### 基于 Promise 对象的自动执行\n\n还是沿用上面的例子。首先，把`fs`模块的`readFile`方法包装成一个 Promise 对象。\n\n```javascript\nvar fs = require(\'fs\');\n\nvar readFile = function (fileName){\n  return new Promise(function (resolve, reject){\n    fs.readFile(fileName, function(error, data){\n      if (error) return reject(error);\n      resolve(data);\n    });\n  });\n};\n\nvar gen = function* (){\n  var f1 = yield readFile(\'/etc/fstab\');\n  var f2 = yield readFile(\'/etc/shells\');\n  console.log(f1.toString());\n  console.log(f2.toString());\n};\n```\n\n然后，手动执行上面的 Generator 函数。\n\n```javascript\nvar g = gen();\n\ng.next().value.then(function(data){\n  g.next(data).value.then(function(data){\n    g.next(data);\n  });\n});\n```\n\n手动执行其实就是用`then`方法，层层添加回调函数。理解了这一点，就可以写出一个自动执行器。\n\n```javascript\nfunction run(gen){\n  var g = gen();\n\n  function next(data){\n    var result = g.next(data);\n    if (result.done) return result.value;\n    result.value.then(function(data){\n      next(data);\n    });\n  }\n\n  next();\n}\n\nrun(gen);\n```\n\n上面代码中，只要 Generator 函数还没执行到最后一步，`next`函数就调用自身，以此实现自动执行。\n\n### co 模块的源码\n\nco 就是上面那个自动执行器的扩展，它的源码只有几十行，非常简单。\n\n首先，co 函数接受 Generator 函数作为参数，返回一个 Promise 对象。\n\n```javascript\nfunction co(gen) {\n  var ctx = this;\n\n  return new Promise(function(resolve, reject) {\n  });\n}\n```\n\n在返回的 Promise 对象里面，co 先检查参数`gen`是否为 Generator 函数。如果是，就执行该函数，得到一个内部指针对象；如果不是就返回，并将 Promise 对象的状态改为`resolved`。\n\n```javascript\nfunction co(gen) {\n  var ctx = this;\n\n  return new Promise(function(resolve, reject) {\n    if (typeof gen === \'function\') gen = gen.call(ctx);\n    if (!gen || typeof gen.next !== \'function\') return resolve(gen);\n  });\n}\n```\n\n接着，co 将 Generator 函数的内部指针对象的`next`方法，包装成`onFulfilled`函数。这主要是为了能够捕捉抛出的错误。\n\n```javascript\nfunction co(gen) {\n  var ctx = this;\n\n  return new Promise(function(resolve, reject) {\n    if (typeof gen === \'function\') gen = gen.call(ctx);\n    if (!gen || typeof gen.next !== \'function\') return resolve(gen);\n\n    onFulfilled();\n    function onFulfilled(res) {\n      var ret;\n      try {\n        ret = gen.next(res);\n      } catch (e) {\n        return reject(e);\n      }\n      next(ret);\n    }\n  });\n}\n```\n\n最后，就是关键的`next`函数，它会反复调用自身。\n\n```javascript\nfunction next(ret) {\n  if (ret.done) return resolve(ret.value);\n  var value = toPromise.call(ctx, ret.value);\n  if (value && isPromise(value)) return value.then(onFulfilled, onRejected);\n  return onRejected(\n    new TypeError(\n      \'You may only yield a function, promise, generator, array, or object, \'\n      + \'but the following object was passed: "\'\n      + String(ret.value)\n      + \'"\'\n    )\n  );\n}\n```\n\n上面代码中，`next`函数的内部代码，一共只有四行命令。\n\n第一行，检查当前是否为 Generator 函数的最后一步，如果是就返回。\n\n第二行，确保每一步的返回值，是 Promise 对象。\n\n第三行，使用`then`方法，为返回值加上回调函数，然后通过`onFulfilled`函数再次调用`next`函数。\n\n第四行，在参数不符合要求的情况下（参数非 Thunk 函数和 Promise 对象），将 Promise 对象的状态改为`rejected`，从而终止执行。\n\n### 处理并发的异步操作\n\nco 支持并发的异步操作，即允许某些操作同时进行，等到它们全部完成，才进行下一步。\n\n这时，要把并发的操作都放在数组或对象里面，跟在`yield`语句后面。\n\n```javascript\n// 数组的写法\nco(function* () {\n  var res = yield [\n    Promise.resolve(1),\n    Promise.resolve(2)\n  ];\n  console.log(res);\n}).catch(onerror);\n\n// 对象的写法\nco(function* () {\n  var res = yield {\n    1: Promise.resolve(1),\n    2: Promise.resolve(2),\n  };\n  console.log(res);\n}).catch(onerror);\n```\n\n下面是另一个例子。\n\n```javascript\nco(function* () {\n  var values = [n1, n2, n3];\n  yield values.map(somethingAsync);\n});\n\nfunction* somethingAsync(x) {\n  // do something async\n  return y\n}\n```\n\n上面的代码允许并发三个`somethingAsync`异步操作，等到它们全部完成，才会进行下一步。\n\n### 实例：处理 Stream\n\nNode 提供 Stream 模式读写数据，特点是一次只处理数据的一部分，数据分成一块块依次处理，就好像“数据流”一样。这对于处理大规模数据非常有利。Stream 模式使用 EventEmitter API，会释放三个事件。\n\n- `data`事件：下一块数据块已经准备好了。\n- `end`事件：整个“数据流”处理“完了。\n- `error`事件：发生错误。\n\n使用`Promise.race()`函数，可以判断这三个事件之中哪一个最先发生，只有当`data`事件最先发生时，才进入下一个数据块的处理。从而，我们可以通过一个`while`循环，完成所有数据的读取。\n\n```javascript\nconst co = require(\'co\');\nconst fs = require(\'fs\');\n\nconst stream = fs.createReadStream(\'./les_miserables.txt\');\nlet valjeanCount = 0;\n\nco(function*() {\n  while(true) {\n    const res = yield Promise.race([\n      new Promise(resolve => stream.once(\'data\', resolve)),\n      new Promise(resolve => stream.once(\'end\', resolve)),\n      new Promise((resolve, reject) => stream.once(\'error\', reject))\n    ]);\n    if (!res) {\n      break;\n    }\n    stream.removeAllListeners(\'data\');\n    stream.removeAllListeners(\'end\');\n    stream.removeAllListeners(\'error\');\n    valjeanCount += (res.toString().match(/valjean/ig) || []).length;\n  }\n  console.log(\'count:\', valjeanCount); // count: 1120\n});\n```\n\n上面代码采用 Stream 模式读取《悲惨世界》的文本文件，对于每个数据块都使用`stream.once`方法，在`data`、`end`、`error`三个事件上添加一次性回调函数。变量`res`只有在`data`事件发生时才有值，然后累加每个数据块之中`valjean`这个词出现的次数。\n\n\n\n# async 函数\n\n1. [含义](http://es6.ruanyifeng.com/#docs/async#%E5%90%AB%E4%B9%89)\n2. [基本用法](http://es6.ruanyifeng.com/#docs/async#%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95)\n3. [语法](http://es6.ruanyifeng.com/#docs/async#%E8%AF%AD%E6%B3%95)\n4. [async 函数的实现原理](http://es6.ruanyifeng.com/#docs/async#async%20%E5%87%BD%E6%95%B0%E7%9A%84%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86)\n5. [与其他异步处理方法的比较](http://es6.ruanyifeng.com/#docs/async#%E4%B8%8E%E5%85%B6%E4%BB%96%E5%BC%82%E6%AD%A5%E5%A4%84%E7%90%86%E6%96%B9%E6%B3%95%E7%9A%84%E6%AF%94%E8%BE%83)\n6. [实例：按顺序完成异步操作](http://es6.ruanyifeng.com/#docs/async#%E5%AE%9E%E4%BE%8B%EF%BC%9A%E6%8C%89%E9%A1%BA%E5%BA%8F%E5%AE%8C%E6%88%90%E5%BC%82%E6%AD%A5%E6%93%8D%E4%BD%9C)\n7. [异步遍历器](http://es6.ruanyifeng.com/#docs/async#%E5%BC%82%E6%AD%A5%E9%81%8D%E5%8E%86%E5%99%A8)\n\n## 含义\n\nES2017 标准引入了 async 函数，使得异步操作变得更加方便。\n\nasync 函数是什么？一句话，它就是 Generator 函数的语法糖。\n\n前文有一个 Generator 函数，依次读取两个文件。\n\n```javascript\nconst fs = require(\'fs\');\n\nconst readFile = function (fileName) {\n  return new Promise(function (resolve, reject) {\n    fs.readFile(fileName, function(error, data) {\n      if (error) return reject(error);\n      resolve(data);\n    });\n  });\n};\n\nconst gen = function* () {\n  const f1 = yield readFile(\'/etc/fstab\');\n  const f2 = yield readFile(\'/etc/shells\');\n  console.log(f1.toString());\n  console.log(f2.toString());\n};\n```\n\n写成`async`函数，就是下面这样。\n\n```javascript\nconst asyncReadFile = async function () {\n  const f1 = await readFile(\'/etc/fstab\');\n  const f2 = await readFile(\'/etc/shells\');\n  console.log(f1.toString());\n  console.log(f2.toString());\n};\n```\n\n一比较就会发现，`async`函数就是将 Generator 函数的星号（`*`）替换成`async`，将`yield`替换成`await`，仅此而已。\n\n`async`函数对 Generator 函数的改进，体现在以下四点。\n\n（1）内置执行器。\n\nGenerator 函数的执行必须靠执行器，所以才有了`co`模块，而`async`函数自带执行器。也就是说，`async`函数的执行，与普通函数一模一样，只要一行。\n\n```javascript\nasyncReadFile();\n```\n\n上面的代码调用了`asyncReadFile`函数，然后它就会自动执行，输出最后结果。这完全不像 Generator 函数，需要调用`next`方法，或者用`co`模块，才能真正执行，得到最后结果。\n\n（2）更好的语义。\n\n`async`和`await`，比起星号和`yield`，语义更清楚了。`async`表示函数里有异步操作，`await`表示紧跟在后面的表达式需要等待结果。\n\n（3）更广的适用性。\n\n`co`模块约定，`yield`命令后面只能是 Thunk 函数或 Promise 对象，而`async`函数的`await`命令后面，可以是 Promise 对象和原始类型的值（数值、字符串和布尔值，但这时等同于同步操作）。\n\n（4）返回值是 Promise。\n\n`async`函数的返回值是 Promise 对象，这比 Generator 函数的返回值是 Iterator 对象方便多了。你可以用`then`方法指定下一步的操作。\n\n进一步说，`async`函数完全可以看作多个异步操作，包装成的一个 Promise 对象，而`await`命令就是内部`then`命令的语法糖。\n\n## 基本用法\n\n`async`函数返回一个 Promise 对象，可以使用`then`方法添加回调函数。当函数执行的时候，一旦遇到`await`就会先返回，等到异步操作完成，再接着执行函数体内后面的语句。\n\n下面是一个例子。\n\n```javascript\nasync function getStockPriceByName(name) {\n  const symbol = await getStockSymbol(name);\n  const stockPrice = await getStockPrice(symbol);\n  return stockPrice;\n}\n\ngetStockPriceByName(\'goog\').then(function (result) {\n  console.log(result);\n});\n```\n\n上面代码是一个获取股票报价的函数，函数前面的`async`关键字，表明该函数内部有异步操作。调用该函数时，会立即返回一个`Promise`对象。\n\n下面是另一个例子，指定多少毫秒后输出一个值。\n\n```javascript\nfunction timeout(ms) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, ms);\n  });\n}\n\nasync function asyncPrint(value, ms) {\n  await timeout(ms);\n  console.log(value);\n}\n\nasyncPrint(\'hello world\', 50);\n```\n\n上面代码指定 50 毫秒以后，输出`hello world`。\n\n由于`async`函数返回的是 Promise 对象，可以作为`await`命令的参数。所以，上面的例子也可以写成下面的形式。\n\n```javascript\nasync function timeout(ms) {\n  await new Promise((resolve) => {\n    setTimeout(resolve, ms);\n  });\n}\n\nasync function asyncPrint(value, ms) {\n  await timeout(ms);\n  console.log(value);\n}\n\nasyncPrint(\'hello world\', 50);\n```\n\nasync 函数有多种使用形式。\n\n```javascript\n// 函数声明\nasync function foo() {}\n\n// 函数表达式\nconst foo = async function () {};\n\n// 对象的方法\nlet obj = { async foo() {} };\nobj.foo().then(...)\n\n// Class 的方法\nclass Storage {\n  constructor() {\n    this.cachePromise = caches.open(\'avatars\');\n  }\n\n  async getAvatar(name) {\n    const cache = await this.cachePromise;\n    return cache.match(`/avatars/${name}.jpg`);\n  }\n}\n\nconst storage = new Storage();\nstorage.getAvatar(\'jake\').then(…);\n\n// 箭头函数\nconst foo = async () => {};\n```\n\n## 语法\n\n`async`函数的语法规则总体上比较简单，难点是错误处理机制。\n\n### 返回 Promise 对象\n\n`async`函数返回一个 Promise 对象。\n\n`async`函数内部`return`语句返回的值，会成为`then`方法回调函数的参数。\n\n```javascript\nasync function f() {\n  return \'hello world\';\n}\n\nf().then(v => console.log(v))\n// "hello world"\n```\n\n上面代码中，函数`f`内部`return`命令返回的值，会被`then`方法回调函数接收到。\n\n`async`函数内部抛出错误，会导致返回的 Promise 对象变为`reject`状态。抛出的错误对象会被`catch`方法回调函数接收到。\n\n```javascript\nasync function f() {\n  throw new Error(\'出错了\');\n}\n\nf().then(\n  v => console.log(v),\n  e => console.log(e)\n)\n// Error: 出错了\n```\n\n### Promise 对象的状态变化\n\n`async`函数返回的 Promise 对象，必须等到内部所有`await`命令后面的 Promise 对象执行完，才会发生状态改变，除非遇到`return`语句或者抛出错误。也就是说，只有`async`函数内部的异步操作执行完，才会执行`then`方法指定的回调函数。\n\n下面是一个例子。\n\n```javascript\nasync function getTitle(url) {\n  let response = await fetch(url);\n  let html = await response.text();\n  return html.match(/<title>([\\s\\S]+)<\\/title>/i)[1];\n}\ngetTitle(\'https://tc39.github.io/ecma262/\').then(console.log)\n// "ECMAScript 2017 Language Specification"\n```\n\n上面代码中，函数`getTitle`内部有三个操作：抓取网页、取出文本、匹配页面标题。只有这三个操作全部完成，才会执行`then`方法里面的`console.log`。\n\n### await 命令\n\n正常情况下，`await`命令后面是一个 Promise 对象。如果不是，就返回对应的值。\n\n```javascript\nasync function f() {\n  // 等同于\n  // return 123;\n  return await 123;\n}\n\nf().then(v => console.log(v))\n// 123\n```\n\n上面代码中，`await`命令的参数是数值`123`，这时等同于`return 123`。\n\n`await`命令后面的 Promise 对象如果变为`reject`状态，则`reject`的参数会被`catch`方法的回调函数接收到。\n\n```javascript\nasync function f() {\n  await Promise.reject(\'出错了\');\n}\n\nf()\n.then(v => console.log(v))\n.catch(e => console.log(e))\n// 出错了\n```\n\n注意，上面代码中，`await`语句前面没有`return`，但是`reject`方法的参数依然传入了`catch`方法的回调函数。这里如果在`await`前面加上`return`，效果是一样的。\n\n只要一个`await`语句后面的 Promise 变为`reject`，那么整个`async`函数都会中断执行。\n\n```javascript\nasync function f() {\n  await Promise.reject(\'出错了\');\n  await Promise.resolve(\'hello world\'); // 不会执行\n}\n```\n\n上面代码中，第二个`await`语句是不会执行的，因为第一个`await`语句状态变成了`reject`。\n\n有时，我们希望即使前一个异步操作失败，也不要中断后面的异步操作。这时可以将第一个`await`放在`try...catch`结构里面，这样不管这个异步操作是否成功，第二个`await`都会执行。\n\n```javascript\nasync function f() {\n  try {\n    await Promise.reject(\'出错了\');\n  } catch(e) {\n  }\n  return await Promise.resolve(\'hello world\');\n}\n\nf()\n.then(v => console.log(v))\n// hello world\n```\n\n另一种方法是`await`后面的 Promise 对象再跟一个`catch`方法，处理前面可能出现的错误。\n\n```javascript\nasync function f() {\n  await Promise.reject(\'出错了\')\n    .catch(e => console.log(e));\n  return await Promise.resolve(\'hello world\');\n}\n\nf()\n.then(v => console.log(v))\n// 出错了\n// hello world\n```\n\n### 错误处理\n\n如果`await`后面的异步操作出错，那么等同于`async`函数返回的 Promise 对象被`reject`。\n\n```javascript\nasync function f() {\n  await new Promise(function (resolve, reject) {\n    throw new Error(\'出错了\');\n  });\n}\n\nf()\n.then(v => console.log(v))\n.catch(e => console.log(e))\n// Error：出错了\n```\n\n上面代码中，`async`函数`f`执行后，`await`后面的 Promise 对象会抛出一个错误对象，导致`catch`方法的回调函数被调用，它的参数就是抛出的错误对象。具体的执行机制，可以参考后文的“async 函数的实现原理”。\n\n防止出错的方法，也是将其放在`try...catch`代码块之中。\n\n```javascript\nasync function f() {\n  try {\n    await new Promise(function (resolve, reject) {\n      throw new Error(\'出错了\');\n    });\n  } catch(e) {\n  }\n  return await(\'hello world\');\n}\n```\n\n如果有多个`await`命令，可以统一放在`try...catch`结构中。\n\n```javascript\nasync function main() {\n  try {\n    const val1 = await firstStep();\n    const val2 = await secondStep(val1);\n    const val3 = await thirdStep(val1, val2);\n\n    console.log(\'Final: \', val3);\n  }\n  catch (err) {\n    console.error(err);\n  }\n}\n```\n\n下面的例子使用`try...catch`结构，实现多次重复尝试。\n\n```javascript\nconst superagent = require(\'superagent\');\nconst NUM_RETRIES = 3;\n\nasync function test() {\n  let i;\n  for (i = 0; i < NUM_RETRIES; ++i) {\n    try {\n      await superagent.get(\'http://google.com/this-throws-an-error\');\n      break;\n    } catch(err) {}\n  }\n  console.log(i); // 3\n}\n\ntest();\n```\n\n上面代码中，如果`await`操作成功，就会使用`break`语句退出循环；如果失败，会被`catch`语句捕捉，然后进入下一轮循环。\n\n### 使用注意点\n\n第一点，前面已经说过，`await`命令后面的`Promise`对象，运行结果可能是`rejected`，所以最好把`await`命令放在`try...catch`代码块中。\n\n```javascript\nasync function myFunction() {\n  try {\n    await somethingThatReturnsAPromise();\n  } catch (err) {\n    console.log(err);\n  }\n}\n\n// 另一种写法\n\nasync function myFunction() {\n  await somethingThatReturnsAPromise()\n  .catch(function (err) {\n    console.log(err);\n  });\n}\n```\n\n第二点，多个`await`命令后面的异步操作，如果不存在继发关系，最好让它们同时触发。\n\n```javascript\nlet foo = await getFoo();\nlet bar = await getBar();\n```\n\n上面代码中，`getFoo`和`getBar`是两个独立的异步操作（即互不依赖），被写成继发关系。这样比较耗时，因为只有`getFoo`完成以后，才会执行`getBar`，完全可以让它们同时触发。\n\n```javascript\n// 写法一\nlet [foo, bar] = await Promise.all([getFoo(), getBar()]);\n\n// 写法二\nlet fooPromise = getFoo();\nlet barPromise = getBar();\nlet foo = await fooPromise;\nlet bar = await barPromise;\n```\n\n上面两种写法，`getFoo`和`getBar`都是同时触发，这样就会缩短程序的执行时间。\n\n第三点，`await`命令只能用在`async`函数之中，如果用在普通函数，就会报错。\n\n```javascript\nasync function dbFuc(db) {\n  let docs = [{}, {}, {}];\n\n  // 报错\n  docs.forEach(function (doc) {\n    await db.post(doc);\n  });\n}\n```\n\n上面代码会报错，因为`await`用在普通函数之中了。但是，如果将`forEach`方法的参数改成`async`函数，也有问题。\n\n```javascript\nfunction dbFuc(db) { //这里不需要 async\n  let docs = [{}, {}, {}];\n\n  // 可能得到错误结果\n  docs.forEach(async function (doc) {\n    await db.post(doc);\n  });\n}\n```\n\n上面代码可能不会正常工作，原因是这时三个`db.post`操作将是并发执行，也就是同时执行，而不是继发执行。正确的写法是采用`for`循环。\n\n```javascript\nasync function dbFuc(db) {\n  let docs = [{}, {}, {}];\n\n  for (let doc of docs) {\n    await db.post(doc);\n  }\n}\n```\n\n如果确实希望多个请求并发执行，可以使用`Promise.all`方法。当三个请求都会`resolved`时，下面两种写法效果相同。\n\n```javascript\nasync function dbFuc(db) {\n  let docs = [{}, {}, {}];\n  let promises = docs.map((doc) => db.post(doc));\n\n  let results = await Promise.all(promises);\n  console.log(results);\n}\n\n// 或者使用下面的写法\n\nasync function dbFuc(db) {\n  let docs = [{}, {}, {}];\n  let promises = docs.map((doc) => db.post(doc));\n\n  let results = [];\n  for (let promise of promises) {\n    results.push(await promise);\n  }\n  console.log(results);\n}\n```\n\n目前，[`esm`](https://www.npmjs.com/package/esm)模块加载器支持顶层`await`，即`await`命令可以不放在 async 函数里面，直接使用。\n\n```javascript\n// async 函数的写法\nconst start = async () => {\n  const res = await fetch(\'google.com\');\n  return res.text();\n};\n\nstart().then(console.log);\n\n// 顶层 await 的写法\nconst res = await fetch(\'google.com\');\nconsole.log(await res.text());\n```\n\n上面代码中，第二种写法的脚本必须使用`esm`加载器，才会生效。\n\n## async 函数的实现原理\n\nasync 函数的实现原理，就是将 Generator 函数和自动执行器，包装在一个函数里。\n\n```javascript\nasync function fn(args) {\n  // ...\n}\n\n// 等同于\n\nfunction fn(args) {\n  return spawn(function* () {\n    // ...\n  });\n}\n```\n\n所有的`async`函数都可以写成上面的第二种形式，其中的`spawn`函数就是自动执行器。\n\n下面给出`spawn`函数的实现，基本就是前文自动执行器的翻版。\n\n```javascript\nfunction spawn(genF) {\n  return new Promise(function(resolve, reject) {\n    const gen = genF();\n    function step(nextF) {\n      let next;\n      try {\n        next = nextF();\n      } catch(e) {\n        return reject(e);\n      }\n      if(next.done) {\n        return resolve(next.value);\n      }\n      Promise.resolve(next.value).then(function(v) {\n        step(function() { return gen.next(v); });\n      }, function(e) {\n        step(function() { return gen.throw(e); });\n      });\n    }\n    step(function() { return gen.next(undefined); });\n  });\n}\n```\n\n## 与其他异步处理方法的比较\n\n我们通过一个例子，来看 async 函数与 Promise、Generator 函数的比较。\n\n假定某个 DOM 元素上面，部署了一系列的动画，前一个动画结束，才能开始后一个。如果当中有一个动画出错，就不再往下执行，返回上一个成功执行的动画的返回值。\n\n首先是 Promise 的写法。\n\n```javascript\nfunction chainAnimationsPromise(elem, animations) {\n\n  // 变量ret用来保存上一个动画的返回值\n  let ret = null;\n\n  // 新建一个空的Promise\n  let p = Promise.resolve();\n\n  // 使用then方法，添加所有动画\n  for(let anim of animations) {\n    p = p.then(function(val) {\n      ret = val;\n      return anim(elem);\n    });\n  }\n\n  // 返回一个部署了错误捕捉机制的Promise\n  return p.catch(function(e) {\n    /* 忽略错误，继续执行 */\n  }).then(function() {\n    return ret;\n  });\n\n}\n```\n\n虽然 Promise 的写法比回调函数的写法大大改进，但是一眼看上去，代码完全都是 Promise 的 API（`then`、`catch`等等），操作本身的语义反而不容易看出来。\n\n接着是 Generator 函数的写法。\n\n```javascript\nfunction chainAnimationsGenerator(elem, animations) {\n\n  return spawn(function*() {\n    let ret = null;\n    try {\n      for(let anim of animations) {\n        ret = yield anim(elem);\n      }\n    } catch(e) {\n      /* 忽略错误，继续执行 */\n    }\n    return ret;\n  });\n\n}\n```\n\n上面代码使用 Generator 函数遍历了每个动画，语义比 Promise 写法更清晰，用户定义的操作全部都出现在`spawn`函数的内部。这个写法的问题在于，必须有一个任务运行器，自动执行 Generator 函数，上面代码的`spawn`函数就是自动执行器，它返回一个 Promise 对象，而且必须保证`yield`语句后面的表达式，必须返回一个 Promise。\n\n最后是 async 函数的写法。\n\n```javascript\nasync function chainAnimationsAsync(elem, animations) {\n  let ret = null;\n  try {\n    for(let anim of animations) {\n      ret = await anim(elem);\n    }\n  } catch(e) {\n    /* 忽略错误，继续执行 */\n  }\n  return ret;\n}\n```\n\n可以看到 Async 函数的实现最简洁，最符合语义，几乎没有语义不相关的代码。它将 Generator 写法中的自动执行器，改在语言层面提供，不暴露给用户，因此代码量最少。如果使用 Generator 写法，自动执行器需要用户自己提供。\n\n## 实例：按顺序完成异步操作\n\n实际开发中，经常遇到一组异步操作，需要按照顺序完成。比如，依次远程读取一组 URL，然后按照读取的顺序输出结果。\n\nPromise 的写法如下。\n\n```javascript\nfunction logInOrder(urls) {\n  // 远程读取所有URL\n  const textPromises = urls.map(url => {\n    return fetch(url).then(response => response.text());\n  });\n\n  // 按次序输出\n  textPromises.reduce((chain, textPromise) => {\n    return chain.then(() => textPromise)\n      .then(text => console.log(text));\n  }, Promise.resolve());\n}\n```\n\n上面代码使用`fetch`方法，同时远程读取一组 URL。每个`fetch`操作都返回一个 Promise 对象，放入`textPromises`数组。然后，`reduce`方法依次处理每个 Promise 对象，然后使用`then`，将所有 Promise 对象连起来，因此就可以依次输出结果。\n\n这种写法不太直观，可读性比较差。下面是 async 函数实现。\n\n```javascript\nasync function logInOrder(urls) {\n  for (const url of urls) {\n    const response = await fetch(url);\n    console.log(await response.text());\n  }\n}\n```\n\n上面代码确实大大简化，问题是所有远程操作都是继发。只有前一个 URL 返回结果，才会去读取下一个 URL，这样做效率很差，非常浪费时间。我们需要的是并发发出远程请求。\n\n```javascript\nasync function logInOrder(urls) {\n  // 并发读取远程URL\n  const textPromises = urls.map(async url => {\n    const response = await fetch(url);\n    return response.text();\n  });\n\n  // 按次序输出\n  for (const textPromise of textPromises) {\n    console.log(await textPromise);\n  }\n}\n```\n\n上面代码中，虽然`map`方法的参数是`async`函数，但它是并发执行的，因为只有`async`函数内部是继发执行，外部不受影响。后面的`for..of`循环内部使用了`await`，因此实现了按顺序输出。\n\n## 异步遍历器\n\n《遍历器》一章说过，Iterator 接口是一种数据遍历的协议，只要调用遍历器对象的`next`方法，就会得到一个对象，表示当前遍历指针所在的那个位置的信息。`next`方法返回的对象的结构是`{value, done}`，其中`value`表示当前的数据的值，`done`是一个布尔值，表示遍历是否结束。\n\n这里隐含着一个规定，`next`方法必须是同步的，只要调用就必须立刻返回值。也就是说，一旦执行`next`方法，就必须同步地得到`value`和`done`这两个属性。如果遍历指针正好指向同步操作，当然没有问题，但对于异步操作，就不太合适了。目前的解决方法是，Generator 函数里面的异步操作，返回一个 Thunk 函数或者 Promise 对象，即`value`属性是一个 Thunk 函数或者 Promise 对象，等待以后返回真正的值，而`done`属性则还是同步产生的。\n\nES2018 [引入](https://github.com/tc39/proposal-async-iteration)了”异步遍历器“（Async Iterator），为异步操作提供原生的遍历器接口，即`value`和`done`这两个属性都是异步产生。\n\n### 异步遍历的接口\n\n异步遍历器的最大的语法特点，就是调用遍历器的`next`方法，返回的是一个 Promise 对象。\n\n```javascript\nasyncIterator\n  .next()\n  .then(\n    ({ value, done }) => /* ... */\n  );\n```\n\n上面代码中，`asyncIterator`是一个异步遍历器，调用`next`方法以后，返回一个 Promise 对象。因此，可以使用`then`方法指定，这个 Promise 对象的状态变为`resolve`以后的回调函数。回调函数的参数，则是一个具有`value`和`done`两个属性的对象，这个跟同步遍历器是一样的。\n\n我们知道，一个对象的同步遍历器的接口，部署在`Symbol.iterator`属性上面。同样地，对象的异步遍历器接口，部署在`Symbol.asyncIterator`属性上面。不管是什么样的对象，只要它的`Symbol.asyncIterator`属性有值，就表示应该对它进行异步遍历。\n\n下面是一个异步遍历器的例子。\n\n```javascript\nconst asyncIterable = createAsyncIterable([\'a\', \'b\']);\nconst asyncIterator = asyncIterable[Symbol.asyncIterator]();\n\nasyncIterator\n.next()\n.then(iterResult1 => {\n  console.log(iterResult1); // { value: \'a\', done: false }\n  return asyncIterator.next();\n})\n.then(iterResult2 => {\n  console.log(iterResult2); // { value: \'b\', done: false }\n  return asyncIterator.next();\n})\n.then(iterResult3 => {\n  console.log(iterResult3); // { value: undefined, done: true }\n});\n```\n\n上面代码中，异步遍历器其实返回了两次值。第一次调用的时候，返回一个 Promise 对象；等到 Promise 对象`resolve`了，再返回一个表示当前数据成员信息的对象。这就是说，异步遍历器与同步遍历器最终行为是一致的，只是会先返回 Promise 对象，作为中介。\n\n由于异步遍历器的`next`方法，返回的是一个 Promise 对象。因此，可以把它放在`await`命令后面。\n\n```javascript\nasync function f() {\n  const asyncIterable = createAsyncIterable([\'a\', \'b\']);\n  const asyncIterator = asyncIterable[Symbol.asyncIterator]();\n  console.log(await asyncIterator.next());\n  // { value: \'a\', done: false }\n  console.log(await asyncIterator.next());\n  // { value: \'b\', done: false }\n  console.log(await asyncIterator.next());\n  // { value: undefined, done: true }\n}\n```\n\n上面代码中，`next`方法用`await`处理以后，就不必使用`then`方法了。整个流程已经很接近同步处理了。\n\n注意，异步遍历器的`next`方法是可以连续调用的，不必等到上一步产生的 Promise 对象`resolve`以后再调用。这种情况下，`next`方法会累积起来，自动按照每一步的顺序运行下去。下面是一个例子，把所有的`next`方法放在`Promise.all`方法里面。\n\n```javascript\nconst asyncIterable = createAsyncIterable([\'a\', \'b\']);\nconst asyncIterator = asyncIterable[Symbol.asyncIterator]();\nconst [{value: v1}, {value: v2}] = await Promise.all([\n  asyncIterator.next(), asyncIterator.next()\n]);\n\nconsole.log(v1, v2); // a b\n```\n\n另一种用法是一次性调用所有的`next`方法，然后`await`最后一步操作。\n\n```javascript\nasync function runner() {\n  const writer = openFile(\'someFile.txt\');\n  writer.next(\'hello\');\n  writer.next(\'world\');\n  await writer.return();\n}\n\nrunner();\n```\n\n### for await...of\n\n前面介绍过，`for...of`循环用于遍历同步的 Iterator 接口。新引入的`for await...of`循环，则是用于遍历异步的 Iterator 接口。\n\n```javascript\nasync function f() {\n  for await (const x of createAsyncIterable([\'a\', \'b\'])) {\n    console.log(x);\n  }\n}\n// a\n// b\n```\n\n上面代码中，`createAsyncIterable()`返回一个拥有异步遍历器接口的对象，`for...of`循环自动调用这个对象的异步遍历器的`next`方法，会得到一个 Promise 对象。`await`用来处理这个 Promise 对象，一旦`resolve`，就把得到的值（`x`）传入`for...of`的循环体。\n\n`for await...of`循环的一个用途，是部署了 asyncIterable 操作的异步接口，可以直接放入这个循环。\n\n```javascript\nlet body = \'\';\n\nasync function f() {\n  for await(const data of req) body += data;\n  const parsed = JSON.parse(body);\n  console.log(\'got\', parsed);\n}\n```\n\n上面代码中，`req`是一个 asyncIterable 对象，用来异步读取数据。可以看到，使用`for await...of`循环以后，代码会非常简洁。\n\n如果`next`方法返回的 Promise 对象被`reject`，`for await...of`就会报错，要用`try...catch`捕捉。\n\n```javascript\nasync function () {\n  try {\n    for await (const x of createRejectingIterable()) {\n      console.log(x);\n    }\n  } catch (e) {\n    console.error(e);\n  }\n}\n```\n\n注意，`for await...of`循环也可以用于同步遍历器。\n\n```javascript\n(async function () {\n  for await (const x of [\'a\', \'b\']) {\n    console.log(x);\n  }\n})();\n// a\n// b\n```\n\nNode v10 支持异步遍历器，Stream 就部署了这个接口。下面是读取文件的传统写法与异步遍历器写法的差异。\n\n```javascript\n// 传统写法\nfunction main(inputFilePath) {\n  const readStream = fs.createReadStream(\n    inputFilePath,\n    { encoding: \'utf8\', highWaterMark: 1024 }\n  );\n  readStream.on(\'data\', (chunk) => {\n    console.log(\'>>> \'+chunk);\n  });\n  readStream.on(\'end\', () => {\n    console.log(\'### DONE ###\');\n  });\n}\n\n// 异步遍历器写法\nasync function main(inputFilePath) {\n  const readStream = fs.createReadStream(\n    inputFilePath,\n    { encoding: \'utf8\', highWaterMark: 1024 }\n  );\n\n  for await (const chunk of readStream) {\n    console.log(\'>>> \'+chunk);\n  }\n  console.log(\'### DONE ###\');\n}\n```\n\n### 异步 Generator 函数\n\n就像 Generator 函数返回一个同步遍历器对象一样，异步 Generator 函数的作用，是返回一个异步遍历器对象。\n\n在语法上，异步 Generator 函数就是`async`函数与 Generator 函数的结合。\n\n```javascript\nasync function* gen() {\n  yield \'hello\';\n}\nconst genObj = gen();\ngenObj.next().then(x => console.log(x));\n// { value: \'hello\', done: false }\n```\n\n上面代码中，`gen`是一个异步 Generator 函数，执行后返回一个异步 Iterator 对象。对该对象调用`next`方法，返回一个 Promise 对象。\n\n异步遍历器的设计目的之一，就是 Generator 函数处理同步操作和异步操作时，能够使用同一套接口。\n\n```javascript\n// 同步 Generator 函数\nfunction* map(iterable, func) {\n  const iter = iterable[Symbol.iterator]();\n  while (true) {\n    const {value, done} = iter.next();\n    if (done) break;\n    yield func(value);\n  }\n}\n\n// 异步 Generator 函数\nasync function* map(iterable, func) {\n  const iter = iterable[Symbol.asyncIterator]();\n  while (true) {\n    const {value, done} = await iter.next();\n    if (done) break;\n    yield func(value);\n  }\n}\n```\n\n上面代码中，`map`是一个 Generator 函数，第一个参数是可遍历对象`iterable`，第二个参数是一个回调函数`func`。`map`的作用是将`iterable`每一步返回的值，使用`func`进行处理。上面有两个版本的`map`，前一个处理同步遍历器，后一个处理异步遍历器，可以看到两个版本的写法基本上是一致的。\n\n下面是另一个异步 Generator 函数的例子。\n\n```javascript\nasync function* readLines(path) {\n  let file = await fileOpen(path);\n\n  try {\n    while (!file.EOF) {\n      yield await file.readLine();\n    }\n  } finally {\n    await file.close();\n  }\n}\n```\n\n上面代码中，异步操作前面使用`await`关键字标明，即`await`后面的操作，应该返回 Promise 对象。凡是使用`yield`关键字的地方，就是`next`方法停下来的地方，它后面的表达式的值（即`await file.readLine()`的值），会作为`next()`返回对象的`value`属性，这一点是与同步 Generator 函数一致的。\n\n异步 Generator 函数内部，能够同时使用`await`和`yield`命令。可以这样理解，`await`命令用于将外部操作产生的值输入函数内部，`yield`命令用于将函数内部的值输出。\n\n上面代码定义的异步 Generator 函数的用法如下。\n\n```javascript\n(async function () {\n  for await (const line of readLines(filePath)) {\n    console.log(line);\n  }\n})()\n```\n\n异步 Generator 函数可以与`for await...of`循环结合起来使用。\n\n```javascript\nasync function* prefixLines(asyncIterable) {\n  for await (const line of asyncIterable) {\n    yield \'> \' + line;\n  }\n}\n```\n\n异步 Generator 函数的返回值是一个异步 Iterator，即每次调用它的`next`方法，会返回一个 Promise 对象，也就是说，跟在`yield`命令后面的，应该是一个 Promise 对象。如果像上面那个例子那样，`yield`命令后面是一个字符串，会被自动包装成一个 Promise 对象。\n\n```javascript\nfunction fetchRandom() {\n  const url = \'https://www.random.org/decimal-fractions/\'\n    + \'?num=1&dec=10&col=1&format=plain&rnd=new\';\n  return fetch(url);\n}\n\nasync function* asyncGenerator() {\n  console.log(\'Start\');\n  const result = await fetchRandom(); // (A)\n  yield \'Result: \' + await result.text(); // (B)\n  console.log(\'Done\');\n}\n\nconst ag = asyncGenerator();\nag.next().then(({value, done}) => {\n  console.log(value);\n})\n```\n\n上面代码中，`ag`是`asyncGenerator`函数返回的异步遍历器对象。调用`ag.next()`以后，上面代码的执行顺序如下。\n\n1. `ag.next()`立刻返回一个 Promise 对象。\n2. `asyncGenerator`函数开始执行，打印出`Start`。\n3. `await`命令返回一个 Promise 对象，`asyncGenerator`函数停在这里。\n4. A 处变成 fulfilled 状态，产生的值放入`result`变量，`asyncGenerator`函数继续往下执行。\n5. 函数在 B 处的`yield`暂停执行，一旦`yield`命令取到值，`ag.next()`返回的那个 Promise 对象变成 fulfilled 状态。\n6. `ag.next()`后面的`then`方法指定的回调函数开始执行。该回调函数的参数是一个对象`{value, done}`，其中`value`的值是`yield`命令后面的那个表达式的值，`done`的值是`false`。\n\nA 和 B 两行的作用类似于下面的代码。\n\n```javascript\nreturn new Promise((resolve, reject) => {\n  fetchRandom()\n  .then(result => result.text())\n  .then(result => {\n     resolve({\n       value: \'Result: \' + result,\n       done: false,\n     });\n  });\n});\n```\n\n如果异步 Generator 函数抛出错误，会导致 Promise 对象的状态变为`reject`，然后抛出的错误被`catch`方法捕获。\n\n```javascript\nasync function* asyncGenerator() {\n  throw new Error(\'Problem!\');\n}\n\nasyncGenerator()\n.next()\n.catch(err => console.log(err)); // Error: Problem!\n```\n\n注意，普通的 async 函数返回的是一个 Promise 对象，而异步 Generator 函数返回的是一个异步 Iterator 对象。可以这样理解，async 函数和异步 Generator 函数，是封装异步操作的两种方法，都用来达到同一种目的。区别在于，前者自带执行器，后者通过`for await...of`执行，或者自己编写执行器。下面就是一个异步 Generator 函数的执行器。\n\n```javascript\nasync function takeAsync(asyncIterable, count = Infinity) {\n  const result = [];\n  const iterator = asyncIterable[Symbol.asyncIterator]();\n  while (result.length < count) {\n    const {value, done} = await iterator.next();\n    if (done) break;\n    result.push(value);\n  }\n  return result;\n}\n```\n\n上面代码中，异步 Generator 函数产生的异步遍历器，会通过`while`循环自动执行，每当`await iterator.next()`完成，就会进入下一轮循环。一旦`done`属性变为`true`，就会跳出循环，异步遍历器执行结束。\n\n下面是这个自动执行器的一个使用实例。\n\n```javascript\nasync function f() {\n  async function* gen() {\n    yield \'a\';\n    yield \'b\';\n    yield \'c\';\n  }\n\n  return await takeAsync(gen());\n}\n\nf().then(function (result) {\n  console.log(result); // [\'a\', \'b\', \'c\']\n})\n```\n\n异步 Generator 函数出现以后，JavaScript 就有了四种函数形式：普通函数、async 函数、Generator 函数和异步 Generator 函数。请注意区分每种函数的不同之处。基本上，如果是一系列按照顺序执行的异步操作（比如读取文件，然后写入新内容，再存入硬盘），可以使用 async 函数；如果是一系列产生相同数据结构的异步操作（比如一行一行读取文件），可以使用异步 Generator 函数。\n\n异步 Generator 函数也可以通过`next`方法的参数，接收外部传入的数据。\n\n```javascript\nconst writer = openFile(\'someFile.txt\');\nwriter.next(\'hello\'); // 立即执行\nwriter.next(\'world\'); // 立即执行\nawait writer.return(); // 等待写入结束\n```\n\n上面代码中，`openFile`是一个异步 Generator 函数。`next`方法的参数，向该函数内部的操作传入数据。每次`next`方法都是同步执行的，最后的`await`命令用于等待整个写入操作结束。\n\n最后，同步的数据结构，也可以使用异步 Generator 函数。\n\n```javascript\nasync function* createAsyncIterable(syncIterable) {\n  for (const elem of syncIterable) {\n    yield elem;\n  }\n}\n```\n\n上面代码中，由于没有异步操作，所以也就没有使用`await`关键字。\n\n### yield* 语句\n\n`yield*`语句也可以跟一个异步遍历器。\n\n```javascript\nasync function* gen1() {\n  yield \'a\';\n  yield \'b\';\n  return 2;\n}\n\nasync function* gen2() {\n  // result 最终会等于 2\n  const result = yield* gen1();\n}\n```\n\n上面代码中，`gen2`函数里面的`result`变量，最后的值是`2`。\n\n与同步 Generator 函数一样，`for await...of`循环会展开`yield*`。\n\n```javascript\n(async function () {\n  for await (const x of gen2()) {\n    console.log(x);\n  }\n})();\n// a\n// b\n```\n\n\n\n# Class 的基本语法\n\n1. [简介](http://es6.ruanyifeng.com/#docs/class#%E7%AE%80%E4%BB%8B)\n2. [严格模式](http://es6.ruanyifeng.com/#docs/class#%E4%B8%A5%E6%A0%BC%E6%A8%A1%E5%BC%8F)\n3. [constructor 方法](http://es6.ruanyifeng.com/#docs/class#constructor%20%E6%96%B9%E6%B3%95)\n4. [类的实例对象](http://es6.ruanyifeng.com/#docs/class#%E7%B1%BB%E7%9A%84%E5%AE%9E%E4%BE%8B%E5%AF%B9%E8%B1%A1)\n5. [Class 表达式](http://es6.ruanyifeng.com/#docs/class#Class%20%E8%A1%A8%E8%BE%BE%E5%BC%8F)\n6. [不存在变量提升](http://es6.ruanyifeng.com/#docs/class#%E4%B8%8D%E5%AD%98%E5%9C%A8%E5%8F%98%E9%87%8F%E6%8F%90%E5%8D%87)\n7. [私有方法和私有属性](http://es6.ruanyifeng.com/#docs/class#%E7%A7%81%E6%9C%89%E6%96%B9%E6%B3%95%E5%92%8C%E7%A7%81%E6%9C%89%E5%B1%9E%E6%80%A7)\n8. [this 的指向](http://es6.ruanyifeng.com/#docs/class#this%20%E7%9A%84%E6%8C%87%E5%90%91)\n9. [name 属性](http://es6.ruanyifeng.com/#docs/class#name%20%E5%B1%9E%E6%80%A7)\n10. [Class 的取值函数（getter）和存值函数（setter）](http://es6.ruanyifeng.com/#docs/class#Class%20%E7%9A%84%E5%8F%96%E5%80%BC%E5%87%BD%E6%95%B0%EF%BC%88getter%EF%BC%89%E5%92%8C%E5%AD%98%E5%80%BC%E5%87%BD%E6%95%B0%EF%BC%88setter%EF%BC%89)\n11. [Class 的 Generator 方法](http://es6.ruanyifeng.com/#docs/class#Class%20%E7%9A%84%20Generator%20%E6%96%B9%E6%B3%95)\n12. [Class 的静态方法](http://es6.ruanyifeng.com/#docs/class#Class%20%E7%9A%84%E9%9D%99%E6%80%81%E6%96%B9%E6%B3%95)\n13. [Class 的静态属性和实例属性](http://es6.ruanyifeng.com/#docs/class#Class%20%E7%9A%84%E9%9D%99%E6%80%81%E5%B1%9E%E6%80%A7%E5%92%8C%E5%AE%9E%E4%BE%8B%E5%B1%9E%E6%80%A7)\n14. [new.target 属性](http://es6.ruanyifeng.com/#docs/class#new.target%20%E5%B1%9E%E6%80%A7)\n\n## 简介\n\nJavaScript 语言中，生成实例对象的传统方法是通过构造函数。下面是一个例子。\n\n```javascript\nfunction Point(x, y) {\n  this.x = x;\n  this.y = y;\n}\n\nPoint.prototype.toString = function () {\n  return \'(\' + this.x + \', \' + this.y + \')\';\n};\n\nvar p = new Point(1, 2);\n```\n\n上面这种写法跟传统的面向对象语言（比如 C++ 和 Java）差异很大，很容易让新学习这门语言的程序员感到困惑。\n\nES6 提供了更接近传统语言的写法，引入了 Class（类）这个概念，作为对象的模板。通过`class`关键字，可以定义类。\n\n基本上，ES6 的`class`可以看作只是一个语法糖，它的绝大部分功能，ES5 都可以做到，新的`class`写法只是让对象原型的写法更加清晰、更像面向对象编程的语法而已。上面的代码用 ES6 的`class`改写，就是下面这样。\n\n```javascript\n//定义类\nclass Point {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  toString() {\n    return \'(\' + this.x + \', \' + this.y + \')\';\n  }\n}\n```\n\n上面代码定义了一个“类”，可以看到里面有一个`constructor`方法，这就是构造方法，而`this`关键字则代表实例对象。也就是说，ES5 的构造函数`Point`，对应 ES6 的`Point`类的构造方法。\n\n`Point`类除了构造方法，还定义了一个`toString`方法。注意，定义“类”的方法的时候，前面不需要加上`function`这个关键字，直接把函数定义放进去了就可以了。另外，方法之间不需要逗号分隔，加了会报错。\n\nES6 的类，完全可以看作构造函数的另一种写法。\n\n```javascript\nclass Point {\n  // ...\n}\n\ntypeof Point // "function"\nPoint === Point.prototype.constructor // true\n```\n\n上面代码表明，类的数据类型就是函数，类本身就指向构造函数。\n\n使用的时候，也是直接对类使用`new`命令，跟构造函数的用法完全一致。\n\n```javascript\nclass Bar {\n  doStuff() {\n    console.log(\'stuff\');\n  }\n}\n\nvar b = new Bar();\nb.doStuff() // "stuff"\n```\n\n构造函数的`prototype`属性，在 ES6 的“类”上面继续存在。事实上，类的所有方法都定义在类的`prototype`属性上面。\n\n```javascript\nclass Point {\n  constructor() {\n    // ...\n  }\n\n  toString() {\n    // ...\n  }\n\n  toValue() {\n    // ...\n  }\n}\n\n// 等同于\n\nPoint.prototype = {\n  constructor() {},\n  toString() {},\n  toValue() {},\n};\n```\n\n在类的实例上面调用方法，其实就是调用原型上的方法。\n\n```javascript\nclass B {}\nlet b = new B();\n\nb.constructor === B.prototype.constructor // true\n```\n\n上面代码中，`b`是`B`类的实例，它的`constructor`方法就是`B`类原型的`constructor`方法。\n\n由于类的方法都定义在`prototype`对象上面，所以类的新方法可以添加在`prototype`对象上面。`Object.assign`方法可以很方便地一次向类添加多个方法。\n\n```javascript\nclass Point {\n  constructor(){\n    // ...\n  }\n}\n\nObject.assign(Point.prototype, {\n  toString(){},\n  toValue(){}\n});\n```\n\n`prototype`对象的`constructor`属性，直接指向“类”的本身，这与 ES5 的行为是一致的。\n\n```javascript\nPoint.prototype.constructor === Point // true\n```\n\n另外，类的内部所有定义的方法，都是不可枚举的（non-enumerable）。\n\n```javascript\nclass Point {\n  constructor(x, y) {\n    // ...\n  }\n\n  toString() {\n    // ...\n  }\n}\n\nObject.keys(Point.prototype)\n// []\nObject.getOwnPropertyNames(Point.prototype)\n// ["constructor","toString"]\n```\n\n上面代码中，`toString`方法是`Point`类内部定义的方法，它是不可枚举的。这一点与 ES5 的行为不一致。\n\n```javascript\nvar Point = function (x, y) {\n  // ...\n};\n\nPoint.prototype.toString = function() {\n  // ...\n};\n\nObject.keys(Point.prototype)\n// ["toString"]\nObject.getOwnPropertyNames(Point.prototype)\n// ["constructor","toString"]\n```\n\n上面代码采用 ES5 的写法，`toString`方法就是可枚举的。\n\n类的属性名，可以采用表达式。\n\n```javascript\nlet methodName = \'getArea\';\n\nclass Square {\n  constructor(length) {\n    // ...\n  }\n\n  [methodName]() {\n    // ...\n  }\n}\n```\n\n上面代码中，`Square`类的方法名`getArea`，是从表达式得到的。\n\n## 严格模式\n\n类和模块的内部，默认就是严格模式，所以不需要使用`use strict`指定运行模式。只要你的代码写在类或模块之中，就只有严格模式可用。\n\n考虑到未来所有的代码，其实都是运行在模块之中，所以 ES6 实际上把整个语言升级到了严格模式。\n\n## constructor 方法\n\n`constructor`方法是类的默认方法，通过`new`命令生成对象实例时，自动调用该方法。一个类必须有`constructor`方法，如果没有显式定义，一个空的`constructor`方法会被默认添加。\n\n```javascript\nclass Point {\n}\n\n// 等同于\nclass Point {\n  constructor() {}\n}\n```\n\n上面代码中，定义了一个空的类`Point`，JavaScript 引擎会自动为它添加一个空的`constructor`方法。\n\n`constructor`方法默认返回实例对象（即`this`），完全可以指定返回另外一个对象。\n\n```javascript\nclass Foo {\n  constructor() {\n    return Object.create(null);\n  }\n}\n\nnew Foo() instanceof Foo\n// false\n```\n\n上面代码中，`constructor`函数返回一个全新的对象，结果导致实例对象不是`Foo`类的实例。\n\n类必须使用`new`调用，否则会报错。这是它跟普通构造函数的一个主要区别，后者不用`new`也可以执行。\n\n```javascript\nclass Foo {\n  constructor() {\n    return Object.create(null);\n  }\n}\n\nFoo()\n// TypeError: Class constructor Foo cannot be invoked without \'new\'\n```\n\n## 类的实例对象\n\n生成类的实例对象的写法，与 ES5 完全一样，也是使用`new`命令。前面说过，如果忘记加上`new`，像函数那样调用`Class`，将会报错。\n\n```javascript\nclass Point {\n  // ...\n}\n\n// 报错\nvar point = Point(2, 3);\n\n// 正确\nvar point = new Point(2, 3);\n```\n\n与 ES5 一样，实例的属性除非显式定义在其本身（即定义在`this`对象上），否则都是定义在原型上（即定义在`class`上）。\n\n```javascript\n//定义类\nclass Point {\n\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  toString() {\n    return \'(\' + this.x + \', \' + this.y + \')\';\n  }\n\n}\n\nvar point = new Point(2, 3);\n\npoint.toString() // (2, 3)\n\npoint.hasOwnProperty(\'x\') // true\npoint.hasOwnProperty(\'y\') // true\npoint.hasOwnProperty(\'toString\') // false\npoint.__proto__.hasOwnProperty(\'toString\') // true\n```\n\n上面代码中，`x`和`y`都是实例对象`point`自身的属性（因为定义在`this`变量上），所以`hasOwnProperty`方法返回`true`，而`toString`是原型对象的属性（因为定义在`Point`类上），所以`hasOwnProperty`方法返回`false`。这些都与 ES5 的行为保持一致。\n\n与 ES5 一样，类的所有实例共享一个原型对象。\n\n```javascript\nvar p1 = new Point(2,3);\nvar p2 = new Point(3,2);\n\np1.__proto__ === p2.__proto__\n//true\n```\n\n上面代码中，`p1`和`p2`都是`Point`的实例，它们的原型都是`Point.prototype`，所以`__proto__`属性是相等的。\n\n这也意味着，可以通过实例的`__proto__`属性为“类”添加方法。\n\n> `__proto__` 并不是语言本身的特性，这是各大厂商具体实现时添加的私有属性，虽然目前很多现代浏览器的 JS 引擎中都提供了这个私有属性，但依旧不建议在生产中使用该属性，避免对环境产生依赖。生产环境中，我们可以使用 `Object.getPrototypeOf` 方法来获取实例对象的原型，然后再来为原型添加方法/属性。\n\n```javascript\nvar p1 = new Point(2,3);\nvar p2 = new Point(3,2);\n\np1.__proto__.printName = function () { return \'Oops\' };\n\np1.printName() // "Oops"\np2.printName() // "Oops"\n\nvar p3 = new Point(4,2);\np3.printName() // "Oops"\n```\n\n上面代码在`p1`的原型上添加了一个`printName`方法，由于`p1`的原型就是`p2`的原型，因此`p2`也可以调用这个方法。而且，此后新建的实例`p3`也可以调用这个方法。这意味着，使用实例的`__proto__`属性改写原型，必须相当谨慎，不推荐使用，因为这会改变“类”的原始定义，影响到所有实例。\n\n## Class 表达式\n\n与函数一样，类也可以使用表达式的形式定义。\n\n```javascript\nconst MyClass = class Me {\n  getClassName() {\n    return Me.name;\n  }\n};\n```\n\n上面代码使用表达式定义了一个类。需要注意的是，这个类的名字是`MyClass`而不是`Me`，`Me`只在 Class 的内部代码可用，指代当前类。\n\n```javascript\nlet inst = new MyClass();\ninst.getClassName() // Me\nMe.name // ReferenceError: Me is not defined\n```\n\n上面代码表示，`Me`只在 Class 内部有定义。\n\n如果类的内部没用到的话，可以省略`Me`，也就是可以写成下面的形式。\n\n```javascript\nconst MyClass = class { /* ... */ };\n```\n\n采用 Class 表达式，可以写出立即执行的 Class。\n\n```javascript\nlet person = new class {\n  constructor(name) {\n    this.name = name;\n  }\n\n  sayName() {\n    console.log(this.name);\n  }\n}(\'张三\');\n\nperson.sayName(); // "张三"\n```\n\n上面代码中，`person`是一个立即执行的类的实例。\n\n## 不存在变量提升\n\n类不存在变量提升（hoist），这一点与 ES5 完全不同。\n\n```javascript\nnew Foo(); // ReferenceError\nclass Foo {}\n```\n\n上面代码中，`Foo`类使用在前，定义在后，这样会报错，因为 ES6 不会把类的声明提升到代码头部。这种规定的原因与下文要提到的继承有关，必须保证子类在父类之后定义。\n\n```javascript\n{\n  let Foo = class {};\n  class Bar extends Foo {\n  }\n}\n```\n\n上面的代码不会报错，因为`Bar`继承`Foo`的时候，`Foo`已经有定义了。但是，如果存在`class`的提升，上面代码就会报错，因为`class`会被提升到代码头部，而`let`命令是不提升的，所以导致`Bar`继承`Foo`的时候，`Foo`还没有定义。\n\n## 私有方法和私有属性\n\n### 现有的方法\n\n私有方法是常见需求，但 ES6 不提供，只能通过变通方法模拟实现。\n\n一种做法是在命名上加以区别。\n\n```javascript\nclass Widget {\n\n  // 公有方法\n  foo (baz) {\n    this._bar(baz);\n  }\n\n  // 私有方法\n  _bar(baz) {\n    return this.snaf = baz;\n  }\n\n  // ...\n}\n```\n\n上面代码中，`_bar`方法前面的下划线，表示这是一个只限于内部使用的私有方法。但是，这种命名是不保险的，在类的外部，还是可以调用到这个方法。\n\n另一种方法就是索性将私有方法移出模块，因为模块内部的所有方法都是对外可见的。\n\n```javascript\nclass Widget {\n  foo (baz) {\n    bar.call(this, baz);\n  }\n\n  // ...\n}\n\nfunction bar(baz) {\n  return this.snaf = baz;\n}\n```\n\n上面代码中，`foo`是公有方法，内部调用了`bar.call(this, baz)`。这使得`bar`实际上成为了当前模块的私有方法。\n\n还有一种方法是利用`Symbol`值的唯一性，将私有方法的名字命名为一个`Symbol`值。\n\n```javascript\nconst bar = Symbol(\'bar\');\nconst snaf = Symbol(\'snaf\');\n\nexport default class myClass{\n\n  // 公有方法\n  foo(baz) {\n    this[bar](baz);\n  }\n\n  // 私有方法\n  [bar](baz) {\n    return this[snaf] = baz;\n  }\n\n  // ...\n};\n```\n\n上面代码中，`bar`和`snaf`都是`Symbol`值，导致第三方无法获取到它们，因此达到了私有方法和私有属性的效果。\n\n### 私有属性的提案\n\n目前，有一个[提案](https://github.com/tc39/proposal-private-methods)，为`class`加了私有属性。方法是在属性名之前，使用`#`表示。\n\n```javascript\nclass Point {\n  #x;\n\n  constructor(x = 0) {\n    #x = +x; // 写成 this.#x 亦可\n  }\n\n  get x() { return #x }\n  set x(value) { #x = +value }\n}\n```\n\n上面代码中，`#x`就是私有属性，在`Point`类之外是读取不到这个属性的。由于井号`#`是属性名的一部分，使用时必须带有`#`一起使用，所以`#x`和`x`是两个不同的属性。\n\n私有属性可以指定初始值，在构造函数执行时进行初始化。\n\n```javascript\nclass Point {\n  #x = 0;\n  constructor() {\n    #x; // 0\n  }\n}\n```\n\n之所以要引入一个新的前缀`#`表示私有属性，而没有采用`private`关键字，是因为 JavaScript 是一门动态语言，没有类型声明，使用独立的符号似乎是唯一的比较方便可靠的方法，能够准确地区分一种属性是否为私有属性。另外，Ruby 语言使用`@`表示私有属性，ES6 没有用这个符号而使用`#`，是因为`@`已经被留给了 Decorator。\n\n这种写法不仅可以写私有属性，还可以用来写私有方法。\n\n```javascript\nclass Foo {\n  #a;\n  #b;\n  #sum() { return #a + #b; }\n  printSum() { console.log(#sum()); }\n  constructor(a, b) { #a = a; #b = b; }\n}\n```\n\n上面代码中，`#sum()`就是一个私有方法。\n\n另外，私有属性也可以设置 getter 和 setter 方法。\n\n```javascript\nclass Counter {\n  #xValue = 0;\n\n  get #x() { return #xValue; }\n  set #x(value) {\n    this.#xValue = value;\n  }\n\n  constructor() {\n    super();\n    // ...\n  }\n}\n```\n\n上面代码中，`#x`是一个私有属性，它的读写都通过`get #x()`和`set #x()`来完成。\n\n私有属性不限于从`this`引用，类的实例也可以引用私有属性。\n\n```javascript\nclass Foo {\n  #privateValue = 42;\n  static getPrivateValue(foo) {\n    return foo.#privateValue;\n  }\n}\n\nFoo.getPrivateValue(new Foo()); // 42\n```\n\n上面代码允许从实例`foo`上面引用私有属性。\n\n但是，直接从实例上引用私有属性是不可以的，只能在类的定义中引用。\n\n```javascript\nclass Foo {\n  #bar;\n}\nlet foo = new Foo();\nfoo.#bar; // 报错\n```\n\n上面代码直接从实例引用私有属性，导致报错。\n\n## this 的指向\n\n类的方法内部如果含有`this`，它默认指向类的实例。但是，必须非常小心，一旦单独使用该方法，很可能报错。\n\n```javascript\nclass Logger {\n  printName(name = \'there\') {\n    this.print(`Hello ${name}`);\n  }\n\n  print(text) {\n    console.log(text);\n  }\n}\n\nconst logger = new Logger();\nconst { printName } = logger;\nprintName(); // TypeError: Cannot read property \'print\' of undefined\n```\n\n上面代码中，`printName`方法中的`this`，默认指向`Logger`类的实例。但是，如果将这个方法提取出来单独使用，`this`会指向该方法运行时所在的环境，因为找不到`print`方法而导致报错。\n\n一个比较简单的解决方法是，在构造方法中绑定`this`，这样就不会找不到`print`方法了。\n\n```javascript\nclass Logger {\n  constructor() {\n    this.printName = this.printName.bind(this);\n  }\n\n  // ...\n}\n```\n\n另一种解决方法是使用箭头函数。\n\n```javascript\nclass Logger {\n  constructor() {\n    this.printName = (name = \'there\') => {\n      this.print(`Hello ${name}`);\n    };\n  }\n\n  // ...\n}\n```\n\n还有一种解决方法是使用`Proxy`，获取方法的时候，自动绑定`this`。\n\n```javascript\nfunction selfish (target) {\n  const cache = new WeakMap();\n  const handler = {\n    get (target, key) {\n      const value = Reflect.get(target, key);\n      if (typeof value !== \'function\') {\n        return value;\n      }\n      if (!cache.has(value)) {\n        cache.set(value, value.bind(target));\n      }\n      return cache.get(value);\n    }\n  };\n  const proxy = new Proxy(target, handler);\n  return proxy;\n}\n\nconst logger = selfish(new Logger());\n```\n\n## name 属性\n\n由于本质上，ES6 的类只是 ES5 的构造函数的一层包装，所以函数的许多特性都被`Class`继承，包括`name`属性。\n\n```javascript\nclass Point {}\nPoint.name // "Point"\n```\n\n`name`属性总是返回紧跟在`class`关键字后面的类名。\n\n## Class 的取值函数（getter）和存值函数（setter）\n\n与 ES5 一样，在“类”的内部可以使用`get`和`set`关键字，对某个属性设置存值函数和取值函数，拦截该属性的存取行为。\n\n```javascript\nclass MyClass {\n  constructor() {\n    // ...\n  }\n  get prop() {\n    return \'getter\';\n  }\n  set prop(value) {\n    console.log(\'setter: \'+value);\n  }\n}\n\nlet inst = new MyClass();\n\ninst.prop = 123;\n// setter: 123\n\ninst.prop\n// \'getter\'\n```\n\n上面代码中，`prop`属性有对应的存值函数和取值函数，因此赋值和读取行为都被自定义了。\n\n存值函数和取值函数是设置在属性的 Descriptor 对象上的。\n\n```javascript\nclass CustomHTMLElement {\n  constructor(element) {\n    this.element = element;\n  }\n\n  get html() {\n    return this.element.innerHTML;\n  }\n\n  set html(value) {\n    this.element.innerHTML = value;\n  }\n}\n\nvar descriptor = Object.getOwnPropertyDescriptor(\n  CustomHTMLElement.prototype, "html"\n);\n\n"get" in descriptor  // true\n"set" in descriptor  // true\n```\n\n上面代码中，存值函数和取值函数是定义在`html`属性的描述对象上面，这与 ES5 完全一致。\n\n## Class 的 Generator 方法\n\n如果某个方法之前加上星号（`*`），就表示该方法是一个 Generator 函数。\n\n```javascript\nclass Foo {\n  constructor(...args) {\n    this.args = args;\n  }\n  * [Symbol.iterator]() {\n    for (let arg of this.args) {\n      yield arg;\n    }\n  }\n}\n\nfor (let x of new Foo(\'hello\', \'world\')) {\n  console.log(x);\n}\n// hello\n// world\n```\n\n上面代码中，`Foo`类的`Symbol.iterator`方法前有一个星号，表示该方法是一个 Generator 函数。`Symbol.iterator`方法返回一个`Foo`类的默认遍历器，`for...of`循环会自动调用这个遍历器。\n\n## Class 的静态方法\n\n类相当于实例的原型，所有在类中定义的方法，都会被实例继承。如果在一个方法前，加上`static`关键字，就表示该方法不会被实例继承，而是直接通过类来调用，这就称为“静态方法”。\n\n```javascript\nclass Foo {\n  static classMethod() {\n    return \'hello\';\n  }\n}\n\nFoo.classMethod() // \'hello\'\n\nvar foo = new Foo();\nfoo.classMethod()\n// TypeError: foo.classMethod is not a function\n```\n\n上面代码中，`Foo`类的`classMethod`方法前有`static`关键字，表明该方法是一个静态方法，可以直接在`Foo`类上调用（`Foo.classMethod()`），而不是在`Foo`类的实例上调用。如果在实例上调用静态方法，会抛出一个错误，表示不存在该方法。\n\n注意，如果静态方法包含`this`关键字，这个`this`指的是类，而不是实例。\n\n```javascript\nclass Foo {\n  static bar () {\n    this.baz();\n  }\n  static baz () {\n    console.log(\'hello\');\n  }\n  baz () {\n    console.log(\'world\');\n  }\n}\n\nFoo.bar() // hello\n```\n\n上面代码中，静态方法`bar`调用了`this.baz`，这里的`this`指的是`Foo`类，而不是`Foo`的实例，等同于调用`Foo.baz`。另外，从这个例子还可以看出，静态方法可以与非静态方法重名。\n\n父类的静态方法，可以被子类继承。\n\n```javascript\nclass Foo {\n  static classMethod() {\n    return \'hello\';\n  }\n}\n\nclass Bar extends Foo {\n}\n\nBar.classMethod() // \'hello\'\n```\n\n上面代码中，父类`Foo`有一个静态方法，子类`Bar`可以调用这个方法。\n\n静态方法也是可以从`super`对象上调用的。\n\n```javascript\nclass Foo {\n  static classMethod() {\n    return \'hello\';\n  }\n}\n\nclass Bar extends Foo {\n  static classMethod() {\n    return super.classMethod() + \', too\';\n  }\n}\n\nBar.classMethod() // "hello, too"\n```\n\n## Class 的静态属性和实例属性\n\n静态属性指的是 Class 本身的属性，即`Class.propName`，而不是定义在实例对象（`this`）上的属性。\n\n```javascript\nclass Foo {\n}\n\nFoo.prop = 1;\nFoo.prop // 1\n```\n\n上面的写法为`Foo`类定义了一个静态属性`prop`。\n\n目前，只有这种写法可行，因为 ES6 明确规定，Class 内部只有静态方法，没有静态属性。\n\n```javascript\n// 以下两种写法都无效\nclass Foo {\n  // 写法一\n  prop: 2\n\n  // 写法二\n  static prop: 2\n}\n\nFoo.prop // undefined\n```\n\n目前有一个静态属性的[提案](https://github.com/tc39/proposal-class-fields)，对实例属性和静态属性都规定了新的写法。\n\n（1）类的实例属性\n\n类的实例属性可以用等式，写入类的定义之中。\n\n```javascript\nclass MyClass {\n  myProp = 42;\n\n  constructor() {\n    console.log(this.myProp); // 42\n  }\n}\n```\n\n上面代码中，`myProp`就是`MyClass`的实例属性。在`MyClass`的实例上，可以读取这个属性。\n\n以前，我们定义实例属性，只能写在类的`constructor`方法里面。\n\n```javascript\nclass ReactCounter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0\n    };\n  }\n}\n```\n\n上面代码中，构造方法`constructor`里面，定义了`this.state`属性。\n\n有了新的写法以后，可以不在`constructor`方法里面定义。\n\n```javascript\nclass ReactCounter extends React.Component {\n  state = {\n    count: 0\n  };\n}\n```\n\n这种写法比以前更清晰。\n\n为了可读性的目的，对于那些在`constructor`里面已经定义的实例属性，新写法允许直接列出。\n\n```javascript\nclass ReactCounter extends React.Component {\n  state;\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0\n    };\n  }\n}\n```\n\n（2）类的静态属性\n\n类的静态属性只要在上面的实例属性写法前面，加上`static`关键字就可以了。\n\n```javascript\nclass MyClass {\n  static myStaticProp = 42;\n\n  constructor() {\n    console.log(MyClass.myStaticProp); // 42\n  }\n}\n```\n\n同样的，这个新写法大大方便了静态属性的表达。\n\n```javascript\n// 老写法\nclass Foo {\n  // ...\n}\nFoo.prop = 1;\n\n// 新写法\nclass Foo {\n  static prop = 1;\n}\n```\n\n上面代码中，老写法的静态属性定义在类的外部。整个类生成以后，再生成静态属性。这样让人很容易忽略这个静态属性，也不符合相关代码应该放在一起的代码组织原则。另外，新写法是显式声明（declarative），而不是赋值处理，语义更好。\n\n## new.target 属性\n\n`new`是从构造函数生成实例对象的命令。ES6 为`new`命令引入了一个`new.target`属性，该属性一般用在构造函数之中，返回`new`命令作用于的那个构造函数。如果构造函数不是通过`new`命令调用的，`new.target`会返回`undefined`，因此这个属性可以用来确定构造函数是怎么调用的。\n\n```javascript\nfunction Person(name) {\n  if (new.target !== undefined) {\n    this.name = name;\n  } else {\n    throw new Error(\'必须使用 new 命令生成实例\');\n  }\n}\n\n// 另一种写法\nfunction Person(name) {\n  if (new.target === Person) {\n    this.name = name;\n  } else {\n    throw new Error(\'必须使用 new 命令生成实例\');\n  }\n}\n\nvar person = new Person(\'张三\'); // 正确\nvar notAPerson = Person.call(person, \'张三\');  // 报错\n```\n\n上面代码确保构造函数只能通过`new`命令调用。\n\nClass 内部调用`new.target`，返回当前 Class。\n\n```javascript\nclass Rectangle {\n  constructor(length, width) {\n    console.log(new.target === Rectangle);\n    this.length = length;\n    this.width = width;\n  }\n}\n\nvar obj = new Rectangle(3, 4); // 输出 true\n```\n\n需要注意的是，子类继承父类时，`new.target`会返回子类。\n\n```javascript\nclass Rectangle {\n  constructor(length, width) {\n    console.log(new.target === Rectangle);\n    // ...\n  }\n}\n\nclass Square extends Rectangle {\n  constructor(length) {\n    super(length, length);\n  }\n}\n\nvar obj = new Square(3); // 输出 false\n```\n\n上面代码中，`new.target`会返回子类。\n\n利用这个特点，可以写出不能独立使用、必须继承后才能使用的类。\n\n```javascript\nclass Shape {\n  constructor() {\n    if (new.target === Shape) {\n      throw new Error(\'本类不能实例化\');\n    }\n  }\n}\n\nclass Rectangle extends Shape {\n  constructor(length, width) {\n    super();\n    // ...\n  }\n}\n\nvar x = new Shape();  // 报错\nvar y = new Rectangle(3, 4);  // 正确\n```\n\n上面代码中，`Shape`类不能被实例化，只能用于继承。\n\n注意，在函数外部，使用`new.target`会报错。\n\n\n\n# Class 的继承\n\n1. [简介](http://es6.ruanyifeng.com/#docs/class-extends#%E7%AE%80%E4%BB%8B)\n2. [Object.getPrototypeOf()](http://es6.ruanyifeng.com/#docs/class-extends#Object.getPrototypeOf())\n3. [super 关键字](http://es6.ruanyifeng.com/#docs/class-extends#super%20%E5%85%B3%E9%94%AE%E5%AD%97)\n4. [类的 prototype 属性和__proto__属性](http://es6.ruanyifeng.com/#docs/class-extends#%E7%B1%BB%E7%9A%84%20prototype%20%E5%B1%9E%E6%80%A7%E5%92%8C__proto__%E5%B1%9E%E6%80%A7)\n5. [原生构造函数的继承](http://es6.ruanyifeng.com/#docs/class-extends#%E5%8E%9F%E7%94%9F%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%E7%9A%84%E7%BB%A7%E6%89%BF)\n6. [Mixin 模式的实现](http://es6.ruanyifeng.com/#docs/class-extends#Mixin%20%E6%A8%A1%E5%BC%8F%E7%9A%84%E5%AE%9E%E7%8E%B0)\n\n## 简介\n\nClass 可以通过`extends`关键字实现继承，这比 ES5 的通过修改原型链实现继承，要清晰和方便很多。\n\n```javascript\nclass Point {\n}\n\nclass ColorPoint extends Point {\n}\n```\n\n上面代码定义了一个`ColorPoint`类，该类通过`extends`关键字，继承了`Point`类的所有属性和方法。但是由于没有部署任何代码，所以这两个类完全一样，等于复制了一个`Point`类。下面，我们在`ColorPoint`内部加上代码。\n\n```javascript\nclass ColorPoint extends Point {\n  constructor(x, y, color) {\n    super(x, y); // 调用父类的constructor(x, y)\n    this.color = color;\n  }\n\n  toString() {\n    return this.color + \' \' + super.toString(); // 调用父类的toString()\n  }\n}\n```\n\n上面代码中，`constructor`方法和`toString`方法之中，都出现了`super`关键字，它在这里表示父类的构造函数，用来新建父类的`this`对象。\n\n子类必须在`constructor`方法中调用`super`方法，否则新建实例时会报错。这是因为子类自己的`this`对象，必须先通过父类的构造函数完成塑造，得到与父类同样的实例属性和方法，然后再对其进行加工，加上子类自己的实例属性和方法。如果不调用`super`方法，子类就得不到`this`对象。\n\n```javascript\nclass Point { /* ... */ }\n\nclass ColorPoint extends Point {\n  constructor() {\n  }\n}\n\nlet cp = new ColorPoint(); // ReferenceError\n```\n\n上面代码中，`ColorPoint`继承了父类`Point`，但是它的构造函数没有调用`super`方法，导致新建实例时报错。\n\nES5 的继承，实质是先创造子类的实例对象`this`，然后再将父类的方法添加到`this`上面（`Parent.apply(this)`）。ES6 的继承机制完全不同，实质是先将父类实例对象的属性和方法，加到`this`上面（所以必须先调用`super`方法），然后再用子类的构造函数修改`this`。\n\n如果子类没有定义`constructor`方法，这个方法会被默认添加，代码如下。也就是说，不管有没有显式定义，任何一个子类都有`constructor`方法。\n\n```javascript\nclass ColorPoint extends Point {\n}\n\n// 等同于\nclass ColorPoint extends Point {\n  constructor(...args) {\n    super(...args);\n  }\n}\n```\n\n另一个需要注意的地方是，在子类的构造函数中，只有调用`super`之后，才可以使用`this`关键字，否则会报错。这是因为子类实例的构建，基于父类实例，只有`super`方法才能调用父类实例。\n\n```javascript\nclass Point {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n}\n\nclass ColorPoint extends Point {\n  constructor(x, y, color) {\n    this.color = color; // ReferenceError\n    super(x, y);\n    this.color = color; // 正确\n  }\n}\n```\n\n上面代码中，子类的`constructor`方法没有调用`super`之前，就使用`this`关键字，结果报错，而放在`super`方法之后就是正确的。\n\n下面是生成子类实例的代码。\n\n```javascript\nlet cp = new ColorPoint(25, 8, \'green\');\n\ncp instanceof ColorPoint // true\ncp instanceof Point // true\n```\n\n上面代码中，实例对象`cp`同时是`ColorPoint`和`Point`两个类的实例，这与 ES5 的行为完全一致。\n\n最后，父类的静态方法，也会被子类继承。\n\n```javascript\nclass A {\n  static hello() {\n    console.log(\'hello world\');\n  }\n}\n\nclass B extends A {\n}\n\nB.hello()  // hello world\n```\n\n上面代码中，`hello()`是`A`类的静态方法，`B`继承`A`，也继承了`A`的静态方法。\n\n## Object.getPrototypeOf()\n\n`Object.getPrototypeOf`方法可以用来从子类上获取父类。\n\n```javascript\nObject.getPrototypeOf(ColorPoint) === Point\n// true\n```\n\n因此，可以使用这个方法判断，一个类是否继承了另一个类。\n\n## super 关键字\n\n`super`这个关键字，既可以当作函数使用，也可以当作对象使用。在这两种情况下，它的用法完全不同。\n\n第一种情况，`super`作为函数调用时，代表父类的构造函数。ES6 要求，子类的构造函数必须执行一次`super`函数。\n\n```javascript\nclass A {}\n\nclass B extends A {\n  constructor() {\n    super();\n  }\n}\n```\n\n上面代码中，子类`B`的构造函数之中的`super()`，代表调用父类的构造函数。这是必须的，否则 JavaScript 引擎会报错。\n\n注意，`super`虽然代表了父类`A`的构造函数，但是返回的是子类`B`的实例，即`super`内部的`this`指的是`B`，因此`super()`在这里相当于`A.prototype.constructor.call(this)`。\n\n```javascript\nclass A {\n  constructor() {\n    console.log(new.target.name);\n  }\n}\nclass B extends A {\n  constructor() {\n    super();\n  }\n}\nnew A() // A\nnew B() // B\n```\n\n上面代码中，`new.target`指向当前正在执行的函数。可以看到，在`super()`执行时，它指向的是子类`B`的构造函数，而不是父类`A`的构造函数。也就是说，`super()`内部的`this`指向的是`B`。\n\n作为函数时，`super()`只能用在子类的构造函数之中，用在其他地方就会报错。\n\n```javascript\nclass A {}\n\nclass B extends A {\n  m() {\n    super(); // 报错\n  }\n}\n```\n\n上面代码中，`super()`用在`B`类的`m`方法之中，就会造成句法错误。\n\n第二种情况，`super`作为对象时，在普通方法中，指向父类的原型对象；在静态方法中，指向父类。\n\n```javascript\nclass A {\n  p() {\n    return 2;\n  }\n}\n\nclass B extends A {\n  constructor() {\n    super();\n    console.log(super.p()); // 2\n  }\n}\n\nlet b = new B();\n```\n\n上面代码中，子类`B`当中的`super.p()`，就是将`super`当作一个对象使用。这时，`super`在普通方法之中，指向`A.prototype`，所以`super.p()`就相当于`A.prototype.p()`。\n\n这里需要注意，由于`super`指向父类的原型对象，所以定义在父类实例上的方法或属性，是无法通过`super`调用的。\n\n```javascript\nclass A {\n  constructor() {\n    this.p = 2;\n  }\n}\n\nclass B extends A {\n  get m() {\n    return super.p;\n  }\n}\n\nlet b = new B();\nb.m // undefined\n```\n\n上面代码中，`p`是父类`A`实例的属性，`super.p`就引用不到它。\n\n如果属性定义在父类的原型对象上，`super`就可以取到。\n\n```javascript\nclass A {}\nA.prototype.x = 2;\n\nclass B extends A {\n  constructor() {\n    super();\n    console.log(super.x) // 2\n  }\n}\n\nlet b = new B();\n```\n\n上面代码中，属性`x`是定义在`A.prototype`上面的，所以`super.x`可以取到它的值。\n\nES6 规定，在子类普通方法中通过`super`调用父类的方法时，方法内部的`this`指向当前的子类实例。\n\n```javascript\nclass A {\n  constructor() {\n    this.x = 1;\n  }\n  print() {\n    console.log(this.x);\n  }\n}\n\nclass B extends A {\n  constructor() {\n    super();\n    this.x = 2;\n  }\n  m() {\n    super.print();\n  }\n}\n\nlet b = new B();\nb.m() // 2\n```\n\n上面代码中，`super.print()`虽然调用的是`A.prototype.print()`，但是`A.prototype.print()`内部的`this`指向子类`B`的实例，导致输出的是`2`，而不是`1`。也就是说，实际上执行的是`super.print.call(this)`。\n\n由于`this`指向子类实例，所以如果通过`super`对某个属性赋值，这时`super`就是`this`，赋值的属性会变成子类实例的属性。\n\n```javascript\nclass A {\n  constructor() {\n    this.x = 1;\n  }\n}\n\nclass B extends A {\n  constructor() {\n    super();\n    this.x = 2;\n    super.x = 3;\n    console.log(super.x); // undefined\n    console.log(this.x); // 3\n  }\n}\n\nlet b = new B();\n```\n\n上面代码中，`super.x`赋值为`3`，这时等同于对`this.x`赋值为`3`。而当读取`super.x`的时候，读的是`A.prototype.x`，所以返回`undefined`。\n\n如果`super`作为对象，用在静态方法之中，这时`super`将指向父类，而不是父类的原型对象。\n\n```javascript\nclass Parent {\n  static myMethod(msg) {\n    console.log(\'static\', msg);\n  }\n\n  myMethod(msg) {\n    console.log(\'instance\', msg);\n  }\n}\n\nclass Child extends Parent {\n  static myMethod(msg) {\n    super.myMethod(msg);\n  }\n\n  myMethod(msg) {\n    super.myMethod(msg);\n  }\n}\n\nChild.myMethod(1); // static 1\n\nvar child = new Child();\nchild.myMethod(2); // instance 2\n```\n\n上面代码中，`super`在静态方法之中指向父类，在普通方法之中指向父类的原型对象。\n\n另外，在子类的静态方法中通过`super`调用父类的方法时，方法内部的`this`指向当前的子类，而不是子类的实例。\n\n```javascript\nclass A {\n  constructor() {\n    this.x = 1;\n  }\n  static print() {\n    console.log(this.x);\n  }\n}\n\nclass B extends A {\n  constructor() {\n    super();\n    this.x = 2;\n  }\n  static m() {\n    super.print();\n  }\n}\n\nB.x = 3;\nB.m() // 3\n```\n\n上面代码中，静态方法`B.m`里面，`super.print`指向父类的静态方法。这个方法里面的`this`指向的是`B`，而不是`B`的实例。\n\n注意，使用`super`的时候，必须显式指定是作为函数、还是作为对象使用，否则会报错。\n\n```javascript\nclass A {}\n\nclass B extends A {\n  constructor() {\n    super();\n    console.log(super); // 报错\n  }\n}\n```\n\n上面代码中，`console.log(super)`当中的`super`，无法看出是作为函数使用，还是作为对象使用，所以 JavaScript 引擎解析代码的时候就会报错。这时，如果能清晰地表明`super`的数据类型，就不会报错。\n\n```javascript\nclass A {}\n\nclass B extends A {\n  constructor() {\n    super();\n    console.log(super.valueOf() instanceof B); // true\n  }\n}\n\nlet b = new B();\n```\n\n上面代码中，`super.valueOf()`表明`super`是一个对象，因此就不会报错。同时，由于`super`使得`this`指向`B`的实例，所以`super.valueOf()`返回的是一个`B`的实例。\n\n最后，由于对象总是继承其他对象的，所以可以在任意一个对象中，使用`super`关键字。\n\n```javascript\nvar obj = {\n  toString() {\n    return "MyObject: " + super.toString();\n  }\n};\n\nobj.toString(); // MyObject: [object Object]\n```\n\n## 类的 prototype 属性和__proto__属性\n\n大多数浏览器的 ES5 实现之中，每一个对象都有`__proto__`属性，指向对应的构造函数的`prototype`属性。Class 作为构造函数的语法糖，同时有`prototype`属性和`__proto__`属性，因此同时存在两条继承链。\n\n（1）子类的`__proto__`属性，表示构造函数的继承，总是指向父类。\n\n（2）子类`prototype`属性的`__proto__`属性，表示方法的继承，总是指向父类的`prototype`属性。\n\n```javascript\nclass A {\n}\n\nclass B extends A {\n}\n\nB.__proto__ === A // true\nB.prototype.__proto__ === A.prototype // true\n```\n\n上面代码中，子类`B`的`__proto__`属性指向父类`A`，子类`B`的`prototype`属性的`__proto__`属性指向父类`A`的`prototype`属性。\n\n这样的结果是因为，类的继承是按照下面的模式实现的。\n\n```javascript\nclass A {\n}\n\nclass B {\n}\n\n// B 的实例继承 A 的实例\nObject.setPrototypeOf(B.prototype, A.prototype);\n\n// B 继承 A 的静态属性\nObject.setPrototypeOf(B, A);\n\nconst b = new B();\n```\n\n《对象的扩展》一章给出过`Object.setPrototypeOf`方法的实现。\n\n```javascript\nObject.setPrototypeOf = function (obj, proto) {\n  obj.__proto__ = proto;\n  return obj;\n}\n```\n\n因此，就得到了上面的结果。\n\n```javascript\nObject.setPrototypeOf(B.prototype, A.prototype);\n// 等同于\nB.prototype.__proto__ = A.prototype;\n\nObject.setPrototypeOf(B, A);\n// 等同于\nB.__proto__ = A;\n```\n\n这两条继承链，可以这样理解：作为一个对象，子类（`B`）的原型（`__proto__`属性）是父类（`A`）；作为一个构造函数，子类（`B`）的原型对象（`prototype`属性）是父类的原型对象（`prototype`属性）的实例。\n\n```javascript\nObject.create(A.prototype);\n// 等同于\nB.prototype.__proto__ = A.prototype;\n```\n\n`extends`关键字后面可以跟多种类型的值。\n\n```javascript\nclass B extends A {\n}\n```\n\n上面代码的`A`，只要是一个有`prototype`属性的函数，就能被`B`继承。由于函数都有`prototype`属性（除了`Function.prototype`函数），因此`A`可以是任意函数。\n\n下面，讨论两种情况。第一种，子类继承`Object`类。\n\n```javascript\nclass A extends Object {\n}\n\nA.__proto__ === Object // true\nA.prototype.__proto__ === Object.prototype // true\n```\n\n这种情况下，`A`其实就是构造函数`Object`的复制，`A`的实例就是`Object`的实例。\n\n第二种情况，不存在任何继承。\n\n```javascript\nclass A {\n}\n\nA.__proto__ === Function.prototype // true\nA.prototype.__proto__ === Object.prototype // true\n```\n\n这种情况下，`A`作为一个基类（即不存在任何继承），就是一个普通函数，所以直接继承`Function.prototype`。但是，`A`调用后返回一个空对象（即`Object`实例），所以`A.prototype.__proto__`指向构造函数（`Object`）的`prototype`属性。\n\n### 实例的 __proto__ 属性\n\n子类实例的`__proto__`属性的`__proto__`属性，指向父类实例的`__proto__`属性。也就是说，子类的原型的原型，是父类的原型。\n\n```javascript\nvar p1 = new Point(2, 3);\nvar p2 = new ColorPoint(2, 3, \'red\');\n\np2.__proto__ === p1.__proto__ // false\np2.__proto__.__proto__ === p1.__proto__ // true\n```\n\n上面代码中，`ColorPoint`继承了`Point`，导致前者原型的原型是后者的原型。\n\n因此，通过子类实例的`__proto__.__proto__`属性，可以修改父类实例的行为。\n\n```javascript\np2.__proto__.__proto__.printName = function () {\n  console.log(\'Ha\');\n};\n\np1.printName() // "Ha"\n```\n\n上面代码在`ColorPoint`的实例`p2`上向`Point`类添加方法，结果影响到了`Point`的实例`p1`。\n\n## 原生构造函数的继承\n\n原生构造函数是指语言内置的构造函数，通常用来生成数据结构。ECMAScript 的原生构造函数大致有下面这些。\n\n- Boolean()\n- Number()\n- String()\n- Array()\n- Date()\n- Function()\n- RegExp()\n- Error()\n- Object()\n\n以前，这些原生构造函数是无法继承的，比如，不能自己定义一个`Array`的子类。\n\n```javascript\nfunction MyArray() {\n  Array.apply(this, arguments);\n}\n\nMyArray.prototype = Object.create(Array.prototype, {\n  constructor: {\n    value: MyArray,\n    writable: true,\n    configurable: true,\n    enumerable: true\n  }\n});\n```\n\n上面代码定义了一个继承 Array 的`MyArray`类。但是，这个类的行为与`Array`完全不一致。\n\n```javascript\nvar colors = new MyArray();\ncolors[0] = "red";\ncolors.length  // 0\n\ncolors.length = 0;\ncolors[0]  // "red"\n```\n\n之所以会发生这种情况，是因为子类无法获得原生构造函数的内部属性，通过`Array.apply()`或者分配给原型对象都不行。原生构造函数会忽略`apply`方法传入的`this`，也就是说，原生构造函数的`this`无法绑定，导致拿不到内部属性。\n\nES5 是先新建子类的实例对象`this`，再将父类的属性添加到子类上，由于父类的内部属性无法获取，导致无法继承原生的构造函数。比如，`Array`构造函数有一个内部属性`[[DefineOwnProperty]]`，用来定义新属性时，更新`length`属性，这个内部属性无法在子类获取，导致子类的`length`属性行为不正常。\n\n下面的例子中，我们想让一个普通对象继承`Error`对象。\n\n```javascript\nvar e = {};\n\nObject.getOwnPropertyNames(Error.call(e))\n// [ \'stack\' ]\n\nObject.getOwnPropertyNames(e)\n// []\n```\n\n上面代码中，我们想通过`Error.call(e)`这种写法，让普通对象`e`具有`Error`对象的实例属性。但是，`Error.call()`完全忽略传入的第一个参数，而是返回一个新对象，`e`本身没有任何变化。这证明了`Error.call(e)`这种写法，无法继承原生构造函数。\n\nES6 允许继承原生构造函数定义子类，因为 ES6 是先新建父类的实例对象`this`，然后再用子类的构造函数修饰`this`，使得父类的所有行为都可以继承。下面是一个继承`Array`的例子。\n\n```javascript\nclass MyArray extends Array {\n  constructor(...args) {\n    super(...args);\n  }\n}\n\nvar arr = new MyArray();\narr[0] = 12;\narr.length // 1\n\narr.length = 0;\narr[0] // undefined\n```\n\n上面代码定义了一个`MyArray`类，继承了`Array`构造函数，因此就可以从`MyArray`生成数组的实例。这意味着，ES6 可以自定义原生数据结构（比如`Array`、`String`等）的子类，这是 ES5 无法做到的。\n\n上面这个例子也说明，`extends`关键字不仅可以用来继承类，还可以用来继承原生的构造函数。因此可以在原生数据结构的基础上，定义自己的数据结构。下面就是定义了一个带版本功能的数组。\n\n```javascript\nclass VersionedArray extends Array {\n  constructor() {\n    super();\n    this.history = [[]];\n  }\n  commit() {\n    this.history.push(this.slice());\n  }\n  revert() {\n    this.splice(0, this.length, ...this.history[this.history.length - 1]);\n  }\n}\n\nvar x = new VersionedArray();\n\nx.push(1);\nx.push(2);\nx // [1, 2]\nx.history // [[]]\n\nx.commit();\nx.history // [[], [1, 2]]\n\nx.push(3);\nx // [1, 2, 3]\nx.history // [[], [1, 2]]\n\nx.revert();\nx // [1, 2]\n```\n\n上面代码中，`VersionedArray`会通过`commit`方法，将自己的当前状态生成一个版本快照，存入`history`属性。`revert`方法用来将数组重置为最新一次保存的版本。除此之外，`VersionedArray`依然是一个普通数组，所有原生的数组方法都可以在它上面调用。\n\n下面是一个自定义`Error`子类的例子，可以用来定制报错时的行为。\n\n```javascript\nclass ExtendableError extends Error {\n  constructor(message) {\n    super();\n    this.message = message;\n    this.stack = (new Error()).stack;\n    this.name = this.constructor.name;\n  }\n}\n\nclass MyError extends ExtendableError {\n  constructor(m) {\n    super(m);\n  }\n}\n\nvar myerror = new MyError(\'ll\');\nmyerror.message // "ll"\nmyerror instanceof Error // true\nmyerror.name // "MyError"\nmyerror.stack\n// Error\n//     at MyError.ExtendableError\n//     ...\n```\n\n注意，继承`Object`的子类，有一个[行为差异](http://stackoverflow.com/questions/36203614/super-does-not-pass-arguments-when-instantiating-a-class-extended-from-object)。\n\n```javascript\nclass NewObj extends Object{\n  constructor(){\n    super(...arguments);\n  }\n}\nvar o = new NewObj({attr: true});\no.attr === true  // false\n```\n\n上面代码中，`NewObj`继承了`Object`，但是无法通过`super`方法向父类`Object`传参。这是因为 ES6 改变了`Object`构造函数的行为，一旦发现`Object`方法不是通过`new Object()`这种形式调用，ES6 规定`Object`构造函数会忽略参数。\n\n## Mixin 模式的实现\n\nMixin 指的是多个对象合成一个新的对象，新对象具有各个组成成员的接口。它的最简单实现如下。\n\n```javascript\nconst a = {\n  a: \'a\'\n};\nconst b = {\n  b: \'b\'\n};\nconst c = {...a, ...b}; // {a: \'a\', b: \'b\'}\n```\n\n上面代码中，`c`对象是`a`对象和`b`对象的合成，具有两者的接口。\n\n下面是一个更完备的实现，将多个类的接口“混入”（mix in）另一个类。\n\n```javascript\nfunction mix(...mixins) {\n  class Mix {}\n\n  for (let mixin of mixins) {\n    copyProperties(Mix.prototype, mixin); // 拷贝实例属性\n    copyProperties(Mix.prototype, Reflect.getPrototypeOf(mixin)); // 拷贝原型属性\n  }\n\n  return Mix;\n}\n\nfunction copyProperties(target, source) {\n  for (let key of Reflect.ownKeys(source)) {\n    if ( key !== "constructor"\n      && key !== "prototype"\n      && key !== "name"\n    ) {\n      let desc = Object.getOwnPropertyDescriptor(source, key);\n      Object.defineProperty(target, key, desc);\n    }\n  }\n}\n```\n\n上面代码的`mix`函数，可以将多个对象合成为一个类。使用的时候，只要继承这个类即可。\n\n```javascript\nclass DistributedEdit extends mix(Loggable, Serializable) {\n  // ...\n}\n```\n\n\n\n# 修饰器\n\n1. [类的修饰](http://es6.ruanyifeng.com/#docs/decorator#%E7%B1%BB%E7%9A%84%E4%BF%AE%E9%A5%B0)\n2. [方法的修饰](http://es6.ruanyifeng.com/#docs/decorator#%E6%96%B9%E6%B3%95%E7%9A%84%E4%BF%AE%E9%A5%B0)\n3. [为什么修饰器不能用于函数？](http://es6.ruanyifeng.com/#docs/decorator#%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BF%AE%E9%A5%B0%E5%99%A8%E4%B8%8D%E8%83%BD%E7%94%A8%E4%BA%8E%E5%87%BD%E6%95%B0%EF%BC%9F)\n4. [core-decorators.js](http://es6.ruanyifeng.com/#docs/decorator#core-decorators.js)\n5. [使用修饰器实现自动发布事件](http://es6.ruanyifeng.com/#docs/decorator#%E4%BD%BF%E7%94%A8%E4%BF%AE%E9%A5%B0%E5%99%A8%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%8A%A8%E5%8F%91%E5%B8%83%E4%BA%8B%E4%BB%B6)\n6. [Mixin](http://es6.ruanyifeng.com/#docs/decorator#Mixin)\n7. [Trait](http://es6.ruanyifeng.com/#docs/decorator#Trait)\n8. [Babel 转码器的支持](http://es6.ruanyifeng.com/#docs/decorator#Babel%20%E8%BD%AC%E7%A0%81%E5%99%A8%E7%9A%84%E6%94%AF%E6%8C%81)\n\n## 类的修饰\n\n许多面向对象的语言都有修饰器（Decorator）函数，用来修改类的行为。目前，有一个[提案](https://github.com/tc39/proposal-decorators)将这项功能，引入了 ECMAScript。\n\n```javascript\n@testable\nclass MyTestableClass {\n  // ...\n}\n\nfunction testable(target) {\n  target.isTestable = true;\n}\n\nMyTestableClass.isTestable // true\n```\n\n上面代码中，`@testable`就是一个修饰器。它修改了`MyTestableClass`这个类的行为，为它加上了静态属性`isTestable`。`testable`函数的参数`target`是`MyTestableClass`类本身。\n\n基本上，修饰器的行为就是下面这样。\n\n```javascript\n@decorator\nclass A {}\n\n// 等同于\n\nclass A {}\nA = decorator(A) || A;\n```\n\n也就是说，修饰器是一个对类进行处理的函数。修饰器函数的第一个参数，就是所要修饰的目标类。\n\n```javascript\nfunction testable(target) {\n  // ...\n}\n```\n\n上面代码中，`testable`函数的参数`target`，就是会被修饰的类。\n\n如果觉得一个参数不够用，可以在修饰器外面再封装一层函数。\n\n```javascript\nfunction testable(isTestable) {\n  return function(target) {\n    target.isTestable = isTestable;\n  }\n}\n\n@testable(true)\nclass MyTestableClass {}\nMyTestableClass.isTestable // true\n\n@testable(false)\nclass MyClass {}\nMyClass.isTestable // false\n```\n\n上面代码中，修饰器`testable`可以接受参数，这就等于可以修改修饰器的行为。\n\n注意，修饰器对类的行为的改变，是代码编译时发生的，而不是在运行时。这意味着，修饰器能在编译阶段运行代码。也就是说，修饰器本质就是编译时执行的函数。\n\n前面的例子是为类添加一个静态属性，如果想添加实例属性，可以通过目标类的`prototype`对象操作。\n\n```javascript\nfunction testable(target) {\n  target.prototype.isTestable = true;\n}\n\n@testable\nclass MyTestableClass {}\n\nlet obj = new MyTestableClass();\nobj.isTestable // true\n```\n\n上面代码中，修饰器函数`testable`是在目标类的`prototype`对象上添加属性，因此就可以在实例上调用。\n\n下面是另外一个例子。\n\n```javascript\n// mixins.js\nexport function mixins(...list) {\n  return function (target) {\n    Object.assign(target.prototype, ...list)\n  }\n}\n\n// main.js\nimport { mixins } from \'./mixins\'\n\nconst Foo = {\n  foo() { console.log(\'foo\') }\n};\n\n@mixins(Foo)\nclass MyClass {}\n\nlet obj = new MyClass();\nobj.foo() // \'foo\'\n```\n\n上面代码通过修饰器`mixins`，把`Foo`对象的方法添加到了`MyClass`的实例上面。可以用`Object.assign()`模拟这个功能。\n\n```javascript\nconst Foo = {\n  foo() { console.log(\'foo\') }\n};\n\nclass MyClass {}\n\nObject.assign(MyClass.prototype, Foo);\n\nlet obj = new MyClass();\nobj.foo() // \'foo\'\n```\n\n实际开发中，React 与 Redux 库结合使用时，常常需要写成下面这样。\n\n```javascript\nclass MyReactComponent extends React.Component {}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyReactComponent);\n```\n\n有了装饰器，就可以改写上面的代码。\n\n```javascript\n@connect(mapStateToProps, mapDispatchToProps)\nexport default class MyReactComponent extends React.Component {}\n```\n\n相对来说，后一种写法看上去更容易理解。\n\n## 方法的修饰\n\n修饰器不仅可以修饰类，还可以修饰类的属性。\n\n```javascript\nclass Person {\n  @readonly\n  name() { return `${this.first} ${this.last}` }\n}\n```\n\n上面代码中，修饰器`readonly`用来修饰“类”的`name`方法。\n\n修饰器函数`readonly`一共可以接受三个参数。\n\n```javascript\nfunction readonly(target, name, descriptor){\n  // descriptor对象原来的值如下\n  // {\n  //   value: specifiedFunction,\n  //   enumerable: false,\n  //   configurable: true,\n  //   writable: true\n  // };\n  descriptor.writable = false;\n  return descriptor;\n}\n\nreadonly(Person.prototype, \'name\', descriptor);\n// 类似于\nObject.defineProperty(Person.prototype, \'name\', descriptor);\n```\n\n修饰器第一个参数是类的原型对象，上例是`Person.prototype`，修饰器的本意是要“修饰”类的实例，但是这个时候实例还没生成，所以只能去修饰原型（这不同于类的修饰，那种情况时`target`参数指的是类本身）；第二个参数是所要修饰的属性名，第三个参数是该属性的描述对象。\n\n另外，上面代码说明，修饰器（readonly）会修改属性的描述对象（descriptor），然后被修改的描述对象再用来定义属性。\n\n下面是另一个例子，修改属性描述对象的`enumerable`属性，使得该属性不可遍历。\n\n```javascript\nclass Person {\n  @nonenumerable\n  get kidCount() { return this.children.length; }\n}\n\nfunction nonenumerable(target, name, descriptor) {\n  descriptor.enumerable = false;\n  return descriptor;\n}\n```\n\n下面的`@log`修饰器，可以起到输出日志的作用。\n\n```javascript\nclass Math {\n  @log\n  add(a, b) {\n    return a + b;\n  }\n}\n\nfunction log(target, name, descriptor) {\n  var oldValue = descriptor.value;\n\n  descriptor.value = function() {\n    console.log(`Calling ${name} with`, arguments);\n    return oldValue.apply(this, arguments);\n  };\n\n  return descriptor;\n}\n\nconst math = new Math();\n\n// passed parameters should get logged now\nmath.add(2, 4);\n```\n\n上面代码中，`@log`修饰器的作用就是在执行原始的操作之前，执行一次`console.log`，从而达到输出日志的目的。\n\n修饰器有注释的作用。\n\n```javascript\n@testable\nclass Person {\n  @readonly\n  @nonenumerable\n  name() { return `${this.first} ${this.last}` }\n}\n```\n\n从上面代码中，我们一眼就能看出，`Person`类是可测试的，而`name`方法是只读和不可枚举的。\n\n下面是使用 Decorator 写法的[组件](https://github.com/ionic-team/stencil)，看上去一目了然。\n\n```javascript\n@Component({\n  tag: \'my-component\',\n  styleUrl: \'my-component.scss\'\n})\nexport class MyComponent {\n  @Prop() first: string;\n  @Prop() last: string;\n  @State() isVisible: boolean = true;\n\n  render() {\n    return (\n      <p>Hello, my name is {this.first} {this.last}</p>\n    );\n  }\n}\n```\n\n如果同一个方法有多个修饰器，会像剥洋葱一样，先从外到内进入，然后由内向外执行。\n\n```javascript\nfunction dec(id){\n  console.log(\'evaluated\', id);\n  return (target, property, descriptor) => console.log(\'executed\', id);\n}\n\nclass Example {\n    @dec(1)\n    @dec(2)\n    method(){}\n}\n// evaluated 1\n// evaluated 2\n// executed 2\n// executed 1\n```\n\n上面代码中，外层修饰器`@dec(1)`先进入，但是内层修饰器`@dec(2)`先执行。\n\n除了注释，修饰器还能用来类型检查。所以，对于类来说，这项功能相当有用。从长期来看，它将是 JavaScript 代码静态分析的重要工具。\n\n## 为什么修饰器不能用于函数？\n\n修饰器只能用于类和类的方法，不能用于函数，因为存在函数提升。\n\n```javascript\nvar counter = 0;\n\nvar add = function () {\n  counter++;\n};\n\n@add\nfunction foo() {\n}\n```\n\n上面的代码，意图是执行后`counter`等于 1，但是实际上结果是`counter`等于 0。因为函数提升，使得实际执行的代码是下面这样。\n\n```javascript\n@add\nfunction foo() {\n}\n\nvar counter;\nvar add;\n\ncounter = 0;\n\nadd = function () {\n  counter++;\n};\n```\n\n下面是另一个例子。\n\n```javascript\nvar readOnly = require("some-decorator");\n\n@readOnly\nfunction foo() {\n}\n```\n\n上面代码也有问题，因为实际执行是下面这样。\n\n```javascript\nvar readOnly;\n\n@readOnly\nfunction foo() {\n}\n\nreadOnly = require("some-decorator");\n```\n\n总之，由于存在函数提升，使得修饰器不能用于函数。类是不会提升的，所以就没有这方面的问题。\n\n另一方面，如果一定要修饰函数，可以采用高阶函数的形式直接执行。\n\n```javascript\nfunction doSomething(name) {\n  console.log(\'Hello, \' + name);\n}\n\nfunction loggingDecorator(wrapped) {\n  return function() {\n    console.log(\'Starting\');\n    const result = wrapped.apply(this, arguments);\n    console.log(\'Finished\');\n    return result;\n  }\n}\n\nconst wrapped = loggingDecorator(doSomething);\n```\n\n## core-decorators.js\n\n[core-decorators.js](https://github.com/jayphelps/core-decorators.js)是一个第三方模块，提供了几个常见的修饰器，通过它可以更好地理解修饰器。\n\n**（1）@autobind**\n\n`autobind`修饰器使得方法中的`this`对象，绑定原始对象。\n\n```javascript\nimport { autobind } from \'core-decorators\';\n\nclass Person {\n  @autobind\n  getPerson() {\n    return this;\n  }\n}\n\nlet person = new Person();\nlet getPerson = person.getPerson;\n\ngetPerson() === person;\n// true\n```\n\n**（2）@readonly**\n\n`readonly`修饰器使得属性或方法不可写。\n\n```javascript\nimport { readonly } from \'core-decorators\';\n\nclass Meal {\n  @readonly\n  entree = \'steak\';\n}\n\nvar dinner = new Meal();\ndinner.entree = \'salmon\';\n// Cannot assign to read only property \'entree\' of [object Object]\n```\n\n**（3）@override**\n\n`override`修饰器检查子类的方法，是否正确覆盖了父类的同名方法，如果不正确会报错。\n\n```javascript\nimport { override } from \'core-decorators\';\n\nclass Parent {\n  speak(first, second) {}\n}\n\nclass Child extends Parent {\n  @override\n  speak() {}\n  // SyntaxError: Child#speak() does not properly override Parent#speak(first, second)\n}\n\n// or\n\nclass Child extends Parent {\n  @override\n  speaks() {}\n  // SyntaxError: No descriptor matching Child#speaks() was found on the prototype chain.\n  //\n  //   Did you mean "speak"?\n}\n```\n\n**（4）@deprecate (别名@deprecated)**\n\n`deprecate`或`deprecated`修饰器在控制台显示一条警告，表示该方法将废除。\n\n```javascript\nimport { deprecate } from \'core-decorators\';\n\nclass Person {\n  @deprecate\n  facepalm() {}\n\n  @deprecate(\'We stopped facepalming\')\n  facepalmHard() {}\n\n  @deprecate(\'We stopped facepalming\', { url: \'http://knowyourmeme.com/memes/facepalm\' })\n  facepalmHarder() {}\n}\n\nlet person = new Person();\n\nperson.facepalm();\n// DEPRECATION Person#facepalm: This function will be removed in future versions.\n\nperson.facepalmHard();\n// DEPRECATION Person#facepalmHard: We stopped facepalming\n\nperson.facepalmHarder();\n// DEPRECATION Person#facepalmHarder: We stopped facepalming\n//\n//     See http://knowyourmeme.com/memes/facepalm for more details.\n//\n```\n\n**（5）@suppressWarnings**\n\n`suppressWarnings`修饰器抑制`deprecated`修饰器导致的`console.warn()`调用。但是，异步代码发出的调用除外。\n\n```javascript\nimport { suppressWarnings } from \'core-decorators\';\n\nclass Person {\n  @deprecated\n  facepalm() {}\n\n  @suppressWarnings\n  facepalmWithoutWarning() {\n    this.facepalm();\n  }\n}\n\nlet person = new Person();\n\nperson.facepalmWithoutWarning();\n// no warning is logged\n```\n\n## 使用修饰器实现自动发布事件\n\n我们可以使用修饰器，使得对象的方法被调用时，自动发出一个事件。\n\n```javascript\nconst postal = require("postal/lib/postal.lodash");\n\nexport default function publish(topic, channel) {\n  const channelName = channel || \'/\';\n  const msgChannel = postal.channel(channelName);\n  msgChannel.subscribe(topic, v => {\n    console.log(\'频道: \', channelName);\n    console.log(\'事件: \', topic);\n    console.log(\'数据: \', v);\n  });\n\n  return function(target, name, descriptor) {\n    const fn = descriptor.value;\n\n    descriptor.value = function() {\n      let value = fn.apply(this, arguments);\n      msgChannel.publish(topic, value);\n    };\n  };\n}\n```\n\n上面代码定义了一个名为`publish`的修饰器，它通过改写`descriptor.value`，使得原方法被调用时，会自动发出一个事件。它使用的事件“发布/订阅”库是[Postal.js](https://github.com/postaljs/postal.js)。\n\n它的用法如下。\n\n```javascript\n// index.js\nimport publish from \'./publish\';\n\nclass FooComponent {\n  @publish(\'foo.some.message\', \'component\')\n  someMethod() {\n    return { my: \'data\' };\n  }\n  @publish(\'foo.some.other\')\n  anotherMethod() {\n    // ...\n  }\n}\n\nlet foo = new FooComponent();\n\nfoo.someMethod();\nfoo.anotherMethod();\n```\n\n以后，只要调用`someMethod`或者`anotherMethod`，就会自动发出一个事件。\n\n```bash\n$ bash-node index.js\n频道:  component\n事件:  foo.some.message\n数据:  { my: \'data\' }\n\n频道:  /\n事件:  foo.some.other\n数据:  undefined\n```\n\n## Mixin\n\n在修饰器的基础上，可以实现`Mixin`模式。所谓`Mixin`模式，就是对象继承的一种替代方案，中文译为“混入”（mix in），意为在一个对象之中混入另外一个对象的方法。\n\n请看下面的例子。\n\n```javascript\nconst Foo = {\n  foo() { console.log(\'foo\') }\n};\n\nclass MyClass {}\n\nObject.assign(MyClass.prototype, Foo);\n\nlet obj = new MyClass();\nobj.foo() // \'foo\'\n```\n\n上面代码之中，对象`Foo`有一个`foo`方法，通过`Object.assign`方法，可以将`foo`方法“混入”`MyClass`类，导致`MyClass`的实例`obj`对象都具有`foo`方法。这就是“混入”模式的一个简单实现。\n\n下面，我们部署一个通用脚本`mixins.js`，将 Mixin 写成一个修饰器。\n\n```javascript\nexport function mixins(...list) {\n  return function (target) {\n    Object.assign(target.prototype, ...list);\n  };\n}\n```\n\n然后，就可以使用上面这个修饰器，为类“混入”各种方法。\n\n```javascript\nimport { mixins } from \'./mixins\';\n\nconst Foo = {\n  foo() { console.log(\'foo\') }\n};\n\n@mixins(Foo)\nclass MyClass {}\n\nlet obj = new MyClass();\nobj.foo() // "foo"\n```\n\n通过`mixins`这个修饰器，实现了在`MyClass`类上面“混入”`Foo`对象的`foo`方法。\n\n不过，上面的方法会改写`MyClass`类的`prototype`对象，如果不喜欢这一点，也可以通过类的继承实现 Mixin。\n\n```javascript\nclass MyClass extends MyBaseClass {\n  /* ... */\n}\n```\n\n上面代码中，`MyClass`继承了`MyBaseClass`。如果我们想在`MyClass`里面“混入”一个`foo`方法，一个办法是在`MyClass`和`MyBaseClass`之间插入一个混入类，这个类具有`foo`方法，并且继承了`MyBaseClass`的所有方法，然后`MyClass`再继承这个类。\n\n```javascript\nlet MyMixin = (superclass) => class extends superclass {\n  foo() {\n    console.log(\'foo from MyMixin\');\n  }\n};\n```\n\n上面代码中，`MyMixin`是一个混入类生成器，接受`superclass`作为参数，然后返回一个继承`superclass`的子类，该子类包含一个`foo`方法。\n\n接着，目标类再去继承这个混入类，就达到了“混入”`foo`方法的目的。\n\n```javascript\nclass MyClass extends MyMixin(MyBaseClass) {\n  /* ... */\n}\n\nlet c = new MyClass();\nc.foo(); // "foo from MyMixin"\n```\n\n如果需要“混入”多个方法，就生成多个混入类。\n\n```javascript\nclass MyClass extends Mixin1(Mixin2(MyBaseClass)) {\n  /* ... */\n}\n```\n\n这种写法的一个好处，是可以调用`super`，因此可以避免在“混入”过程中覆盖父类的同名方法。\n\n```javascript\nlet Mixin1 = (superclass) => class extends superclass {\n  foo() {\n    console.log(\'foo from Mixin1\');\n    if (super.foo) super.foo();\n  }\n};\n\nlet Mixin2 = (superclass) => class extends superclass {\n  foo() {\n    console.log(\'foo from Mixin2\');\n    if (super.foo) super.foo();\n  }\n};\n\nclass S {\n  foo() {\n    console.log(\'foo from S\');\n  }\n}\n\nclass C extends Mixin1(Mixin2(S)) {\n  foo() {\n    console.log(\'foo from C\');\n    super.foo();\n  }\n}\n```\n\n上面代码中，每一次`混入`发生时，都调用了父类的`super.foo`方法，导致父类的同名方法没有被覆盖，行为被保留了下来。\n\n```javascript\nnew C().foo()\n// foo from C\n// foo from Mixin1\n// foo from Mixin2\n// foo from S\n```\n\n## Trait\n\nTrait 也是一种修饰器，效果与 Mixin 类似，但是提供更多功能，比如防止同名方法的冲突、排除混入某些方法、为混入的方法起别名等等。\n\n下面采用[traits-decorator](https://github.com/CocktailJS/traits-decorator)这个第三方模块作为例子。这个模块提供的`traits`修饰器，不仅可以接受对象，还可以接受 ES6 类作为参数。\n\n```javascript\nimport { traits } from \'traits-decorator\';\n\nclass TFoo {\n  foo() { console.log(\'foo\') }\n}\n\nconst TBar = {\n  bar() { console.log(\'bar\') }\n};\n\n@traits(TFoo, TBar)\nclass MyClass { }\n\nlet obj = new MyClass();\nobj.foo() // foo\nobj.bar() // bar\n```\n\n上面代码中，通过`traits`修饰器，在`MyClass`类上面“混入”了`TFoo`类的`foo`方法和`TBar`对象的`bar`方法。\n\nTrait 不允许“混入”同名方法。\n\n```javascript\nimport { traits } from \'traits-decorator\';\n\nclass TFoo {\n  foo() { console.log(\'foo\') }\n}\n\nconst TBar = {\n  bar() { console.log(\'bar\') },\n  foo() { console.log(\'foo\') }\n};\n\n@traits(TFoo, TBar)\nclass MyClass { }\n// 报错\n// throw new Error(\'Method named: \' + methodName + \' is defined twice.\');\n//        ^\n// Error: Method named: foo is defined twice.\n```\n\n上面代码中，`TFoo`和`TBar`都有`foo`方法，结果`traits`修饰器报错。\n\n一种解决方法是排除`TBar`的`foo`方法。\n\n```javascript\nimport { traits, excludes } from \'traits-decorator\';\n\nclass TFoo {\n  foo() { console.log(\'foo\') }\n}\n\nconst TBar = {\n  bar() { console.log(\'bar\') },\n  foo() { console.log(\'foo\') }\n};\n\n@traits(TFoo, TBar::excludes(\'foo\'))\nclass MyClass { }\n\nlet obj = new MyClass();\nobj.foo() // foo\nobj.bar() // bar\n```\n\n上面代码使用绑定运算符（::）在`TBar`上排除`foo`方法，混入时就不会报错了。\n\n另一种方法是为`TBar`的`foo`方法起一个别名。\n\n```javascript\nimport { traits, alias } from \'traits-decorator\';\n\nclass TFoo {\n  foo() { console.log(\'foo\') }\n}\n\nconst TBar = {\n  bar() { console.log(\'bar\') },\n  foo() { console.log(\'foo\') }\n};\n\n@traits(TFoo, TBar::alias({foo: \'aliasFoo\'}))\nclass MyClass { }\n\nlet obj = new MyClass();\nobj.foo() // foo\nobj.aliasFoo() // foo\nobj.bar() // bar\n```\n\n上面代码为`TBar`的`foo`方法起了别名`aliasFoo`，于是`MyClass`也可以混入`TBar`的`foo`方法了。\n\n`alias`和`excludes`方法，可以结合起来使用。\n\n```javascript\n@traits(TExample::excludes(\'foo\',\'bar\')::alias({baz:\'exampleBaz\'}))\nclass MyClass {}\n```\n\n上面代码排除`了TExample`的`foo`方法和`bar`方法，为`baz`方法起了别名`exampleBaz`。\n\n`as`方法则为上面的代码提供了另一种写法。\n\n```javascript\n@traits(TExample::as({excludes:[\'foo\', \'bar\'], alias: {baz: \'exampleBaz\'}}))\nclass MyClass {}\n```\n\n## Babel 转码器的支持\n\n目前，Babel 转码器已经支持 Decorator。\n\n首先，安装`babel-core`和`babel-plugin-transform-decorators`。由于后者包括在`babel-preset-stage-0`之中，所以改为安装`babel-preset-stage-0`亦可。\n\n```bash\n$ npm install babel-core babel-plugin-transform-decorators\n```\n\n然后，设置配置文件`.babelrc`。\n\n```javascript\n{\n  "plugins": ["transform-decorators"]\n}\n```\n\n这时，Babel 就可以对 Decorator 转码了。\n\n脚本中打开的命令如下。\n\n```javascript\nbabel.transform("code", {plugins: ["transform-decorators"]})\n```\n\nBabel 的官方网站提供一个[在线转码器](https://babeljs.io/repl/)，只要勾选 Experimental，就能支持 Decorator 的在线转码。\n\n\n\n# Module 的语法\n\n1. [概述](http://es6.ruanyifeng.com/#docs/module#%E6%A6%82%E8%BF%B0)\n2. [严格模式](http://es6.ruanyifeng.com/#docs/module#%E4%B8%A5%E6%A0%BC%E6%A8%A1%E5%BC%8F)\n3. [export 命令](http://es6.ruanyifeng.com/#docs/module#export%20%E5%91%BD%E4%BB%A4)\n4. [import 命令](http://es6.ruanyifeng.com/#docs/module#import%20%E5%91%BD%E4%BB%A4)\n5. [模块的整体加载](http://es6.ruanyifeng.com/#docs/module#%E6%A8%A1%E5%9D%97%E7%9A%84%E6%95%B4%E4%BD%93%E5%8A%A0%E8%BD%BD)\n6. [export default 命令](http://es6.ruanyifeng.com/#docs/module#export%20default%20%E5%91%BD%E4%BB%A4)\n7. [export 与 import 的复合写法](http://es6.ruanyifeng.com/#docs/module#export%20%E4%B8%8E%20import%20%E7%9A%84%E5%A4%8D%E5%90%88%E5%86%99%E6%B3%95)\n8. [模块的继承](http://es6.ruanyifeng.com/#docs/module#%E6%A8%A1%E5%9D%97%E7%9A%84%E7%BB%A7%E6%89%BF)\n9. [跨模块常量](http://es6.ruanyifeng.com/#docs/module#%E8%B7%A8%E6%A8%A1%E5%9D%97%E5%B8%B8%E9%87%8F)\n10. [import()](http://es6.ruanyifeng.com/#docs/module#import())\n\n## 概述\n\n历史上，JavaScript 一直没有模块（module）体系，无法将一个大程序拆分成互相依赖的小文件，再用简单的方法拼装起来。其他语言都有这项功能，比如 Ruby 的`require`、Python 的`import`，甚至就连 CSS 都有`@import`，但是 JavaScript 任何这方面的支持都没有，这对开发大型的、复杂的项目形成了巨大障碍。\n\n在 ES6 之前，社区制定了一些模块加载方案，最主要的有 CommonJS 和 AMD 两种。前者用于服务器，后者用于浏览器。ES6 在语言标准的层面上，实现了模块功能，而且实现得相当简单，完全可以取代 CommonJS 和 AMD 规范，成为浏览器和服务器通用的模块解决方案。\n\nES6 模块的设计思想是尽量的静态化，使得编译时就能确定模块的依赖关系，以及输入和输出的变量。CommonJS 和 AMD 模块，都只能在运行时确定这些东西。比如，CommonJS 模块就是对象，输入时必须查找对象属性。\n\n```javascript\n// CommonJS模块\nlet { stat, exists, readFile } = require(\'fs\');\n\n// 等同于\nlet _fs = require(\'fs\');\nlet stat = _fs.stat;\nlet exists = _fs.exists;\nlet readfile = _fs.readfile;\n```\n\n上面代码的实质是整体加载`fs`模块（即加载`fs`的所有方法），生成一个对象（`_fs`），然后再从这个对象上面读取 3 个方法。这种加载称为“运行时加载”，因为只有运行时才能得到这个对象，导致完全没办法在编译时做“静态优化”。\n\nES6 模块不是对象，而是通过`export`命令显式指定输出的代码，再通过`import`命令输入。\n\n```javascript\n// ES6模块\nimport { stat, exists, readFile } from \'fs\';\n```\n\n上面代码的实质是从`fs`模块加载 3 个方法，其他方法不加载。这种加载称为“编译时加载”或者静态加载，即 ES6 可以在编译时就完成模块加载，效率要比 CommonJS 模块的加载方式高。当然，这也导致了没法引用 ES6 模块本身，因为它不是对象。\n\n由于 ES6 模块是编译时加载，使得静态分析成为可能。有了它，就能进一步拓宽 JavaScript 的语法，比如引入宏（macro）和类型检验（type system）这些只能靠静态分析实现的功能。\n\n除了静态加载带来的各种好处，ES6 模块还有以下好处。\n\n- 不再需要`UMD`模块格式了，将来服务器和浏览器都会支持 ES6 模块格式。目前，通过各种工具库，其实已经做到了这一点。\n- 将来浏览器的新 API 就能用模块格式提供，不再必须做成全局变量或者`navigator`对象的属性。\n- 不再需要对象作为命名空间（比如`Math`对象），未来这些功能可以通过模块提供。\n\n本章介绍 ES6 模块的语法，下一章介绍如何在浏览器和 Node 之中，加载 ES6 模块。\n\n## 严格模式\n\nES6 的模块自动采用严格模式，不管你有没有在模块头部加上`"use strict";`。\n\n严格模式主要有以下限制。\n\n- 变量必须声明后再使用\n- 函数的参数不能有同名属性，否则报错\n- 不能使用`with`语句\n- 不能对只读属性赋值，否则报错\n- 不能使用前缀 0 表示八进制数，否则报错\n- 不能删除不可删除的属性，否则报错\n- 不能删除变量`delete prop`，会报错，只能删除属性`delete global[prop]`\n- `eval`不会在它的外层作用域引入变量\n- `eval`和`arguments`不能被重新赋值\n- `arguments`不会自动反映函数参数的变化\n- 不能使用`arguments.callee`\n- 不能使用`arguments.caller`\n- 禁止`this`指向全局对象\n- 不能使用`fn.caller`和`fn.arguments`获取函数调用的堆栈\n- 增加了保留字（比如`protected`、`static`和`interface`）\n\n上面这些限制，模块都必须遵守。由于严格模式是 ES5 引入的，不属于 ES6，所以请参阅相关 ES5 书籍，本书不再详细介绍了。\n\n其中，尤其需要注意`this`的限制。ES6 模块之中，顶层的`this`指向`undefined`，即不应该在顶层代码使用`this`。\n\n## export 命令\n\n模块功能主要由两个命令构成：`export`和`import`。`export`命令用于规定模块的对外接口，`import`命令用于输入其他模块提供的功能。\n\n一个模块就是一个独立的文件。该文件内部的所有变量，外部无法获取。如果你希望外部能够读取模块内部的某个变量，就必须使用`export`关键字输出该变量。下面是一个 JS 文件，里面使用`export`命令输出变量。\n\n```javascript\n// profile.js\nexport var firstName = \'Michael\';\nexport var lastName = \'Jackson\';\nexport var year = 1958;\n```\n\n上面代码是`profile.js`文件，保存了用户信息。ES6 将其视为一个模块，里面用`export`命令对外部输出了三个变量。\n\n`export`的写法，除了像上面这样，还有另外一种。\n\n```javascript\n// profile.js\nvar firstName = \'Michael\';\nvar lastName = \'Jackson\';\nvar year = 1958;\n\nexport {firstName, lastName, year};\n```\n\n上面代码在`export`命令后面，使用大括号指定所要输出的一组变量。它与前一种写法（直接放置在`var`语句前）是等价的，但是应该优先考虑使用这种写法。因为这样就可以在脚本尾部，一眼看清楚输出了哪些变量。\n\n`export`命令除了输出变量，还可以输出函数或类（class）。\n\n```javascript\nexport function multiply(x, y) {\n  return x * y;\n};\n```\n\n上面代码对外输出一个函数`multiply`。\n\n通常情况下，`export`输出的变量就是本来的名字，但是可以使用`as`关键字重命名。\n\n```javascript\nfunction v1() { ... }\nfunction v2() { ... }\n\nexport {\n  v1 as streamV1,\n  v2 as streamV2,\n  v2 as streamLatestVersion\n};\n```\n\n上面代码使用`as`关键字，重命名了函数`v1`和`v2`的对外接口。重命名后，`v2`可以用不同的名字输出两次。\n\n需要特别注意的是，`export`命令规定的是对外的接口，必须与模块内部的变量建立一一对应关系。\n\n```javascript\n// 报错\nexport 1;\n\n// 报错\nvar m = 1;\nexport m;\n```\n\n上面两种写法都会报错，因为没有提供对外的接口。第一种写法直接输出 1，第二种写法通过变量`m`，还是直接输出 1。`1`只是一个值，不是接口。正确的写法是下面这样。\n\n```javascript\n// 写法一\nexport var m = 1;\n\n// 写法二\nvar m = 1;\nexport {m};\n\n// 写法三\nvar n = 1;\nexport {n as m};\n```\n\n上面三种写法都是正确的，规定了对外的接口`m`。其他脚本可以通过这个接口，取到值`1`。它们的实质是，在接口名与模块内部变量之间，建立了一一对应的关系。\n\n同样的，`function`和`class`的输出，也必须遵守这样的写法。\n\n```javascript\n// 报错\nfunction f() {}\nexport f;\n\n// 正确\nexport function f() {};\n\n// 正确\nfunction f() {}\nexport {f};\n```\n\n另外，`export`语句输出的接口，与其对应的值是动态绑定关系，即通过该接口，可以取到模块内部实时的值。\n\n```javascript\nexport var foo = \'bar\';\nsetTimeout(() => foo = \'baz\', 500);\n```\n\n上面代码输出变量`foo`，值为`bar`，500 毫秒之后变成`baz`。\n\n这一点与 CommonJS 规范完全不同。CommonJS 模块输出的是值的缓存，不存在动态更新，详见下文《Module 的加载实现》一节。\n\n最后，`export`命令可以出现在模块的任何位置，只要处于模块顶层就可以。如果处于块级作用域内，就会报错，下一节的`import`命令也是如此。这是因为处于条件代码块之中，就没法做静态优化了，违背了 ES6 模块的设计初衷。\n\n```javascript\nfunction foo() {\n  export default \'bar\' // SyntaxError\n}\nfoo()\n```\n\n上面代码中，`export`语句放在函数之中，结果报错。\n\n## import 命令\n\n使用`export`命令定义了模块的对外接口以后，其他 JS 文件就可以通过`import`命令加载这个模块。\n\n```javascript\n// main.js\nimport {firstName, lastName, year} from \'./profile.js\';\n\nfunction setName(element) {\n  element.textContent = firstName + \' \' + lastName;\n}\n```\n\n上面代码的`import`命令，用于加载`profile.js`文件，并从中输入变量。`import`命令接受一对大括号，里面指定要从其他模块导入的变量名。大括号里面的变量名，必须与被导入模块（`profile.js`）对外接口的名称相同。\n\n如果想为输入的变量重新取一个名字，`import`命令要使用`as`关键字，将输入的变量重命名。\n\n```javascript\nimport { lastName as surname } from \'./profile.js\';\n```\n\n`import`命令输入的变量都是只读的，因为它的本质是输入接口。也就是说，不允许在加载模块的脚本里面，改写接口。\n\n```javascript\nimport {a} from \'./xxx.js\'\n\na = {}; // Syntax Error : \'a\' is read-only;\n```\n\n上面代码中，脚本加载了变量`a`，对其重新赋值就会报错，因为`a`是一个只读的接口。但是，如果`a`是一个对象，改写`a`的属性是允许的。\n\n```javascript\nimport {a} from \'./xxx.js\'\n\na.foo = \'hello\'; // 合法操作\n```\n\n上面代码中，`a`的属性可以成功改写，并且其他模块也可以读到改写后的值。不过，这种写法很难查错，建议凡是输入的变量，都当作完全只读，轻易不要改变它的属性。\n\n`import`后面的`from`指定模块文件的位置，可以是相对路径，也可以是绝对路径，`.js`后缀可以省略。如果只是模块名，不带有路径，那么必须有配置文件，告诉 JavaScript 引擎该模块的位置。\n\n```javascript\nimport {myMethod} from \'util\';\n```\n\n上面代码中，`util`是模块文件名，由于不带有路径，必须通过配置，告诉引擎怎么取到这个模块。\n\n注意，`import`命令具有提升效果，会提升到整个模块的头部，首先执行。\n\n```javascript\nfoo();\n\nimport { foo } from \'my_module\';\n```\n\n上面的代码不会报错，因为`import`的执行早于`foo`的调用。这种行为的本质是，`import`命令是编译阶段执行的，在代码运行之前。\n\n由于`import`是静态执行，所以不能使用表达式和变量，这些只有在运行时才能得到结果的语法结构。\n\n```javascript\n// 报错\nimport { \'f\' + \'oo\' } from \'my_module\';\n\n// 报错\nlet module = \'my_module\';\nimport { foo } from module;\n\n// 报错\nif (x === 1) {\n  import { foo } from \'module1\';\n} else {\n  import { foo } from \'module2\';\n}\n```\n\n上面三种写法都会报错，因为它们用到了表达式、变量和`if`结构。在静态分析阶段，这些语法都是没法得到值的。\n\n最后，`import`语句会执行所加载的模块，因此可以有下面的写法。\n\n```javascript\nimport \'lodash\';\n```\n\n上面代码仅仅执行`lodash`模块，但是不输入任何值。\n\n如果多次重复执行同一句`import`语句，那么只会执行一次，而不会执行多次。\n\n```javascript\nimport \'lodash\';\nimport \'lodash\';\n```\n\n上面代码加载了两次`lodash`，但是只会执行一次。\n\n```javascript\nimport { foo } from \'my_module\';\nimport { bar } from \'my_module\';\n\n// 等同于\nimport { foo, bar } from \'my_module\';\n```\n\n上面代码中，虽然`foo`和`bar`在两个语句中加载，但是它们对应的是同一个`my_module`实例。也就是说，`import`语句是 Singleton 模式。\n\n目前阶段，通过 Babel 转码，CommonJS 模块的`require`命令和 ES6 模块的`import`命令，可以写在同一个模块里面，但是最好不要这样做。因为`import`在静态解析阶段执行，所以它是一个模块之中最早执行的。下面的代码可能不会得到预期结果。\n\n```javascript\nrequire(\'core-js/modules/es6.symbol\');\nrequire(\'core-js/modules/es6.promise\');\nimport React from \'React\';\n```\n\n## 模块的整体加载\n\n除了指定加载某个输出值，还可以使用整体加载，即用星号（`*`）指定一个对象，所有输出值都加载在这个对象上面。\n\n下面是一个`circle.js`文件，它输出两个方法`area`和`circumference`。\n\n```javascript\n// circle.js\n\nexport function area(radius) {\n  return Math.PI * radius * radius;\n}\n\nexport function circumference(radius) {\n  return 2 * Math.PI * radius;\n}\n```\n\n现在，加载这个模块。\n\n```javascript\n// main.js\n\nimport { area, circumference } from \'./circle\';\n\nconsole.log(\'圆面积：\' + area(4));\nconsole.log(\'圆周长：\' + circumference(14));\n```\n\n上面写法是逐一指定要加载的方法，整体加载的写法如下。\n\n```javascript\nimport * as circle from \'./circle\';\n\nconsole.log(\'圆面积：\' + circle.area(4));\nconsole.log(\'圆周长：\' + circle.circumference(14));\n```\n\n注意，模块整体加载所在的那个对象（上例是`circle`），应该是可以静态分析的，所以不允许运行时改变。下面的写法都是不允许的。\n\n```javascript\nimport * as circle from \'./circle\';\n\n// 下面两行都是不允许的\ncircle.foo = \'hello\';\ncircle.area = function () {};\n```\n\n## export default 命令\n\n从前面的例子可以看出，使用`import`命令的时候，用户需要知道所要加载的变量名或函数名，否则无法加载。但是，用户肯定希望快速上手，未必愿意阅读文档，去了解模块有哪些属性和方法。\n\n为了给用户提供方便，让他们不用阅读文档就能加载模块，就要用到`export default`命令，为模块指定默认输出。\n\n```javascript\n// export-default.js\nexport default function () {\n  console.log(\'foo\');\n}\n```\n\n上面代码是一个模块文件`export-default.js`，它的默认输出是一个函数。\n\n其他模块加载该模块时，`import`命令可以为该匿名函数指定任意名字。\n\n```javascript\n// import-default.js\nimport customName from \'./export-default\';\ncustomName(); // \'foo\'\n```\n\n上面代码的`import`命令，可以用任意名称指向`export-default.js`输出的方法，这时就不需要知道原模块输出的函数名。需要注意的是，这时`import`命令后面，不使用大括号。\n\n`export default`命令用在非匿名函数前，也是可以的。\n\n```javascript\n// export-default.js\nexport default function foo() {\n  console.log(\'foo\');\n}\n\n// 或者写成\n\nfunction foo() {\n  console.log(\'foo\');\n}\n\nexport default foo;\n```\n\n上面代码中，`foo`函数的函数名`foo`，在模块外部是无效的。加载的时候，视同匿名函数加载。\n\n下面比较一下默认输出和正常输出。\n\n```javascript\n// 第一组\nexport default function crc32() { // 输出\n  // ...\n}\n\nimport crc32 from \'crc32\'; // 输入\n\n// 第二组\nexport function crc32() { // 输出\n  // ...\n};\n\nimport {crc32} from \'crc32\'; // 输入\n```\n\n上面代码的两组写法，第一组是使用`export default`时，对应的`import`语句不需要使用大括号；第二组是不使用`export default`时，对应的`import`语句需要使用大括号。\n\n`export default`命令用于指定模块的默认输出。显然，一个模块只能有一个默认输出，因此`export default`命令只能使用一次。所以，import命令后面才不用加大括号，因为只可能唯一对应`export default`命令。\n\n本质上，`export default`就是输出一个叫做`default`的变量或方法，然后系统允许你为它取任意名字。所以，下面的写法是有效的。\n\n```javascript\n// modules.js\nfunction add(x, y) {\n  return x * y;\n}\nexport {add as default};\n// 等同于\n// export default add;\n\n// app.js\nimport { default as foo } from \'modules\';\n// 等同于\n// import foo from \'modules\';\n```\n\n正是因为`export default`命令其实只是输出一个叫做`default`的变量，所以它后面不能跟变量声明语句。\n\n```javascript\n// 正确\nexport var a = 1;\n\n// 正确\nvar a = 1;\nexport default a;\n\n// 错误\nexport default var a = 1;\n```\n\n上面代码中，`export default a`的含义是将变量`a`的值赋给变量`default`。所以，最后一种写法会报错。\n\n同样地，因为`export default`命令的本质是将后面的值，赋给`default`变量，所以可以直接将一个值写在`export default`之后。\n\n```javascript\n// 正确\nexport default 42;\n\n// 报错\nexport 42;\n```\n\n上面代码中，后一句报错是因为没有指定对外的接口，而前一句指定对外接口为`default`。\n\n有了`export default`命令，输入模块时就非常直观了，以输入 lodash 模块为例。\n\n```javascript\nimport _ from \'lodash\';\n```\n\n如果想在一条`import`语句中，同时输入默认方法和其他接口，可以写成下面这样。\n\n```javascript\nimport _, { each, each as forEach } from \'lodash\';\n```\n\n对应上面代码的`export`语句如下。\n\n```javascript\nexport default function (obj) {\n  // ···\n}\n\nexport function each(obj, iterator, context) {\n  // ···\n}\n\nexport { each as forEach };\n```\n\n上面代码的最后一行的意思是，暴露出`forEach`接口，默认指向`each`接口，即`forEach`和`each`指向同一个方法。\n\n`export default`也可以用来输出类。\n\n```javascript\n// MyClass.js\nexport default class { ... }\n\n// main.js\nimport MyClass from \'MyClass\';\nlet o = new MyClass();\n```\n\n## export 与 import 的复合写法\n\n如果在一个模块之中，先输入后输出同一个模块，`import`语句可以与`export`语句写在一起。\n\n```javascript\nexport { foo, bar } from \'my_module\';\n\n// 可以简单理解为\nimport { foo, bar } from \'my_module\';\nexport { foo, bar };\n```\n\n上面代码中，`export`和`import`语句可以结合在一起，写成一行。但需要注意的是，写成一行以后，`foo`和`bar`实际上并没有被导入当前模块，只是相当于对外转发了这两个接口，导致当前模块不能直接使用`foo`和`bar`。\n\n模块的接口改名和整体输出，也可以采用这种写法。\n\n```javascript\n// 接口改名\nexport { foo as myFoo } from \'my_module\';\n\n// 整体输出\nexport * from \'my_module\';\n```\n\n默认接口的写法如下。\n\n```javascript\nexport { default } from \'foo\';\n```\n\n具名接口改为默认接口的写法如下。\n\n```javascript\nexport { es6 as default } from \'./someModule\';\n\n// 等同于\nimport { es6 } from \'./someModule\';\nexport default es6;\n```\n\n同样地，默认接口也可以改名为具名接口。\n\n```javascript\nexport { default as es6 } from \'./someModule\';\n```\n\n下面三种`import`语句，没有对应的复合写法。\n\n```javascript\nimport * as someIdentifier from "someModule";\nimport someIdentifier from "someModule";\nimport someIdentifier, { namedIdentifier } from "someModule";\n```\n\n为了做到形式的对称，现在有[提案](https://github.com/leebyron/ecmascript-export-default-from)，提出补上这三种复合写法。\n\n```javascript\nexport * as someIdentifier from "someModule";\nexport someIdentifier from "someModule";\nexport someIdentifier, { namedIdentifier } from "someModule";\n```\n\n## 模块的继承\n\n模块之间也可以继承。\n\n假设有一个`circleplus`模块，继承了`circle`模块。\n\n```javascript\n// circleplus.js\n\nexport * from \'circle\';\nexport var e = 2.71828182846;\nexport default function(x) {\n  return Math.exp(x);\n}\n```\n\n上面代码中的`export *`，表示再输出`circle`模块的所有属性和方法。注意，`export *`命令会忽略`circle`模块的`default`方法。然后，上面代码又输出了自定义的`e`变量和默认方法。\n\n这时，也可以将`circle`的属性或方法，改名后再输出。\n\n```javascript\n// circleplus.js\n\nexport { area as circleArea } from \'circle\';\n```\n\n上面代码表示，只输出`circle`模块的`area`方法，且将其改名为`circleArea`。\n\n加载上面模块的写法如下。\n\n```javascript\n// main.js\n\nimport * as math from \'circleplus\';\nimport exp from \'circleplus\';\nconsole.log(exp(math.e));\n```\n\n上面代码中的`import exp`表示，将`circleplus`模块的默认方法加载为`exp`方法。\n\n## 跨模块常量\n\n本书介绍`const`命令的时候说过，`const`声明的常量只在当前代码块有效。如果想设置跨模块的常量（即跨多个文件），或者说一个值要被多个模块共享，可以采用下面的写法。\n\n```javascript\n// constants.js 模块\nexport const A = 1;\nexport const B = 3;\nexport const C = 4;\n\n// test1.js 模块\nimport * as constants from \'./constants\';\nconsole.log(constants.A); // 1\nconsole.log(constants.B); // 3\n\n// test2.js 模块\nimport {A, B} from \'./constants\';\nconsole.log(A); // 1\nconsole.log(B); // 3\n```\n\n如果要使用的常量非常多，可以建一个专门的`constants`目录，将各种常量写在不同的文件里面，保存在该目录下。\n\n```javascript\n// constants/db.js\nexport const db = {\n  url: \'http://my.couchdbserver.local:5984\',\n  admin_username: \'admin\',\n  admin_password: \'admin password\'\n};\n\n// constants/user.js\nexport const users = [\'root\', \'admin\', \'staff\', \'ceo\', \'chief\', \'moderator\'];\n```\n\n然后，将这些文件输出的常量，合并在`index.js`里面。\n\n```javascript\n// constants/index.js\nexport {db} from \'./db\';\nexport {users} from \'./users\';\n```\n\n使用的时候，直接加载`index.js`就可以了。\n\n```javascript\n// script.js\nimport {db, users} from \'./constants/index\';\n```\n\n## import()\n\n### 简介\n\n前面介绍过，`import`命令会被 JavaScript 引擎静态分析，先于模块内的其他语句执行（`import`命令叫做“连接” binding 其实更合适）。所以，下面的代码会报错。\n\n```javascript\n// 报错\nif (x === 2) {\n  import MyModual from \'./myModual\';\n}\n```\n\n上面代码中，引擎处理`import`语句是在编译时，这时不会去分析或执行`if`语句，所以`import`语句放在`if`代码块之中毫无意义，因此会报句法错误，而不是执行时错误。也就是说，`import`和`export`命令只能在模块的顶层，不能在代码块之中（比如，在`if`代码块之中，或在函数之中）。\n\n这样的设计，固然有利于编译器提高效率，但也导致无法在运行时加载模块。在语法上，条件加载就不可能实现。如果`import`命令要取代 Node 的`require`方法，这就形成了一个障碍。因为`require`是运行时加载模块，`import`命令无法取代`require`的动态加载功能。\n\n```javascript\nconst path = \'./\' + fileName;\nconst myModual = require(path);\n```\n\n上面的语句就是动态加载，`require`到底加载哪一个模块，只有运行时才知道。`import`命令做不到这一点。\n\n因此，有一个[提案](https://github.com/tc39/proposal-dynamic-import)，建议引入`import()`函数，完成动态加载。\n\n```javascript\nimport(specifier)\n```\n\n上面代码中，`import`函数的参数`specifier`，指定所要加载的模块的位置。`import`命令能够接受什么参数，`import()`函数就能接受什么参数，两者区别主要是后者为动态加载。\n\n`import()`返回一个 Promise 对象。下面是一个例子。\n\n```javascript\nconst main = document.querySelector(\'main\');\n\nimport(`./section-modules/${someVariable}.js`)\n  .then(module => {\n    module.loadPageInto(main);\n  })\n  .catch(err => {\n    main.textContent = err.message;\n  });\n```\n\n`import()`函数可以用在任何地方，不仅仅是模块，非模块的脚本也可以使用。它是运行时执行，也就是说，什么时候运行到这一句，就会加载指定的模块。另外，`import()`函数与所加载的模块没有静态连接关系，这点也是与`import`语句不相同。`import()`类似于 Node 的`require`方法，区别主要是前者是异步加载，后者是同步加载。\n\n### 适用场合\n\n下面是`import()`的一些适用场合。\n\n（1）按需加载。\n\n`import()`可以在需要的时候，再加载某个模块。\n\n```javascript\nbutton.addEventListener(\'click\', event => {\n  import(\'./dialogBox.js\')\n  .then(dialogBox => {\n    dialogBox.open();\n  })\n  .catch(error => {\n    /* Error handling */\n  })\n});\n```\n\n上面代码中，`import()`方法放在`click`事件的监听函数之中，只有用户点击了按钮，才会加载这个模块。\n\n（2）条件加载\n\n`import()`可以放在`if`代码块，根据不同的情况，加载不同的模块。\n\n```javascript\nif (condition) {\n  import(\'moduleA\').then(...);\n} else {\n  import(\'moduleB\').then(...);\n}\n```\n\n上面代码中，如果满足条件，就加载模块 A，否则加载模块 B。\n\n（3）动态的模块路径\n\n`import()`允许模块路径动态生成。\n\n```javascript\nimport(f())\n.then(...);\n```\n\n上面代码中，根据函数`f`的返回结果，加载不同的模块。\n\n### 注意点\n\n`import()`加载模块成功以后，这个模块会作为一个对象，当作`then`方法的参数。因此，可以使用对象解构赋值的语法，获取输出接口。\n\n```javascript\nimport(\'./myModule.js\')\n.then(({export1, export2}) => {\n  // ...·\n});\n```\n\n上面代码中，`export1`和`export2`都是`myModule.js`的输出接口，可以解构获得。\n\n如果模块有`default`输出接口，可以用参数直接获得。\n\n```javascript\nimport(\'./myModule.js\')\n.then(myModule => {\n  console.log(myModule.default);\n});\n```\n\n上面的代码也可以使用具名输入的形式。\n\n```javascript\nimport(\'./myModule.js\')\n.then(({default: theDefault}) => {\n  console.log(theDefault);\n});\n```\n\n如果想同时加载多个模块，可以采用下面的写法。\n\n```javascript\nPromise.all([\n  import(\'./module1.js\'),\n  import(\'./module2.js\'),\n  import(\'./module3.js\'),\n])\n.then(([module1, module2, module3]) => {\n   ···\n});\n```\n\n`import()`也可以用在 async 函数之中。\n\n```javascript\nasync function main() {\n  const myModule = await import(\'./myModule.js\');\n  const {export1, export2} = await import(\'./myModule.js\');\n  const [module1, module2, module3] =\n    await Promise.all([\n      import(\'./module1.js\'),\n      import(\'./module2.js\'),\n      import(\'./module3.js\'),\n    ]);\n}\nmain();\n```\n\n\n\n\n\n# Module 的加载实现\n\n1. [浏览器加载](http://es6.ruanyifeng.com/#docs/module-loader#%E6%B5%8F%E8%A7%88%E5%99%A8%E5%8A%A0%E8%BD%BD)\n2. [ES6 模块与 CommonJS 模块的差异](http://es6.ruanyifeng.com/#docs/module-loader#ES6%20%E6%A8%A1%E5%9D%97%E4%B8%8E%20CommonJS%20%E6%A8%A1%E5%9D%97%E7%9A%84%E5%B7%AE%E5%BC%82)\n3. [Node 加载](http://es6.ruanyifeng.com/#docs/module-loader#Node%20%E5%8A%A0%E8%BD%BD)\n4. [循环加载](http://es6.ruanyifeng.com/#docs/module-loader#%E5%BE%AA%E7%8E%AF%E5%8A%A0%E8%BD%BD)\n5. [ES6 模块的转码](http://es6.ruanyifeng.com/#docs/module-loader#ES6%20%E6%A8%A1%E5%9D%97%E7%9A%84%E8%BD%AC%E7%A0%81)\n\n上一章介绍了模块的语法，本章介绍如何在浏览器和 Node 之中加载 ES6 模块，以及实际开发中经常遇到的一些问题（比如循环加载）。\n\n## 浏览器加载\n\n### 传统方法\n\nHTML 网页中，浏览器通过`<script>`标签加载 JavaScript 脚本。\n\n```html\n<!-- 页面内嵌的脚本 -->\n<script type="application/javascript">\n  // module code\n</script>\n\n<!-- 外部脚本 -->\n<script type="application/javascript" src="path/to/myModule.js">\n</script>\n```\n\n上面代码中，由于浏览器脚本的默认语言是 JavaScript，因此`type="application/javascript"`可以省略。\n\n默认情况下，浏览器是同步加载 JavaScript 脚本，即渲染引擎遇到`<script>`标签就会停下来，等到执行完脚本，再继续向下渲染。如果是外部脚本，还必须加入脚本下载的时间。\n\n如果脚本体积很大，下载和执行的时间就会很长，因此造成浏览器堵塞，用户会感觉到浏览器“卡死”了，没有任何响应。这显然是很不好的体验，所以浏览器允许脚本异步加载，下面就是两种异步加载的语法。\n\n```html\n<script src="path/to/myModule.js" defer></script>\n<script src="path/to/myModule.js" async></script>\n```\n\n上面代码中，`<script>`标签打开`defer`或`async`属性，脚本就会异步加载。渲染引擎遇到这一行命令，就会开始下载外部脚本，但不会等它下载和执行，而是直接执行后面的命令。\n\n`defer`与`async`的区别是：`defer`要等到整个页面在内存中正常渲染结束（DOM 结构完全生成，以及其他脚本执行完成），才会执行；`async`一旦下载完，渲染引擎就会中断渲染，执行这个脚本以后，再继续渲染。一句话，`defer`是“渲染完再执行”，`async`是“下载完就执行”。另外，如果有多个`defer`脚本，会按照它们在页面出现的顺序加载，而多个`async`脚本是不能保证加载顺序的。\n\n### 加载规则\n\n浏览器加载 ES6 模块，也使用`<script>`标签，但是要加入`type="module"`属性。\n\n```html\n<script type="module" src="./foo.js"></script>\n```\n\n上面代码在网页中插入一个模块`foo.js`，由于`type`属性设为`module`，所以浏览器知道这是一个 ES6 模块。\n\n浏览器对于带有`type="module"`的`<script>`，都是异步加载，不会造成堵塞浏览器，即等到整个页面渲染完，再执行模块脚本，等同于打开了`<script>`标签的`defer`属性。\n\n```html\n<script type="module" src="./foo.js"></script>\n<!-- 等同于 -->\n<script type="module" src="./foo.js" defer></script>\n```\n\n如果网页有多个`<script type="module">`，它们会按照在页面出现的顺序依次执行。\n\n<script>标签的async属性也可以打开，这时只要加载完成，渲染引擎就会中断渲染立即执行。执行完成后，再恢复渲染。\n\n```html\n<script type="module" src="./foo.js" async></script>\n```\n\n一旦使用了`async`属性，`<script type="module">`就不会按照在页面出现的顺序执行，而是只要该模块加载完成，就执行该模块。\n\nES6 模块也允许内嵌在网页中，语法行为与加载外部脚本完全一致。\n\n```html\n<script type="module">\n  import utils from "./utils.js";\n\n  // other code\n</script>\n```\n\n对于外部的模块脚本（上例是`foo.js`），有几点需要注意。\n\n- 代码是在模块作用域之中运行，而不是在全局作用域运行。模块内部的顶层变量，外部不可见。\n- 模块脚本自动采用严格模式，不管有没有声明`use strict`。\n- 模块之中，可以使用`import`命令加载其他模块（`.js`后缀不可省略，需要提供绝对 URL 或相对 URL），也可以使用`export`命令输出对外接口。\n- 模块之中，顶层的`this`关键字返回`undefined`，而不是指向`window`。也就是说，在模块顶层使用`this`关键字，是无意义的。\n- 同一个模块如果加载多次，将只执行一次。\n\n下面是一个示例模块。\n\n```javascript\nimport utils from \'https://example.com/js/utils.js\';\n\nconst x = 1;\n\nconsole.log(x === window.x); //false\nconsole.log(this === undefined); // true\n```\n\n利用顶层的`this`等于`undefined`这个语法点，可以侦测当前代码是否在 ES6 模块之中。\n\n```javascript\nconst isNotModuleScript = this !== undefined;\n```\n\n## ES6 模块与 CommonJS 模块的差异\n\n讨论 Node 加载 ES6 模块之前，必须了解 ES6 模块与 CommonJS 模块完全不同。\n\n它们有两个重大差异。\n\n- CommonJS 模块输出的是一个值的拷贝，ES6 模块输出的是值的引用。\n- CommonJS 模块是运行时加载，ES6 模块是编译时输出接口。\n\n第二个差异是因为 CommonJS 加载的是一个对象（即`module.exports`属性），该对象只有在脚本运行完才会生成。而 ES6 模块不是对象，它的对外接口只是一种静态定义，在代码静态解析阶段就会生成。\n\n下面重点解释第一个差异。\n\nCommonJS 模块输出的是值的拷贝，也就是说，一旦输出一个值，模块内部的变化就影响不到这个值。请看下面这个模块文件`lib.js`的例子。\n\n```javascript\n// lib.js\nvar counter = 3;\nfunction incCounter() {\n  counter++;\n}\nmodule.exports = {\n  counter: counter,\n  incCounter: incCounter,\n};\n```\n\n上面代码输出内部变量`counter`和改写这个变量的内部方法`incCounter`。然后，在`main.js`里面加载这个模块。\n\n```javascript\n// main.js\nvar mod = require(\'./lib\');\n\nconsole.log(mod.counter);  // 3\nmod.incCounter();\nconsole.log(mod.counter); // 3\n```\n\n上面代码说明，`lib.js`模块加载以后，它的内部变化就影响不到输出的`mod.counter`了。这是因为`mod.counter`是一个原始类型的值，会被缓存。除非写成一个函数，才能得到内部变动后的值。\n\n```javascript\n// lib.js\nvar counter = 3;\nfunction incCounter() {\n  counter++;\n}\nmodule.exports = {\n  get counter() {\n    return counter\n  },\n  incCounter: incCounter,\n};\n```\n\n上面代码中，输出的`counter`属性实际上是一个取值器函数。现在再执行`main.js`，就可以正确读取内部变量`counter`的变动了。\n\n```bash\n$ node main.js\n3\n4\n```\n\nES6 模块的运行机制与 CommonJS 不一样。JS 引擎对脚本静态分析的时候，遇到模块加载命令`import`，就会生成一个只读引用。等到脚本真正执行时，再根据这个只读引用，到被加载的那个模块里面去取值。换句话说，ES6 的`import`有点像 Unix 系统的“符号连接”，原始值变了，`import`加载的值也会跟着变。因此，ES6 模块是动态引用，并且不会缓存值，模块里面的变量绑定其所在的模块。\n\n还是举上面的例子。\n\n```javascript\n// lib.js\nexport let counter = 3;\nexport function incCounter() {\n  counter++;\n}\n\n// main.js\nimport { counter, incCounter } from \'./lib\';\nconsole.log(counter); // 3\nincCounter();\nconsole.log(counter); // 4\n```\n\n上面代码说明，ES6 模块输入的变量`counter`是活的，完全反应其所在模块`lib.js`内部的变化。\n\n再举一个出现在`export`一节中的例子。\n\n```javascript\n// m1.js\nexport var foo = \'bar\';\nsetTimeout(() => foo = \'baz\', 500);\n\n// m2.js\nimport {foo} from \'./m1.js\';\nconsole.log(foo);\nsetTimeout(() => console.log(foo), 500);\n```\n\n上面代码中，`m1.js`的变量`foo`，在刚加载时等于`bar`，过了 500 毫秒，又变为等于`baz`。\n\n让我们看看，`m2.js`能否正确读取这个变化。\n\n```bash\n$ babel-node m2.js\n\nbar\nbaz\n```\n\n上面代码表明，ES6 模块不会缓存运行结果，而是动态地去被加载的模块取值，并且变量总是绑定其所在的模块。\n\n由于 ES6 输入的模块变量，只是一个“符号连接”，所以这个变量是只读的，对它进行重新赋值会报错。\n\n```javascript\n// lib.js\nexport let obj = {};\n\n// main.js\nimport { obj } from \'./lib\';\n\nobj.prop = 123; // OK\nobj = {}; // TypeError\n```\n\n上面代码中，`main.js`从`lib.js`输入变量`obj`，可以对`obj`添加属性，但是重新赋值就会报错。因为变量`obj`指向的地址是只读的，不能重新赋值，这就好比`main.js`创造了一个名为`obj`的`const`变量。\n\n最后，`export`通过接口，输出的是同一个值。不同的脚本加载这个接口，得到的都是同样的实例。\n\n```javascript\n// mod.js\nfunction C() {\n  this.sum = 0;\n  this.add = function () {\n    this.sum += 1;\n  };\n  this.show = function () {\n    console.log(this.sum);\n  };\n}\n\nexport let c = new C();\n```\n\n上面的脚本`mod.js`，输出的是一个`C`的实例。不同的脚本加载这个模块，得到的都是同一个实例。\n\n```javascript\n// x.js\nimport {c} from \'./mod\';\nc.add();\n\n// y.js\nimport {c} from \'./mod\';\nc.show();\n\n// main.js\nimport \'./x\';\nimport \'./y\';\n```\n\n现在执行`main.js`，输出的是`1`。\n\n```bash\n$ babel-node main.js\n1\n```\n\n这就证明了`x.js`和`y.js`加载的都是`C`的同一个实例。\n\n## Node 加载\n\n### 概述\n\nNode 对 ES6 模块的处理比较麻烦，因为它有自己的 CommonJS 模块格式，与 ES6 模块格式是不兼容的。目前的解决方案是，将两者分开，ES6 模块和 CommonJS 采用各自的加载方案。\n\nNode 要求 ES6 模块采用`.mjs`后缀文件名。也就是说，只要脚本文件里面使用`import`或者`export`命令，那么就必须采用`.mjs`后缀名。`require`命令不能加载`.mjs`文件，会报错，只有`import`命令才可以加载`.mjs`文件。反过来，`.mjs`文件里面也不能使用`require`命令，必须使用`import`。\n\n目前，这项功能还在试验阶段。安装 Node v8.5.0 或以上版本，要用`--experimental-modules`参数才能打开该功能。\n\n```bash\n$ node --experimental-modules my-app.mjs\n```\n\n为了与浏览器的`import`加载规则相同，Node 的`.mjs`文件支持 URL 路径。\n\n```javascript\nimport \'./foo?query=1\'; // 加载 ./foo 传入参数 ?query=1\n```\n\n上面代码中，脚本路径带有参数`?query=1`，Node 会按 URL 规则解读。同一个脚本只要参数不同，就会被加载多次，并且保存成不同的缓存。由于这个原因，只要文件名中含有`:`、`%`、`#`、`?`等特殊字符，最好对这些字符进行转义。\n\n目前，Node 的`import`命令只支持加载本地模块（`file:`协议），不支持加载远程模块。\n\n如果模块名不含路径，那么`import`命令会去`node_modules`目录寻找这个模块。\n\n```javascript\nimport \'baz\';\nimport \'abc/123\';\n```\n\n如果模块名包含路径，那么`import`命令会按照路径去寻找这个名字的脚本文件。\n\n```javascript\nimport \'file:///etc/config/app.json\';\nimport \'./foo\';\nimport \'./foo?search\';\nimport \'../bar\';\nimport \'/baz\';\n```\n\n如果脚本文件省略了后缀名，比如`import \'./foo\'`，Node 会依次尝试四个后缀名：`./foo.mjs`、`./foo.js`、`./foo.json`、`./foo.node`。如果这些脚本文件都不存在，Node 就会去加载`./foo/package.json`的`main`字段指定的脚本。如果`./foo/package.json`不存在或者没有`main`字段，那么就会依次加载`./foo/index.mjs`、`./foo/index.js`、`./foo/index.json`、`./foo/index.node`。如果以上四个文件还是都不存在，就会抛出错误。\n\n最后，Node 的`import`命令是异步加载，这一点与浏览器的处理方法相同。\n\n### 内部变量\n\nES6 模块应该是通用的，同一个模块不用修改，就可以用在浏览器环境和服务器环境。为了达到这个目标，Node 规定 ES6 模块之中不能使用 CommonJS 模块的特有的一些内部变量。\n\n首先，就是`this`关键字。ES6 模块之中，顶层的`this`指向`undefined`；CommonJS 模块的顶层`this`指向当前模块，这是两者的一个重大差异。\n\n其次，以下这些顶层变量在 ES6 模块之中都是不存在的。\n\n- `arguments`\n- `require`\n- `module`\n- `exports`\n- `__filename`\n- `__dirname`\n\n如果你一定要使用这些变量，有一个变通方法，就是写一个 CommonJS 模块输出这些变量，然后再用 ES6 模块加载这个 CommonJS 模块。但是这样一来，该 ES6 模块就不能直接用于浏览器环境了，所以不推荐这样做。\n\n```javascript\n// expose.js\nmodule.exports = {__dirname};\n\n// use.mjs\nimport expose from \'./expose.js\';\nconst {__dirname} = expose;\n```\n\n上面代码中，`expose.js`是一个 CommonJS 模块，输出变量`__dirname`，该变量在 ES6 模块之中不存在。ES6 模块加载`expose.js`，就可以得到`__dirname`。\n\n### ES6 模块加载 CommonJS 模块\n\nCommonJS 模块的输出都定义在`module.exports`这个属性上面。Node 的`import`命令加载 CommonJS 模块，Node 会自动将`module.exports`属性，当作模块的默认输出，即等同于`export default xxx`。\n\n下面是一个 CommonJS 模块。\n\n```javascript\n// a.js\nmodule.exports = {\n  foo: \'hello\',\n  bar: \'world\'\n};\n\n// 等同于\nexport default {\n  foo: \'hello\',\n  bar: \'world\'\n};\n```\n\n`import`命令加载上面的模块，`module.exports`会被视为默认输出，即`import`命令实际上输入的是这样一个对象`{ default: module.exports }`。\n\n所以，一共有三种写法，可以拿到 CommonJS 模块的`module.exports`。\n\n```javascript\n// 写法一\nimport baz from \'./a\';\n// baz = {foo: \'hello\', bar: \'world\'};\n\n// 写法二\nimport {default as baz} from \'./a\';\n// baz = {foo: \'hello\', bar: \'world\'};\n\n// 写法三\nimport * as baz from \'./a\';\n// baz = {\n//   get default() {return module.exports;},\n//   get foo() {return this.default.foo}.bind(baz),\n//   get bar() {return this.default.bar}.bind(baz)\n// }\n```\n\n上面代码的第三种写法，可以通过`baz.default`拿到`module.exports`。`foo`属性和`bar`属性就是可以通过这种方法拿到了`module.exports`。\n\n下面是一些例子。\n\n```javascript\n// b.js\nmodule.exports = null;\n\n// es.js\nimport foo from \'./b\';\n// foo = null;\n\nimport * as bar from \'./b\';\n// bar = { default:null };\n```\n\n上面代码中，`es.js`采用第二种写法时，要通过`bar.default`这样的写法，才能拿到`module.exports`。\n\n```javascript\n// c.js\nmodule.exports = function two() {\n  return 2;\n};\n\n// es.js\nimport foo from \'./c\';\nfoo(); // 2\n\nimport * as bar from \'./c\';\nbar.default(); // 2\nbar(); // throws, bar is not a function\n```\n\n上面代码中，`bar`本身是一个对象，不能当作函数调用，只能通过`bar.default`调用。\n\nCommonJS 模块的输出缓存机制，在 ES6 加载方式下依然有效。\n\n```javascript\n// foo.js\nmodule.exports = 123;\nsetTimeout(_ => module.exports = null);\n```\n\n上面代码中，对于加载`foo.js`的脚本，`module.exports`将一直是`123`，而不会变成`null`。\n\n由于 ES6 模块是编译时确定输出接口，CommonJS 模块是运行时确定输出接口，所以采用`import`命令加载 CommonJS 模块时，不允许采用下面的写法。\n\n```javascript\n// 不正确\nimport { readFile } from \'fs\';\n```\n\n上面的写法不正确，因为`fs`是 CommonJS 格式，只有在运行时才能确定`readFile`接口，而`import`命令要求编译时就确定这个接口。解决方法就是改为整体输入。\n\n```javascript\n// 正确的写法一\nimport * as express from \'express\';\nconst app = express.default();\n\n// 正确的写法二\nimport express from \'express\';\nconst app = express();\n```\n\n### CommonJS 模块加载 ES6 模块\n\nCommonJS 模块加载 ES6 模块，不能使用`require`命令，而要使用`import()`函数。ES6 模块的所有输出接口，会成为输入对象的属性。\n\n```javascript\n// es.mjs\nlet foo = { bar: \'my-default\' };\nexport default foo;\n\n// cjs.js\nconst es_namespace = await import(\'./es.mjs\');\n// es_namespace = {\n//   get default() {\n//     ...\n//   }\n// }\nconsole.log(es_namespace.default);\n// { bar:\'my-default\' }\n```\n\n上面代码中，`default`接口变成了`es_namespace.default`属性。\n\n下面是另一个例子。\n\n```javascript\n// es.js\nexport let foo = { bar:\'my-default\' };\nexport { foo as bar };\nexport function f() {};\nexport class c {};\n\n// cjs.js\nconst es_namespace = await import(\'./es\');\n// es_namespace = {\n//   get foo() {return foo;}\n//   get bar() {return foo;}\n//   get f() {return f;}\n//   get c() {return c;}\n// }\n```\n\n## 循环加载\n\n“循环加载”（circular dependency）指的是，`a`脚本的执行依赖`b`脚本，而`b`脚本的执行又依赖`a`脚本。\n\n```javascript\n// a.js\nvar b = require(\'b\');\n\n// b.js\nvar a = require(\'a\');\n```\n\n通常，“循环加载”表示存在强耦合，如果处理不好，还可能导致递归加载，使得程序无法执行，因此应该避免出现。\n\n但是实际上，这是很难避免的，尤其是依赖关系复杂的大项目，很容易出现`a`依赖`b`，`b`依赖`c`，`c`又依赖`a`这样的情况。这意味着，模块加载机制必须考虑“循环加载”的情况。\n\n对于 JavaScript 语言来说，目前最常见的两种模块格式 CommonJS 和 ES6，处理“循环加载”的方法是不一样的，返回的结果也不一样。\n\n### CommonJS 模块的加载原理\n\n介绍 ES6 如何处理“循环加载”之前，先介绍目前最流行的 CommonJS 模块格式的加载原理。\n\nCommonJS 的一个模块，就是一个脚本文件。`require`命令第一次加载该脚本，就会执行整个脚本，然后在内存生成一个对象。\n\n```javascript\n{\n  id: \'...\',\n  exports: { ... },\n  loaded: true,\n  ...\n}\n```\n\n上面代码就是 Node 内部加载模块后生成的一个对象。该对象的`id`属性是模块名，`exports`属性是模块输出的各个接口，`loaded`属性是一个布尔值，表示该模块的脚本是否执行完毕。其他还有很多属性，这里都省略了。\n\n以后需要用到这个模块的时候，就会到`exports`属性上面取值。即使再次执行`require`命令，也不会再次执行该模块，而是到缓存之中取值。也就是说，CommonJS 模块无论加载多少次，都只会在第一次加载时运行一次，以后再加载，就返回第一次运行的结果，除非手动清除系统缓存。\n\n### CommonJS 模块的循环加载\n\nCommonJS 模块的重要特性是加载时执行，即脚本代码在`require`的时候，就会全部执行。一旦出现某个模块被"循环加载"，就只输出已经执行的部分，还未执行的部分不会输出。\n\n让我们来看，Node [官方文档](https://nodejs.org/api/modules.html#modules_cycles)里面的例子。脚本文件`a.js`代码如下。\n\n```javascript\nexports.done = false;\nvar b = require(\'./b.js\');\nconsole.log(\'在 a.js 之中，b.done = %j\', b.done);\nexports.done = true;\nconsole.log(\'a.js 执行完毕\');\n```\n\n上面代码之中，`a.js`脚本先输出一个`done`变量，然后加载另一个脚本文件`b.js`。注意，此时`a.js`代码就停在这里，等待`b.js`执行完毕，再往下执行。\n\n再看`b.js`的代码。\n\n```javascript\nexports.done = false;\nvar a = require(\'./a.js\');\nconsole.log(\'在 b.js 之中，a.done = %j\', a.done);\nexports.done = true;\nconsole.log(\'b.js 执行完毕\');\n```\n\n上面代码之中，`b.js`执行到第二行，就会去加载`a.js`，这时，就发生了“循环加载”。系统会去`a.js`模块对应对象的`exports`属性取值，可是因为`a.js`还没有执行完，从`exports`属性只能取回已经执行的部分，而不是最后的值。\n\n`a.js`已经执行的部分，只有一行。\n\n```javascript\nexports.done = false;\n```\n\n因此，对于`b.js`来说，它从`a.js`只输入一个变量`done`，值为`false`。\n\n然后，`b.js`接着往下执行，等到全部执行完毕，再把执行权交还给`a.js`。于是，`a.js`接着往下执行，直到执行完毕。我们写一个脚本`main.js`，验证这个过程。\n\n```javascript\nvar a = require(\'./a.js\');\nvar b = require(\'./b.js\');\nconsole.log(\'在 main.js 之中, a.done=%j, b.done=%j\', a.done, b.done);\n```\n\n执行`main.js`，运行结果如下。\n\n```bash\n$ node main.js\n\n在 b.js 之中，a.done = false\nb.js 执行完毕\n在 a.js 之中，b.done = true\na.js 执行完毕\n在 main.js 之中, a.done=true, b.done=true\n```\n\n上面的代码证明了两件事。一是，在`b.js`之中，`a.js`没有执行完毕，只执行了第一行。二是，`main.js`执行到第二行时，不会再次执行`b.js`，而是输出缓存的`b.js`的执行结果，即它的第四行。\n\n```javascript\nexports.done = true;\n```\n\n总之，CommonJS 输入的是被输出值的拷贝，不是引用。\n\n另外，由于 CommonJS 模块遇到循环加载时，返回的是当前已经执行的部分的值，而不是代码全部执行后的值，两者可能会有差异。所以，输入变量的时候，必须非常小心。\n\n```javascript\nvar a = require(\'a\'); // 安全的写法\nvar foo = require(\'a\').foo; // 危险的写法\n\nexports.good = function (arg) {\n  return a.foo(\'good\', arg); // 使用的是 a.foo 的最新值\n};\n\nexports.bad = function (arg) {\n  return foo(\'bad\', arg); // 使用的是一个部分加载时的值\n};\n```\n\n上面代码中，如果发生循环加载，`require(\'a\').foo`的值很可能后面会被改写，改用`require(\'a\')`会更保险一点。\n\n### ES6 模块的循环加载\n\nES6 处理“循环加载”与 CommonJS 有本质的不同。ES6 模块是动态引用，如果使用`import`从一个模块加载变量（即`import foo from \'foo\'`），那些变量不会被缓存，而是成为一个指向被加载模块的引用，需要开发者自己保证，真正取值的时候能够取到值。\n\n请看下面这个例子。\n\n```javascript\n// a.mjs\nimport {bar} from \'./b\';\nconsole.log(\'a.mjs\');\nconsole.log(bar);\nexport let foo = \'foo\';\n\n// b.mjs\nimport {foo} from \'./a\';\nconsole.log(\'b.mjs\');\nconsole.log(foo);\nexport let bar = \'bar\';\n```\n\n上面代码中，`a.mjs`加载`b.mjs`，`b.mjs`又加载`a.mjs`，构成循环加载。执行`a.mjs`，结果如下。\n\n```bash\n$ node --experimental-modules a.mjs\nb.mjs\nReferenceError: foo is not defined\n```\n\n上面代码中，执行`a.mjs`以后会报错，`foo`变量未定义，这是为什么？\n\n让我们一行行来看，ES6 循环加载是怎么处理的。首先，执行`a.mjs`以后，引擎发现它加载了`b.mjs`，因此会优先执行`b.mjs`，然后再执行`a.mjs`。接着，执行`b.mjs`的时候，已知它从`a.mjs`输入了`foo`接口，这时不会去执行`a.mjs`，而是认为这个接口已经存在了，继续往下执行。执行到第三行`console.log(foo)`的时候，才发现这个接口根本没定义，因此报错。\n\n解决这个问题的方法，就是让`b.mjs`运行的时候，`foo`已经有定义了。这可以通过将`foo`写成函数来解决。\n\n```javascript\n// a.mjs\nimport {bar} from \'./b\';\nconsole.log(\'a.mjs\');\nconsole.log(bar());\nfunction foo() { return \'foo\' }\nexport {foo};\n\n// b.mjs\nimport {foo} from \'./a\';\nconsole.log(\'b.mjs\');\nconsole.log(foo());\nfunction bar() { return \'bar\' }\nexport {bar};\n```\n\n这时再执行`a.mjs`就可以得到预期结果。\n\n```bash\n$ node --experimental-modules a.mjs\nb.mjs\nfoo\na.mjs\nbar\n```\n\n这是因为函数具有提升作用，在执行`import {bar} from \'./b\'`时，函数`foo`就已经有定义了，所以`b.mjs`加载的时候不会报错。这也意味着，如果把函数`foo`改写成函数表达式，也会报错。\n\n```javascript\n// a.mjs\nimport {bar} from \'./b\';\nconsole.log(\'a.mjs\');\nconsole.log(bar());\nconst foo = () => \'foo\';\nexport {foo};\n```\n\n上面代码的第四行，改成了函数表达式，就不具有提升作用，执行就会报错。\n\n我们再来看 ES6 模块加载器[SystemJS](https://github.com/ModuleLoader/es6-module-loader/blob/master/docs/circular-references-bindings.md)给出的一个例子。\n\n```javascript\n// even.js\nimport { odd } from \'./odd\'\nexport var counter = 0;\nexport function even(n) {\n  counter++;\n  return n === 0 || odd(n - 1);\n}\n\n// odd.js\nimport { even } from \'./even\';\nexport function odd(n) {\n  return n !== 0 && even(n - 1);\n}\n```\n\n上面代码中，`even.js`里面的函数`even`有一个参数`n`，只要不等于 0，就会减去 1，传入加载的`odd()`。`odd.js`也会做类似操作。\n\n运行上面这段代码，结果如下。\n\n```javascript\n$ babel-node\n> import * as m from \'./even.js\';\n> m.even(10);\ntrue\n> m.counter\n6\n> m.even(20)\ntrue\n> m.counter\n17\n```\n\n上面代码中，参数`n`从 10 变为 0 的过程中，`even()`一共会执行 6 次，所以变量`counter`等于 6。第二次调用`even()`时，参数`n`从 20 变为 0，`even()`一共会执行 11 次，加上前面的 6 次，所以变量`counter`等于 17。\n\n这个例子要是改写成 CommonJS，就根本无法执行，会报错。\n\n```javascript\n// even.js\nvar odd = require(\'./odd\');\nvar counter = 0;\nexports.counter = counter;\nexports.even = function (n) {\n  counter++;\n  return n == 0 || odd(n - 1);\n}\n\n// odd.js\nvar even = require(\'./even\').even;\nmodule.exports = function (n) {\n  return n != 0 && even(n - 1);\n}\n```\n\n上面代码中，`even.js`加载`odd.js`，而`odd.js`又去加载`even.js`，形成“循环加载”。这时，执行引擎就会输出`even.js`已经执行的部分（不存在任何结果），所以在`odd.js`之中，变量`even`等于`undefined`，等到后面调用`even(n - 1)`就会报错。\n\n```bash\n$ node\n> var m = require(\'./even\');\n> m.even(10)\nTypeError: even is not a function\n```\n\n## ES6 模块的转码\n\n浏览器目前还不支持 ES6 模块，为了现在就能使用，可以将转为 ES5 的写法。除了 Babel 可以用来转码之外，还有以下两个方法，也可以用来转码。\n\n### ES6 module transpiler\n\n[ES6 module transpiler](https://github.com/esnext/es6-module-transpiler)是 square 公司开源的一个转码器，可以将 ES6 模块转为 CommonJS 模块或 AMD 模块的写法，从而在浏览器中使用。\n\n首先，安装这个转码器。\n\n```bash\n$ npm install -g es6-module-transpiler\n```\n\n然后，使用`compile-modules convert`命令，将 ES6 模块文件转码。\n\n```bash\n$ compile-modules convert file1.js file2.js\n```\n\n`-o`参数可以指定转码后的文件名。\n\n```bash\n$ compile-modules convert -o out.js file1.js\n```\n\n### SystemJS\n\n另一种解决方法是使用 [SystemJS](https://github.com/systemjs/systemjs)。它是一个垫片库（polyfill），可以在浏览器内加载 ES6 模块、AMD 模块和 CommonJS 模块，将其转为 ES5 格式。它在后台调用的是 Google 的 Traceur 转码器。\n\n使用时，先在网页内载入`system.js`文件。\n\n```html\n<script src="system.js"></script>\n```\n\n然后，使用`System.import`方法加载模块文件。\n\n```html\n<script>\n  System.import(\'./app.js\');\n</script>\n```\n\n上面代码中的`./app`，指的是当前目录下的 app.js 文件。它可以是 ES6 模块文件，`System.import`会自动将其转码。\n\n需要注意的是，`System.import`使用异步加载，返回一个 Promise 对象，可以针对这个对象编程。下面是一个模块文件。\n\n```javascript\n// app/es6-file.js:\n\nexport class q {\n  constructor() {\n    this.es6 = \'hello\';\n  }\n}\n```\n\n然后，在网页内加载这个模块文件。\n\n```html\n<script>\n\nSystem.import(\'app/es6-file\').then(function(m) {\n  console.log(new m.q().es6); // hello\n});\n\n</script>\n```\n\n上面代码中，`System.import`方法返回的是一个 Promise 对象，所以可以用`then`方法指定回调函数。\n\n\n\n# 编程风格\n\n1. [块级作用域](http://es6.ruanyifeng.com/#docs/style#%E5%9D%97%E7%BA%A7%E4%BD%9C%E7%94%A8%E5%9F%9F)\n2. [字符串](http://es6.ruanyifeng.com/#docs/style#%E5%AD%97%E7%AC%A6%E4%B8%B2)\n3. [解构赋值](http://es6.ruanyifeng.com/#docs/style#%E8%A7%A3%E6%9E%84%E8%B5%8B%E5%80%BC)\n4. [对象](http://es6.ruanyifeng.com/#docs/style#%E5%AF%B9%E8%B1%A1)\n5. [数组](http://es6.ruanyifeng.com/#docs/style#%E6%95%B0%E7%BB%84)\n6. [函数](http://es6.ruanyifeng.com/#docs/style#%E5%87%BD%E6%95%B0)\n7. [Map 结构](http://es6.ruanyifeng.com/#docs/style#Map%20%E7%BB%93%E6%9E%84)\n8. [Class](http://es6.ruanyifeng.com/#docs/style#Class)\n9. [模块](http://es6.ruanyifeng.com/#docs/style#%E6%A8%A1%E5%9D%97)\n10. [ESLint 的使用](http://es6.ruanyifeng.com/#docs/style#ESLint%20%E7%9A%84%E4%BD%BF%E7%94%A8)\n\n本章探讨如何将 ES6 的新语法，运用到编码实践之中，与传统的 JavaScript 语法结合在一起，写出合理的、易于阅读和维护的代码。\n\n多家公司和组织已经公开了它们的风格规范，下面的内容主要参考了 [Airbnb](https://github.com/airbnb/javascript) 公司的 JavaScript 风格规范。\n\n## 块级作用域\n\n**（1）let 取代 var**\n\nES6 提出了两个新的声明变量的命令：`let`和`const`。其中，`let`完全可以取代`var`，因为两者语义相同，而且`let`没有副作用。\n\n```javascript\n\'use strict\';\n\nif (true) {\n  let x = \'hello\';\n}\n\nfor (let i = 0; i < 10; i++) {\n  console.log(i);\n}\n```\n\n上面代码如果用`var`替代`let`，实际上就声明了两个全局变量，这显然不是本意。变量应该只在其声明的代码块内有效，`var`命令做不到这一点。\n\n`var`命令存在变量提升效用，`let`命令没有这个问题。\n\n```javascript\n\'use strict\';\n\nif (true) {\n  console.log(x); // ReferenceError\n  let x = \'hello\';\n}\n```\n\n上面代码如果使用`var`替代`let`，`console.log`那一行就不会报错，而是会输出`undefined`，因为变量声明提升到代码块的头部。这违反了变量先声明后使用的原则。\n\n所以，建议不再使用`var`命令，而是使用`let`命令取代。\n\n**（2）全局常量和线程安全**\n\n在`let`和`const`之间，建议优先使用`const`，尤其是在全局环境，不应该设置变量，只应设置常量。\n\n`const`优于`let`有几个原因。一个是`const`可以提醒阅读程序的人，这个变量不应该改变；另一个是`const`比较符合函数式编程思想，运算不改变值，只是新建值，而且这样也有利于将来的分布式运算；最后一个原因是 JavaScript 编译器会对`const`进行优化，所以多使用`const`，有利于提高程序的运行效率，也就是说`let`和`const`的本质区别，其实是编译器内部的处理不同。\n\n```javascript\n// bad\nvar a = 1, b = 2, c = 3;\n\n// good\nconst a = 1;\nconst b = 2;\nconst c = 3;\n\n// best\nconst [a, b, c] = [1, 2, 3];\n```\n\n`const`声明常量还有两个好处，一是阅读代码的人立刻会意识到不应该修改这个值，二是防止了无意间修改变量值所导致的错误。\n\n所有的函数都应该设置为常量。\n\n长远来看，JavaScript 可能会有多线程的实现（比如 Intel 公司的 River Trail 那一类的项目），这时`let`表示的变量，只应出现在单线程运行的代码中，不能是多线程共享的，这样有利于保证线程安全。\n\n## 字符串\n\n静态字符串一律使用单引号或反引号，不使用双引号。动态字符串使用反引号。\n\n```javascript\n// bad\nconst a = "foobar";\nconst b = \'foo\' + a + \'bar\';\n\n// acceptable\nconst c = `foobar`;\n\n// good\nconst a = \'foobar\';\nconst b = `foo${a}bar`;\n```\n\n## 解构赋值\n\n使用数组成员对变量赋值时，优先使用解构赋值。\n\n```javascript\nconst arr = [1, 2, 3, 4];\n\n// bad\nconst first = arr[0];\nconst second = arr[1];\n\n// good\nconst [first, second] = arr;\n```\n\n函数的参数如果是对象的成员，优先使用解构赋值。\n\n```javascript\n// bad\nfunction getFullName(user) {\n  const firstName = user.firstName;\n  const lastName = user.lastName;\n}\n\n// good\nfunction getFullName(obj) {\n  const { firstName, lastName } = obj;\n}\n\n// best\nfunction getFullName({ firstName, lastName }) {\n}\n```\n\n如果函数返回多个值，优先使用对象的解构赋值，而不是数组的解构赋值。这样便于以后添加返回值，以及更改返回值的顺序。\n\n```javascript\n// bad\nfunction processInput(input) {\n  return [left, right, top, bottom];\n}\n\n// good\nfunction processInput(input) {\n  return { left, right, top, bottom };\n}\n\nconst { left, right } = processInput(input);\n```\n\n## 对象\n\n单行定义的对象，最后一个成员不以逗号结尾。多行定义的对象，最后一个成员以逗号结尾。\n\n```javascript\n// bad\nconst a = { k1: v1, k2: v2, };\nconst b = {\n  k1: v1,\n  k2: v2\n};\n\n// good\nconst a = { k1: v1, k2: v2 };\nconst b = {\n  k1: v1,\n  k2: v2,\n};\n```\n\n对象尽量静态化，一旦定义，就不得随意添加新的属性。如果添加属性不可避免，要使用`Object.assign`方法。\n\n```javascript\n// bad\nconst a = {};\na.x = 3;\n\n// if reshape unavoidable\nconst a = {};\nObject.assign(a, { x: 3 });\n\n// good\nconst a = { x: null };\na.x = 3;\n```\n\n如果对象的属性名是动态的，可以在创造对象的时候，使用属性表达式定义。\n\n```javascript\n// bad\nconst obj = {\n  id: 5,\n  name: \'San Francisco\',\n};\nobj[getKey(\'enabled\')] = true;\n\n// good\nconst obj = {\n  id: 5,\n  name: \'San Francisco\',\n  [getKey(\'enabled\')]: true,\n};\n```\n\n上面代码中，对象`obj`的最后一个属性名，需要计算得到。这时最好采用属性表达式，在新建`obj`的时候，将该属性与其他属性定义在一起。这样一来，所有属性就在一个地方定义了。\n\n另外，对象的属性和方法，尽量采用简洁表达法，这样易于描述和书写。\n\n```javascript\nvar ref = \'some value\';\n\n// bad\nconst atom = {\n  ref: ref,\n\n  value: 1,\n\n  addValue: function (value) {\n    return atom.value + value;\n  },\n};\n\n// good\nconst atom = {\n  ref,\n\n  value: 1,\n\n  addValue(value) {\n    return atom.value + value;\n  },\n};\n```\n\n## 数组\n\n使用扩展运算符（...）拷贝数组。\n\n```javascript\n// bad\nconst len = items.length;\nconst itemsCopy = [];\nlet i;\n\nfor (i = 0; i < len; i++) {\n  itemsCopy[i] = items[i];\n}\n\n// good\nconst itemsCopy = [...items];\n```\n\n使用 Array.from 方法，将类似数组的对象转为数组。\n\n```javascript\nconst foo = document.querySelectorAll(\'.foo\');\nconst nodes = Array.from(foo);\n```\n\n## 函数\n\n立即执行函数可以写成箭头函数的形式。\n\n```javascript\n(() => {\n  console.log(\'Welcome to the Internet.\');\n})();\n```\n\n那些需要使用函数表达式的场合，尽量用箭头函数代替。因为这样更简洁，而且绑定了 this。\n\n```javascript\n// bad\n[1, 2, 3].map(function (x) {\n  return x * x;\n});\n\n// good\n[1, 2, 3].map((x) => {\n  return x * x;\n});\n\n// best\n[1, 2, 3].map(x => x * x);\n```\n\n箭头函数取代`Function.prototype.bind`，不应再用 self/_this/that 绑定 this。\n\n```javascript\n// bad\nconst self = this;\nconst boundMethod = function(...params) {\n  return method.apply(self, params);\n}\n\n// acceptable\nconst boundMethod = method.bind(this);\n\n// best\nconst boundMethod = (...params) => method.apply(this, params);\n```\n\n简单的、单行的、不会复用的函数，建议采用箭头函数。如果函数体较为复杂，行数较多，还是应该采用传统的函数写法。\n\n所有配置项都应该集中在一个对象，放在最后一个参数，布尔值不可以直接作为参数。\n\n```javascript\n// bad\nfunction divide(a, b, option = false ) {\n}\n\n// good\nfunction divide(a, b, { option = false } = {}) {\n}\n```\n\n不要在函数体内使用 arguments 变量，使用 rest 运算符（...）代替。因为 rest 运算符显式表明你想要获取参数，而且 arguments 是一个类似数组的对象，而 rest 运算符可以提供一个真正的数组。\n\n```javascript\n// bad\nfunction concatenateAll() {\n  const args = Array.prototype.slice.call(arguments);\n  return args.join(\'\');\n}\n\n// good\nfunction concatenateAll(...args) {\n  return args.join(\'\');\n}\n```\n\n使用默认值语法设置函数参数的默认值。\n\n```javascript\n// bad\nfunction handleThings(opts) {\n  opts = opts || {};\n}\n\n// good\nfunction handleThings(opts = {}) {\n  // ...\n}\n```\n\n## Map 结构\n\n注意区分 Object 和 Map，只有模拟现实世界的实体对象时，才使用 Object。如果只是需要`key: value`的数据结构，使用 Map 结构。因为 Map 有内建的遍历机制。\n\n```javascript\nlet map = new Map(arr);\n\nfor (let key of map.keys()) {\n  console.log(key);\n}\n\nfor (let value of map.values()) {\n  console.log(value);\n}\n\nfor (let item of map.entries()) {\n  console.log(item[0], item[1]);\n}\n```\n\n## Class\n\n总是用 Class，取代需要 prototype 的操作。因为 Class 的写法更简洁，更易于理解。\n\n```javascript\n// bad\nfunction Queue(contents = []) {\n  this._queue = [...contents];\n}\nQueue.prototype.pop = function() {\n  const value = this._queue[0];\n  this._queue.splice(0, 1);\n  return value;\n}\n\n// good\nclass Queue {\n  constructor(contents = []) {\n    this._queue = [...contents];\n  }\n  pop() {\n    const value = this._queue[0];\n    this._queue.splice(0, 1);\n    return value;\n  }\n}\n```\n\n使用`extends`实现继承，因为这样更简单，不会有破坏`instanceof`运算的危险。\n\n```javascript\n// bad\nconst inherits = require(\'inherits\');\nfunction PeekableQueue(contents) {\n  Queue.apply(this, contents);\n}\ninherits(PeekableQueue, Queue);\nPeekableQueue.prototype.peek = function() {\n  return this._queue[0];\n}\n\n// good\nclass PeekableQueue extends Queue {\n  peek() {\n    return this._queue[0];\n  }\n}\n```\n\n## 模块\n\n首先，Module 语法是 JavaScript 模块的标准写法，坚持使用这种写法。使用`import`取代`require`。\n\n```javascript\n// bad\nconst moduleA = require(\'moduleA\');\nconst func1 = moduleA.func1;\nconst func2 = moduleA.func2;\n\n// good\nimport { func1, func2 } from \'moduleA\';\n```\n\n使用`export`取代`module.exports`。\n\n```javascript\n// commonJS的写法\nvar React = require(\'react\');\n\nvar Breadcrumbs = React.createClass({\n  render() {\n    return <nav />;\n  }\n});\n\nmodule.exports = Breadcrumbs;\n\n// ES6的写法\nimport React from \'react\';\n\nclass Breadcrumbs extends React.Component {\n  render() {\n    return <nav />;\n  }\n};\n\nexport default Breadcrumbs;\n```\n\n如果模块只有一个输出值，就使用`export default`，如果模块有多个输出值，就不使用`export default`，`export default`与普通的`export`不要同时使用。\n\n不要在模块输入中使用通配符。因为这样可以确保你的模块之中，有一个默认输出（export default）。\n\n```javascript\n// bad\nimport * as myObject from \'./importModule\';\n\n// good\nimport myObject from \'./importModule\';\n```\n\n如果模块默认输出一个函数，函数名的首字母应该小写。\n\n```javascript\nfunction makeStyleGuide() {\n}\n\nexport default makeStyleGuide;\n```\n\n如果模块默认输出一个对象，对象名的首字母应该大写。\n\n```javascript\nconst StyleGuide = {\n  es6: {\n  }\n};\n\nexport default StyleGuide;\n```\n\n## ESLint 的使用\n\nESLint 是一个语法规则和代码风格的检查工具，可以用来保证写出语法正确、风格统一的代码。\n\n首先，安装 ESLint。\n\n```bash\n$ npm i -g eslint\n```\n\n然后，安装 Airbnb 语法规则，以及 import、a11y、react 插件。\n\n```bash\n$ npm i -g eslint-config-airbnb\n$ npm i -g eslint-plugin-import eslint-plugin-jsx-a11y eslint-plugin-react\n```\n\n最后，在项目的根目录下新建一个`.eslintrc`文件，配置 ESLint。\n\n```javascript\n{\n  "extends": "eslint-config-airbnb"\n}\n```\n\n现在就可以检查，当前项目的代码是否符合预设的规则。\n\n`index.js`文件的代码如下。\n\n```javascript\nvar unusued = \'I have no purpose!\';\n\nfunction greet() {\n    var message = \'Hello, World!\';\n    alert(message);\n}\n\ngreet();\n```\n\n使用 ESLint 检查这个文件，就会报出错误。\n\n```bash\n$ eslint index.js\nindex.js\n  1:1  error  Unexpected var, use let or const instead          no-var\n  1:5  error  unusued is defined but never used                 no-unused-vars\n  4:5  error  Expected indentation of 2 characters but found 4  indent\n  4:5  error  Unexpected var, use let or const instead          no-var\n  5:5  error  Expected indentation of 2 characters but found 4  indent\n\n✖ 5 problems (5 errors, 0 warnings)\n```\n\n上面代码说明，原文件有五个错误，其中两个是不应该使用`var`命令，而要使用`let`或`const`；一个是定义了变量，却没有使用；另外两个是行首缩进为 4 个空格，而不是规定的 2 个空格。\n\n\n\n# 读懂 ECMAScript 规格\n\n1. [概述](http://es6.ruanyifeng.com/#docs/spec#%E6%A6%82%E8%BF%B0)\n2. [术语](http://es6.ruanyifeng.com/#docs/spec#%E6%9C%AF%E8%AF%AD)\n3. [抽象操作的标准流程](http://es6.ruanyifeng.com/#docs/spec#%E6%8A%BD%E8%B1%A1%E6%93%8D%E4%BD%9C%E7%9A%84%E6%A0%87%E5%87%86%E6%B5%81%E7%A8%8B)\n4. [相等运算符](http://es6.ruanyifeng.com/#docs/spec#%E7%9B%B8%E7%AD%89%E8%BF%90%E7%AE%97%E7%AC%A6)\n5. [数组的空位](http://es6.ruanyifeng.com/#docs/spec#%E6%95%B0%E7%BB%84%E7%9A%84%E7%A9%BA%E4%BD%8D)\n6. [数组的 map 方法](http://es6.ruanyifeng.com/#docs/spec#%E6%95%B0%E7%BB%84%E7%9A%84%20map%20%E6%96%B9%E6%B3%95)\n\n## 概述\n\n规格文件是计算机语言的官方标准，详细描述语法规则和实现方法。\n\n一般来说，没有必要阅读规格，除非你要写编译器。因为规格写得非常抽象和精炼，又缺乏实例，不容易理解，而且对于解决实际的应用问题，帮助不大。但是，如果你遇到疑难的语法问题，实在找不到答案，这时可以去查看规格文件，了解语言标准是怎么说的。规格是解决问题的“最后一招”。\n\n这对 JavaScript 语言很有必要。因为它的使用场景复杂，语法规则不统一，例外很多，各种运行环境的行为不一致，导致奇怪的语法问题层出不穷，任何语法书都不可能囊括所有情况。查看规格，不失为一种解决语法问题的最可靠、最权威的终极方法。\n\n本章介绍如何读懂 ECMAScript 6 的规格文件。\n\nECMAScript 6 的规格，可以在 ECMA 国际标准组织的官方网站（[www.ecma-international.org/ecma-262/6.0/](http://www.ecma-international.org/ecma-262/6.0/)）免费下载和在线阅读。\n\n这个规格文件相当庞大，一共有 26 章，A4 打印的话，足足有 545 页。它的特点就是规定得非常细致，每一个语法行为、每一个函数的实现都做了详尽的清晰的描述。基本上，编译器作者只要把每一步翻译成代码就可以了。这很大程度上，保证了所有 ES6 实现都有一致的行为。\n\nECMAScript 6 规格的 26 章之中，第 1 章到第 3 章是对文件本身的介绍，与语言关系不大。第 4 章是对这门语言总体设计的描述，有兴趣的读者可以读一下。第 5 章到第 8 章是语言宏观层面的描述。第 5 章是规格的名词解释和写法的介绍，第 6 章介绍数据类型，第 7 章介绍语言内部用到的抽象操作，第 8 章介绍代码如何运行。第 9 章到第 26 章介绍具体的语法。\n\n对于一般用户来说，除了第 4 章，其他章节都涉及某一方面的细节，不用通读，只要在用到的时候，查阅相关章节即可。\n\n## 术语\n\nES6 规格使用了一些专门的术语，了解这些术语，可以帮助你读懂规格。本节介绍其中的几个。\n\n### 抽象操作\n\n所谓”抽象操作“（abstract operations）就是引擎的一些内部方法，外部不能调用。规格定义了一系列的抽象操作，规定了它们的行为，留给各种引擎自己去实现。\n\n举例来说，`Boolean(value)`的算法，第一步是这样的。\n\n> 1. Let `b` be `ToBoolean(value)`.\n\n这里的`ToBoolean`就是一个抽象操作，是引擎内部求出布尔值的算法。\n\n许多函数的算法都会多次用到同样的步骤，所以 ES6 规格将它们抽出来，定义成”抽象操作“，方便描述。\n\n### Record 和 field\n\nES6 规格将键值对（key-value map）的数据结构称为 Record，其中的每一组键值对称为 field。这就是说，一个 Record 由多个 field 组成，而每个 field 都包含一个键名（key）和一个键值（value）。\n\n### [[Notation]]\n\nES6 规格大量使用`[[Notation]]`这种书写法，比如`[[Value]]`、`[[Writable]]`、`[[Get]]`、`[[Set]]`等等。它用来指代 field 的键名。\n\n举例来说，`obj`是一个 Record，它有一个`Prototype`属性。ES6 规格不会写`obj.Prototype`，而是写`obj.[[Prototype]]`。一般来说，使用`[[Notation]]`这种书写法的属性，都是对象的内部属性。\n\n所有的 JavaScript 函数都有一个内部属性`[[Call]]`，用来运行该函数。\n\n```javascript\nF.[[Call]](V, argumentsList)\n```\n\n上面代码中，`F`是一个函数对象，`[[Call]]`是它的内部方法，`F.[[call]]()`表示运行该函数，`V`表示`[[Call]]`运行时`this`的值，`argumentsList`则是调用时传入函数的参数。\n\n### Completion Record\n\n每一个语句都会返回一个 Completion Record，表示运行结果。每个 Completion Record 有一个`[[Type]]`属性，表示运行结果的类型。\n\n`[[Type]]`属性有五种可能的值。\n\n- normal\n- return\n- throw\n- break\n- continue\n\n如果`[[Type]]`的值是`normal`，就称为 normal completion，表示运行正常。其他的值，都称为 abrupt completion。其中，开发者只需要关注`[[Type]]`为`throw`的情况，即运行出错；`break`、`continue`、`return`这三个值都只出现在特定场景，可以不用考虑。\n\n## 抽象操作的标准流程\n\n抽象操作的运行流程，一般是下面这样。\n\n> 1. Let `resultCompletionRecord` be `AbstractOp()`.\n> 2. If `resultCompletionRecord` is an abrupt completion, return `resultCompletionRecord`.\n> 3. Let `result` be `resultCompletionRecord.[[Value]]`.\n> 4. return `result`.\n\n上面的第一步是调用抽象操作`AbstractOp()`，得到`resultCompletionRecord`，这是一个 Completion Record。第二步，如果这个 Record 属于 abrupt completion，就将`resultCompletionRecord`返回给用户。如果此处没有返回，就表示运行结果正常，所得的值存放在`resultCompletionRecord.[[Value]]`属性。第三步，将这个值记为`result`。第四步，将`result`返回给用户。\n\nES6 规格将这个标准流程，使用简写的方式表达。\n\n> 1. Let `result` be `AbstractOp()`.\n> 2. `ReturnIfAbrupt(result)`.\n> 3. return `result`.\n\n这个简写方式里面的`ReturnIfAbrupt(result)`，就代表了上面的第二步和第三步，即如果有报错，就返回错误，否则取出值。\n\n甚至还有进一步的简写格式。\n\n> 1. Let `result` be `? AbstractOp()`.\n> 2. return `result`.\n\n上面流程的`?`，就代表`AbstractOp()`可能会报错。一旦报错，就返回错误，否则取出值。\n\n除了`?`，ES 6 规格还使用另一个简写符号`!`。\n\n> 1. Let `result` be `! AbstractOp()`.\n> 2. return `result`.\n\n上面流程的`!`，代表`AbstractOp()`不会报错，返回的一定是 normal completion，总是可以取出值。\n\n## 相等运算符\n\n下面通过一些例子，介绍如何使用这份规格。\n\n相等运算符（`==`）是一个很让人头痛的运算符，它的语法行为多变，不符合直觉。这个小节就看看规格怎么规定它的行为。\n\n请看下面这个表达式，请问它的值是多少。\n\n```javascript\n0 == null\n```\n\n如果你不确定答案，或者想知道语言内部怎么处理，就可以去查看规格，[7.2.12 小节](http://www.ecma-international.org/ecma-262/6.0/#sec-abstract-equality-comparison)是对相等运算符（`==`）的描述。\n\n规格对每一种语法行为的描述，都分成两部分：先是总体的行为描述，然后是实现的算法细节。相等运算符的总体描述，只有一句话。\n\n> “The comparison `x == y`, where `x` and `y` are values, produces `true` or `false`.”\n\n上面这句话的意思是，相等运算符用于比较两个值，返回`true`或`false`。\n\n下面是算法细节。\n\n> 1. ReturnIfAbrupt(x).\n>\n> 2. ReturnIfAbrupt(y).\n>\n> 3. If\n>\n>     \n>\n>    ```\n>    Type(x)\n>    ```\n>\n>     \n>\n>    is the same as\n>\n>     \n>\n>    ```\n>    Type(y)\n>    ```\n>\n>    , then\n>\n>    1. Return the result of performing Strict Equality Comparison `x === y`.\n>\n> 4. If `x` is `null` and `y` is `undefined`, return `true`.\n>\n> 5. If `x` is `undefined` and `y` is `null`, return `true`.\n>\n> 6. If `Type(x)` is Number and `Type(y)` is String, return the result of the comparison `x == ToNumber(y)`.\n>\n> 7. If `Type(x)` is String and `Type(y)` is Number, return the result of the comparison `ToNumber(x) == y`.\n>\n> 8. If `Type(x)` is Boolean, return the result of the comparison `ToNumber(x) == y`.\n>\n> 9. If `Type(y)` is Boolean, return the result of the comparison `x == ToNumber(y)`.\n>\n> 10. If `Type(x)` is either String, Number, or Symbol and `Type(y)`is Object, then return the result of the comparison `x == ToPrimitive(y)`.\n>\n> 11. If `Type(x)` is Object and `Type(y)` is either String, Number, or Symbol, then return the result of the comparison `ToPrimitive(x) == y`.\n>\n> 12. Return `false`.\n\n上面这段算法，一共有 12 步，翻译如下。\n\n> 1. 如果`x`不是正常值（比如抛出一个错误），中断执行。\n> 2. 如果`y`不是正常值，中断执行。\n> 3. 如果`Type(x)`与`Type(y)`相同，执行严格相等运算`x === y`。\n> 4. 如果`x`是`null`，`y`是`undefined`，返回`true`。\n> 5. 如果`x`是`undefined`，`y`是`null`，返回`true`。\n> 6. 如果`Type(x)`是数值，`Type(y)`是字符串，返回`x == ToNumber(y)`的结果。\n> 7. 如果`Type(x)`是字符串，`Type(y)`是数值，返回`ToNumber(x) == y`的结果。\n> 8. 如果`Type(x)`是布尔值，返回`ToNumber(x) == y`的结果。\n> 9. 如果`Type(y)`是布尔值，返回`x == ToNumber(y)`的结果。\n> 10. 如果`Type(x)`是字符串或数值或`Symbol`值，`Type(y)`是对象，返回`x == ToPrimitive(y)`的结果。\n> 11. 如果`Type(x)`是对象，`Type(y)`是字符串或数值或`Symbol`值，返回`ToPrimitive(x) == y`的结果。\n> 12. 返回`false`。\n\n由于`0`的类型是数值，`null`的类型是 Null（这是规格[4.3.13 小节](http://www.ecma-international.org/ecma-262/6.0/#sec-terms-and-definitions-null-type)的规定，是内部 Type 运算的结果，跟`typeof`运算符无关）。因此上面的前 11 步都得不到结果，要到第 12 步才能得到`false`。\n\n```javascript\n0 == null // false\n```\n\n## 数组的空位\n\n下面再看另一个例子。\n\n```javascript\nconst a1 = [undefined, undefined, undefined];\nconst a2 = [, , ,];\n\na1.length // 3\na2.length // 3\n\na1[0] // undefined\na2[0] // undefined\n\na1[0] === a2[0] // true\n```\n\n上面代码中，数组`a1`的成员是三个`undefined`，数组`a2`的成员是三个空位。这两个数组很相似，长度都是 3，每个位置的成员读取出来都是`undefined`。\n\n但是，它们实际上存在重大差异。\n\n```javascript\n0 in a1 // true\n0 in a2 // false\n\na1.hasOwnProperty(0) // true\na2.hasOwnProperty(0) // false\n\nObject.keys(a1) // ["0", "1", "2"]\nObject.keys(a2) // []\n\na1.map(n => 1) // [1, 1, 1]\na2.map(n => 1) // [, , ,]\n```\n\n上面代码一共列出了四种运算，数组`a1`和`a2`的结果都不一样。前三种运算（`in`运算符、数组的`hasOwnProperty`方法、`Object.keys`方法）都说明，数组`a2`取不到属性名。最后一种运算（数组的`map`方法）说明，数组`a2`没有发生遍历。\n\n为什么`a1`与`a2`成员的行为不一致？数组的成员是`undefined`或空位，到底有什么不同？\n\n规格的[12.2.5 小节《数组的初始化》](http://www.ecma-international.org/ecma-262/6.0/#sec-array-initializer)给出了答案。\n\n> “Array elements may be elided at the beginning, middle or end of the element list. Whenever a comma in the element list is not preceded by an AssignmentExpression (i.e., a comma at the beginning or after another comma), the missing array element contributes to the length of the Array and increases the index of subsequent elements. Elided array elements are not defined. If an element is elided at the end of an array, that element does not contribute to the length of the Array.”\n\n翻译如下。\n\n> "数组成员可以省略。只要逗号前面没有任何表达式，数组的`length`属性就会加 1，并且相应增加其后成员的位置索引。被省略的成员不会被定义。如果被省略的成员是数组最后一个成员，则不会导致数组`length`属性增加。”\n\n上面的规格说得很清楚，数组的空位会反映在`length`属性，也就是说空位有自己的位置，但是这个位置的值是未定义，即这个值是不存在的。如果一定要读取，结果就是`undefined`（因为`undefined`在 JavaScript 语言中表示不存在）。\n\n这就解释了为什么`in`运算符、数组的`hasOwnProperty`方法、`Object.keys`方法，都取不到空位的属性名。因为这个属性名根本就不存在，规格里面没说要为空位分配属性名(位置索引），只说要为下一个元素的位置索引加 1。\n\n至于为什么数组的`map`方法会跳过空位，请看下一节。\n\n## 数组的 map 方法\n\n规格的[22.1.3.15 小节](http://www.ecma-international.org/ecma-262/6.0/#sec-array.prototype.map)定义了数组的`map`方法。该小节先是总体描述`map`方法的行为，里面没有提到数组空位。\n\n后面的算法描述是这样的。\n\n> 1. Let `O` be `ToObject(this value)`.\n>\n> 2. `ReturnIfAbrupt(O)`.\n>\n> 3. Let `len` be `ToLength(Get(O, "length"))`.\n>\n> 4. `ReturnIfAbrupt(len)`.\n>\n> 5. If `IsCallable(callbackfn)` is `false`, throw a TypeError exception.\n>\n> 6. If `thisArg` was supplied, let `T` be `thisArg`; else let `T` be `undefined`.\n>\n> 7. Let `A` be `ArraySpeciesCreate(O, len)`.\n>\n> 8. `ReturnIfAbrupt(A)`.\n>\n> 9. Let `k` be 0.\n>\n> 10. Repeat, while\n>\n>      \n>\n>     ```\n>     k\n>     ```\n>\n>      \n>\n>     <\n>\n>      \n>\n>     ```\n>     len\n>     ```\n>\n>     1. Let `Pk` be `ToString(k)`.\n>\n>     2. Let `kPresent` be `HasProperty(O, Pk)`.\n>\n>     3. `ReturnIfAbrupt(kPresent)`.\n>\n>     4. If\n>\n>         \n>\n>        ```\n>        kPresent\n>        ```\n>\n>         \n>\n>        is\n>\n>         \n>\n>        ```\n>        true\n>        ```\n>\n>        , then\n>\n>        1. Let `kValue` be `Get(O, Pk)`.\n>        2. `ReturnIfAbrupt(kValue)`.\n>        3. Let `mappedValue` be `Call(callbackfn, T, «kValue, k, O»)`.\n>        4. `ReturnIfAbrupt(mappedValue)`.\n>        5. Let `status` be `CreateDataPropertyOrThrow (A, Pk, mappedValue)`.\n>        6. `ReturnIfAbrupt(status)`.\n>\n>     5. Increase `k` by 1.\n>\n> 11. Return `A`.\n\n翻译如下。\n\n> 1. 得到当前数组的`this`对象\n>\n> 2. 如果报错就返回\n>\n> 3. 求出当前数组的`length`属性\n>\n> 4. 如果报错就返回\n>\n> 5. 如果 map 方法的参数`callbackfn`不可执行，就报错\n>\n> 6. 如果 map 方法的参数之中，指定了`this`，就让`T`等于该参数，否则`T`为`undefined`\n>\n> 7. 生成一个新的数组`A`，跟当前数组的`length`属性保持一致\n>\n> 8. 如果报错就返回\n>\n> 9. 设定`k`等于 0\n>\n> 10. 只要\n>\n>     ```\n>     k\n>     ```\n>\n>     小于当前数组的\n>\n>     ```\n>     length\n>     ```\n>\n>     属性，就重复下面步骤\n>\n>     1. 设定`Pk`等于`ToString(k)`，即将`K`转为字符串\n>\n>     2. 设定`kPresent`等于`HasProperty(O, Pk)`，即求当前数组有没有指定属性\n>\n>     3. 如果报错就返回\n>\n>     4. 如果\n>\n>        ```\n>        kPresent\n>        ```\n>\n>        等于\n>\n>        ```\n>        true\n>        ```\n>\n>        ，则进行下面步骤\n>\n>        1. 设定`kValue`等于`Get(O, Pk)`，取出当前数组的指定属性\n>        2. 如果报错就返回\n>        3. 设定`mappedValue`等于`Call(callbackfn, T, «kValue, k, O»)`，即执行回调函数\n>        4. 如果报错就返回\n>        5. 设定`status`等于`CreateDataPropertyOrThrow (A, Pk, mappedValue)`，即将回调函数的值放入`A`数组的指定位置\n>        6. 如果报错就返回\n>\n>     5. `k`增加 1\n>\n> 11. 返回`A`\n\n仔细查看上面的算法，可以发现，当处理一个全是空位的数组时，前面步骤都没有问题。进入第 10 步中第 2 步时，`kPresent`会报错，因为空位对应的属性名，对于数组来说是不存在的，因此就会返回，不会进行后面的步骤。\n\n```javascript\nconst arr = [, , ,];\narr.map(n => {\n  console.log(n);\n  return 1;\n}) // [, , ,]\n```\n\n上面代码中，`arr`是一个全是空位的数组，`map`方法遍历成员时，发现是空位，就直接跳过，不会进入回调函数。因此，回调函数里面的`console.log`语句根本不会执行，整个`map`方法返回一个全是空位的新数组。\n\nV8 引擎对`map`方法的[实现](https://github.com/v8/v8/blob/44c44521ae11859478b42004f57ea93df52526ee/src/js/array.js#L1347)如下，可以看到跟规格的算法描述完全一致。\n\n```javascript\nfunction ArrayMap(f, receiver) {\n  CHECK_OBJECT_COERCIBLE(this, "Array.prototype.map");\n\n  // Pull out the length so that modifications to the length in the\n  // loop will not affect the looping and side effects are visible.\n  var array = TO_OBJECT(this);\n  var length = TO_LENGTH_OR_UINT32(array.length);\n  return InnerArrayMap(f, receiver, array, length);\n}\n\nfunction InnerArrayMap(f, receiver, array, length) {\n  if (!IS_CALLABLE(f)) throw MakeTypeError(kCalledNonCallable, f);\n\n  var accumulator = new InternalArray(length);\n  var is_array = IS_ARRAY(array);\n  var stepping = DEBUG_IS_STEPPING(f);\n  for (var i = 0; i < length; i++) {\n    if (HAS_INDEX(array, i, is_array)) {\n      var element = array[i];\n      // Prepare break slots for debugger step in.\n      if (stepping) %DebugPrepareStepInIfStepping(f);\n      accumulator[i] = %_Call(f, receiver, element, i, array);\n    }\n  }\n  var result = new GlobalArray();\n  %MoveArrayContents(accumulator, result);\n  return result;\n}\n```\n\n\n\n# ArrayBuffer\n\n1. [ArrayBuffer 对象](http://es6.ruanyifeng.com/#docs/arraybuffer#ArrayBuffer%20%E5%AF%B9%E8%B1%A1)\n2. [TypedArray 视图](http://es6.ruanyifeng.com/#docs/arraybuffer#TypedArray%20%E8%A7%86%E5%9B%BE)\n3. [复合视图](http://es6.ruanyifeng.com/#docs/arraybuffer#%E5%A4%8D%E5%90%88%E8%A7%86%E5%9B%BE)\n4. [DataView 视图](http://es6.ruanyifeng.com/#docs/arraybuffer#DataView%20%E8%A7%86%E5%9B%BE)\n5. [二进制数组的应用](http://es6.ruanyifeng.com/#docs/arraybuffer#%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%95%B0%E7%BB%84%E7%9A%84%E5%BA%94%E7%94%A8)\n6. [SharedArrayBuffer](http://es6.ruanyifeng.com/#docs/arraybuffer#SharedArrayBuffer)\n7. [Atomics 对象](http://es6.ruanyifeng.com/#docs/arraybuffer#Atomics%20%E5%AF%B9%E8%B1%A1)\n\n`ArrayBuffer`对象、`TypedArray`视图和`DataView`视图是 JavaScript 操作二进制数据的一个接口。这些对象早就存在，属于独立的规格（2011 年 2 月发布），ES6 将它们纳入了 ECMAScript 规格，并且增加了新的方法。它们都是以数组的语法处理二进制数据，所以统称为二进制数组。\n\n这个接口的原始设计目的，与 WebGL 项目有关。所谓 WebGL，就是指浏览器与显卡之间的通信接口，为了满足 JavaScript 与显卡之间大量的、实时的数据交换，它们之间的数据通信必须是二进制的，而不能是传统的文本格式。文本格式传递一个 32 位整数，两端的 JavaScript 脚本与显卡都要进行格式转化，将非常耗时。这时要是存在一种机制，可以像 C 语言那样，直接操作字节，将 4 个字节的 32 位整数，以二进制形式原封不动地送入显卡，脚本的性能就会大幅提升。\n\n二进制数组就是在这种背景下诞生的。它很像 C 语言的数组，允许开发者以数组下标的形式，直接操作内存，大大增强了 JavaScript 处理二进制数据的能力，使得开发者有可能通过 JavaScript 与操作系统的原生接口进行二进制通信。\n\n二进制数组由三类对象组成。\n\n**（1）ArrayBuffer对象**：代表内存之中的一段二进制数据，可以通过“视图”进行操作。“视图”部署了数组接口，这意味着，可以用数组的方法操作内存。\n\n**（2）TypedArray视图**：共包括 9 种类型的视图，比如`Uint8Array`（无符号 8 位整数）数组视图, `Int16Array`（16 位整数）数组视图, `Float32Array`（32 位浮点数）数组视图等等。\n\n**（3）DataView视图**：可以自定义复合格式的视图，比如第一个字节是 Uint8（无符号 8 位整数）、第二、三个字节是 Int16（16 位整数）、第四个字节开始是 Float32（32 位浮点数）等等，此外还可以自定义字节序。\n\n简单说，`ArrayBuffer`对象代表原始的二进制数据，TypedArray 视图用来读写简单类型的二进制数据，`DataView`视图用来读写复杂类型的二进制数据。\n\nTypedArray 视图支持的数据类型一共有 9 种（`DataView`视图支持除`Uint8C`以外的其他 8 种）。\n\n| 数据类型 | 字节长度 | 含义                             | 对应的 C 语言类型 |\n| -------- | -------- | -------------------------------- | ----------------- |\n| Int8     | 1        | 8 位带符号整数                   | signed char       |\n| Uint8    | 1        | 8 位不带符号整数                 | unsigned char     |\n| Uint8C   | 1        | 8 位不带符号整数（自动过滤溢出） | unsigned char     |\n| Int16    | 2        | 16 位带符号整数                  | short             |\n| Uint16   | 2        | 16 位不带符号整数                | unsigned short    |\n| Int32    | 4        | 32 位带符号整数                  | int               |\n| Uint32   | 4        | 32 位不带符号的整数              | unsigned int      |\n| Float32  | 4        | 32 位浮点数                      | float             |\n| Float64  | 8        | 64 位浮点数                      | double            |\n\n注意，二进制数组并不是真正的数组，而是类似数组的对象。\n\n很多浏览器操作的 API，用到了二进制数组操作二进制数据，下面是其中的几个。\n\n- File API\n- XMLHttpRequest\n- Fetch API\n- Canvas\n- WebSockets\n\n## ArrayBuffer 对象\n\n### 概述\n\n`ArrayBuffer`对象代表储存二进制数据的一段内存，它不能直接读写，只能通过视图（`TypedArray`视图和`DataView`视图)来读写，视图的作用是以指定格式解读二进制数据。\n\n`ArrayBuffer`也是一个构造函数，可以分配一段可以存放数据的连续内存区域。\n\n```javascript\nconst buf = new ArrayBuffer(32);\n```\n\n上面代码生成了一段 32 字节的内存区域，每个字节的值默认都是 0。可以看到，`ArrayBuffer`构造函数的参数是所需要的内存大小（单位字节）。\n\n为了读写这段内容，需要为它指定视图。`DataView`视图的创建，需要提供`ArrayBuffer`对象实例作为参数。\n\n```javascript\nconst buf = new ArrayBuffer(32);\nconst dataView = new DataView(buf);\ndataView.getUint8(0) // 0\n```\n\n上面代码对一段 32 字节的内存，建立`DataView`视图，然后以不带符号的 8 位整数格式，从头读取 8 位二进制数据，结果得到 0，因为原始内存的`ArrayBuffer`对象，默认所有位都是 0。\n\n另一种 TypedArray 视图，与`DataView`视图的一个区别是，它不是一个构造函数，而是一组构造函数，代表不同的数据格式。\n\n```javascript\nconst buffer = new ArrayBuffer(12);\n\nconst x1 = new Int32Array(buffer);\nx1[0] = 1;\nconst x2 = new Uint8Array(buffer);\nx2[0]  = 2;\n\nx1[0] // 2\n```\n\n上面代码对同一段内存，分别建立两种视图：32 位带符号整数（`Int32Array`构造函数）和 8 位不带符号整数（`Uint8Array`构造函数）。由于两个视图对应的是同一段内存，一个视图修改底层内存，会影响到另一个视图。\n\nTypedArray 视图的构造函数，除了接受`ArrayBuffer`实例作为参数，还可以接受普通数组作为参数，直接分配内存生成底层的`ArrayBuffer`实例，并同时完成对这段内存的赋值。\n\n```javascript\nconst typedArray = new Uint8Array([0,1,2]);\ntypedArray.length // 3\n\ntypedArray[0] = 5;\ntypedArray // [5, 1, 2]\n```\n\n上面代码使用 TypedArray 视图的`Uint8Array`构造函数，新建一个不带符号的 8 位整数视图。可以看到，`Uint8Array`直接使用普通数组作为参数，对底层内存的赋值同时完成。\n\n### ArrayBuffer.prototype.byteLength\n\n`ArrayBuffer`实例的`byteLength`属性，返回所分配的内存区域的字节长度。\n\n```javascript\nconst buffer = new ArrayBuffer(32);\nbuffer.byteLength\n// 32\n```\n\n如果要分配的内存区域很大，有可能分配失败（因为没有那么多的连续空余内存），所以有必要检查是否分配成功。\n\n```javascript\nif (buffer.byteLength === n) {\n  // 成功\n} else {\n  // 失败\n}\n```\n\n### ArrayBuffer.prototype.slice()\n\n`ArrayBuffer`实例有一个`slice`方法，允许将内存区域的一部分，拷贝生成一个新的`ArrayBuffer`对象。\n\n```javascript\nconst buffer = new ArrayBuffer(8);\nconst newBuffer = buffer.slice(0, 3);\n```\n\n上面代码拷贝`buffer`对象的前 3 个字节（从 0 开始，到第 3 个字节前面结束），生成一个新的`ArrayBuffer`对象。`slice`方法其实包含两步，第一步是先分配一段新内存，第二步是将原来那个`ArrayBuffer`对象拷贝过去。\n\n`slice`方法接受两个参数，第一个参数表示拷贝开始的字节序号（含该字节），第二个参数表示拷贝截止的字节序号（不含该字节）。如果省略第二个参数，则默认到原`ArrayBuffer`对象的结尾。\n\n除了`slice`方法，`ArrayBuffer`对象不提供任何直接读写内存的方法，只允许在其上方建立视图，然后通过视图读写。\n\n### ArrayBuffer.isView()\n\n`ArrayBuffer`有一个静态方法`isView`，返回一个布尔值，表示参数是否为`ArrayBuffer`的视图实例。这个方法大致相当于判断参数，是否为 TypedArray 实例或`DataView`实例。\n\n```javascript\nconst buffer = new ArrayBuffer(8);\nArrayBuffer.isView(buffer) // false\n\nconst v = new Int32Array(buffer);\nArrayBuffer.isView(v) // true\n```\n\n## TypedArray 视图\n\n### 概述\n\n`ArrayBuffer`对象作为内存区域，可以存放多种类型的数据。同一段内存，不同数据有不同的解读方式，这就叫做“视图”（view）。`ArrayBuffer`有两种视图，一种是 TypedArray 视图，另一种是`DataView`视图。前者的数组成员都是同一个数据类型，后者的数组成员可以是不同的数据类型。\n\n目前，TypedArray 视图一共包括 9 种类型，每一种视图都是一种构造函数。\n\n- **Int8Array**：8 位有符号整数，长度 1 个字节。\n- **Uint8Array**：8 位无符号整数，长度 1 个字节。\n- **Uint8ClampedArray**：8 位无符号整数，长度 1 个字节，溢出处理不同。\n- **Int16Array**：16 位有符号整数，长度 2 个字节。\n- **Uint16Array**：16 位无符号整数，长度 2 个字节。\n- **Int32Array**：32 位有符号整数，长度 4 个字节。\n- **Uint32Array**：32 位无符号整数，长度 4 个字节。\n- **Float32Array**：32 位浮点数，长度 4 个字节。\n- **Float64Array**：64 位浮点数，长度 8 个字节。\n\n这 9 个构造函数生成的数组，统称为 TypedArray 视图。它们很像普通数组，都有`length`属性，都能用方括号运算符（`[]`）获取单个元素，所有数组的方法，在它们上面都能使用。普通数组与 TypedArray 数组的差异主要在以下方面。\n\n- TypedArray 数组的所有成员，都是同一种类型。\n- TypedArray 数组的成员是连续的，不会有空位。\n- TypedArray 数组成员的默认值为 0。比如，`new Array(10)`返回一个普通数组，里面没有任何成员，只是 10 个空位；`new Uint8Array(10)`返回一个 TypedArray 数组，里面 10 个成员都是 0。\n- TypedArray 数组只是一层视图，本身不储存数据，它的数据都储存在底层的`ArrayBuffer`对象之中，要获取底层对象必须使用`buffer`属性。\n\n### 构造函数\n\nTypedArray 数组提供 9 种构造函数，用来生成相应类型的数组实例。\n\n构造函数有多种用法。\n\n**（1）TypedArray(buffer, byteOffset=0, length?)**\n\n同一个`ArrayBuffer`对象之上，可以根据不同的数据类型，建立多个视图。\n\n```javascript\n// 创建一个8字节的ArrayBuffer\nconst b = new ArrayBuffer(8);\n\n// 创建一个指向b的Int32视图，开始于字节0，直到缓冲区的末尾\nconst v1 = new Int32Array(b);\n\n// 创建一个指向b的Uint8视图，开始于字节2，直到缓冲区的末尾\nconst v2 = new Uint8Array(b, 2);\n\n// 创建一个指向b的Int16视图，开始于字节2，长度为2\nconst v3 = new Int16Array(b, 2, 2);\n```\n\n上面代码在一段长度为 8 个字节的内存（`b`）之上，生成了三个视图：`v1`、`v2`和`v3`。\n\n视图的构造函数可以接受三个参数：\n\n- 第一个参数（必需）：视图对应的底层`ArrayBuffer`对象。\n- 第二个参数（可选）：视图开始的字节序号，默认从 0 开始。\n- 第三个参数（可选）：视图包含的数据个数，默认直到本段内存区域结束。\n\n因此，`v1`、`v2`和`v3`是重叠的：`v1[0]`是一个 32 位整数，指向字节 0 ～字节 3；`v2[0]`是一个 8 位无符号整数，指向字节 2；`v3[0]`是一个 16 位整数，指向字节 2 ～字节 3。只要任何一个视图对内存有所修改，就会在另外两个视图上反应出来。\n\n注意，`byteOffset`必须与所要建立的数据类型一致，否则会报错。\n\n```javascript\nconst buffer = new ArrayBuffer(8);\nconst i16 = new Int16Array(buffer, 1);\n// Uncaught RangeError: start offset of Int16Array should be a multiple of 2\n```\n\n上面代码中，新生成一个 8 个字节的`ArrayBuffer`对象，然后在这个对象的第一个字节，建立带符号的 16 位整数视图，结果报错。因为，带符号的 16 位整数需要两个字节，所以`byteOffset`参数必须能够被 2 整除。\n\n如果想从任意字节开始解读`ArrayBuffer`对象，必须使用`DataView`视图，因为 TypedArray 视图只提供 9 种固定的解读格式。\n\n**（2）TypedArray(length)**\n\n视图还可以不通过`ArrayBuffer`对象，直接分配内存而生成。\n\n```javascript\nconst f64a = new Float64Array(8);\nf64a[0] = 10;\nf64a[1] = 20;\nf64a[2] = f64a[0] + f64a[1];\n```\n\n上面代码生成一个 8 个成员的`Float64Array`数组（共 64 字节），然后依次对每个成员赋值。这时，视图构造函数的参数就是成员的个数。可以看到，视图数组的赋值操作与普通数组的操作毫无两样。\n\n**（3）TypedArray(typedArray)**\n\nTypedArray 数组的构造函数，可以接受另一个 TypedArray 实例作为参数。\n\n```javascript\nconst typedArray = new Int8Array(new Uint8Array(4));\n```\n\n上面代码中，`Int8Array`构造函数接受一个`Uint8Array`实例作为参数。\n\n注意，此时生成的新数组，只是复制了参数数组的值，对应的底层内存是不一样的。新数组会开辟一段新的内存储存数据，不会在原数组的内存之上建立视图。\n\n```javascript\nconst x = new Int8Array([1, 1]);\nconst y = new Int8Array(x);\nx[0] // 1\ny[0] // 1\n\nx[0] = 2;\ny[0] // 1\n```\n\n上面代码中，数组`y`是以数组`x`为模板而生成的，当`x`变动的时候，`y`并没有变动。\n\n如果想基于同一段内存，构造不同的视图，可以采用下面的写法。\n\n```javascript\nconst x = new Int8Array([1, 1]);\nconst y = new Int8Array(x.buffer);\nx[0] // 1\ny[0] // 1\n\nx[0] = 2;\ny[0] // 2\n```\n\n**（4）TypedArray(arrayLikeObject)**\n\n构造函数的参数也可以是一个普通数组，然后直接生成 TypedArray 实例。\n\n```javascript\nconst typedArray = new Uint8Array([1, 2, 3, 4]);\n```\n\n注意，这时 TypedArray 视图会重新开辟内存，不会在原数组的内存上建立视图。\n\n上面代码从一个普通的数组，生成一个 8 位无符号整数的 TypedArray 实例。\n\nTypedArray 数组也可以转换回普通数组。\n\n```javascript\nconst normalArray = [...typedArray];\n// or\nconst normalArray = Array.from(typedArray);\n// or\nconst normalArray = Array.prototype.slice.call(typedArray);\n```\n\n### 数组方法\n\n普通数组的操作方法和属性，对 TypedArray 数组完全适用。\n\n- `TypedArray.prototype.copyWithin(target, start[, end = this.length])`\n- `TypedArray.prototype.entries()`\n- `TypedArray.prototype.every(callbackfn, thisArg?)`\n- `TypedArray.prototype.fill(value, start=0, end=this.length)`\n- `TypedArray.prototype.filter(callbackfn, thisArg?)`\n- `TypedArray.prototype.find(predicate, thisArg?)`\n- `TypedArray.prototype.findIndex(predicate, thisArg?)`\n- `TypedArray.prototype.forEach(callbackfn, thisArg?)`\n- `TypedArray.prototype.indexOf(searchElement, fromIndex=0)`\n- `TypedArray.prototype.join(separator)`\n- `TypedArray.prototype.keys()`\n- `TypedArray.prototype.lastIndexOf(searchElement, fromIndex?)`\n- `TypedArray.prototype.map(callbackfn, thisArg?)`\n- `TypedArray.prototype.reduce(callbackfn, initialValue?)`\n- `TypedArray.prototype.reduceRight(callbackfn, initialValue?)`\n- `TypedArray.prototype.reverse()`\n- `TypedArray.prototype.slice(start=0, end=this.length)`\n- `TypedArray.prototype.some(callbackfn, thisArg?)`\n- `TypedArray.prototype.sort(comparefn)`\n- `TypedArray.prototype.toLocaleString(reserved1?, reserved2?)`\n- `TypedArray.prototype.toString()`\n- `TypedArray.prototype.values()`\n\n上面所有方法的用法，请参阅数组方法的介绍，这里不再重复了。\n\n注意，TypedArray 数组没有`concat`方法。如果想要合并多个 TypedArray 数组，可以用下面这个函数。\n\n```javascript\nfunction concatenate(resultConstructor, ...arrays) {\n  let totalLength = 0;\n  for (let arr of arrays) {\n    totalLength += arr.length;\n  }\n  let result = new resultConstructor(totalLength);\n  let offset = 0;\n  for (let arr of arrays) {\n    result.set(arr, offset);\n    offset += arr.length;\n  }\n  return result;\n}\n\nconcatenate(Uint8Array, Uint8Array.of(1, 2), Uint8Array.of(3, 4))\n// Uint8Array [1, 2, 3, 4]\n```\n\n另外，TypedArray 数组与普通数组一样，部署了 Iterator 接口，所以可以被遍历。\n\n```javascript\nlet ui8 = Uint8Array.of(0, 1, 2);\nfor (let byte of ui8) {\n  console.log(byte);\n}\n// 0\n// 1\n// 2\n```\n\n### 字节序\n\n字节序指的是数值在内存中的表示方式。\n\n```javascript\nconst buffer = new ArrayBuffer(16);\nconst int32View = new Int32Array(buffer);\n\nfor (let i = 0; i < int32View.length; i++) {\n  int32View[i] = i * 2;\n}\n```\n\n上面代码生成一个 16 字节的`ArrayBuffer`对象，然后在它的基础上，建立了一个 32 位整数的视图。由于每个 32 位整数占据 4 个字节，所以一共可以写入 4 个整数，依次为 0，2，4，6。\n\n如果在这段数据上接着建立一个 16 位整数的视图，则可以读出完全不一样的结果。\n\n```javascript\nconst int16View = new Int16Array(buffer);\n\nfor (let i = 0; i < int16View.length; i++) {\n  console.log("Entry " + i + ": " + int16View[i]);\n}\n// Entry 0: 0\n// Entry 1: 0\n// Entry 2: 2\n// Entry 3: 0\n// Entry 4: 4\n// Entry 5: 0\n// Entry 6: 6\n// Entry 7: 0\n```\n\n由于每个 16 位整数占据 2 个字节，所以整个`ArrayBuffer`对象现在分成 8 段。然后，由于 x86 体系的计算机都采用小端字节序（little endian），相对重要的字节排在后面的内存地址，相对不重要字节排在前面的内存地址，所以就得到了上面的结果。\n\n比如，一个占据四个字节的 16 进制数`0x12345678`，决定其大小的最重要的字节是“12”，最不重要的是“78”。小端字节序将最不重要的字节排在前面，储存顺序就是`78563412`；大端字节序则完全相反，将最重要的字节排在前面，储存顺序就是`12345678`。目前，所有个人电脑几乎都是小端字节序，所以 TypedArray 数组内部也采用小端字节序读写数据，或者更准确的说，按照本机操作系统设定的字节序读写数据。\n\n这并不意味大端字节序不重要，事实上，很多网络设备和特定的操作系统采用的是大端字节序。这就带来一个严重的问题：如果一段数据是大端字节序，TypedArray 数组将无法正确解析，因为它只能处理小端字节序！为了解决这个问题，JavaScript 引入`DataView`对象，可以设定字节序，下文会详细介绍。\n\n下面是另一个例子。\n\n```javascript\n// 假定某段buffer包含如下字节 [0x02, 0x01, 0x03, 0x07]\nconst buffer = new ArrayBuffer(4);\nconst v1 = new Uint8Array(buffer);\nv1[0] = 2;\nv1[1] = 1;\nv1[2] = 3;\nv1[3] = 7;\n\nconst uInt16View = new Uint16Array(buffer);\n\n// 计算机采用小端字节序\n// 所以头两个字节等于258\nif (uInt16View[0] === 258) {\n  console.log(\'OK\'); // "OK"\n}\n\n// 赋值运算\nuInt16View[0] = 255;    // 字节变为[0xFF, 0x00, 0x03, 0x07]\nuInt16View[0] = 0xff05; // 字节变为[0x05, 0xFF, 0x03, 0x07]\nuInt16View[1] = 0x0210; // 字节变为[0x05, 0xFF, 0x10, 0x02]\n```\n\n下面的函数可以用来判断，当前视图是小端字节序，还是大端字节序。\n\n```javascript\nconst BIG_ENDIAN = Symbol(\'BIG_ENDIAN\');\nconst LITTLE_ENDIAN = Symbol(\'LITTLE_ENDIAN\');\n\nfunction getPlatformEndianness() {\n  let arr32 = Uint32Array.of(0x12345678);\n  let arr8 = new Uint8Array(arr32.buffer);\n  switch ((arr8[0]*0x1000000) + (arr8[1]*0x10000) + (arr8[2]*0x100) + (arr8[3])) {\n    case 0x12345678:\n      return BIG_ENDIAN;\n    case 0x78563412:\n      return LITTLE_ENDIAN;\n    default:\n      throw new Error(\'Unknown endianness\');\n  }\n}\n```\n\n总之，与普通数组相比，TypedArray 数组的最大优点就是可以直接操作内存，不需要数据类型转换，所以速度快得多。\n\n### BYTES_PER_ELEMENT 属性\n\n每一种视图的构造函数，都有一个`BYTES_PER_ELEMENT`属性，表示这种数据类型占据的字节数。\n\n```javascript\nInt8Array.BYTES_PER_ELEMENT // 1\nUint8Array.BYTES_PER_ELEMENT // 1\nInt16Array.BYTES_PER_ELEMENT // 2\nUint16Array.BYTES_PER_ELEMENT // 2\nInt32Array.BYTES_PER_ELEMENT // 4\nUint32Array.BYTES_PER_ELEMENT // 4\nFloat32Array.BYTES_PER_ELEMENT // 4\nFloat64Array.BYTES_PER_ELEMENT // 8\n```\n\n这个属性在 TypedArray 实例上也能获取，即有`TypedArray.prototype.BYTES_PER_ELEMENT`。\n\n### ArrayBuffer 与字符串的互相转换\n\n`ArrayBuffer`转为字符串，或者字符串转为`ArrayBuffer`，有一个前提，即字符串的编码方法是确定的。假定字符串采用 UTF-16 编码（JavaScript 的内部编码方式），可以自己编写转换函数。\n\n```javascript\n// ArrayBuffer 转为字符串，参数为 ArrayBuffer 对象\nfunction ab2str(buf) {\n  // 注意，如果是大型二进制数组，为了避免溢出，\n  // 必须一个一个字符地转\n  if (buf && buf.byteLength < 1024) {\n    return String.fromCharCode.apply(null, new Uint16Array(buf));\n  }\n\n  const bufView = new Uint16Array(buf);\n  const len =  bufView.length;\n  const bstr = new Array(len);\n  for (let i = 0; i < len; i++) {\n    bstr[i] = String.fromCharCode.call(null, bufView[i]);\n  }\n  return bstr.join(\'\');\n}\n\n// 字符串转为 ArrayBuffer 对象，参数为字符串\nfunction str2ab(str) {\n  const buf = new ArrayBuffer(str.length * 2); // 每个字符占用2个字节\n  const bufView = new Uint16Array(buf);\n  for (let i = 0, strLen = str.length; i < strLen; i++) {\n    bufView[i] = str.charCodeAt(i);\n  }\n  return buf;\n}\n```\n\n### 溢出\n\n不同的视图类型，所能容纳的数值范围是确定的。超出这个范围，就会出现溢出。比如，8 位视图只能容纳一个 8 位的二进制值，如果放入一个 9 位的值，就会溢出。\n\nTypedArray 数组的溢出处理规则，简单来说，就是抛弃溢出的位，然后按照视图类型进行解释。\n\n```javascript\nconst uint8 = new Uint8Array(1);\n\nuint8[0] = 256;\nuint8[0] // 0\n\nuint8[0] = -1;\nuint8[0] // 255\n```\n\n上面代码中，`uint8`是一个 8 位视图，而 256 的二进制形式是一个 9 位的值`100000000`，这时就会发生溢出。根据规则，只会保留后 8 位，即`00000000`。`uint8`视图的解释规则是无符号的 8 位整数，所以`00000000`就是`0`。\n\n负数在计算机内部采用“2 的补码”表示，也就是说，将对应的正数值进行否运算，然后加`1`。比如，`-1`对应的正值是`1`，进行否运算以后，得到`11111110`，再加上`1`就是补码形式`11111111`。`uint8`按照无符号的 8 位整数解释`11111111`，返回结果就是`255`。\n\n一个简单转换规则，可以这样表示。\n\n- 正向溢出（overflow）：当输入值大于当前数据类型的最大值，结果等于当前数据类型的最小值加上余值，再减去 1。\n- 负向溢出（underflow）：当输入值小于当前数据类型的最小值，结果等于当前数据类型的最大值减去余值的绝对值，再加上 1。\n\n上面的“余值”就是模运算的结果，即 JavaScript 里面的`%`运算符的结果。\n\n```javascript\n12 % 4 // 0\n12 % 5 // 2\n```\n\n上面代码中，12 除以 4 是没有余值的，而除以 5 会得到余值 2。\n\n请看下面的例子。\n\n```javascript\nconst int8 = new Int8Array(1);\n\nint8[0] = 128;\nint8[0] // -128\n\nint8[0] = -129;\nint8[0] // 127\n```\n\n上面例子中，`int8`是一个带符号的 8 位整数视图，它的最大值是 127，最小值是-128。输入值为`128`时，相当于正向溢出`1`，根据“最小值加上余值（128 除以 127 的余值是 1），再减去 1”的规则，就会返回`-128`；输入值为`-129`时，相当于负向溢出`1`，根据“最大值减去余值的绝对值（-129 除以-128 的余值的绝对值是 1），再加上 1”的规则，就会返回`127`。\n\n`Uint8ClampedArray`视图的溢出规则，与上面的规则不同。它规定，凡是发生正向溢出，该值一律等于当前数据类型的最大值，即 255；如果发生负向溢出，该值一律等于当前数据类型的最小值，即 0。\n\n```javascript\nconst uint8c = new Uint8ClampedArray(1);\n\nuint8c[0] = 256;\nuint8c[0] // 255\n\nuint8c[0] = -1;\nuint8c[0] // 0\n```\n\n上面例子中，`uint8C`是一个`Uint8ClampedArray`视图，正向溢出时都返回 255，负向溢出都返回 0。\n\n### TypedArray.prototype.buffer\n\nTypedArray 实例的`buffer`属性，返回整段内存区域对应的`ArrayBuffer`对象。该属性为只读属性。\n\n```javascript\nconst a = new Float32Array(64);\nconst b = new Uint8Array(a.buffer);\n```\n\n上面代码的`a`视图对象和`b`视图对象，对应同一个`ArrayBuffer`对象，即同一段内存。\n\n### TypedArray.prototype.byteLength，TypedArray.prototype.byteOffset\n\n`byteLength`属性返回 TypedArray 数组占据的内存长度，单位为字节。`byteOffset`属性返回 TypedArray 数组从底层`ArrayBuffer`对象的哪个字节开始。这两个属性都是只读属性。\n\n```javascript\nconst b = new ArrayBuffer(8);\n\nconst v1 = new Int32Array(b);\nconst v2 = new Uint8Array(b, 2);\nconst v3 = new Int16Array(b, 2, 2);\n\nv1.byteLength // 8\nv2.byteLength // 6\nv3.byteLength // 4\n\nv1.byteOffset // 0\nv2.byteOffset // 2\nv3.byteOffset // 2\n```\n\n### TypedArray.prototype.length\n\n`length`属性表示 TypedArray 数组含有多少个成员。注意将`byteLength`属性和`length`属性区分，前者是字节长度，后者是成员长度。\n\n```javascript\nconst a = new Int16Array(8);\n\na.length // 8\na.byteLength // 16\n```\n\n### TypedArray.prototype.set()\n\nTypedArray 数组的`set`方法用于复制数组（普通数组或 TypedArray 数组），也就是将一段内容完全复制到另一段内存。\n\n```javascript\nconst a = new Uint8Array(8);\nconst b = new Uint8Array(8);\n\nb.set(a);\n```\n\n上面代码复制`a`数组的内容到`b`数组，它是整段内存的复制，比一个个拷贝成员的那种复制快得多。\n\n`set`方法还可以接受第二个参数，表示从`b`对象的哪一个成员开始复制`a`对象。\n\n```javascript\nconst a = new Uint16Array(8);\nconst b = new Uint16Array(10);\n\nb.set(a, 2)\n```\n\n上面代码的`b`数组比`a`数组多两个成员，所以从`b[2]`开始复制。\n\n### TypedArray.prototype.subarray()\n\n`subarray`方法是对于 TypedArray 数组的一部分，再建立一个新的视图。\n\n```javascript\nconst a = new Uint16Array(8);\nconst b = a.subarray(2,3);\n\na.byteLength // 16\nb.byteLength // 2\n```\n\n`subarray`方法的第一个参数是起始的成员序号，第二个参数是结束的成员序号（不含该成员），如果省略则包含剩余的全部成员。所以，上面代码的`a.subarray(2,3)`，意味着 b 只包含`a[2]`一个成员，字节长度为 2。\n\n### TypedArray.prototype.slice()\n\nTypeArray 实例的`slice`方法，可以返回一个指定位置的新的 TypedArray 实例。\n\n```javascript\nlet ui8 = Uint8Array.of(0, 1, 2);\nui8.slice(-1)\n// Uint8Array [ 2 ]\n```\n\n上面代码中，`ui8`是 8 位无符号整数数组视图的一个实例。它的`slice`方法可以从当前视图之中，返回一个新的视图实例。\n\n`slice`方法的参数，表示原数组的具体位置，开始生成新数组。负值表示逆向的位置，即-1 为倒数第一个位置，-2 表示倒数第二个位置，以此类推。\n\n### TypedArray.of()\n\nTypedArray 数组的所有构造函数，都有一个静态方法`of`，用于将参数转为一个 TypedArray 实例。\n\n```javascript\nFloat32Array.of(0.151, -8, 3.7)\n// Float32Array [ 0.151, -8, 3.7 ]\n```\n\n下面三种方法都会生成同样一个 TypedArray 数组。\n\n```javascript\n// 方法一\nlet tarr = new Uint8Array([1,2,3]);\n\n// 方法二\nlet tarr = Uint8Array.of(1,2,3);\n\n// 方法三\nlet tarr = new Uint8Array(3);\ntarr[0] = 1;\ntarr[1] = 2;\ntarr[2] = 3;\n```\n\n### TypedArray.from()\n\n静态方法`from`接受一个可遍历的数据结构（比如数组）作为参数，返回一个基于这个结构的 TypedArray 实例。\n\n```javascript\nUint16Array.from([0, 1, 2])\n// Uint16Array [ 0, 1, 2 ]\n```\n\n这个方法还可以将一种 TypedArray 实例，转为另一种。\n\n```javascript\nconst ui16 = Uint16Array.from(Uint8Array.of(0, 1, 2));\nui16 instanceof Uint16Array // true\n```\n\n`from`方法还可以接受一个函数，作为第二个参数，用来对每个元素进行遍历，功能类似`map`方法。\n\n```javascript\nInt8Array.of(127, 126, 125).map(x => 2 * x)\n// Int8Array [ -2, -4, -6 ]\n\nInt16Array.from(Int8Array.of(127, 126, 125), x => 2 * x)\n// Int16Array [ 254, 252, 250 ]\n```\n\n上面的例子中，`from`方法没有发生溢出，这说明遍历不是针对原来的 8 位整数数组。也就是说，`from`会将第一个参数指定的 TypedArray 数组，拷贝到另一段内存之中，处理之后再将结果转成指定的数组格式。\n\n## 复合视图\n\n由于视图的构造函数可以指定起始位置和长度，所以在同一段内存之中，可以依次存放不同类型的数据，这叫做“复合视图”。\n\n```javascript\nconst buffer = new ArrayBuffer(24);\n\nconst idView = new Uint32Array(buffer, 0, 1);\nconst usernameView = new Uint8Array(buffer, 4, 16);\nconst amountDueView = new Float32Array(buffer, 20, 1);\n```\n\n上面代码将一个 24 字节长度的`ArrayBuffer`对象，分成三个部分：\n\n- 字节 0 到字节 3：1 个 32 位无符号整数\n- 字节 4 到字节 19：16 个 8 位整数\n- 字节 20 到字节 23：1 个 32 位浮点数\n\n这种数据结构可以用如下的 C 语言描述：\n\n```c\nstruct someStruct {\n  unsigned long id;\n  char username[16];\n  float amountDue;\n};\n```\n\n## DataView 视图\n\n如果一段数据包括多种类型（比如服务器传来的 HTTP 数据），这时除了建立`ArrayBuffer`对象的复合视图以外，还可以通过`DataView`视图进行操作。\n\n`DataView`视图提供更多操作选项，而且支持设定字节序。本来，在设计目的上，`ArrayBuffer`对象的各种 TypedArray 视图，是用来向网卡、声卡之类的本机设备传送数据，所以使用本机的字节序就可以了；而`DataView`视图的设计目的，是用来处理网络设备传来的数据，所以大端字节序或小端字节序是可以自行设定的。\n\n`DataView`视图本身也是构造函数，接受一个`ArrayBuffer`对象作为参数，生成视图。\n\n```javascript\nDataView(ArrayBuffer buffer [, 字节起始位置 [, 长度]]);\n```\n\n下面是一个例子。\n\n```javascript\nconst buffer = new ArrayBuffer(24);\nconst dv = new DataView(buffer);\n```\n\n`DataView`实例有以下属性，含义与 TypedArray 实例的同名方法相同。\n\n- `DataView.prototype.buffer`：返回对应的 ArrayBuffer 对象\n- `DataView.prototype.byteLength`：返回占据的内存字节长度\n- `DataView.prototype.byteOffset`：返回当前视图从对应的 ArrayBuffer 对象的哪个字节开始\n\n`DataView`实例提供 8 个方法读取内存。\n\n- **getInt8**：读取 1 个字节，返回一个 8 位整数。\n- **getUint8**：读取 1 个字节，返回一个无符号的 8 位整数。\n- **getInt16**：读取 2 个字节，返回一个 16 位整数。\n- **getUint16**：读取 2 个字节，返回一个无符号的 16 位整数。\n- **getInt32**：读取 4 个字节，返回一个 32 位整数。\n- **getUint32**：读取 4 个字节，返回一个无符号的 32 位整数。\n- **getFloat32**：读取 4 个字节，返回一个 32 位浮点数。\n- **getFloat64**：读取 8 个字节，返回一个 64 位浮点数。\n\n这一系列`get`方法的参数都是一个字节序号（不能是负数，否则会报错），表示从哪个字节开始读取。\n\n```javascript\nconst buffer = new ArrayBuffer(24);\nconst dv = new DataView(buffer);\n\n// 从第1个字节读取一个8位无符号整数\nconst v1 = dv.getUint8(0);\n\n// 从第2个字节读取一个16位无符号整数\nconst v2 = dv.getUint16(1);\n\n// 从第4个字节读取一个16位无符号整数\nconst v3 = dv.getUint16(3);\n```\n\n上面代码读取了`ArrayBuffer`对象的前 5 个字节，其中有一个 8 位整数和两个十六位整数。\n\n如果一次读取两个或两个以上字节，就必须明确数据的存储方式，到底是小端字节序还是大端字节序。默认情况下，`DataView`的`get`方法使用大端字节序解读数据，如果需要使用小端字节序解读，必须在`get`方法的第二个参数指定`true`。\n\n```javascript\n// 小端字节序\nconst v1 = dv.getUint16(1, true);\n\n// 大端字节序\nconst v2 = dv.getUint16(3, false);\n\n// 大端字节序\nconst v3 = dv.getUint16(3);\n```\n\nDataView 视图提供 8 个方法写入内存。\n\n- **setInt8**：写入 1 个字节的 8 位整数。\n- **setUint8**：写入 1 个字节的 8 位无符号整数。\n- **setInt16**：写入 2 个字节的 16 位整数。\n- **setUint16**：写入 2 个字节的 16 位无符号整数。\n- **setInt32**：写入 4 个字节的 32 位整数。\n- **setUint32**：写入 4 个字节的 32 位无符号整数。\n- **setFloat32**：写入 4 个字节的 32 位浮点数。\n- **setFloat64**：写入 8 个字节的 64 位浮点数。\n\n这一系列`set`方法，接受两个参数，第一个参数是字节序号，表示从哪个字节开始写入，第二个参数为写入的数据。对于那些写入两个或两个以上字节的方法，需要指定第三个参数，`false`或者`undefined`表示使用大端字节序写入，`true`表示使用小端字节序写入。\n\n```javascript\n// 在第1个字节，以大端字节序写入值为25的32位整数\ndv.setInt32(0, 25, false);\n\n// 在第5个字节，以大端字节序写入值为25的32位整数\ndv.setInt32(4, 25);\n\n// 在第9个字节，以小端字节序写入值为2.5的32位浮点数\ndv.setFloat32(8, 2.5, true);\n```\n\n如果不确定正在使用的计算机的字节序，可以采用下面的判断方式。\n\n```javascript\nconst littleEndian = (function() {\n  const buffer = new ArrayBuffer(2);\n  new DataView(buffer).setInt16(0, 256, true);\n  return new Int16Array(buffer)[0] === 256;\n})();\n```\n\n如果返回`true`，就是小端字节序；如果返回`false`，就是大端字节序。\n\n## 二进制数组的应用\n\n大量的 Web API 用到了`ArrayBuffer`对象和它的视图对象。\n\n### AJAX\n\n传统上，服务器通过 AJAX 操作只能返回文本数据，即`responseType`属性默认为`text`。`XMLHttpRequest`第二版`XHR2`允许服务器返回二进制数据，这时分成两种情况。如果明确知道返回的二进制数据类型，可以把返回类型（`responseType`）设为`arraybuffer`；如果不知道，就设为`blob`。\n\n```javascript\nlet xhr = new XMLHttpRequest();\nxhr.open(\'GET\', someUrl);\nxhr.responseType = \'arraybuffer\';\n\nxhr.onload = function () {\n  let arrayBuffer = xhr.response;\n  // ···\n};\n\nxhr.send();\n```\n\n如果知道传回来的是 32 位整数，可以像下面这样处理。\n\n```javascript\nxhr.onreadystatechange = function () {\n  if (req.readyState === 4 ) {\n    const arrayResponse = xhr.response;\n    const dataView = new DataView(arrayResponse);\n    const ints = new Uint32Array(dataView.byteLength / 4);\n\n    xhrDiv.style.backgroundColor = "#00FF00";\n    xhrDiv.innerText = "Array is " + ints.length + "uints long";\n  }\n}\n```\n\n### Canvas\n\n网页`Canvas`元素输出的二进制像素数据，就是 TypedArray 数组。\n\n```javascript\nconst canvas = document.getElementById(\'myCanvas\');\nconst ctx = canvas.getContext(\'2d\');\n\nconst imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\nconst uint8ClampedArray = imageData.data;\n```\n\n需要注意的是，上面代码的`uint8ClampedArray`虽然是一个 TypedArray 数组，但是它的视图类型是一种针对`Canvas`元素的专有类型`Uint8ClampedArray`。这个视图类型的特点，就是专门针对颜色，把每个字节解读为无符号的 8 位整数，即只能取值 0 ～ 255，而且发生运算的时候自动过滤高位溢出。这为图像处理带来了巨大的方便。\n\n举例来说，如果把像素的颜色值设为`Uint8Array`类型，那么乘以一个 gamma 值的时候，就必须这样计算：\n\n```javascript\nu8[i] = Math.min(255, Math.max(0, u8[i] * gamma));\n```\n\n因为`Uint8Array`类型对于大于 255 的运算结果（比如`0xFF+1`），会自动变为`0x00`，所以图像处理必须要像上面这样算。这样做很麻烦，而且影响性能。如果将颜色值设为`Uint8ClampedArray`类型，计算就简化许多。\n\n```javascript\npixels[i] *= gamma;\n```\n\n`Uint8ClampedArray`类型确保将小于 0 的值设为 0，将大于 255 的值设为 255。注意，IE 10 不支持该类型。\n\n### WebSocket\n\n`WebSocket`可以通过`ArrayBuffer`，发送或接收二进制数据。\n\n```javascript\nlet socket = new WebSocket(\'ws://127.0.0.1:8081\');\nsocket.binaryType = \'arraybuffer\';\n\n// Wait until socket is open\nsocket.addEventListener(\'open\', function (event) {\n  // Send binary data\n  const typedArray = new Uint8Array(4);\n  socket.send(typedArray.buffer);\n});\n\n// Receive binary data\nsocket.addEventListener(\'message\', function (event) {\n  const arrayBuffer = event.data;\n  // ···\n});\n```\n\n### Fetch API\n\nFetch API 取回的数据，就是`ArrayBuffer`对象。\n\n```javascript\nfetch(url)\n.then(function(response){\n  return response.arrayBuffer()\n})\n.then(function(arrayBuffer){\n  // ...\n});\n```\n\n### File API\n\n如果知道一个文件的二进制数据类型，也可以将这个文件读取为`ArrayBuffer`对象。\n\n```javascript\nconst fileInput = document.getElementById(\'fileInput\');\nconst file = fileInput.files[0];\nconst reader = new FileReader();\nreader.readAsArrayBuffer(file);\nreader.onload = function () {\n  const arrayBuffer = reader.result;\n  // ···\n};\n```\n\n下面以处理 bmp 文件为例。假定`file`变量是一个指向 bmp 文件的文件对象，首先读取文件。\n\n```javascript\nconst reader = new FileReader();\nreader.addEventListener("load", processimage, false);\nreader.readAsArrayBuffer(file);\n```\n\n然后，定义处理图像的回调函数：先在二进制数据之上建立一个`DataView`视图，再建立一个`bitmap`对象，用于存放处理后的数据，最后将图像展示在`Canvas`元素之中。\n\n```javascript\nfunction processimage(e) {\n  const buffer = e.target.result;\n  const datav = new DataView(buffer);\n  const bitmap = {};\n  // 具体的处理步骤\n}\n```\n\n具体处理图像数据时，先处理 bmp 的文件头。具体每个文件头的格式和定义，请参阅有关资料。\n\n```javascript\nbitmap.fileheader = {};\nbitmap.fileheader.bfType = datav.getUint16(0, true);\nbitmap.fileheader.bfSize = datav.getUint32(2, true);\nbitmap.fileheader.bfReserved1 = datav.getUint16(6, true);\nbitmap.fileheader.bfReserved2 = datav.getUint16(8, true);\nbitmap.fileheader.bfOffBits = datav.getUint32(10, true);\n```\n\n接着处理图像元信息部分。\n\n```javascript\nbitmap.infoheader = {};\nbitmap.infoheader.biSize = datav.getUint32(14, true);\nbitmap.infoheader.biWidth = datav.getUint32(18, true);\nbitmap.infoheader.biHeight = datav.getUint32(22, true);\nbitmap.infoheader.biPlanes = datav.getUint16(26, true);\nbitmap.infoheader.biBitCount = datav.getUint16(28, true);\nbitmap.infoheader.biCompression = datav.getUint32(30, true);\nbitmap.infoheader.biSizeImage = datav.getUint32(34, true);\nbitmap.infoheader.biXPelsPerMeter = datav.getUint32(38, true);\nbitmap.infoheader.biYPelsPerMeter = datav.getUint32(42, true);\nbitmap.infoheader.biClrUsed = datav.getUint32(46, true);\nbitmap.infoheader.biClrImportant = datav.getUint32(50, true);\n```\n\n最后处理图像本身的像素信息。\n\n```javascript\nconst start = bitmap.fileheader.bfOffBits;\nbitmap.pixels = new Uint8Array(buffer, start);\n```\n\n至此，图像文件的数据全部处理完成。下一步，可以根据需要，进行图像变形，或者转换格式，或者展示在`Canvas`网页元素之中。\n\n## SharedArrayBuffer\n\nJavaScript 是单线程的，Web worker 引入了多线程：主线程用来与用户互动，Worker 线程用来承担计算任务。每个线程的数据都是隔离的，通过`postMessage()`通信。下面是一个例子。\n\n```javascript\n// 主线程\nconst w = new Worker(\'myworker.js\');\n```\n\n上面代码中，主线程新建了一个 Worker 线程。该线程与主线程之间会有一个通信渠道，主线程通过`w.postMessage`向 Worker 线程发消息，同时通过`message`事件监听 Worker 线程的回应。\n\n```javascript\n// 主线程\nw.postMessage(\'hi\');\nw.onmessage = function (ev) {\n  console.log(ev.data);\n}\n```\n\n上面代码中，主线程先发一个消息`hi`，然后在监听到 Worker 线程的回应后，就将其打印出来。\n\nWorker 线程也是通过监听`message`事件，来获取主线程发来的消息，并作出反应。\n\n```javascript\n// Worker 线程\nonmessage = function (ev) {\n  console.log(ev.data);\n  postMessage(\'ho\');\n}\n```\n\n线程之间的数据交换可以是各种格式，不仅仅是字符串，也可以是二进制数据。这种交换采用的是复制机制，即一个进程将需要分享的数据复制一份，通过`postMessage`方法交给另一个进程。如果数据量比较大，这种通信的效率显然比较低。很容易想到，这时可以留出一块内存区域，由主线程与 Worker 线程共享，两方都可以读写，那么就会大大提高效率，协作起来也会比较简单（不像`postMessage`那么麻烦）。\n\nES2017 引入[`SharedArrayBuffer`](https://github.com/tc39/ecmascript_sharedmem/blob/master/TUTORIAL.md)，允许 Worker 线程与主线程共享同一块内存。`SharedArrayBuffer`的 API 与`ArrayBuffer`一模一样，唯一的区别是后者无法共享数据。\n\n```javascript\n// 主线程\n\n// 新建 1KB 共享内存\nconst sharedBuffer = new SharedArrayBuffer(1024);\n\n// 主线程将共享内存的地址发送出去\nw.postMessage(sharedBuffer);\n\n// 在共享内存上建立视图，供写入数据\nconst sharedArray = new Int32Array(sharedBuffer);\n```\n\n上面代码中，`postMessage`方法的参数是`SharedArrayBuffer`对象。\n\nWorker 线程从事件的`data`属性上面取到数据。\n\n```javascript\n// Worker 线程\nonmessage = function (ev) {\n  // 主线程共享的数据，就是 1KB 的共享内存\n  const sharedBuffer = ev.data;\n\n  // 在共享内存上建立视图，方便读写\n  const sharedArray = new Int32Array(sharedBuffer);\n\n  // ...\n};\n```\n\n共享内存也可以在 Worker 线程创建，发给主线程。\n\n`SharedArrayBuffer`与`ArrayBuffer`一样，本身是无法读写的，必须在上面建立视图，然后通过视图读写。\n\n```javascript\n// 分配 10 万个 32 位整数占据的内存空间\nconst sab = new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT * 100000);\n\n// 建立 32 位整数视图\nconst ia = new Int32Array(sab);  // ia.length == 100000\n\n// 新建一个质数生成器\nconst primes = new PrimeGenerator();\n\n// 将 10 万个质数，写入这段内存空间\nfor ( let i=0 ; i < ia.length ; i++ )\n  ia[i] = primes.next();\n\n// 向 Worker 线程发送这段共享内存\nw.postMessage(ia);\n```\n\nWorker 线程收到数据后的处理如下。\n\n```javascript\n// Worker 线程\nlet ia;\nonmessage = function (ev) {\n  ia = ev.data;\n  console.log(ia.length); // 100000\n  console.log(ia[37]); // 输出 163，因为这是第38个质数\n};\n```\n\n## Atomics 对象\n\n多线程共享内存，最大的问题就是如何防止两个线程同时修改某个地址，或者说，当一个线程修改共享内存以后，必须有一个机制让其他线程同步。SharedArrayBuffer API 提供`Atomics`对象，保证所有共享内存的操作都是“原子性”的，并且可以在所有线程内同步。\n\n什么叫“原子性操作”呢？现代编程语言中，一条普通的命令被编译器处理以后，会变成多条机器指令。如果是单线程运行，这是没有问题的；多线程环境并且共享内存时，就会出问题，因为这一组机器指令的运行期间，可能会插入其他线程的指令，从而导致运行结果出错。请看下面的例子。\n\n```javascript\n// 主线程\nia[42] = 314159;  // 原先的值 191\nia[37] = 123456;  // 原先的值 163\n\n// Worker 线程\nconsole.log(ia[37]);\nconsole.log(ia[42]);\n// 可能的结果\n// 123456\n// 191\n```\n\n上面代码中，主线程的原始顺序是先对 42 号位置赋值，再对 37 号位置赋值。但是，编译器和 CPU 为了优化，可能会改变这两个操作的执行顺序（因为它们之间互不依赖），先对 37 号位置赋值，再对 42 号位置赋值。而执行到一半的时候，Worker 线程可能就会来读取数据，导致打印出`123456`和`191`。\n\n下面是另一个例子。\n\n```javascript\n// 主线程\nconst sab = new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT * 100000);\nconst ia = new Int32Array(sab);\n\nfor (let i = 0; i < ia.length; i++) {\n  ia[i] = primes.next(); // 将质数放入 ia\n}\n\n// worker 线程\nia[112]++; // 错误\nAtomics.add(ia, 112, 1); // 正确\n```\n\n上面代码中，Worker 线程直接改写共享内存`ia[112]++`是不正确的。因为这行语句会被编译成多条机器指令，这些指令之间无法保证不会插入其他进程的指令。请设想如果两个线程同时`ia[112]++`，很可能它们得到的结果都是不正确的。\n\n`Atomics`对象就是为了解决这个问题而提出，它可以保证一个操作所对应的多条机器指令，一定是作为一个整体运行的，中间不会被打断。也就是说，它所涉及的操作都可以看作是原子性的单操作，这可以避免线程竞争，提高多线程共享内存时的操作安全。所以，`ia[112]++`要改写成`Atomics.add(ia, 112, 1)`。\n\n`Atomics`对象提供多种方法。\n\n**（1）Atomics.store()，Atomics.load()**\n\n`store()`方法用来向共享内存写入数据，`load()`方法用来从共享内存读出数据。比起直接的读写操作，它们的好处是保证了读写操作的原子性。\n\n此外，它们还用来解决一个问题：多个线程使用共享内存的某个位置作为开关（flag），一旦该位置的值变了，就执行特定操作。这时，必须保证该位置的赋值操作，一定是在它前面的所有可能会改写内存的操作结束后执行；而该位置的取值操作，一定是在它后面所有可能会读取该位置的操作开始之前执行。`store`方法和`load`方法就能做到这一点，编译器不会为了优化，而打乱机器指令的执行顺序。\n\n```javascript\nAtomics.load(array, index)\nAtomics.store(array, index, value)\n```\n\n`store`方法接受三个参数：SharedBuffer 的视图、位置索引和值，返回`sharedArray[index]`的值。`load`方法只接受两个参数：SharedBuffer 的视图和位置索引，也是返回`sharedArray[index]`的值。\n\n```javascript\n// 主线程 main.js\nia[42] = 314159;  // 原先的值 191\nAtomics.store(ia, 37, 123456);  // 原先的值是 163\n\n// Worker 线程 worker.js\nwhile (Atomics.load(ia, 37) == 163);\nconsole.log(ia[37]);  // 123456\nconsole.log(ia[42]);  // 314159\n```\n\n上面代码中，主线程的`Atomics.store`向 42 号位置的赋值，一定是早于 37 位置的赋值。只要 37 号位置等于 163，Worker 线程就不会终止循环，而对 37 号位置和 42 号位置的取值，一定是在`Atomics.load`操作之后。\n\n下面是另一个例子。\n\n```javascript\n// 主线程\nconst worker = new Worker(\'worker.js\');\nconst length = 10;\nconst size = Int32Array.BYTES_PER_ELEMENT * length;\n// 新建一段共享内存\nconst sharedBuffer = new SharedArrayBuffer(size);\nconst sharedArray = new Int32Array(sharedBuffer);\nfor (let i = 0; i < 10; i++) {\n  // 向共享内存写入 10 个整数\n  Atomics.store(sharedArray, i, 0);\n}\nworker.postMessage(sharedBuffer);\n```\n\n上面代码中，主线程用`Atomics.store()`方法写入数据。下面是 Worker 线程用`Atomics.load()`方法读取数据。\n\n```javascript\n// worker.js\nself.addEventListener(\'message\', (event) => {\n  const sharedArray = new Int32Array(event.data);\n  for (let i = 0; i < 10; i++) {\n    const arrayValue = Atomics.load(sharedArray, i);\n    console.log(`The item at array index ${i} is ${arrayValue}`);\n  }\n}, false);\n```\n\n**（2）Atomics.exchange()**\n\nWorker 线程如果要写入数据，可以使用上面的`Atomics.store()`方法，也可以使用`Atomics.exchange()`方法。它们的区别是，`Atomics.store()`返回写入的值，而`Atomics.exchange()`返回被替换的值。\n\n```javascript\n// Worker 线程\nself.addEventListener(\'message\', (event) => {\n  const sharedArray = new Int32Array(event.data);\n  for (let i = 0; i < 10; i++) {\n    if (i % 2 === 0) {\n      const storedValue = Atomics.store(sharedArray, i, 1);\n      console.log(`The item at array index ${i} is now ${storedValue}`);\n    } else {\n      const exchangedValue = Atomics.exchange(sharedArray, i, 2);\n      console.log(`The item at array index ${i} was ${exchangedValue}, now 2`);\n    }\n  }\n}, false);\n```\n\n上面代码将共享内存的偶数位置的值改成`1`，奇数位置的值改成`2`。\n\n**（3）Atomics.wait()，Atomics.wake()**\n\n使用`while`循环等待主线程的通知，不是很高效，如果用在主线程，就会造成卡顿，`Atomics`对象提供了`wait()`和`wake()`两个方法用于等待通知。这两个方法相当于锁内存，即在一个线程进行操作时，让其他线程休眠（建立锁），等到操作结束，再唤醒那些休眠的线程（解除锁）。\n\n```javascript\n// Worker 线程\nself.addEventListener(\'message\', (event) => {\n  const sharedArray = new Int32Array(event.data);\n  const arrayIndex = 0;\n  const expectedStoredValue = 50;\n  Atomics.wait(sharedArray, arrayIndex, expectedStoredValue);\n  console.log(Atomics.load(sharedArray, arrayIndex));\n}, false);\n```\n\n上面代码中，`Atomics.wait()`方法等同于告诉 Worker 线程，只要满足给定条件（`sharedArray`的`0`号位置等于`50`），就在这一行 Worker 线程进入休眠。\n\n主线程一旦更改了指定位置的值，就可以唤醒 Worker 线程。\n\n```javascript\n// 主线程\nconst newArrayValue = 100;\nAtomics.store(sharedArray, 0, newArrayValue);\nconst arrayIndex = 0;\nconst queuePos = 1;\nAtomics.wake(sharedArray, arrayIndex, queuePos);\n```\n\n上面代码中，`sharedArray`的`0`号位置改为`100`，然后就执行`Atomics.wake()`方法，唤醒在`sharedArray`的`0`号位置休眠队列里的一个线程。\n\n`Atomics.wait()`方法的使用格式如下。\n\n```javascript\nAtomics.wait(sharedArray, index, value, timeout)\n```\n\n它的四个参数含义如下。\n\n- sharedArray：共享内存的视图数组。\n- index：视图数据的位置（从0开始）。\n- value：该位置的预期值。一旦实际值等于预期值，就进入休眠。\n- timeout：整数，表示过了这个时间以后，就自动唤醒，单位毫秒。该参数可选，默认值是`Infinity`，即无限期的休眠，只有通过`Atomics.wake()`方法才能唤醒。\n\n`Atomics.wait()`的返回值是一个字符串，共有三种可能的值。如果`sharedArray[index]`不等于`value`，就返回字符串`not-equal`，否则就进入休眠。如果`Atomics.wake()`方法唤醒，就返回字符串`ok`；如果因为超时唤醒，就返回字符串`timed-out`。\n\n`Atomics.wake()`方法的使用格式如下。\n\n```javascript\nAtomics.wake(sharedArray, index, count)\n```\n\n它的三个参数含义如下。\n\n- sharedArray：共享内存的视图数组。\n- index：视图数据的位置（从0开始）。\n- count：需要唤醒的 Worker 线程的数量，默认为`Infinity`。\n\n`Atomics.wake()`方法一旦唤醒休眠的 Worker 线程，就会让它继续往下运行。\n\n请看一个例子。\n\n```javascript\n// 主线程\nconsole.log(ia[37]);  // 163\nAtomics.store(ia, 37, 123456);\nAtomics.wake(ia, 37, 1);\n\n// Worker 线程\nAtomics.wait(ia, 37, 163);\nconsole.log(ia[37]);  // 123456\n```\n\n上面代码中，视图数组`ia`的第 37 号位置，原来的值是`163`。Worker 线程使用`Atomics.wait()`方法，指定只要`ia[37]`等于`163`，就进入休眠状态。主线程使用`Atomics.store()`方法，将`123456`写入`ia[37]`，然后使用`Atomics.wake()`方法唤醒 Worker 线程。\n\n另外，基于`wait`和`wake`这两个方法的锁内存实现，可以看 Lars T Hansen 的 [js-lock-and-condition](https://github.com/lars-t-hansen/js-lock-and-condition) 这个库。\n\n注意，浏览器的主线程不宜设置休眠，这会导致用户失去响应。而且，主线程实际上会拒绝进入休眠。\n\n**（4）运算方法**\n\n共享内存上面的某些运算是不能被打断的，即不能在运算过程中，让其他线程改写内存上面的值。Atomics 对象提供了一些运算方法，防止数据被改写。\n\n```javascript\nAtomics.add(sharedArray, index, value)\n```\n\n`Atomics.add`用于将`value`加到`sharedArray[index]`，返回`sharedArray[index]`旧的值。\n\n```javascript\nAtomics.sub(sharedArray, index, value)\n```\n\n`Atomics.sub`用于将`value`从`sharedArray[index]`减去，返回`sharedArray[index]`旧的值。\n\n```javascript\nAtomics.and(sharedArray, index, value)\n```\n\n`Atomics.and`用于将`value`与`sharedArray[index]`进行位运算`and`，放入`sharedArray[index]`，并返回旧的值。\n\n```javascript\nAtomics.or(sharedArray, index, value)\n```\n\n`Atomics.or`用于将`value`与`sharedArray[index]`进行位运算`or`，放入`sharedArray[index]`，并返回旧的值。\n\n```javascript\nAtomics.xor(sharedArray, index, value)\n```\n\n`Atomic.xor`用于将`vaule`与`sharedArray[index]`进行位运算`xor`，放入`sharedArray[index]`，并返回旧的值。\n\n**（5）其他方法**\n\n`Atomics`对象还有以下方法。\n\n- `Atomics.compareExchange(sharedArray, index, oldval, newval)`：如果`sharedArray[index]`等于`oldval`，就写入`newval`，返回`oldval`。\n- `Atomics.isLockFree(size)`：返回一个布尔值，表示`Atomics`对象是否可以处理某个`size`的内存锁定。如果返回`false`，应用程序就需要自己来实现锁定。\n\n`Atomics.compareExchange`的一个用途是，从 SharedArrayBuffer 读取一个值，然后对该值进行某个操作，操作结束以后，检查一下 SharedArrayBuffer 里面原来那个值是否发生变化（即被其他线程改写过）。如果没有改写过，就将它写回原来的位置，否则读取新的值，再重头进行一次操作。\n\n\n\n# 最新提案\n\n1. [do 表达式](http://es6.ruanyifeng.com/#docs/proposals#do%20%E8%A1%A8%E8%BE%BE%E5%BC%8F)\n2. [throw 表达式](http://es6.ruanyifeng.com/#docs/proposals#throw%20%E8%A1%A8%E8%BE%BE%E5%BC%8F)\n3. [链判断运算符](http://es6.ruanyifeng.com/#docs/proposals#%E9%93%BE%E5%88%A4%E6%96%AD%E8%BF%90%E7%AE%97%E7%AC%A6)\n4. [直接输入 U+2028 和 U+2029](http://es6.ruanyifeng.com/#docs/proposals#%E7%9B%B4%E6%8E%A5%E8%BE%93%E5%85%A5%20U+2028%20%E5%92%8C%20U+2029)\n5. [函数的部分执行](http://es6.ruanyifeng.com/#docs/proposals#%E5%87%BD%E6%95%B0%E7%9A%84%E9%83%A8%E5%88%86%E6%89%A7%E8%A1%8C)\n6. [管道运算符](http://es6.ruanyifeng.com/#docs/proposals#%E7%AE%A1%E9%81%93%E8%BF%90%E7%AE%97%E7%AC%A6)\n7. [数值分隔符](http://es6.ruanyifeng.com/#docs/proposals#%E6%95%B0%E5%80%BC%E5%88%86%E9%9A%94%E7%AC%A6)\n8. [BigInt 数据类型](http://es6.ruanyifeng.com/#docs/proposals#BigInt%20%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B)\n9. [Math.signbit()](http://es6.ruanyifeng.com/#docs/proposals#Math.signbit())\n\n本章介绍一些尚未进入标准、但很有希望的最新提案。\n\n## do 表达式\n\n本质上，块级作用域是一个语句，将多个操作封装在一起，没有返回值。\n\n```javascript\n{\n  let t = f();\n  t = t * t + 1;\n}\n```\n\n上面代码中，块级作用域将两个语句封装在一起。但是，在块级作用域以外，没有办法得到`t`的值，因为块级作用域不返回值，除非`t`是全局变量。\n\n现在有一个[提案](https://github.com/tc39/proposal-do-expressions)，使得块级作用域可以变为表达式，也就是说可以返回值，办法就是在块级作用域之前加上`do`，使它变为`do`表达式，然后就会返回内部最后执行的表达式的值。\n\n```javascript\nlet x = do {\n  let t = f();\n  t * t + 1;\n};\n```\n\n上面代码中，变量`x`会得到整个块级作用域的返回值（`t * t + 1`）。\n\n`do`表达式的逻辑非常简单：封装的是什么，就会返回什么。\n\n```javascript\n// 等同于 <表达式>\ndo { <表达式>; }\n\n// 等同于 <语句>\ndo { <语句> }\n```\n\n`do`表达式的好处是可以封装多个语句，让程序更加模块化，就像乐高积木那样一块块拼装起来。\n\n```javascript\nlet x = do {\n  if (foo()) { f() }\n  else if (bar()) { g() }\n  else { h() }\n};\n```\n\n上面代码的本质，就是根据函数`foo`的执行结果，调用不同的函数，将返回结果赋给变量`x`。使用`do`表达式，就将这个操作的意图表达得非常简洁清晰。而且，`do`块级作用域提供了单独的作用域，内部操作可以与全局作用域隔绝。\n\n值得一提的是，`do`表达式在 JSX 语法中非常好用。\n\n```javascript\nreturn (\n  <nav>\n    <Home />\n    {\n      do {\n        if (loggedIn) {\n          <LogoutButton />\n        } else {\n          <LoginButton />\n        }\n      }\n    }\n  </nav>\n)\n```\n\n上面代码中，如果不用`do`表达式，就只能用三元判断运算符（`?:`）。那样的话，一旦判断逻辑复杂，代码就会变得很不易读。\n\n## throw 表达式\n\nJavaScript 语法规定`throw`是一个命令，用来抛出错误，不能用于表达式之中。\n\n```javascript\n// 报错\nconsole.log(throw new Error());\n```\n\n上面代码中，`console.log`的参数必须是一个表达式，如果是一个`throw`语句就会报错。\n\n现在有一个[提案](https://github.com/tc39/proposal-throw-expressions)，允许`throw`用于表达式。\n\n```javascript\n// 参数的默认值\nfunction save(filename = throw new TypeError("Argument required")) {\n}\n\n// 箭头函数的返回值\nlint(ast, {\n  with: () => throw new Error("avoid using \'with\' statements.")\n});\n\n// 条件表达式\nfunction getEncoder(encoding) {\n  const encoder = encoding === "utf8" ?\n    new UTF8Encoder() :\n    encoding === "utf16le" ?\n      new UTF16Encoder(false) :\n      encoding === "utf16be" ?\n        new UTF16Encoder(true) :\n        throw new Error("Unsupported encoding");\n}\n\n// 逻辑表达式\nclass Product {\n  get id() {\n    return this._id;\n  }\n  set id(value) {\n    this._id = value || throw new Error("Invalid value");\n  }\n}\n```\n\n上面代码中，`throw`都出现在表达式里面。\n\n语法上，`throw`表达式里面的`throw`不再是一个命令，而是一个运算符。为了避免与`throw`命令混淆，规定`throw`出现在行首，一律解释为`throw`语句，而不是`throw`表达式。\n\n## 链判断运算符\n\n编程实务中，如果读取对象内部的某个属性，往往需要判断一下该对象是否存在。比如，要读取`message.body.user.firstName`，安全的写法是写成下面这样。\n\n```javascript\nconst firstName = (message\n  && message.body\n  && message.body.user\n  && message.body.user.firstName) || \'default\';\n```\n\n这样的层层判断非常麻烦，因此现在有一个[提案](https://github.com/tc39/proposal-optional-chaining)，引入了“链判断运算符”（optional chaining operator）`?.`，简化上面的写法。\n\n```javascript\nconst firstName = message?.body?.user?.firstName || \'default\';\n```\n\n上面代码有三个`?.`运算符，直接在链式调用的时候判断，左侧的对象是否为`null`或`undefined`。如果是的，就不再往下运算，而是返回`undefined`。\n\n链判断运算符号有三种用法。\n\n- `obj?.prop` // 读取对象属性\n- `obj?.[expr]` // 同上\n- `func?.(...args)` // 函数或对象方法的调用\n\n下面是判断函数是否存在的例子。\n\n```javascript\niterator.return?.()\n```\n\n上面代码中，`iterator.return`如果有定义，就会调用该方法，否则直接返回`undefined`。\n\n下面是更多的例子。\n\n```javascript\na?.b\n// 等同于\na == null ? undefined : a.b\n\na?.[x]\n// 等同于\na == null ? undefined : a[x]\n\na?.b()\n// 等同于\na == null ? undefined : a.b()\n\na?.()\n// 等同于\na == null ? undefined : a()\n```\n\n使用这个运算符，有几个注意点。\n\n（1）短路机制\n\n```javascript\na?.[++x]\n// 等同于\na == null ? undefined : a[++x]\n```\n\n上面代码中，如果`a`是`undefined`或`null`，那么`x`不会进行递增运算。也就是说，链判断运算符一旦为真，右侧的表达式就不再求值。\n\n（2）delete 运算符\n\n```javascript\ndelete a?.b\n// 等同于\na == null ? undefined : delete a.b\n```\n\n上面代码中，如果`a`是`undefined`或`null`，会直接返回`undefined`，而不会进行`delete`运算。\n\n（3）报错场合\n\n以下写法是禁止，会报错。\n\n```javascript\n// 构造函数判断\nnew a?.()\n\n// 运算符右侧是模板字符串\na?.`{b}`\n\n// 链判断运算符前后有构造函数或模板字符串\nnew a?.b()\na?.b`{c}`\n\n// 链运算符用于赋值运算符左侧\na?.b = c\n```\n\n（4）右侧不得为十进制数值\n\n为了保证兼容以前的代码，允许`foo?.3:0`被解析成`foo ? .3 : 0`，因此规定如果`?.`后面紧跟一个十进制数字，那么`?.`不再被看成是一个完整的运算符，而会按照三元运算符进行处理，也就是说，那个小数点会归属于后面的十进制数字，形成一个小数。\n\n## 直接输入 U+2028 和 U+2029\n\nJavaScript 字符串允许直接输入字符，以及输入字符的转义形式。举例来说，“中”的 Unicode 码点是 U+4e2d，你可以直接在字符串里面输入这个汉字，也可以输入它的转义形式`\\u4e2d`，两者是等价的。\n\n```javascript\n\'中\' === \'\\u4e2d\' // true\n```\n\n但是，JavaScript 规定有5个字符，不能在字符串里面直接使用，只能使用转义形式。\n\n- U+005C：反斜杠（reverse solidus)\n- U+000D：回车（carriage return）\n- U+2028：行分隔符（line separator）\n- U+2029：段分隔符（paragraph separator）\n- U+000A：换行符（line feed）\n\n举例来说，字符串里面不能直接包含反斜杠，一定要转义写成`\\\\`或者`\\u005c`。\n\n这个规定本身没有问题，麻烦在于 JSON 格式允许字符串里面直接使用 U+2028（行分隔符）和 U+2029（段分隔符）。这样一来，服务器输出的 JSON 被`JSON.parse`解析，就有可能直接报错。\n\nJSON 格式已经冻结（RFC 7159），没法修改了。为了消除这个报错，现在有一个[提案](https://github.com/tc39/proposal-json-superset)，允许 JavaScript 字符串直接输入 U+2028（行分隔符）和 U+2029（段分隔符）。\n\n```javascript\nconst PS = eval("\'\\u2029\'");\n```\n\n根据这个提案，上面的代码不会报错。\n\n注意，模板字符串现在就允许直接输入这两个字符。另外，正则表达式依然不允许直接输入这两个字符，这是没有问题的，因为 JSON 本来就不允许直接包含正则表达式。\n\n## 函数的部分执行\n\n### 语法\n\n多参数的函数有时需要绑定其中的一个或多个参数，然后返回一个新函数。\n\n```javascript\nfunction add(x, y) { return x + y; }\nfunction add7(x) { return x + 7; }\n```\n\n上面代码中，`add7`函数其实是`add`函数的一个特殊版本，通过将一个参数绑定为`7`，就可以从`add`得到`add7`。\n\n```javascript\n// bind 方法\nconst add7 = add.bind(null, 7);\n\n// 箭头函数\nconst add7 = x => add(x, 7);\n```\n\n上面两种写法都有些冗余。其中，`bind`方法的局限更加明显，它必须提供`this`，并且只能从前到后一个个绑定参数，无法只绑定非头部的参数。\n\n现在有一个[提案](https://github.com/tc39/proposal-partial-application)，使得绑定参数并返回一个新函数更加容易。这叫做函数的部分执行（partial application）。\n\n```javascript\nconst add = (x, y) => x + y;\nconst addOne = add(1, ?);\n\nconst maxGreaterThanZero = Math.max(0, ...);\n```\n\n根据新提案，`?`是单个参数的占位符，`...`是多个参数的占位符。以下的形式都属于函数的部分执行。\n\n```javascript\nf(x, ?)\nf(x, ...)\nf(?, x)\nf(..., x)\nf(?, x, ?)\nf(..., x, ...)\n```\n\n`?`和`...`只能出现在函数的调用之中，并且会返回一个新函数。\n\n```javascript\nconst g = f(?, 1, ...);\n// 等同于\nconst g = (x, ...y) => f(x, 1, ...y);\n```\n\n函数的部分执行，也可以用于对象的方法。\n\n```javascript\nlet obj = {\n  f(x, y) { return x + y; },\n};\n\nconst g = obj.f(?, 3);\ng(1) // 4\n```\n\n### 注意点\n\n函数的部分执行有一些特别注意的地方。\n\n（1）函数的部分执行是基于原函数的。如果原函数发生变化，部分执行生成的新函数也会立即反映这种变化。\n\n```javascript\nlet f = (x, y) => x + y;\n\nconst g = f(?, 3);\ng(1); // 4\n\n// 替换函数 f\nf = (x, y) => x * y;\n\ng(1); // 3\n```\n\n上面代码中，定义了函数的部分执行以后，更换原函数会立即影响到新函数。\n\n（2）如果预先提供的那个值是一个表达式，那么这个表达式并不会在定义时求值，而是在每次调用时求值。\n\n```javascript\nlet a = 3;\nconst f = (x, y) => x + y;\n\nconst g = f(?, a);\ng(1); // 4\n\n// 改变 a 的值\na = 10;\ng(1); // 11\n```\n\n上面代码中，预先提供的参数是变量`a`，那么每次调用函数`g`的时候，才会对`a`进行求值。\n\n（3）如果新函数的参数多于占位符的数量，那么多余的参数将被忽略。\n\n```javascript\nconst f = (x, ...y) => [x, ...y];\nconst g = f(?, 1);\ng(2, 3, 4); // [2, 1]\n```\n\n上面代码中，函数`g`只有一个占位符，也就意味着它只能接受一个参数，多余的参数都会被忽略。\n\n写成下面这样，多余的参数就没有问题。\n\n```javascript\nconst f = (x, ...y) => [x, ...y];\nconst g = f(?, 1, ...);\ng(2, 3, 4); // [2, 1, 3, 4];\n```\n\n（4）`...`只会被采集一次，如果函数的部分执行使用了多个`...`，那么每个`...`的值都将相同。\n\n```javascript\nconst f = (...x) => x;\nconst g = f(..., 9, ...);\ng(1, 2, 3); // [1, 2, 3, 9, 1, 2, 3]\n```\n\n上面代码中，`g`定义了两个`...`占位符，真正执行的时候，它们的值是一样的。\n\n## 管道运算符\n\nUnix 操作系统有一个管道机制（pipeline），可以把前一个操作的值传给后一个操作。这个机制非常有用，使得简单的操作可以组合成为复杂的操作。许多语言都有管道的实现，现在有一个[提案](https://github.com/tc39/proposal-pipeline-operator)，让 JavaScript 也拥有管道机制。\n\nJavaScript 的管道是一个运算符，写作`|>`。它的左边是一个表达式，右边是一个函数。管道运算符把左边表达式的值，传入右边的函数进行求值。\n\n```javascript\nx |> f\n// 等同于\nf(x)\n```\n\n管道运算符最大的好处，就是可以把嵌套的函数，写成从左到右的链式表达式。\n\n```javascript\nfunction doubleSay (str) {\n  return str + ", " + str;\n}\n\nfunction capitalize (str) {\n  return str[0].toUpperCase() + str.substring(1);\n}\n\nfunction exclaim (str) {\n  return str + \'!\';\n}\n```\n\n上面是三个简单的函数。如果要嵌套执行，传统的写法和管道的写法分别如下。\n\n```javascript\n// 传统的写法\nexclaim(capitalize(doubleSay(\'hello\')))\n// "Hello, hello!"\n\n// 管道的写法\n\'hello\'\n  |> doubleSay\n  |> capitalize\n  |> exclaim\n// "Hello, hello!"\n```\n\n管道运算符只能传递一个值，这意味着它右边的函数必须是一个单参数函数。如果是多参数函数，就必须进行柯里化，改成单参数的版本。\n\n```javascript\nfunction double (x) { return x + x; }\nfunction add (x, y) { return x + y; }\n\nlet person = { score: 25 };\nperson.score\n  |> double\n  |> (_ => add(7, _))\n// 57\n```\n\n上面代码中，`add`函数需要两个参数。但是，管道运算符只能传入一个值，因此需要事先提供另一个参数，并将其改成单参数的箭头函数`_ => add(7, _)`。这个函数里面的下划线并没有特别的含义，可以用其他符号代替，使用下划线只是因为，它能够形象地表示这里是占位符。\n\n管道运算符对于`await`函数也适用。\n\n```javascript\nx |> await f\n// 等同于\nawait f(x)\n\nconst userAge = userId |> await fetchUserById |> getAgeFromUser;\n// 等同于\nconst userAge = getAgeFromUser(await fetchUserById(userId));\n```\n\n## 数值分隔符\n\n欧美语言中，较长的数值允许每三位添加一个分隔符（通常是一个逗号），增加数值的可读性。比如，`1000`可以写作`1,000`。\n\n现在有一个[提案](https://github.com/tc39/proposal-numeric-separator)，允许 JavaScript 的数值使用下划线（`_`）作为分隔符。\n\n```javascript\nlet budget = 1_000_000_000_000;\nbudget === 10 ** 12 // true\n```\n\nJavaScript 的数值分隔符没有指定间隔的位数，也就是说，可以每三位添加一个分隔符，也可以每一位、每两位、每四位添加一个。\n\n```javascript\n123_00 === 12_300 // true\n\n12345_00 === 123_4500 // true\n12345_00 === 1_234_500 // true\n```\n\n小数和科学计数法也可以使用数值分隔符。\n\n```javascript\n// 小数\n0.000_001\n// 科学计数法\n1e10_000\n```\n\n数值分隔符有几个使用注意点。\n\n- 不能在数值的最前面（leading）或最后面（trailing）。\n- 不能两个或两个以上的分隔符连在一起。\n- 小数点的前后不能有分隔符。\n- 科学计数法里面，表示指数的`e`或`E`前后不能有分隔符。\n\n下面的写法都会报错。\n\n```javascript\n// 全部报错\n3_.141\n3._141\n1_e12\n1e_12\n123__456\n_1464301\n1464301_\n```\n\n除了十进制，其他进制的数值也可以使用分隔符。\n\n```javascript\n// 二进制\n0b1010_0001_1000_0101\n// 十六进制\n0xA0_B0_C0\n```\n\n注意，分隔符不能紧跟着进制的前缀`0b`、`0B`、`0o`、`0O`、`0x`、`0X`。\n\n```javascript\n// 报错\n0_b111111000\n0b_111111000\n```\n\n下面三个将字符串转成数值的函数，不支持数值分隔符。主要原因是提案的设计者认为，数值分隔符主要是为了编码时书写数值的方便，而不是为了处理外部输入的数据。\n\n- Number()\n- parseInt()\n- parseFloat()\n\n```javascript\nNumber(\'123_456\') // NaN\nparseInt(\'123_456\') // 123\n```\n\n## BigInt 数据类型\n\n### 简介\n\nJavaScript 所有数字都保存成 64 位浮点数，这给数值的表示带来了两大限制。一是数值的精度只能到 53 个二进制位（相当于 16 个十进制位），大于这个范围的整数，JavaScript 是无法精确表示的，这使得 JavaScript 不适合进行科学和金融方面的精确计算。二是大于或等于2的1024次方的数值，JavaScript 无法表示，会返回`Infinity`。\n\n```javascript\n// 超过 53 个二进制位的数值，无法保持精度\nMath.pow(2, 53) === Math.pow(2, 53) + 1 // true\n\n// 超过 2 的 1024 次方的数值，无法表示\nMath.pow(2, 1024) // Infinity\n```\n\n现在有一个[提案](https://github.com/tc39/proposal-bigint)，引入了一种新的数据类型 BigInt（大整数），来解决这个问题。BigInt 只用来表示整数，没有位数的限制，任何位数的整数都可以精确表示。\n\n```javascript\nconst a = 2172141653n;\nconst b = 15346349309n;\na * b // 33334444555566667777n\nNumber(a) * Number(b) // 33334444555566670000\n```\n\n为了与 Number 类型区别，BigInt 类型的数据必须使用后缀`n`表示。\n\n```javascript\n1234n\n1n + 2n // 3n\n```\n\nBigInt 同样可以使用各种进制表示，都要加上后缀`n`。\n\n```javascript\n0b1101n // 二进制\n0o777n // 八进制\n0xFFn // 十六进制\n```\n\n`typeof`运算符对于 BigInt 类型的数据返回`bigint`。\n\n```javascript\ntypeof 123n // \'bigint\'\n```\n\n### BigInt 对象\n\nJavaScript 原生提供`BigInt`对象，可以用作构造函数生成 BigInt 类型的数值。转换规则基本与`Number()`一致，将别的类型的值转为 BigInt。\n\n```javascript\nBigInt(123) // 123n\nBigInt(\'123\') // 123n\nBigInt(false) // 0n\nBigInt(true) // 1n\n```\n\n`BigInt`构造函数必须有参数，而且参数必须可以正常转为数值，下面的用法都会报错。\n\n```javascript\nnew BigInt() // TypeError\nBigInt(undefined) //TypeError\nBigInt(null) // TypeError\nBigInt(\'123n\') // SyntaxError\nBigInt(\'abc\') // SyntaxError\n```\n\n上面代码中，尤其值得注意字符串`123n`无法解析成 Number 类型，所以会报错。\n\nBigInt 对象继承了 Object 提供的实例方法。\n\n- `BigInt.prototype.toLocaleString()`\n- `BigInt.prototype.toString()`\n- `BigInt.prototype.valueOf()`\n\n此外，还提供了三个静态方法。\n\n- `BigInt.asUintN(width, BigInt)`： 对给定的大整数，返回 0 到 2width - 1 之间的大整数形式。\n- `BigInt.asIntN(width, BigInt)`：对给定的大整数，返回 -2width - 1 到 2width - 1 - 1 之间的大整数形式。\n- `BigInt.parseInt(string[, radix])`：近似于`Number.parseInt`，将一个字符串转换成指定进制的大整数。\n\n```javascript\n// 将一个大整数转为 64 位整数的形式\nconst int64a = BigInt.asUintN(64, 12345n);\n\n// Number.parseInt 与 BigInt.parseInt 的对比\nNumber.parseInt(\'9007199254740993\', 10)\n// 9007199254740992\nBigInt.parseInt(\'9007199254740993\', 10)\n// 9007199254740993n\n```\n\n上面代码中，由于有效数字超出了最大限度，`Number.parseInt`方法返回的结果是不精确的，而`BigInt.parseInt`方法正确返回了对应的大整数。\n\n对于二进制数组，BigInt 新增了两个类型`BigUint64Array`和`BigInt64Array`，这两种数据类型返回的都是大整数。`DataView`对象的实例方法`DataView.prototype.getBigInt64`和`DataView.prototype.getBigUint64`，返回的也是大整数。\n\n### 运算\n\n数学运算方面，BigInt 类型的`+`、`-`、`*`和`**`这四个二元运算符，与 Number 类型的行为一致。除法运算`/`会舍去小数部分，返回一个整数。\n\n```javascript\n9n / 5n\n// 1n\n```\n\n几乎所有的 Number 运算符都可以用在 BigInt，但是有两个除外：不带符号的右移位运算符`>>>`和一元的求正运算符`+`，使用时会报错。前者是因为`>>>`运算符是不带符号的，但是 BigInt 总是带有符号的，导致该运算无意义，完全等同于右移运算符`>>`。后者是因为一元运算符`+`在 asm.js 里面总是返回 Number 类型，为了不破坏 asm.js 就规定`+1n`会报错。\n\nInteger 类型不能与 Number 类型进行混合运算。\n\n```javascript\n1n + 1.3 // 报错\n```\n\n上面代码报错是因为无论返回的是 BigInt 或 Number，都会导致丢失信息。比如`(2n**53n + 1n) + 0.5`这个表达式，如果返回 BigInt 类型，`0.5`这个小数部分会丢失；如果返回 Number 类型，有效精度只能保持 53 位，导致精度下降。\n\n同样的原因，如果一个标准库函数的参数预期是 Number 类型，但是得到的是一个 BigInt，就会报错。\n\n```javascript\n// 错误的写法\nMath.sqrt(4n) // 报错\n\n// 正确的写法\nMath.sqrt(Number(4n)) // 2\n```\n\n上面代码中，`Math.sqrt`的参数预期是 Number 类型，如果是 BigInt 就会报错，必须先用`Number`方法转一下类型，才能进行计算。\n\nasm.js 里面，`|0`跟在一个数值的后面会返回一个32位整数。根据不能与 Number 类型混合运算的规则，BigInt 如果与`|0`进行运算会报错。\n\n```javascript\n1n | 0 // 报错\n```\n\n比较运算符（比如`>`）和相等运算符（`==`）允许 BigInt 与其他类型的值混合计算，因为这样做不会损失精度。\n\n```javascript\n0n < 1 // true\n0n < true // true\n0n == 0 // true\n0n == false // true\n```\n\n同理，精确相等运算符（`===`）也可以混合使用。\n\n```javascript\n0n === 0 // false\n```\n\n上面代码中，由于`0n`与`0`的数据类型不同，所以返回`false`。\n\n大整数可以转为其他数据类型。\n\n```javascript\nBoolean(0n) // false\nBoolean(1n) // true\nNumber(1n)  // 1\nString(1n)  // "1"\n\n!0n // true\n!1n // false\n```\n\n大整数也可以与字符串混合运算。\n\n```javascript\n\'\' + 123n // "123"\n```\n\n## Math.signbit()\n\n`Math.sign()`用来判断一个值的正负，但是如果参数是`-0`，它会返回`-0`。\n\n```javascript\nMath.sign(-0) // -0\n```\n\n这导致对于判断符号位的正负，`Math.sign()`不是很有用。JavaScript 内部使用 64 位浮点数（国际标准 IEEE 754）表示数值，IEEE 754 规定第一位是符号位，`0`表示正数，`1`表示负数。所以会有两种零，`+0`是符号位为`0`时的零值，`-0`是符号位为`1`时的零值。实际编程中，判断一个值是`+0`还是`-0`非常麻烦，因为它们是相等的。\n\n```javascript\n+0 === -0 // true\n```\n\n目前，有一个[提案](http://jfbastien.github.io/papers/Math.signbit.html)，引入了`Math.signbit()`方法判断一个数的符号位是否设置了。\n\n```javascript\nMath.signbit(2) //false\nMath.signbit(-2) //true\nMath.signbit(0) //false\nMath.signbit(-0) //true\n```\n\n可以看到，该方法正确返回了`-0`的符号位是设置了的。\n\n该方法的算法如下。\n\n- 如果参数是`NaN`，返回`false`\n- 如果参数是`-0`，返回`true`\n- 如果参数是负值，返回`true`\n- 其他情况返回`false`\n\n\n\n# 参考链接\n\n1. [官方文件](http://es6.ruanyifeng.com/#docs/reference#%E5%AE%98%E6%96%B9%E6%96%87%E4%BB%B6)\n2. [综合介绍](http://es6.ruanyifeng.com/#docs/reference#%E7%BB%BC%E5%90%88%E4%BB%8B%E7%BB%8D)\n3. [let 和 const](http://es6.ruanyifeng.com/#docs/reference#let%20%E5%92%8C%20const)\n4. [解构赋值](http://es6.ruanyifeng.com/#docs/reference#%E8%A7%A3%E6%9E%84%E8%B5%8B%E5%80%BC)\n5. [字符串](http://es6.ruanyifeng.com/#docs/reference#%E5%AD%97%E7%AC%A6%E4%B8%B2)\n6. [正则](http://es6.ruanyifeng.com/#docs/reference#%E6%AD%A3%E5%88%99)\n7. [数值](http://es6.ruanyifeng.com/#docs/reference#%E6%95%B0%E5%80%BC)\n8. [数组](http://es6.ruanyifeng.com/#docs/reference#%E6%95%B0%E7%BB%84)\n9. [函数](http://es6.ruanyifeng.com/#docs/reference#%E5%87%BD%E6%95%B0)\n10. [对象](http://es6.ruanyifeng.com/#docs/reference#%E5%AF%B9%E8%B1%A1)\n11. [Symbol](http://es6.ruanyifeng.com/#docs/reference#Symbol)\n12. [Set 和 Map](http://es6.ruanyifeng.com/#docs/reference#Set%20%E5%92%8C%20Map)\n13. [Proxy 和 Reflect](http://es6.ruanyifeng.com/#docs/reference#Proxy%20%E5%92%8C%20Reflect)\n14. [Promise 对象](http://es6.ruanyifeng.com/#docs/reference#Promise%20%E5%AF%B9%E8%B1%A1)\n15. [Iterator](http://es6.ruanyifeng.com/#docs/reference#Iterator)\n16. [Generator](http://es6.ruanyifeng.com/#docs/reference#Generator)\n17. [异步操作和 Async 函数](http://es6.ruanyifeng.com/#docs/reference#%E5%BC%82%E6%AD%A5%E6%93%8D%E4%BD%9C%E5%92%8C%20Async%20%E5%87%BD%E6%95%B0)\n18. [Class](http://es6.ruanyifeng.com/#docs/reference#Class)\n19. [Decorator](http://es6.ruanyifeng.com/#docs/reference#Decorator)\n20. [Module](http://es6.ruanyifeng.com/#docs/reference#Module)\n21. [二进制数组](http://es6.ruanyifeng.com/#docs/reference#%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%95%B0%E7%BB%84)\n22. [SIMD](http://es6.ruanyifeng.com/#docs/reference#SIMD)\n23. [工具](http://es6.ruanyifeng.com/#docs/reference#%E5%B7%A5%E5%85%B7)\n\n## 官方文件\n\n- [ECMAScript® 2015 Language Specification](http://www.ecma-international.org/ecma-262/6.0/index.html): ECMAScript 2015 规格\n- [ECMAScript® 2016 Language Specification](http://www.ecma-international.org/ecma-262/7.0/): ECMAScript 2016 规格\n- [ECMAScript® 2017 Language Specification](https://tc39.github.io/ecma262/)：ECMAScript 2017 规格（草案）\n- [ECMAScript Current Proposals](https://github.com/tc39/ecma262): ECMAScript 当前的所有提案\n- [ECMAScript Active Proposals](https://github.com/tc39/proposals): 已经进入正式流程的提案\n- [ECMAscript proposals](https://github.com/hemanth/es-next)：从阶段 0 到阶段 4 的所有提案列表\n- [TC39 meeting agendas](https://github.com/tc39/agendas): TC39 委员会历年的会议记录\n- [ECMAScript Daily](https://ecmascript-daily.github.io/): TC39 委员会的动态\n- [The TC39 Process](https://tc39.github.io/process-document/): 提案进入正式规格的流程\n- [TC39: A Process Sketch, Stages 0 and 1](https://thefeedbackloop.xyz/tc39-a-process-sketch-stages-0-and-1/): Stage 0 和 Stage 1 的含义\n- [TC39 Process Sketch, Stage 2](https://thefeedbackloop.xyz/tc39-process-sketch-stage-2/): Stage 2 的含义\n\n## 综合介绍\n\n- Axel Rauschmayer, [Exploring ES6: Upgrade to the next version of JavaScript](http://exploringjs.com/es6/): ES6 的专著，本书的许多代码实例来自该书\n- Sayanee Basu, [Use ECMAScript 6 Today](http://net.tutsplus.com/articles/news/ecmascript-6-today/)\n- Ariya Hidayat, [Toward Modern Web Apps with ECMAScript 6](http://www.sencha.com/blog/toward-modern-web-apps-with-ecmascript-6/)\n- Dale Schouten, [10 Ecmascript-6 tricks you can perform right now](http://html5hub.com/10-ecmascript-6-tricks-you-can-perform-right-now/)\n- Colin Toh, [Lightweight ES6 Features That Pack A Punch](http://colintoh.com/blog/lightweight-es6-features): ES6 的一些“轻量级”的特性介绍\n- Domenic Denicola, [ES6: The Awesome Parts](http://www.slideshare.net/domenicdenicola/es6-the-awesome-parts)\n- Nicholas C. Zakas, [Understanding ECMAScript 6](https://github.com/nzakas/understandinges6)\n- Justin Drake, [ECMAScript 6 in Node.JS](https://github.com/JustinDrake/node-es6-examples)\n- Ryan Dao, [Summary of ECMAScript 6 major features](http://ryandao.net/portal/content/summary-ecmascript-6-major-features)\n- Luke Hoban, [ES6 features](https://github.com/lukehoban/es6features): ES6 新语法点的罗列\n- Traceur-compiler, [Language Features](https://github.com/google/traceur-compiler/wiki/LanguageFeatures): Traceur 文档列出的一些 ES6 例子\n- Axel Rauschmayer, [ECMAScript 6: what’s next for JavaScript?](https://speakerdeck.com/rauschma/ecmascript-6-whats-next-for-javascript-august-2014): 关于 ES6 新增语法的综合介绍，有很多例子\n- Axel Rauschmayer, [Getting started with ECMAScript 6](http://www.2ality.com/2015/08/getting-started-es6.html): ES6 语法点的综合介绍\n- Toby Ho, [ES6 in io.js](http://davidwalsh.name/es6-io)\n- Guillermo Rauch, [ECMAScript 6](http://rauchg.com/2015/ecmascript-6/)\n- Charles King, [The power of ECMAScript 6](http://charlesbking.com/power_of_es6/#/)\n- Benjamin De Cock, [Frontend Guidelines](https://github.com/bendc/frontend-guidelines): ES6 最佳实践\n- Jani Hartikainen, [ES6: What are the benefits of the new features in practice?](http://codeutopia.net/blog/2015/01/06/es6-what-are-the-benefits-of-the-new-features-in-practice/)\n- kangax, [Javascript quiz. ES6 edition](http://perfectionkills.com/javascript-quiz-es6/): ES6 小测试\n- Jeremy Fairbank, [HTML5DevConf ES7 and Beyond!](https://speakerdeck.com/jfairbank/html5devconf-es7-and-beyond): ES7 新增语法点介绍\n- Timothy Gu, [How to Read the ECMAScript Specification](https://timothygu.me/es-howto/): 如何读懂 ES6 规格\n\n## let 和 const\n\n- Kyle Simpson, [For and against let](http://davidwalsh.name/for-and-against-let): 讨论 let 命令的作用域\n- kangax, [Why typeof is no longer “safe”](http://es-discourse.com/t/why-typeof-is-no-longer-safe/15): 讨论在块级作用域内，let 命令的变量声明和赋值的行为\n- Axel Rauschmayer, [Variables and scoping in ECMAScript 6](http://www.2ality.com/2015/02/es6-scoping.html): 讨论块级作用域与 let 和 const 的行为\n- Nicolas Bevacqua, [ES6 Let, Const and the “Temporal Dead Zone” (TDZ) in Depth](http://ponyfoo.com/articles/es6-let-const-and-temporal-dead-zone-in-depth)\n- acorn, [Function statements in strict mode](https://github.com/ternjs/acorn/issues/118): 块级作用域对严格模式的函数声明的影响\n- Axel Rauschmayer, [ES proposal: global](http://www.2ality.com/2016/09/global.html): 顶层对象`global`\n\n## 解构赋值\n\n- Nick Fitzgerald, [Destructuring Assignment in ECMAScript 6](http://fitzgeraldnick.com/weblog/50/): 详细介绍解构赋值的用法\n- Nicholas C. Zakas, [ECMAScript 6 destructuring gotcha](https://www.nczonline.net/blog/2015/10/ecmascript-6-destructuring-gotcha/)\n\n## 字符串\n\n- Nicholas C. Zakas, [A critical review of ECMAScript 6 quasi-literals](http://www.nczonline.net/blog/2012/08/01/a-critical-review-of-ecmascript-6-quasi-literals/)\n- Mozilla Developer Network, [Template strings](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/template_strings)\n- Addy Osmani, [Getting Literal With ES6 Template Strings](http://updates.html5rocks.com/2015/01/ES6-Template-Strings): 模板字符串的介绍\n- Blake Winton, [ES6 Templates](https://weblog.latte.ca/blake/tech/firefox/templates.html): 模板字符串的介绍\n- Peter Jaszkowiak, [How to write a template compiler in JavaScript](https://medium.com/@PitaJ/how-to-write-a-template-compiler-in-javascript-f174df6f32f): 使用模板字符串，编写一个模板编译函数\n- Axel Rauschmayer, [ES.stage3: string padding](http://www.2ality.com/2015/11/string-padding.html)\n\n## 正则\n\n- Mathias Bynens, [Unicode-aware regular expressions in ES6](https://mathiasbynens.be/notes/es6-unicode-regex): 详细介绍正则表达式的 u 修饰符\n- Axel Rauschmayer, [New regular expression features in ECMAScript 6](http://www.2ality.com/2015/07/regexp-es6.html)：ES6 正则特性的详细介绍\n- Yang Guo, [RegExp lookbehind assertions](http://v8project.blogspot.jp/2016/02/regexp-lookbehind-assertions.html)：介绍后行断言\n- Axel Rauschmayer, [ES proposal: RegExp named capture groups](http://2ality.com/2017/05/regexp-named-capture-groups.html): 具名组匹配的介绍\n- Mathias Bynens, [ECMAScript regular expressions are getting better!](https://mathiasbynens.be/notes/es-regexp-proposals): 介绍 ES2018 添加的多项正则语法\n\n## 数值\n\n- Nicolas Bevacqua, [ES6 Number Improvements in Depth](http://ponyfoo.com/articles/es6-number-improvements-in-depth)\n- Axel Rauschmayer, [ES proposal: arbitrary precision integers](http://2ality.com/2017/03/es-integer.html)\n\n## 数组\n\n- Axel Rauschmayer, [ECMAScript 6’s new array methods](http://www.2ality.com/2014/05/es6-array-methods.html): 对 ES6 新增的数组方法的全面介绍\n- TC39, [Array.prototype.includes](https://github.com/tc39/Array.prototype.includes/): 数组的 includes 方法的规格\n- Axel Rauschmayer, [ECMAScript 6: holes in Arrays](http://www.2ality.com/2015/09/holes-arrays-es6.html): 数组的空位问题\n\n## 函数\n\n- Nicholas C. Zakas, [Understanding ECMAScript 6 arrow functions](http://www.nczonline.net/blog/2013/09/10/understanding-ecmascript-6-arrow-functions/)\n- Jack Franklin, [Real Life ES6 - Arrow Functions](http://javascriptplayground.com/blog/2014/04/real-life-es6-arrow-fn/)\n- Axel Rauschmayer, [Handling required parameters in ECMAScript 6](http://www.2ality.com/2014/04/required-parameters-es6.html)\n- Dmitry Soshnikov, [ES6 Notes: Default values of parameters](http://dmitrysoshnikov.com/ecmascript/es6-notes-default-values-of-parameters/): 介绍参数的默认值\n- Ragan Wald, [Destructuring and Recursion in ES6](http://raganwald.com/2015/02/02/destructuring.html): rest 参数和扩展运算符的详细介绍\n- Axel Rauschmayer, [The names of functions in ES6](http://www.2ality.com/2015/09/function-names-es6.html): 函数的 name 属性的详细介绍\n- Kyle Simpson, [Arrow This](http://blog.getify.com/arrow-this/): 箭头函数并没有自己的 this\n- Derick Bailey, [Do ES6 Arrow Functions Really Solve “this” In JavaScript?](http://derickbailey.com/2015/09/28/do-es6-arrow-functions-really-solve-this-in-javascript/)：使用箭头函数处理 this 指向，必须非常小心\n- Mark McDonnell, [Understanding recursion in functional JavaScript programming](http://www.integralist.co.uk/posts/js-recursion.html): 如何自己实现尾递归优化\n- Nicholas C. Zakas, [The ECMAScript 2016 change you probably don\'t know](https://www.nczonline.net/blog/2016/10/the-ecmascript-2016-change-you-probably-dont-know/): 使用参数默认值时，不能在函数内部显式开启严格模式\n- Axel Rauschmayer, [ES proposal: optional catch binding](http://2ality.com/2017/08/optional-catch-binding.html)\n- Cynthia Lee, [When you should use ES6 arrow functions — and when you shouldn’t](https://medium.freecodecamp.org/when-and-why-you-should-use-es6-arrow-functions-and-when-you-shouldnt-3d851d7f0b26): 讨论箭头函数的适用场合\n\n## 对象\n\n- Addy Osmani, [Data-binding Revolutions with Object.observe()](http://www.html5rocks.com/en/tutorials/es7/observe/): 介绍 Object.observe()的概念\n- Sella Rafaeli, [Native JavaScript Data-Binding](http://www.sellarafaeli.com/blog/native_javascript_data_binding): 如何使用 Object.observe 方法，实现数据对象与 DOM 对象的双向绑定\n- Axel Rauschmayer, [`__proto__` in ECMAScript 6](http://www.2ality.com/2015/09/proto-es6.html)\n- Axel Rauschmayer, [Enumerability in ECMAScript 6](http://www.2ality.com/2015/10/enumerability-es6.html)\n- Axel Rauschmayer, [ES proposal: Object.getOwnPropertyDescriptors()](http://www.2ality.com/2016/02/object-getownpropertydescriptors.html)\n- TC39, [Object.getOwnPropertyDescriptors Proposal](https://github.com/tc39/proposal-object-getownpropertydescriptors)\n\n## Symbol\n\n- Axel Rauschmayer, [Symbols in ECMAScript 6](http://www.2ality.com/2014/12/es6-symbols.html): Symbol 简介\n- MDN, [Symbol](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol): Symbol 类型的详细介绍\n- Jason Orendorff, [ES6 In Depth: Symbols](https://hacks.mozilla.org/2015/06/es6-in-depth-symbols/)\n- Keith Cirkel, [Metaprogramming in ES6: Symbols and why they\'re awesome](http://blog.keithcirkel.co.uk/metaprogramming-in-es6-symbols/): Symbol 的深入介绍\n- Axel Rauschmayer, [Customizing ES6 via well-known symbols](http://www.2ality.com/2015/09/well-known-symbols-es6.html)\n- Derick Bailey, [Creating A True Singleton In Node.js, With ES6 Symbols](https://derickbailey.com/2016/03/09/creating-a-true-singleton-in-node-js-with-es6-symbols/)\n- Das Surma, [How to read web specs Part IIa – Or: ECMAScript Symbols](https://dassur.ma/things/reading-specs-2/): 介绍 Symbol 的规格\n\n## Set 和 Map\n\n- Mozilla Developer Network, [WeakSet](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet)：介绍 WeakSet 数据结构\n- Dwayne Charrington, [What Are Weakmaps In ES6?](http://ilikekillnerds.com/2015/02/what-are-weakmaps-in-es6/): WeakMap 数据结构介绍\n- Axel Rauschmayer, [ECMAScript 6: maps and sets](http://www.2ality.com/2015/01/es6-maps-sets.html): Set 和 Map 结构的详细介绍\n- Jason Orendorff, [ES6 In Depth: Collections](https://hacks.mozilla.org/2015/06/es6-in-depth-collections/)：Set 和 Map 结构的设计思想\n- Axel Rauschmayer, [Converting ES6 Maps to and from JSON](http://www.2ality.com/2015/08/es6-map-json.html): 如何将 Map 与其他数据结构互相转换\n\n## Proxy 和 Reflect\n\n- Nicholas C. Zakas, [Creating defensive objects with ES6 proxies](http://www.nczonline.net/blog/2014/04/22/creating-defensive-objects-with-es6-proxies/)\n- Axel Rauschmayer, [Meta programming with ECMAScript 6 proxies](http://www.2ality.com/2014/12/es6-proxies.html): Proxy 详解\n- Daniel Zautner, [Meta-programming JavaScript Using Proxies](http://dzautner.com/meta-programming-javascript-using-proxies/): 使用 Proxy 实现元编程\n- Tom Van Cutsem, [Harmony-reflect](https://github.com/tvcutsem/harmony-reflect/wiki): Reflect 对象的设计目的\n- Tom Van Cutsem, [Proxy Traps](https://github.com/tvcutsem/harmony-reflect/blob/master/doc/traps.md): Proxy 拦截操作一览\n- Tom Van Cutsem, [Reflect API](https://github.com/tvcutsem/harmony-reflect/blob/master/doc/api.md)\n- Tom Van Cutsem, [Proxy Handler API](https://github.com/tvcutsem/harmony-reflect/blob/master/doc/handler_api.md)\n- Nicolas Bevacqua, [ES6 Proxies in Depth](http://ponyfoo.com/articles/es6-proxies-in-depth)\n- Nicolas Bevacqua, [ES6 Proxy Traps in Depth](http://ponyfoo.com/articles/es6-proxy-traps-in-depth)\n- Nicolas Bevacqua, [More ES6 Proxy Traps in Depth](http://ponyfoo.com/articles/more-es6-proxy-traps-in-depth)\n- Axel Rauschmayer, [Pitfall: not all objects can be wrapped transparently by proxies](http://www.2ality.com/2016/11/proxying-builtins.html)\n- Bertalan Miklos, [Writing a JavaScript Framework - Data Binding with ES6 Proxies](https://blog.risingstack.com/writing-a-javascript-framework-data-binding-es6-proxy/): 使用 Proxy 实现观察者模式\n- Keith Cirkel, [Metaprogramming in ES6: Part 2 - Reflect](https://www.keithcirkel.co.uk/metaprogramming-in-es6-part-2-reflect/): Reflect API 的详细介绍\n\n## Promise 对象\n\n- Jake Archibald, [JavaScript Promises: There and back again](http://www.html5rocks.com/en/tutorials/es6/promises/)\n- Jake Archibald, [Tasks, microtasks, queues and schedules](https://jakearchibald.com/2015/tasks-microtasks-queues-and-schedules/)\n- Tilde, [rsvp.js](https://github.com/tildeio/rsvp.js)\n- Sandeep Panda, [An Overview of JavaScript Promises](http://www.sitepoint.com/overview-javascript-promises/): ES6 Promise 入门介绍\n- Dave Atchley, [ES6 Promises](http://www.datchley.name/es6-promises/): Promise 的语法介绍\n- Axel Rauschmayer, [ECMAScript 6 promises (2/2): the API](http://www.2ality.com/2014/10/es6-promises-api.html): 对 ES6 Promise 规格和用法的详细介绍\n- Jack Franklin, [Embracing Promises in JavaScript](http://javascriptplayground.com/blog/2015/02/promises/): catch 方法的例子\n- Ronald Chen, [How to escape Promise Hell](https://medium.com/@pyrolistical/how-to-get-out-of-promise-hell-8c20e0ab0513#.2an1he6vf): 如何使用`Promise.all`方法的一些很好的例子\n- Jordan Harband, [proposal-promise-try](https://github.com/ljharb/proposal-promise-try): Promise.try() 方法的提案\n- Sven Slootweg, [What is Promise.try, and why does it matter?](http://cryto.net/~joepie91/blog/2016/05/11/what-is-promise-try-and-why-does-it-matter/): Promise.try() 方法的优点\n- Yehuda Katz, [TC39: Promises, Promises](https://thefeedbackloop.xyz/tc39-promises-promises/): Promise.try() 的用处\n\n## Iterator\n\n- Mozilla Developer Network, [Iterators and generators](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators)\n- Mozilla Developer Network, [The Iterator protocol](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/The_Iterator_protocol)\n- Jason Orendorff, [ES6 In Depth: Iterators and the for-of loop](https://hacks.mozilla.org/2015/04/es6-in-depth-iterators-and-the-for-of-loop/): 遍历器与 for...of 循环的介绍\n- Axel Rauschmayer, [Iterators and generators in ECMAScript 6](http://www.2ality.com/2013/06/iterators-generators.html): 探讨 Iterator 和 Generator 的设计目的\n- Axel Rauschmayer, [Iterables and iterators in ECMAScript 6](http://www.2ality.com/2015/02/es6-iteration.html): Iterator 的详细介绍\n- Kyle Simpson, [Iterating ES6 Numbers](http://blog.getify.com/iterating-es6-numbers/): 在数值对象上部署遍历器\n\n## Generator\n\n- Matt Baker, [Replacing callbacks with ES6 Generators](http://flippinawesome.org/2014/02/10/replacing-callbacks-with-es6-generators/)\n- Steven Sanderson, [Experiments with Koa and JavaScript Generators](http://blog.stevensanderson.com/2013/12/21/experiments-with-koa-and-javascript-generators/)\n- jmar777, [What\'s the Big Deal with Generators?](http://devsmash.com/blog/whats-the-big-deal-with-generators)\n- Marc Harter, [Generators in Node.js: Common Misconceptions and Three Good Use Cases](http://strongloop.com/strongblog/how-to-generators-node-js-yield-use-cases/): 讨论 Generator 函数的作用\n- StackOverflow, [ES6 yield : what happens to the arguments of the first call next()?](http://stackoverflow.com/questions/20977379/es6-yield-what-happens-to-the-arguments-of-the-first-call-next): 第一次使用 next 方法时不能带有参数\n- Kyle Simpson, [ES6 Generators: Complete Series](http://davidwalsh.name/es6-generators): 由浅入深探讨 Generator 的系列文章，共四篇\n- Gajus Kuizinas, [The Definitive Guide to the JavaScript Generators](http://gajus.com/blog/2/the-definetive-guide-to-the-javascript-generators): 对 Generator 的综合介绍\n- Jan Krems, [Generators Are Like Arrays](https://gist.github.com/jkrems/04a2b34fb9893e4c2b5c): 讨论 Generator 可以被当作数据结构看待\n- Harold Cooper, [Coroutine Event Loops in Javascript](http://syzygy.st/javascript-coroutines/): Generator 用于实现状态机\n- Ruslan Ismagilov, [learn-generators](https://github.com/isRuslan/learn-generators): 编程练习，共 6 道题\n- Steven Sanderson, [Experiments with Koa and JavaScript Generators](http://blog.stevensanderson.com/2013/12/21/experiments-with-koa-and-javascript-generators/): Generator 入门介绍，以 Koa 框架为例\n- Mahdi Dibaiee, [ES7 Array and Generator comprehensions](http://dibaiee.ir/es7-array-generator-comprehensions/)：ES7 的 Generator 推导\n- Nicolas Bevacqua, [ES6 Generators in Depth](http://ponyfoo.com/articles/es6-generators-in-depth)\n- Axel Rauschmayer, [ES6 generators in depth](http://www.2ality.com/2015/03/es6-generators.html): Generator 规格的详尽讲解\n- Derick Bailey, [Using ES6 Generators To Short-Circuit Hierarchical Data Iteration](https://derickbailey.com/2015/10/05/using-es6-generators-to-short-circuit-hierarchical-data-iteration/)：使用 for...of 循环完成预定的操作步骤\n\n## 异步操作和 Async 函数\n\n- Luke Hoban, [Async Functions for ECMAScript](https://github.com/lukehoban/ecmascript-asyncawait): Async 函数的设计思想，与 Promise、Gernerator 函数的关系\n- Jafar Husain, [Asynchronous Generators for ES7](https://github.com/jhusain/asyncgenerator): Async 函数的深入讨论\n- Nolan Lawson, [Taming the asynchronous beast with ES7](http://pouchdb.com/2015/03/05/taming-the-async-beast-with-es7.html): async 函数通俗的实例讲解\n- Jafar Husain, [Async Generators](https://docs.google.com/file/d/0B4PVbLpUIdzoMDR5dWstRllXblU/view?sle=true): 对 async 与 Generator 混合使用的一些讨论\n- Daniel Brain, [Understand promises before you start using async/await](https://medium.com/@bluepnume/learn-about-promises-before-you-start-using-async-await-eb148164a9c8): 讨论 async/await 与 Promise 的关系\n- Jake Archibald, [Async functions - making promises friendly](https://developers.google.com/web/fundamentals/getting-started/primers/async-functions)\n- Axel Rauschmayer, [ES proposal: asynchronous iteration](http://www.2ality.com/2016/10/asynchronous-iteration.html): 异步遍历器的详细介绍\n- Dima Grossman, [How to write async await without try-catch blocks in Javascript](http://blog.grossman.io/how-to-write-async-await-without-try-catch-blocks-in-javascript/): 除了 try/catch 以外的 async 函数内部捕捉错误的方法\n- Mostafa Gaafa, [6 Reasons Why JavaScript’s Async/Await Blows Promises Away](https://hackernoon.com/6-reasons-why-javascripts-async-await-blows-promises-away-tutorial-c7ec10518dd9): Async 函数的6个好处\n\n## Class\n\n- Sebastian Porto, [ES6 classes and JavaScript prototypes](https://reinteractive.net/posts/235-es6-classes-and-javascript-prototypes): ES6 Class 的写法与 ES5 Prototype 的写法对比\n- Jack Franklin, [An introduction to ES6 classes](http://javascriptplayground.com/blog/2014/07/introduction-to-es6-classes-tutorial/): ES6 class 的入门介绍\n- Axel Rauschmayer, [ECMAScript 6: new OOP features besides classes](http://www.2ality.com/2014/12/es6-oop.html)\n- Axel Rauschmayer, [Classes in ECMAScript 6 (final semantics)](http://www.2ality.com/2015/02/es6-classes-final.html): Class 语法的详细介绍和设计思想分析\n- Eric Faust, [ES6 In Depth: Subclassing](https://hacks.mozilla.org/2015/08/es6-in-depth-subclassing/): Class 语法的深入介绍\n- Nicolás Bevacqua, [Binding Methods to Class Instance Objects](https://ponyfoo.com/articles/binding-methods-to-class-instance-objects): 如何绑定类的实例中的 this\n- Jamie Kyle, [JavaScript\'s new #private class fields](https://jamie.build/javascripts-new-private-class-fields.html)：私有属性的介绍。\n\n## Decorator\n\n- Maximiliano Fierro, [Declarative vs Imperative](http://elmasse.github.io/js/decorators-bindings-es7.html): Decorators 和 Mixin 介绍\n- Justin Fagnani, ["Real" Mixins with JavaScript Classes](http://justinfagnani.com/2015/12/21/real-mixins-with-javascript-classes/): 使用类的继承实现 Mixin\n- Addy Osmani, [Exploring ES2016 Decorators](https://medium.com/google-developers/exploring-es7-decorators-76ecb65fb841): Decorator 的深入介绍\n- Sebastian McKenzie, [Allow decorators for functions as well](https://github.com/wycats/javascript-decorators/issues/4): 为什么修饰器不能用于函数\n- Maximiliano Fierro, [Traits with ES7 Decorators](http://cocktailjs.github.io/blog/traits-with-es7-decorators.html): Trait 的用法介绍\n- Jonathan Creamer: [Using ES2016 Decorators to Publish on an Event Bus](http://jonathancreamer.com/using-es2016-decorators-to-publish-on-an-event-bus/): 使用修饰器实现自动发布事件\n\n## Module\n\n- Jack Franklin, [JavaScript Modules the ES6 Way](http://24ways.org/2014/javascript-modules-the-es6-way/): ES6 模块入门\n- Axel Rauschmayer, [ECMAScript 6 modules: the final syntax](http://www.2ality.com/2014/09/es6-modules-final.html): ES6 模块的介绍，以及与 CommonJS 规格的详细比较\n- Dave Herman, [Static module resolution](http://calculist.org/blog/2012/06/29/static-module-resolution/): ES6 模块的静态化设计思想\n- Jason Orendorff, [ES6 In Depth: Modules](https://hacks.mozilla.org/2015/08/es6-in-depth-modules/): ES6 模块设计思想的介绍\n- Ben Newman, [The Importance of import and export](http://benjamn.github.io/empirenode-2015/#/): ES6 模块的设计思想\n- ESDiscuss, [Why is "export default var a = 1;" invalid syntax?](https://esdiscuss.org/topic/why-is-export-default-var-a-1-invalid-syntax)\n- Bradley Meck, [ES6 Module Interoperability](https://github.com/nodejs/node-eps/blob/master/002-es6-modules.md): 介绍 Node 如何处理 ES6 语法加载 CommonJS 模块\n- Axel Rauschmayer, [Making transpiled ES modules more spec-compliant](http://www.2ality.com/2017/01/babel-esm-spec-mode.html): ES6 模块编译成 CommonJS 模块的详细介绍\n- Axel Rauschmayer, [ES proposal: import() – dynamically importing ES modules](http://www.2ality.com/2017/01/import-operator.html): import() 的用法\n- Node EPS, [ES Module Interoperability](https://github.com/nodejs/node-eps/blob/master/002-es-modules.md): Node 对 ES6 模块的处理规格\n\n## 二进制数组\n\n- Ilmari Heikkinen, [Typed Arrays: Binary Data in the Browser](http://www.html5rocks.com/en/tutorials/webgl/typed_arrays/)\n- Khronos, [Typed Array Specification](http://www.khronos.org/registry/typedarray/specs/latest/)\n- Ian Elliot, [Reading A BMP File In JavaScript](http://www.i-programmer.info/projects/36-web/6234-reading-a-bmp-file-in-javascript.html)\n- Renato Mangini, [How to convert ArrayBuffer to and from String](http://updates.html5rocks.com/2012/06/How-to-convert-ArrayBuffer-to-and-from-String)\n- Axel Rauschmayer, [Typed Arrays in ECMAScript 6](http://www.2ality.com/2015/09/typed-arrays.html)\n- Axel Rauschmayer, [ES proposal: Shared memory and atomics](http://2ality.com/2017/01/shared-array-buffer.html)\n- Lin Clark, [Avoiding race conditions in SharedArrayBuffers with Atomics](https://hacks.mozilla.org/2017/06/avoiding-race-conditions-in-sharedarraybuffers-with-atomics/): Atomics 对象使用场景的解释\n- Lars T Hansen, [Shared memory - a brief tutorial](https://github.com/tc39/ecmascript_sharedmem/blob/master/TUTORIAL.md)\n- James Milner, [The Return of SharedArrayBuffers and Atomics](https://www.sitepen.com/blog/2018/09/19/the-return-of-sharedarraybuffers-and-atomics/)\n\n## SIMD\n\n- TC39, [SIMD.js Stage 2](https://docs.google.com/presentation/d/1MY9NHrHmL7ma7C8dyNXvmYNNGgVmmxXk8ZIiQtPlfH4/edit#slide=id.p19)\n- MDN, [SIMD](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SIMD)\n- TC39, [ECMAScript SIMD](https://github.com/tc39/ecmascript_simd)\n- Axel Rauschmayer, [JavaScript gains support for SIMD](http://www.2ality.com/2013/12/simd-js.html)\n\n## 工具\n\n- Babel, [Babel Handbook](https://github.com/thejameskyle/babel-handbook/tree/master/translations/en): Babel 的用法介绍\n- Google, [traceur-compiler](https://github.com/google/traceur-compiler): Traceur 编译器\n- Casper Beyer, [ECMAScript 6 Features and Tools](http://caspervonb.github.io/2014/03/05/ecmascript6-features-and-tools.html)\n- Stoyan Stefanov, [Writing ES6 today with jstransform](http://www.phpied.com/writing-es6-today-with-jstransform/)\n- ES6 Module Loader, [ES6 Module Loader Polyfill](https://github.com/ModuleLoader/es6-module-loader): 在浏览器和 node.js 加载 ES6 模块的一个库，文档里对 ES6 模块有详细解释\n- Paul Miller, [es6-shim](https://github.com/paulmillr/es6-shim): 一个针对老式浏览器，模拟 ES6 部分功能的垫片库（shim）\n- army8735, [Javascript Downcast](https://github.com/army8735/jsdc): 国产的 ES6 到 ES5 的转码器\n- esnext, [ES6 Module Transpiler](https://github.com/esnext/es6-module-transpiler)：基于 node.js 的将 ES6 模块转为 ES5 代码的命令行工具\n- Sebastian McKenzie, [BabelJS](http://babeljs.io/): ES6 转译器\n- SystemJS, [SystemJS](https://github.com/systemjs/systemjs): 在浏览器中加载 AMD、CJS、ES6 模块的一个垫片库\n- Modernizr, [HTML5 Cross Browser Polyfills](https://github.com/Modernizr/Modernizr/wiki/HTML5-Cross-Browser-Polyfills#ecmascript-6-harmony): ES6 垫片库清单\n- Facebook, [regenerator](https://github.com/facebook/regenerator): 将 Generator 函数转为 ES5 的转码器\n\n' },
    key: undefined } ] 'results'
[2019-03-05 20:21:27.167] [INFO] http - ::ffff:127.0.0.1 - - "POST /posts/create HTTP/1.1" 200 13 "http://localhost:9000/document/new" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:21:35.318] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:21:35.320] [INFO] console - will check 1551790220772 1551788495320
[2019-03-05 20:21:35.321] [INFO] console - will update 1551790295320 1551788495320
[2019-03-05 20:21:35.336] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 892 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:21:38.160] [INFO] console - will check 1551790295320 1551788498160
[2019-03-05 20:21:38.161] [INFO] console - will update 1551790298160 1551788498160
[2019-03-05 20:21:38.161] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:21:38.186] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c7e69c74018ef371601e30b HTTP/1.1" 200 814004 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:22:21.148] [INFO] console - will check 1551790298160 1551788541148
[2019-03-05 20:22:21.148] [INFO] console - will update 1551790341148 1551788541148
[2019-03-05 20:22:21.149] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:22:21.158] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e69804018ef371601e30a HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:22:22.615] [INFO] console - will check 1551790341148 1551788542615
[2019-03-05 20:22:22.615] [INFO] console - will update 1551790342615 1551788542615
[2019-03-05 20:22:22.616] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:22:22.633] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e69c74018ef371601e30b HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:22:25.187] [INFO] console - will check 1551790342615 1551788545187
[2019-03-05 20:22:25.187] [INFO] console - will update 1551790345187 1551788545187
[2019-03-05 20:22:25.188] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:22:25.193] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e69804018ef371601e30a HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:22:27.863] [INFO] console - will check 1551790345187 1551788547863
[2019-03-05 20:22:27.863] [INFO] console - will update 1551790347863 1551788547863
[2019-03-05 20:22:27.863] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:22:27.866] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e68e94018ef371601e308 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:22:28.568] [INFO] console - will check 1551790347863 1551788548568
[2019-03-05 20:22:28.568] [INFO] console - will update 1551790348568 1551788548568
[2019-03-05 20:22:28.568] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:22:28.573] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e68ba4018ef371601e307 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:23:14.324] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:23:14.324] [INFO] console - will check 1551790348568 1551788594324
[2019-03-05 20:23:14.324] [INFO] console - will update 1551790394324 1551788594324
[2019-03-05 20:23:14.327] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 717 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:23:16.441] [INFO] console - will check 1551790394324 1551788596441
[2019-03-05 20:23:16.441] [INFO] console - will update 1551790396441 1551788596441
[2019-03-05 20:23:16.442] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:23:16.450] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e69804018ef371601e30a HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:23:25.515] [INFO] console - will check 1551790396441 1551788605515
[2019-03-05 20:23:25.515] [INFO] console - will update 1551790405515 1551788605515
[2019-03-05 20:23:25.515] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:23:25.517] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e68e94018ef371601e308 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:23:28.222] [INFO] console - will check 1551790405515 1551788608222
[2019-03-05 20:23:28.222] [INFO] console - will update 1551790408222 1551788608222
[2019-03-05 20:23:28.222] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:23:28.225] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e68ba4018ef371601e307 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:23:28.831] [INFO] console - will check 1551790408222 1551788608831
[2019-03-05 20:23:28.832] [INFO] console - will update 1551790408831 1551788608831
[2019-03-05 20:23:28.832] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:23:28.834] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e68914018ef371601e306 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:23:29.276] [INFO] console - will check 1551790408831 1551788609276
[2019-03-05 20:23:29.276] [INFO] console - will update 1551790409276 1551788609276
[2019-03-05 20:23:29.276] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:23:29.280] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e68ba4018ef371601e307 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:23:30.500] [INFO] console - will check 1551790409276 1551788610500
[2019-03-05 20:23:30.500] [INFO] console - will update 1551790410500 1551788610500
[2019-03-05 20:23:30.500] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:23:30.505] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e69804018ef371601e30a HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:23:33.250] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:23:33.263] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:23:38.214] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:23:38.220] [WARN] http - undefined - - "GET /groups/detail?_id=5c7e692b4018ef371601e309 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:23:39.213] [INFO] console - will check 1551790410500 1551788619213
[2019-03-05 20:23:39.213] [INFO] console - will update 1551790419213 1551788619213
[2019-03-05 20:23:39.213] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:23:39.216] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e68e94018ef371601e308 HTTP/1.1" 304 - "http://localhost:9000/project/detail" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:40:17.074] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:40:17.092] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:40:19.231] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:40:19.232] [INFO] console - will check 1551790419213 1551789619232
[2019-03-05 20:40:19.232] [INFO] console - will update 1551791419232 1551789619232
[2019-03-05 20:40:19.235] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:40:20.402] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:40:20.415] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:40:21.340] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:40:21.345] [WARN] http - undefined - - "GET /groups/detail?_id=5c7e692b4018ef371601e309 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:40:22.518] [INFO] console - will check 1551791419232 1551789622518
[2019-03-05 20:40:22.518] [INFO] console - will update 1551791422518 1551789622518
[2019-03-05 20:40:22.518] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-05 20:40:22.522] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e68e94018ef371601e308 HTTP/1.1" 304 - "http://localhost:9000/project/detail" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:40:32.428] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: 
     { content: '\n\n大家都知道缓存的英文叫做-- `cache`。但我发现一个有趣的现象：这个单词在不同人的口中有不同的读音。为了全面了解缓存，我们得先从读音开始，这样才能够在和其他同事(例如 PM)交(zhuāng)流(bī)时体现自己的修(bī)养(gé)。\n\n友情提示：文章有些长，您可能需要分批次读完，当中可以喝个咖啡或者啤酒当作中场休息。\n\n## cache 怎么念\n\n在国外 IT 圈和大部分国外视频中，cache 的发音是 `/kæʃ/`(同 `cash`)，这也是一个广泛认可的发音。但我发现在中国的 IT 圈还有相当一部分程序员(比如我自己……)读作 `/kætʃ/`(同 `catch`)。虽然不太正确，但并不妨碍互相交流。(不过为了纯正，还是应该向正确的方向靠拢)\n\n此外还有一些小众的读法，例如 `/keɪʃ/`(同 `kaysh`)，甚至 `/kæʃeɪ/`(像个法语发音，重音在后面)。这些因为太小众了，可能会引起沟通障碍，估计只有在特定场合或者特定圈子才能顺畅使用。\n\n## 前端缓存/后端缓存\n\n扯了些没用的，我们先进入定义环节：什么是前端缓存？与之相对的什么又是后端缓存？\n\n![img](https://user-gold-cdn.xitu.io/2018/9/29/16623704e6f63949?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n基本的网络请求就是三个步骤：请求，处理，响应。\n\n后端缓存主要集中于“处理”步骤，通过保留数据库连接，存储处理结果等方式缩短处理时间，尽快进入“响应”步骤。当然这不在本文的讨论范围之内。\n\n而前端缓存则可以在剩下的两步：“请求”和“响应”中进行。在“请求”步骤中，浏览器也可以通过存储结果的方式直接使用资源，直接省去了发送请求；而“响应”步骤需要浏览器和服务器共同配合，通过减少响应内容来缩短传输时间。这些都会在下面进行讨论。\n\n本文主要包含\n\n- 按缓存位置分类 (memory cache, disk cache, Service Worker 等)\n- 按失效策略分类 (`Cache-Control`, `ETag` 等)\n- 帮助理解原理的一些案例\n- 缓存的应用模式\n\n## 按缓存位置分类\n\n我看过的大部分讨论缓存的文章会直接从 HTTP 协议头中的缓存字段开始，例如 `Cache-Control`, `ETag`, `max-age` 等。但偶尔也会听到别人讨论 memory cache, disk cache 等。**那这两种分类体系究竟有何关联？是否有交叉？**(我个人认为这是本文的最大价值所在，因为在写之前我自己也是被两种分类体系搞的一团糟)\n\n实际上，HTTP 协议头的那些字段，都属于 disk cache 的范畴，是几个缓存位置的其中之一。因此本着从全局到局部的原则，我们应当先从缓存位置开始讨论。等讲到 disk cache 时，才会详细讲述这些协议头的字段及其作用。\n\n我们可以在 Chrome 的开发者工具中，Network -> Size 一列看到一个请求最终的处理方式：如果是大小 (多少 K， 多少 M 等) 就表示是网络请求，否则会列出 `from memory cache`, `from disk cache` 和 `from ServiceWorker`。\n\n它们的优先级是：(由上到下寻找，找到即返回；找不到则继续)\n\n1. Service Worker\n2. Memory Cache\n3. Disk Cache\n4. 网络请求\n\n## memory cache\n\nmemory cache 是内存中的缓存，(与之相对 disk cache 就是硬盘上的缓存)。按照操作系统的常理：先读内存，再读硬盘。disk cache 将在后面介绍 (因为它的优先级更低一些)，这里先讨论 memory cache。\n\n几乎所有的网络请求资源都会被浏览器自动加入到 memory cache 中。但是也正因为数量很大但是浏览器占用的内存不能无限扩大这样两个因素，memory cache 注定只能是个“短期存储”。常规情况下，浏览器的 TAB 关闭后该次浏览的 memory cache 便告失效 (为了给其他 TAB 腾出位置)。而如果极端情况下 (例如一个页面的缓存就占用了超级多的内存)，那可能在 TAB 没关闭之前，排在前面的缓存就已经失效了。\n\n刚才提过，**几乎所有的请求资源** 都能进入 memory cache，这里细分一下主要有两块：\n\n1. preloader。如果你对这个机制不太了解，这里做一个简单的介绍，详情可以参阅[这篇文章](https://link.juejin.im/?target=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fcalendar.perfplanet.com%2F2013%2Fbig-bad-preloader%2F)。\n   熟悉浏览器处理流程的同学们应该了解，在浏览器打开网页的过程中，会先请求 HTML 然后解析。之后如果浏览器发现了 js, css 等需要解析和执行的资源时，它会使用 CPU 资源对它们进行解析和执行。在古老的年代(大约 2007 年以前)，“请求 js/css - 解析执行 - 请求下一个 js/css - 解析执行下一个 js/css” 这样的“串行”操作模式在每次打开页面之前进行着。很明显在解析执行的时候，网络请求是空闲的，这就有了发挥的空间：我们能不能一边解析执行 js/css，一边去请求下一个(或下一批)资源呢？\n   这就是 preloader 要做的事情。不过 preloader 没有一个官方标准，所以每个浏览器的处理都略有区别。例如有些浏览器还会下载 css 中的 `@import` 内容或者 `<video>` 的 `poster`等。\n   而这些被 preloader 请求过来的资源就会被放入 memory cache 中，供之后的解析执行操作使用。\n2. preload (虽然看上去和刚才的 preloader 就差了俩字母)。实际上这个大家应该更加熟悉一些，例如 `<link rel="preload">`。这些显式指定的预加载资源，也会被放入 memory cache 中。\n\nmemory cache 机制保证了一个页面中如果有两个相同的请求 (例如两个 `src` 相同的 `<img>`，两个 `href` 相同的 `<link>`) 都实际只会被请求最多一次，避免浪费。\n\n不过在匹配缓存时，除了匹配完全相同的 URL 之外，还会比对他们的类型，CORS 中的域名规则等。因此一个作为脚本 (script) 类型被缓存的资源是不能用在图片 (image) 类型的请求中的，即便他们 `src` 相等。\n\n在从 memory cache 获取缓存内容时，浏览器会忽视例如 `max-age=0`, `no-cache` 等头部配置。例如页面上存在几个相同 `src` 的图片，即便它们可能被设置为不缓存，但依然会从 memory cache 中读取。这是因为 memory cache 只是短期使用，大部分情况生命周期只有一次浏览而已。而 `max-age=0` 在语义上普遍被解读为“不要在下次浏览时使用”，所以和 memory cache 并不冲突。\n\n但如果站长是真心不想让一个资源进入缓存，就连短期也不行，那就需要使用 `no-store`。存在这个头部配置的话，即便是 memory cache 也不会存储，自然也不会从中读取了。(后面的第二个示例有关于这点的体现)\n\n## disk cache\n\ndisk cache 也叫 HTTP cache，顾名思义是存储在硬盘上的缓存，因此它是持久存储的，是实际存在于文件系统中的。而且它允许相同的资源在跨会话，甚至跨站点的情况下使用，例如两个站点都使用了同一张图片。\n\ndisk cache 会严格根据 HTTP 头信息中的各类字段来判定哪些资源可以缓存，哪些资源不可以缓存；哪些资源是仍然可用的，哪些资源是过时需要重新请求的。当命中缓存之后，浏览器会从硬盘中读取资源，虽然比起从内存中读取慢了一些，但比起网络请求还是快了不少的。绝大部分的缓存都来自 disk cache。\n\n关于 HTTP 的协议头中的缓存字段，我们会在稍后进行详细讨论。\n\n凡是持久性存储都会面临容量增长的问题，disk cache 也不例外。在浏览器自动清理时，会有神秘的算法去把“最老的”或者“最可能过时的”资源删除，因此是一个一个删除的。不过每个浏览器识别“最老的”和“最可能过时的”资源的算法不尽相同，可能也是它们差异性的体现。\n\n## Service Worker\n\n上述的缓存策略以及缓存/读取/失效的动作都是由浏览器内部判断 & 进行的，我们只能设置响应头的某些字段来告诉浏览器，而不能自己操作。举个生活中去银行存/取钱的例子来说，你只能告诉银行职员，我要存/取多少钱，然后把由他们会经过一系列的记录和手续之后，把钱放到金库中去，或者从金库中取出钱来交给你。\n\n但 Service Worker 的出现，给予了我们另外一种更加灵活，更加直接的操作方式。依然以存/取钱为例，我们现在可以绕开银行职员，自己走到金库前(当然是有别于上述金库的一个单独的小金库)，自己把钱放进去或者取出来。因此我们可以选择放哪些钱(缓存哪些文件)，什么情况把钱取出来(路由匹配规则)，取哪些钱出来(缓存匹配并返回)。**当然现实中银行没有给我们开放这样的服务**。\n\nService Worker 能够操作的缓存是有别于浏览器内部的 memory cache 或者 disk cache 的。我们可以从 Chrome 的 F12 中，Application -> Cache Storage 找到这个单独的“小金库”。除了位置不同之外，这个缓存是永久性的，即关闭 TAB 或者浏览器，下次打开依然还在(而 memory cache 不是)。有两种情况会导致这个缓存中的资源被清除：手动调用 API `cache.delete(resource)` 或者容量超过限制，被浏览器全部清空。\n\n如果 Service Worker 没能命中缓存，一般情况会使用 `fetch()` 方法继续获取资源。这时候，浏览器就去 memory cache 或者 disk cache 进行下一次找缓存的工作了。注意：经过 Service Worker 的 `fetch()` 方法获取的资源，即便它并没有命中 Service Worker 缓存，甚至实际走了网络请求，也会标注为 `from ServiceWorker`。这个情况在后面的第三个示例中有所体现。\n\n## 请求网络\n\n如果一个请求在上述 3 个位置都没有找到缓存，那么浏览器会正式发送网络请求去获取内容。之后容易想到，为了提升之后请求的缓存命中率，自然要把这个资源添加到缓存中去。具体来说：\n\n1. 根据 Service Worker 中的 handler 决定是否存入 Cache Storage (额外的缓存位置)。\n2. 根据 HTTP 头部的相关字段(`Cache-control`, `Pragma` 等)决定是否存入 disk cache\n3. memory cache 保存一份资源 **的引用**，以备下次使用。\n\n## 按失效策略分类\n\nmemory cache 是浏览器为了加快读取缓存速度而进行的自身的优化行为，不受开发者控制，也不受 HTTP 协议头的约束，算是一个黑盒。Service Worker 是由开发者编写的额外的脚本，且缓存位置独立，出现也较晚，使用还不算太广泛。所以我们平时最为熟悉的其实是 disk cache，也叫 HTTP cache (因为不像 memory cache，它遵守 HTTP 协议头中的字段)。平时所说的强制缓存，对比缓存，以及 `Cache-Control` 等，也都归于此类。\n\n## 强制缓存 (也叫强缓存)\n\n强制缓存的含义是，当客户端请求后，会先访问缓存数据库看缓存是否存在。如果存在则直接返回；不存在则请求真的服务器，响应后再写入缓存数据库。\n\n**强制缓存直接减少请求数，是提升最大的缓存策略。** 它的优化覆盖了文章开头提到过的请求数据的全部三个步骤。如果考虑使用缓存来优化网页性能的话，强制缓存应该是首先被考虑的。\n\n可以造成强制缓存的字段是 `Cache-control` 和 `Expires`。\n\n## Expires\n\n这是 HTTP 1.0 的字段，表示缓存到期时间，是一个绝对的时间 (当前时间+缓存时间)，如\n\n```\nExpires: Thu, 10 Nov 2017 08:45:11 GMT\n```\n\n在响应消息头中，设置这个字段之后，就可以告诉浏览器，在未过期之前不需要再次请求。\n\n但是，这个字段设置时有两个缺点：\n\n1. 由于是绝对时间，用户可能会将客户端本地的时间进行修改，而导致浏览器判断缓存失效，重新请求该资源。此外，即使不考虑自信修改，时差或者误差等因素也可能造成客户端与服务端的时间不一致，致使缓存失效。\n2. 写法太复杂了。表示时间的字符串多个空格，少个字母，都会导致非法属性从而设置失效。\n\n## Cache-control\n\n已知Expires的缺点之后，在HTTP/1.1中，增加了一个字段Cache-control，该字段表示资源缓存的最大有效时间，在该时间内，客户端不需要向服务器发送请求\n\n这两者的区别就是前者是绝对时间，而后者是相对时间。如下：\n\n```\nCache-control: max-age=2592000\n```\n\n下面列举一些 `Cache-control` 字段常用的值：(完整的列表可以查看 [MDN](https://link.juejin.im/?target=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fdeveloper.mozilla.org%2Fzh-CN%2Fdocs%2FWeb%2FHTTP%2FHeaders%2FCache-Control))\n\n- `max-age`：即最大有效时间，在上面的例子中我们可以看到\n- `must-revalidate`：如果超过了 `max-age` 的时间，浏览器必须向服务器发送请求，验证资源是否还有效。\n- `no-cache`：虽然字面意思是“不要缓存”，但实际上还是要求客户端缓存内容的，只是是否使用这个内容由后续的对比来决定。\n- `no-store`: 真正意义上的“不要缓存”。所有内容都不走缓存，包括强制和对比。\n- `public`：所有的内容都可以被缓存 (包括客户端和代理服务器， 如 CDN)\n- `private`：所有的内容只有客户端才可以缓存，代理服务器不能缓存。默认值。\n\n这些值可以混合使用，例如 `Cache-control:public, max-age=2592000`。在混合使用时，它们的优先级如下图：(图片来自 [developers.google.com/web/fundame…](https://link.juejin.im/?target=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fdevelopers.google.com%2Fweb%2Ffundamentals%2Fperformance%2Foptimizing-content-efficiency%2Fhttp-caching%253Fhl%253Dzh-cn))\n\n![img](https://user-gold-cdn.xitu.io/2018/9/29/16623704e9096b45?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n这里有一个疑问：`max-age=0` 和 `no-cache` 等价吗？从规范的字面意思来说，`max-age` 到期是 **应该(SHOULD)** 重新验证，而 `no-cache` 是 **必须(MUST)** 重新验证。但实际情况以浏览器实现为准，大部分情况他们俩的行为还是一致的。（如果是 `max-age=0, must-revalidate` 就和 `no-cache` 等价了）\n\n顺带一提，在 HTTP/1.1 之前，如果想使用 `no-cache`，通常是使用 `Pragma` 字段，如 `Pragma: no-cache`(这也是 `Pragma` 字段唯一的取值)。但是这个字段只是浏览器约定俗成的实现，并没有确切规范，因此缺乏可靠性。它应该只作为一个兼容字段出现，在当前的网络环境下其实用处已经很小。\n\n总结一下，自从 HTTP/1.1 开始，`Expires` 逐渐被 `Cache-control` 取代。`Cache-control` 是一个相对时间，即使客户端时间发生改变，相对时间也不会随之改变，这样可以保持服务器和客户端的时间一致性。而且 `Cache-control` 的可配置性比较强大。\n\n**Cache-control 的优先级高于 Expires**，为了兼容 HTTP/1.0 和 HTTP/1.1，实际项目中两个字段我们都会设置。\n\n## 对比缓存 (也叫协商缓存)\n\n当强制缓存失效(超过规定时间)时，就需要使用对比缓存，由服务器决定缓存内容是否失效。\n\n流程上说，浏览器先请求缓存数据库，返回一个缓存标识。之后浏览器拿这个标识和服务器通讯。如果缓存未失效，则返回 HTTP 状态码 304 表示继续使用，于是客户端继续使用缓存；如果失效，则返回新的数据和缓存规则，浏览器响应数据后，再把规则写入到缓存数据库。\n\n**对比缓存在请求数上和没有缓存是一致的**，但如果是 304 的话，返回的仅仅是一个状态码而已，并没有实际的文件内容，因此 **在响应体体积上的节省是它的优化点**。它的优化覆盖了文章开头提到过的请求数据的三个步骤中的最后一个：“响应”。通过减少响应体体积，来缩短网络传输时间。所以和强制缓存相比提升幅度较小，但总比没有缓存好。\n\n对比缓存是可以和强制缓存一起使用的，作为在强制缓存失效后的一种后备方案。实际项目中他们也的确经常一同出现。\n\n对比缓存有 2 组字段(不是两个)：\n\n## Last-Modified & If-Modified-Since\n\n1. 服务器通过 `Last-Modified` 字段告知客户端，资源最后一次被修改的时间，例如\n   `Last-Modified: Mon, 10 Nov 2018 09:10:11 GMT`\n2. 浏览器将这个值和内容一起记录在缓存数据库中。\n3. 下一次请求相同资源时时，浏览器从自己的缓存中找出“不确定是否过期的”缓存。因此在请求头中将上次的 `Last-Modified` 的值写入到请求头的 `If-Modified-Since` 字段\n4. 服务器会将 `If-Modified-Since` 的值与 `Last-Modified` 字段进行对比。如果相等，则表示未修改，响应 304；反之，则表示修改了，响应 200 状态码，并返回数据。\n\n但是他还是有一定缺陷的：\n\n- 如果资源更新的速度是秒以下单位，那么该缓存是不能被使用的，因为它的时间单位最低是秒。\n- 如果文件是通过服务器动态生成的，那么该方法的更新时间永远是生成的时间，尽管文件可能没有变化，所以起不到缓存的作用。\n\n## Etag & If-None-Match\n\n为了解决上述问题，出现了一组新的字段 `Etag` 和 `If-None-Match`\n\n`Etag` 存储的是文件的特殊标识(一般都是 hash 生成的)，服务器存储着文件的 `Etag` 字段。之后的流程和 `Last-Modified` 一致，只是 `Last-Modified` 字段和它所表示的更新时间改变成了 `Etag` 字段和它所表示的文件 hash，把 `If-Modified-Since` 变成了 `If-None-Match`。服务器同样进行比较，命中返回 304, 不命中返回新资源和 200。\n\n**Etag 的优先级高于 Last-Modified**\n\n## 缓存小结\n\n当浏览器要请求资源时\n\n1. 调用 Service Worker 的 `fetch` 事件响应\n\n2. 查看 memory cache\n\n3. 查看 disk cache。这里又细分：\n\n4. 1. 如果有强制缓存且未失效，则使用强制缓存，不请求服务器。这时的状态码全部是 200\n   2. 如果有强制缓存但已失效，使用对比缓存，比较后确定 304 还是 200\n\n1. 发送网络请求，等待网络响应\n2. 把响应内容存入 disk cache (如果 HTTP 头信息配置可以存的话)\n3. 把响应内容 **的引用** 存入 memory cache (无视 HTTP 头信息的配置)\n4. 把响应内容存入 Service Worker 的 Cache Storage (如果 Service Worker 的脚本调用了 `cache.put()`)\n\n## 一些案例\n\n光看原理不免枯燥。我们编写一些简单的网页，通过案例来深刻理解上面的那些原理。\n\n## 1. memory cache & disk cache\n\n我们写一个简单的 `index.html`，然后引用 3 种资源，分别是 `index.js`, `index.css` 和 `mashroom.jpg`。\n\n我们给这三种资源都设置上 `Cache-control: max-age=86400`，表示强制缓存 24 小时。以下截图全部使用 Chrome 的隐身模式。\n\n\\1. 首次请求\n\n![img](https://user-gold-cdn.xitu.io/2018/9/29/16623704e713586b?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n\n毫无意外的全部走网络请求，因为什么缓存都还没有。\n\n\\2. 再次请求 (F5)\n\n![img](https://user-gold-cdn.xitu.io/2018/9/29/16623704e804c0b8?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n\n第二次请求，三个请求都来自 memory cache。因为我们没有关闭 TAB，所以浏览器把缓存的应用加到了 memory cache。(耗时 0ms，也就是 1ms 以内)\n\n\\3. 关闭 TAB，打开新 TAB 并再次请求\n\n![img](https://user-gold-cdn.xitu.io/2018/9/29/1662370505e68bb1?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n\n因为关闭了 TAB，memory cache 也随之清空。但是 disk cache 是持久的，于是所有资源来自 disk cache。(大约耗时 3ms，因为文件有点小)\n而且对比 2 和 3，很明显看到 memory cache 还是比 disk cache 快得多的。\n\n## 2. no-cache & no-store\n\n我们在 `index.html` 里面一些代码，完成两个目标：\n\n- 每种资源都(同步)请求两次\n- 增加脚本异步请求图片\n\n```\n<!-- 把3种资源都改成请求两次 -->\n<link rel="stylesheet" href="/static/index.css">\n<link rel="stylesheet" href="/static/index.css">\n<script src="/static/index.js"></script>\n<script src="/static/index.js"></script>\n<img src="/static/mashroom.jpg">\n<img src="/static/mashroom.jpg">\n\n<!-- 异步请求图片 -->\n<script>\n    setTimeout(function () {\n        let img = document.createElement(\'img\')\n        img.src = \'/static/mashroom.jpg\'\n        document.body.appendChild(img)\n    }, 1000)\n</script>\n```\n\n\\1. 当把服务器响应设置为 `Cache-Control: no-cache` 时，我们发现打开页面之后，三种资源都只被请求 **1** 次。\n\n![img](https://user-gold-cdn.xitu.io/2018/9/29/16623704e713586b?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n\n\n![img](https://user-gold-cdn.xitu.io/2018/9/29/166237050c5ad602?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n\n这说明两个问题：\n\n- - 同步请求方面，浏览器会自动把当次 HTML 中的资源存入到缓存 (memory cache)，这样碰到相同 `src` 的图片就会自动读取缓存(但不会在 Network 中显示出来)\n  - 异步请求方面，浏览器同样是不发请求而直接读取缓存返回。但同样不会在 Network 中显示。\n\n总体来说，如上面原理所述，`no-cache` 从语义上表示下次请求不要直接使用缓存而需要比对，并不对本次请求进行限制。因此浏览器在处理当前页面时，可以放心使用缓存。\n\n\\2. 当把服务器响应设置为 `Cache-Control: no-store` 时，情况发生了变化，三种资源都被请求了 **2** 次。而图片因为还多一次异步请求，总计 **3** 次。(红框中的都是那一次异步请求)\n\n![img](https://user-gold-cdn.xitu.io/2018/9/29/166237050dbd0dda?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n\n\n![img](https://user-gold-cdn.xitu.io/2018/9/29/166237050dfb47d1?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n\n这同样说明：\n\n- - 如之前原理所述，虽然 memory cache 是无视 HTTP 头信息的，但是 `no-store` 是特别的。在这个设置下，memory cache 也不得不每次都请求资源。\n  - 异步请求和同步遵循相同的规则，在 `no-store` 情况下，依然是每次都发送请求，不进行任何缓存。\n\n## 3. Service Worker & memory (disk) cache\n\n我们尝试把 Service Worker 也加入进去。我们编写一个 `serviceWorker.js`，并编写如下内容：(主要是预缓存 3 个资源，并在实际请求时匹配缓存并返回)\n\n```\n// serviceWorker.js\nself.addEventListener(\'install\', e => {\n  // 当确定要访问某些资源时，提前请求并添加到缓存中。\n  // 这个模式叫做“预缓存”\n  e.waitUntil(\n    caches.open(\'service-worker-test-precache\').then(cache => {\n      return cache.addAll([\'/static/index.js\', \'/static/index.css\', \'/static/mashroom.jpg\'])\n    })\n  )\n})\n\nself.addEventListener(\'fetch\', e => {\n  // 缓存中能找到就返回，找不到就网络请求，之后再写入缓存并返回。\n  // 这个称为 CacheFirst 的缓存策略。\n  return e.respondWith(\n    caches.open(\'service-worker-test-precache\').then(cache => {\n      return cache.match(e.request).then(matchedResponse => {\n        return matchedResponse || fetch(e.request).then(fetchedResponse => {\n          cache.put(e.request, fetchedResponse.clone())\n          return fetchedResponse\n        })\n      })\n    })\n  )\n})\n```\n\n注册 SW 的代码这里就不赘述了。此外我们还给服务器设置 `Cache-Control: max-age=86400` 来开启 disk cache。我们的目的是看看两者的优先级。\n\n\\1. 当我们首次访问时，会看到常规请求之外，浏览器(确切地说是 Service Worker)额外发出了 3 个请求。这来自预缓存的代码。\n\n![img](https://user-gold-cdn.xitu.io/2018/9/29/1662370520b2a625?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n\n\\2. 第二次访问(无论关闭 TAB 重新打开，还是直接按 F5 刷新)都能看到所有的请求标记为 `from SerciceWorker`。\n\n![img](https://user-gold-cdn.xitu.io/2018/9/29/166237052946888c?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n\n`from ServiceWorker` 只表示请求通过了 Service Worker，至于到底是命中了缓存，还是继续 `fetch()` 方法光看这一条记录其实无从知晓。因此我们还得配合后续的 Network 记录来看。因为之后没有额外的请求了，因此判定是命中了缓存。\n\n![img](https://user-gold-cdn.xitu.io/2018/9/29/166237052973ec60?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n\n从服务器的日志也能很明显地看到，3 个资源都没有被重新请求，即命中了 Service Worker 内部的缓存。\n\n\\3. 如果修改 `serviceWorker.js` 的 `fetch` 事件监听代码，改为如下：\n\n```\n// 这个也叫做 NetworkOnly 的缓存策略。 \nself.addEventListener(\'fetch\', e => {\n   return e.respondWith(fetch(e.request)) \n})\n```\n\n可以发现在后续访问时的效果和修改前是 **完全一致的**。(即 Network 仅有标记为 `from ServiceWorker` 的几个请求，而服务器也不打印 3 个资源的访问日志)\n很明显 Service Worker 这层并没有去读取自己的缓存，而是直接使用 `fetch()` 进行请求。所以此时其实是 `Cache-Control: max-age=86400` 的设置起了作用，也就是 memory/disk cache。但具体是 memory 还是 disk 这个只有浏览器自己知道了，因为它并没有显式的告诉我们。(个人猜测是 memory，因为不论从耗时 0ms 还是从不关闭 TAB 来看，都更像是 memory cache)\n\n## 浏览器的行为\n\n所谓浏览器的行为，指的就是用户在浏览器如何操作时，会触发怎样的缓存策略。主要有 3 种：\n\n- 打开网页，地址栏输入地址： 查找 disk cache 中是否有匹配。如有则使用；如没有则发送网络请求。\n- 普通刷新 (F5)：因为 TAB 并没有关闭，因此 memory cache 是可用的，会被优先使用(如果匹配的话)。其次才是 disk cache。\n- 强制刷新 (Ctrl + F5)：浏览器不使用缓存，因此发送的请求头部均带有 `Cache-control: no-cache`(为了兼容，还带了 `Pragma: no-cache`)。服务器直接返回 200 和最新内容。\n\n## 缓存的应用模式\n\n了解了缓存的原理，我们可能更加关心如何在实际项目中使用它们，才能更好的让用户缩短加载时间，节约流量等。这里有几个常用的模式，供大家参考\n\n## 模式 1：不常变化的资源\n\n```\nCache-Control: max-age=31536000\n```\n\n通常在处理这类资源资源时，给它们的 `Cache-Control` 配置一个很大的 `max-age=31536000` (一年)，这样浏览器之后请求相同的 URL 会命中强制缓存。而为了解决更新的问题，就需要在文件名(或者路径)中添加 hash， 版本号等动态字符，之后更改动态字符，达到更改引用 URL 的目的，从而让之前的强制缓存失效 (其实并未立即失效，只是不再使用了而已)。\n\n在线提供的类库 (如 jquery-3.3.1.min.js, lodash.min.js 等) 均采用这个模式。如果配置中还增加 `public` 的话，CDN 也可以缓存起来，效果拔群。\n\n这个模式的一个变体是在引用 URL 后面添加参数 (例如 `?v=xxx` 或者 `?_=xxx`)，这样就不必在文件名或者路径中包含动态参数，满足某些完美主义者的喜好。在项目每次构建时，更新额外的参数 (例如设置为构建时的当前时间)，则能保证每次构建后总能让浏览器请求最新的内容。\n\n**特别注意：** 在处理 Service Worker 时，对待 `sw-register.js`(注册 Service Worker) 和 `serviceWorker.js` (Service Worker 本身) 需要格外的谨慎。如果这两个文件也使用这种模式，你必须多多考虑日后可能的更新及对策。\n\n## 模式 2：经常变化的资源\n\n```\nCache-Control: no-cache\n```\n\n这里的资源不单单指静态资源，也可能是网页资源，例如博客文章。这类资源的特点是：URL 不能变化，但内容可以(且经常)变化。我们可以设置 `Cache-Control: no-cache` 来迫使浏览器每次请求都必须找服务器验证资源是否有效。\n\n既然提到了验证，就必须 `ETag` 或者 `Last-Modified` 出场。这些字段都会由专门处理静态资源的常用类库(例如 `koa-static`)自动添加，无需开发者过多关心。\n\n也正如上文中提到协商缓存那样，这种模式下，节省的并不是请求数，而是请求体的大小。所以它的优化效果不如模式 1 来的显著。\n\n## 模式 3：非常危险的模式 1 和 2 的结合 （反例）\n\n```\nCache-Control: max-age=600, must-revalidate\n```\n\n不知道是否有开发者从模式 1 和 2 获得一些启发：模式 2 中，设置了 `no-cache`，相当于 `max-age=0, must-revalidate`。我的应用时效性没有那么强，但又不想做过于长久的强制缓存，我能不能配置例如 `max-age=600, must-revalidate` 这样折中的设置呢？\n\n表面上看这很美好：资源可以缓存 10 分钟，10 分钟内读取缓存，10 分钟后和服务器进行一次验证，集两种模式之大成，但实际线上暗存风险。因为上面提过，浏览器的缓存有自动清理机制，开发者并不能控制。\n\n举个例子：当我们有 3 种资源： `index.html`, `index.js`, `index.css`。我们对这 3 者进行上述配置之后，假设在某次访问时，`index.js` 已经被缓存清理而不存在，但 `index.html`, `index.css` 仍然存在于缓存中。这时候浏览器会向服务器请求新的 `index.js`，然后配上老的`index.html`, `index.css` 展现给用户。这其中的风险显而易见：不同版本的资源组合在一起，报错是极有可能的结局。\n\n除了自动清理引发问题，不同资源的请求时间不同也能导致问题。例如 A 页面请求的是 `A.js` 和 `all.css`，而 B 页面是 `B.js` 和 `all.css`。如果我们以 A -> B 的顺序访问页面，势必导致 `all.css` 的缓存时间早于 `B.js`。那么以后访问 B 页面就同样存在资源版本失配的隐患。\n\n## 后记\n\n这篇文章真心有点长，但已经囊括了前端缓存的绝大部分，包括 HTTP 协议中的缓存，Service Worker，以及 Chrome 浏览器的一些优化 (Memory Cache)。希望开发者们善用缓存，因为它往往是最容易想到，提升也最大的性能优化策略。\n\n## 参考文章\n\n[A Tale of Four Caches](https://link.juejin.im/?target=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fcalendar.perfplanet.com%2F2016%2Fa-tale-of-four-caches%2F) (但这篇文章把 Service Worker 的优先级排在 memory cache 和 disk cache 之间，跟我实验效果并不相符。怀疑可能是 2 年来 chrome 策略的修改？)\n\n[Caching best practices & max-age gotchas](https://link.juejin.im/?target=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fjakearchibald.com%2F2016%2Fcaching-best-practices%2F)' },
    key: undefined } ] 'results'
[2019-03-05 20:40:32.449] [INFO] http - ::ffff:127.0.0.1 - - "POST /posts/update HTTP/1.1" 200 32032 "http://localhost:9000/project/detail" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:41:01.781] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: 
     { content: '\n\n大家都知道缓存的英文叫做-- `cache`。但我发现一个有趣的现象：这个单词在不同人的口中有不同的读音。为了全面了解缓存，我们得先从读音开始，这样才能够在和其他同事(例如 PM)交(zhuāng)流(bī)时体现自己的修(bī)养(gé)。\n\n友情提示：文章有些长，您可能需要分批次读完，当中可以喝个咖啡或者啤酒当作中场休息。\n\n## cache 怎么念\n\n在国外 IT 圈和大部分国外视频中，cache 的发音是 `/kæʃ/`(同 `cash`)，这也是一个广泛认可的发音。但我发现在中国的 IT 圈还有相当一部分程序员(比如我自己……)读作 `/kætʃ/`(同 `catch`)。虽然不太正确，但并不妨碍互相交流。(不过为了纯正，还是应该向正确的方向靠拢)\n\n此外还有一些小众的读法，例如 `/keɪʃ/`(同 `kaysh`)，甚至 `/kæʃeɪ/`(像个法语发音，重音在后面)。这些因为太小众了，可能会引起沟通障碍，估计只有在特定场合或者特定圈子才能顺畅使用。\n\n## 前端缓存/后端缓存\n\n扯了些没用的，我们先进入定义环节：什么是前端缓存？与之相对的什么又是后端缓存？\n\n![img](https://user-gold-cdn.xitu.io/2018/9/29/16623704e6f63949?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n基本的网络请求就是三个步骤：请求，处理，响应。\n\n后端缓存主要集中于“处理”步骤，通过保留数据库连接，存储处理结果等方式缩短处理时间，尽快进入“响应”步骤。当然这不在本文的讨论范围之内。\n\n而前端缓存则可以在剩下的两步：“请求”和“响应”中进行。在“请求”步骤中，浏览器也可以通过存储结果的方式直接使用资源，直接省去了发送请求；而“响应”步骤需要浏览器和服务器共同配合，通过减少响应内容来缩短传输时间。这些都会在下面进行讨论。\n\n本文主要包含\n\n- 按缓存位置分类 (memory cache, disk cache, Service Worker 等)\n- 按失效策略分类 (`Cache-Control`, `ETag` 等)\n- 帮助理解原理的一些案例\n- 缓存的应用模式\n\n## 按缓存位置分类\n\n我看过的大部分讨论缓存的文章会直接从 HTTP 协议头中的缓存字段开始，例如 `Cache-Control`, `ETag`, `max-age` 等。但偶尔也会听到别人讨论 memory cache, disk cache 等。**那这两种分类体系究竟有何关联？是否有交叉？**(我个人认为这是本文的最大价值所在，因为在写之前我自己也是被两种分类体系搞的一团糟)\n\n实际上，HTTP 协议头的那些字段，都属于 disk cache 的范畴，是几个缓存位置的其中之一。因此本着从全局到局部的原则，我们应当先从缓存位置开始讨论。等讲到 disk cache 时，才会详细讲述这些协议头的字段及其作用。\n\n我们可以在 Chrome 的开发者工具中，Network -> Size 一列看到一个请求最终的处理方式：如果是大小 (多少 K， 多少 M 等) 就表示是网络请求，否则会列出 `from memory cache`, `from disk cache` 和 `from ServiceWorker`。\n\n它们的优先级是：(由上到下寻找，找到即返回；找不到则继续)\n\n1. Service Worker\n2. Memory Cache\n3. Disk Cache\n4. 网络请求\n\n## memory cache\n\nmemory cache 是内存中的缓存，(与之相对 disk cache 就是硬盘上的缓存)。按照操作系统的常理：先读内存，再读硬盘。disk cache 将在后面介绍 (因为它的优先级更低一些)，这里先讨论 memory cache。\n\n几乎所有的网络请求资源都会被浏览器自动加入到 memory cache 中。但是也正因为数量很大但是浏览器占用的内存不能无限扩大这样两个因素，memory cache 注定只能是个“短期存储”。常规情况下，浏览器的 TAB 关闭后该次浏览的 memory cache 便告失效 (为了给其他 TAB 腾出位置)。而如果极端情况下 (例如一个页面的缓存就占用了超级多的内存)，那可能在 TAB 没关闭之前，排在前面的缓存就已经失效了。\n\n刚才提过，**几乎所有的请求资源** 都能进入 memory cache，这里细分一下主要有两块：\n\n1. preloader。如果你对这个机制不太了解，这里做一个简单的介绍，详情可以参阅[这篇文章](https://link.juejin.im/?target=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fcalendar.perfplanet.com%2F2013%2Fbig-bad-preloader%2F)。\n   熟悉浏览器处理流程的同学们应该了解，在浏览器打开网页的过程中，会先请求 HTML 然后解析。之后如果浏览器发现了 js, css 等需要解析和执行的资源时，它会使用 CPU 资源对它们进行解析和执行。在古老的年代(大约 2007 年以前)，“请求 js/css - 解析执行 - 请求下一个 js/css - 解析执行下一个 js/css” 这样的“串行”操作模式在每次打开页面之前进行着。很明显在解析执行的时候，网络请求是空闲的，这就有了发挥的空间：我们能不能一边解析执行 js/css，一边去请求下一个(或下一批)资源呢？\n   这就是 preloader 要做的事情。不过 preloader 没有一个官方标准，所以每个浏览器的处理都略有区别。例如有些浏览器还会下载 css 中的 `@import` 内容或者 `<video>` 的 `poster`等。\n   而这些被 preloader 请求过来的资源就会被放入 memory cache 中，供之后的解析执行操作使用。\n2. preload (虽然看上去和刚才的 preloader 就差了俩字母)。实际上这个大家应该更加熟悉一些，例如 `<link rel="preload">`。这些显式指定的预加载资源，也会被放入 memory cache 中。\n\nmemory cache 机制保证了一个页面中如果有两个相同的请求 (例如两个 `src` 相同的 `<img>`，两个 `href` 相同的 `<link>`) 都实际只会被请求最多一次，避免浪费。\n\n不过在匹配缓存时，除了匹配完全相同的 URL 之外，还会比对他们的类型，CORS 中的域名规则等。因此一个作为脚本 (script) 类型被缓存的资源是不能用在图片 (image) 类型的请求中的，即便他们 `src` 相等。\n\n在从 memory cache 获取缓存内容时，浏览器会忽视例如 `max-age=0`, `no-cache` 等头部配置。例如页面上存在几个相同 `src` 的图片，即便它们可能被设置为不缓存，但依然会从 memory cache 中读取。这是因为 memory cache 只是短期使用，大部分情况生命周期只有一次浏览而已。而 `max-age=0` 在语义上普遍被解读为“不要在下次浏览时使用”，所以和 memory cache 并不冲突。\n\n但如果站长是真心不想让一个资源进入缓存，就连短期也不行，那就需要使用 `no-store`。存在这个头部配置的话，即便是 memory cache 也不会存储，自然也不会从中读取了。(后面的第二个示例有关于这点的体现)\n\n## disk cache\n\ndisk cache 也叫 HTTP cache，顾名思义是存储在硬盘上的缓存，因此它是持久存储的，是实际存在于文件系统中的。而且它允许相同的资源在跨会话，甚至跨站点的情况下使用，例如两个站点都使用了同一张图片。\n\ndisk cache 会严格根据 HTTP 头信息中的各类字段来判定哪些资源可以缓存，哪些资源不可以缓存；哪些资源是仍然可用的，哪些资源是过时需要重新请求的。当命中缓存之后，浏览器会从硬盘中读取资源，虽然比起从内存中读取慢了一些，但比起网络请求还是快了不少的。绝大部分的缓存都来自 disk cache。\n\n关于 HTTP 的协议头中的缓存字段，我们会在稍后进行详细讨论。\n\n凡是持久性存储都会面临容量增长的问题，disk cache 也不例外。在浏览器自动清理时，会有神秘的算法去把“最老的”或者“最可能过时的”资源删除，因此是一个一个删除的。不过每个浏览器识别“最老的”和“最可能过时的”资源的算法不尽相同，可能也是它们差异性的体现。\n\n## Service Worker\n\n上述的缓存策略以及缓存/读取/失效的动作都是由浏览器内部判断 & 进行的，我们只能设置响应头的某些字段来告诉浏览器，而不能自己操作。举个生活中去银行存/取钱的例子来说，你只能告诉银行职员，我要存/取多少钱，然后把由他们会经过一系列的记录和手续之后，把钱放到金库中去，或者从金库中取出钱来交给你。\n\n但 Service Worker 的出现，给予了我们另外一种更加灵活，更加直接的操作方式。依然以存/取钱为例，我们现在可以绕开银行职员，自己走到金库前(当然是有别于上述金库的一个单独的小金库)，自己把钱放进去或者取出来。因此我们可以选择放哪些钱(缓存哪些文件)，什么情况把钱取出来(路由匹配规则)，取哪些钱出来(缓存匹配并返回)。**当然现实中银行没有给我们开放这样的服务**。\n\nService Worker 能够操作的缓存是有别于浏览器内部的 memory cache 或者 disk cache 的。我们可以从 Chrome 的 F12 中，Application -> Cache Storage 找到这个单独的“小金库”。除了位置不同之外，这个缓存是永久性的，即关闭 TAB 或者浏览器，下次打开依然还在(而 memory cache 不是)。有两种情况会导致这个缓存中的资源被清除：手动调用 API `cache.delete(resource)` 或者容量超过限制，被浏览器全部清空。\n\n如果 Service Worker 没能命中缓存，一般情况会使用 `fetch()` 方法继续获取资源。这时候，浏览器就去 memory cache 或者 disk cache 进行下一次找缓存的工作了。注意：经过 Service Worker 的 `fetch()` 方法获取的资源，即便它并没有命中 Service Worker 缓存，甚至实际走了网络请求，也会标注为 `from ServiceWorker`。这个情况在后面的第三个示例中有所体现。\n\n## 请求网络\n\n如果一个请求在上述 3 个位置都没有找到缓存，那么浏览器会正式发送网络请求去获取内容。之后容易想到，为了提升之后请求的缓存命中率，自然要把这个资源添加到缓存中去。具体来说：\n\n1. 根据 Service Worker 中的 handler 决定是否存入 Cache Storage (额外的缓存位置)。\n2. 根据 HTTP 头部的相关字段(`Cache-control`, `Pragma` 等)决定是否存入 disk cache\n3. memory cache 保存一份资源 **的引用**，以备下次使用。\n\n## 按失效策略分类\n\nmemory cache 是浏览器为了加快读取缓存速度而进行的自身的优化行为，不受开发者控制，也不受 HTTP 协议头的约束，算是一个黑盒。Service Worker 是由开发者编写的额外的脚本，且缓存位置独立，出现也较晚，使用还不算太广泛。所以我们平时最为熟悉的其实是 disk cache，也叫 HTTP cache (因为不像 memory cache，它遵守 HTTP 协议头中的字段)。平时所说的强制缓存，对比缓存，以及 `Cache-Control` 等，也都归于此类。\n\n## 强制缓存 (也叫强缓存)\n\n强制缓存的含义是，当客户端请求后，会先访问缓存数据库看缓存是否存在。如果存在则直接返回；不存在则请求真的服务器，响应后再写入缓存数据库。\n\n**强制缓存直接减少请求数，是提升最大的缓存策略。** 它的优化覆盖了文章开头提到过的请求数据的全部三个步骤。如果考虑使用缓存来优化网页性能的话，强制缓存应该是首先被考虑的。\n\n可以造成强制缓存的字段是 `Cache-control` 和 `Expires`。\n\n## Expires\n\n这是 HTTP 1.0 的字段，表示缓存到期时间，是一个绝对的时间 (当前时间+缓存时间)，如\n\n```\nExpires: Thu, 10 Nov 2017 08:45:11 GMT\n```\n\n在响应消息头中，设置这个字段之后，就可以告诉浏览器，在未过期之前不需要再次请求。\n\n但是，这个字段设置时有两个缺点：\n\n1. 由于是绝对时间，用户可能会将客户端本地的时间进行修改，而导致浏览器判断缓存失效，重新请求该资源。此外，即使不考虑自信修改，时差或者误差等因素也可能造成客户端与服务端的时间不一致，致使缓存失效。\n2. 写法太复杂了。表示时间的字符串多个空格，少个字母，都会导致非法属性从而设置失效。\n\n## Cache-control\n\n已知Expires的缺点之后，在HTTP/1.1中，增加了一个字段Cache-control，该字段表示资源缓存的最大有效时间，在该时间内，客户端不需要向服务器发送请求\n\n这两者的区别就是前者是绝对时间，而后者是相对时间。如下：\n\n```\nCache-control: max-age=2592000\n```\n\n下面列举一些 `Cache-control` 字段常用的值：(完整的列表可以查看 [MDN](https://link.juejin.im/?target=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fdeveloper.mozilla.org%2Fzh-CN%2Fdocs%2FWeb%2FHTTP%2FHeaders%2FCache-Control))\n\n- `max-age`：即最大有效时间，在上面的例子中我们可以看到\n- `must-revalidate`：如果超过了 `max-age` 的时间，浏览器必须向服务器发送请求，验证资源是否还有效。\n- `no-cache`：虽然字面意思是“不要缓存”，但实际上还是要求客户端缓存内容的，只是是否使用这个内容由后续的对比来决定。\n- `no-store`: 真正意义上的“不要缓存”。所有内容都不走缓存，包括强制和对比。\n- `public`：所有的内容都可以被缓存 (包括客户端和代理服务器， 如 CDN)\n- `private`：所有的内容只有客户端才可以缓存，代理服务器不能缓存。默认值。\n\n这些值可以混合使用，例如 `Cache-control:public, max-age=2592000`。在混合使用时，它们的优先级如下图：(图片来自 [developers.google.com/web/fundame…](https://link.juejin.im/?target=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fdevelopers.google.com%2Fweb%2Ffundamentals%2Fperformance%2Foptimizing-content-efficiency%2Fhttp-caching%253Fhl%253Dzh-cn))\n\n![img](https://user-gold-cdn.xitu.io/2018/9/29/16623704e9096b45?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n这里有一个疑问：`max-age=0` 和 `no-cache` 等价吗？从规范的字面意思来说，`max-age` 到期是 **应该(SHOULD)** 重新验证，而 `no-cache` 是 **必须(MUST)** 重新验证。但实际情况以浏览器实现为准，大部分情况他们俩的行为还是一致的。（如果是 `max-age=0, must-revalidate` 就和 `no-cache` 等价了）\n\n顺带一提，在 HTTP/1.1 之前，如果想使用 `no-cache`，通常是使用 `Pragma` 字段，如 `Pragma: no-cache`(这也是 `Pragma` 字段唯一的取值)。但是这个字段只是浏览器约定俗成的实现，并没有确切规范，因此缺乏可靠性。它应该只作为一个兼容字段出现，在当前的网络环境下其实用处已经很小。\n\n总结一下，自从 HTTP/1.1 开始，`Expires` 逐渐被 `Cache-control` 取代。`Cache-control` 是一个相对时间，即使客户端时间发生改变，相对时间也不会随之改变，这样可以保持服务器和客户端的时间一致性。而且 `Cache-control` 的可配置性比较强大。\n\n**Cache-control 的优先级高于 Expires**，为了兼容 HTTP/1.0 和 HTTP/1.1，实际项目中两个字段我们都会设置。\n\n## 对比缓存 (也叫协商缓存)\n\n当强制缓存失效(超过规定时间)时，就需要使用对比缓存，由服务器决定缓存内容是否失效。\n\n流程上说，浏览器先请求缓存数据库，返回一个缓存标识。之后浏览器拿这个标识和服务器通讯。如果缓存未失效，则返回 HTTP 状态码 304 表示继续使用，于是客户端继续使用缓存；如果失效，则返回新的数据和缓存规则，浏览器响应数据后，再把规则写入到缓存数据库。\n\n**对比缓存在请求数上和没有缓存是一致的**，但如果是 304 的话，返回的仅仅是一个状态码而已，并没有实际的文件内容，因此 **在响应体体积上的节省是它的优化点**。它的优化覆盖了文章开头提到过的请求数据的三个步骤中的最后一个：“响应”。通过减少响应体体积，来缩短网络传输时间。所以和强制缓存相比提升幅度较小，但总比没有缓存好。\n\n对比缓存是可以和强制缓存一起使用的，作为在强制缓存失效后的一种后备方案。实际项目中他们也的确经常一同出现。\n\n对比缓存有 2 组字段(不是两个)：\n\n## Last-Modified & If-Modified-Since\n\n1. 服务器通过 `Last-Modified` 字段告知客户端，资源最后一次被修改的时间，例如\n   `Last-Modified: Mon, 10 Nov 2018 09:10:11 GMT`\n2. 浏览器将这个值和内容一起记录在缓存数据库中。\n3. 下一次请求相同资源时时，浏览器从自己的缓存中找出“不确定是否过期的”缓存。因此在请求头中将上次的 `Last-Modified` 的值写入到请求头的 `If-Modified-Since` 字段\n4. 服务器会将 `If-Modified-Since` 的值与 `Last-Modified` 字段进行对比。如果相等，则表示未修改，响应 304；反之，则表示修改了，响应 200 状态码，并返回数据。\n\n但是他还是有一定缺陷的：\n\n- 如果资源更新的速度是秒以下单位，那么该缓存是不能被使用的，因为它的时间单位最低是秒。\n- 如果文件是通过服务器动态生成的，那么该方法的更新时间永远是生成的时间，尽管文件可能没有变化，所以起不到缓存的作用。\n\n## Etag & If-None-Match\n\n为了解决上述问题，出现了一组新的字段 `Etag` 和 `If-None-Match`\n\n`Etag` 存储的是文件的特殊标识(一般都是 hash 生成的)，服务器存储着文件的 `Etag` 字段。之后的流程和 `Last-Modified` 一致，只是 `Last-Modified` 字段和它所表示的更新时间改变成了 `Etag` 字段和它所表示的文件 hash，把 `If-Modified-Since` 变成了 `If-None-Match`。服务器同样进行比较，命中返回 304, 不命中返回新资源和 200。\n\n**Etag 的优先级高于 Last-Modified**\n\n## 缓存小结\n\n当浏览器要请求资源时\n\n1. 调用 Service Worker 的 `fetch` 事件响应\n\n2. 查看 memory cache\n\n3. 查看 disk cache。这里又细分：\n\n4. 1. 如果有强制缓存且未失效，则使用强制缓存，不请求服务器。这时的状态码全部是 200\n   2. 如果有强制缓存但已失效，使用对比缓存，比较后确定 304 还是 200\n\n1. 发送网络请求，等待网络响应\n2. 把响应内容存入 disk cache (如果 HTTP 头信息配置可以存的话)\n3. 把响应内容 **的引用** 存入 memory cache (无视 HTTP 头信息的配置)\n4. 把响应内容存入 Service Worker 的 Cache Storage (如果 Service Worker 的脚本调用了 `cache.put()`)\n\n## 一些案例\n\n光看原理不免枯燥。我们编写一些简单的网页，通过案例来深刻理解上面的那些原理。\n\n## 1. memory cache & disk cache\n\n我们写一个简单的 `index.html`，然后引用 3 种资源，分别是 `index.js`, `index.css` 和 `mashroom.jpg`。\n\n我们给这三种资源都设置上 `Cache-control: max-age=86400`，表示强制缓存 24 小时。以下截图全部使用 Chrome 的隐身模式。\n\n\\1. 首次请求\n\n![img](https://user-gold-cdn.xitu.io/2018/9/29/16623704e713586b?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n\n毫无意外的全部走网络请求，因为什么缓存都还没有。\n\n\\2. 再次请求 (F5)\n\n![img](https://user-gold-cdn.xitu.io/2018/9/29/16623704e804c0b8?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n\n第二次请求，三个请求都来自 memory cache。因为我们没有关闭 TAB，所以浏览器把缓存的应用加到了 memory cache。(耗时 0ms，也就是 1ms 以内)\n\n\\3. 关闭 TAB，打开新 TAB 并再次请求\n\n![img](https://user-gold-cdn.xitu.io/2018/9/29/1662370505e68bb1?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n\n因为关闭了 TAB，memory cache 也随之清空。但是 disk cache 是持久的，于是所有资源来自 disk cache。(大约耗时 3ms，因为文件有点小)\n而且对比 2 和 3，很明显看到 memory cache 还是比 disk cache 快得多的。\n\n## 2. no-cache & no-store\n\n我们在 `index.html` 里面一些代码，完成两个目标：\n\n- 每种资源都(同步)请求两次\n- 增加脚本异步请求图片\n\n```\n<!-- 把3种资源都改成请求两次 -->\n<link rel="stylesheet" href="/static/index.css">\n<link rel="stylesheet" href="/static/index.css">\n<script src="/static/index.js"></script>\n<script src="/static/index.js"></script>\n<img src="/static/mashroom.jpg">\n<img src="/static/mashroom.jpg">\n\n<!-- 异步请求图片 -->\n<script>\n    setTimeout(function () {\n        let img = document.createElement(\'img\')\n        img.src = \'/static/mashroom.jpg\'\n        document.body.appendChild(img)\n    }, 1000)\n</script>\n```\n\n\\1. 当把服务器响应设置为 `Cache-Control: no-cache` 时，我们发现打开页面之后，三种资源都只被请求 **1** 次。\n\n![img](https://user-gold-cdn.xitu.io/2018/9/29/16623704e713586b?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n\n\n![img](https://user-gold-cdn.xitu.io/2018/9/29/166237050c5ad602?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n\n这说明两个问题：\n\n- - 同步请求方面，浏览器会自动把当次 HTML 中的资源存入到缓存 (memory cache)，这样碰到相同 `src` 的图片就会自动读取缓存(但不会在 Network 中显示出来)\n  - 异步请求方面，浏览器同样是不发请求而直接读取缓存返回。但同样不会在 Network 中显示。\n\n总体来说，如上面原理所述，`no-cache` 从语义上表示下次请求不要直接使用缓存而需要比对，并不对本次请求进行限制。因此浏览器在处理当前页面时，可以放心使用缓存。\n\n\\2. 当把服务器响应设置为 `Cache-Control: no-store` 时，情况发生了变化，三种资源都被请求了 **2** 次。而图片因为还多一次异步请求，总计 **3** 次。(红框中的都是那一次异步请求)\n\n![img](https://user-gold-cdn.xitu.io/2018/9/29/166237050dbd0dda?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n\n\n![img](https://user-gold-cdn.xitu.io/2018/9/29/166237050dfb47d1?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n\n这同样说明：\n\n- - 如之前原理所述，虽然 memory cache 是无视 HTTP 头信息的，但是 `no-store` 是特别的。在这个设置下，memory cache 也不得不每次都请求资源。\n  - 异步请求和同步遵循相同的规则，在 `no-store` 情况下，依然是每次都发送请求，不进行任何缓存。\n\n## 3. Service Worker & memory (disk) cache\n\n我们尝试把 Service Worker 也加入进去。我们编写一个 `serviceWorker.js`，并编写如下内容：(主要是预缓存 3 个资源，并在实际请求时匹配缓存并返回)\n\n```\n// serviceWorker.js\nself.addEventListener(\'install\', e => {\n  // 当确定要访问某些资源时，提前请求并添加到缓存中。\n  // 这个模式叫做“预缓存”\n  e.waitUntil(\n    caches.open(\'service-worker-test-precache\').then(cache => {\n      return cache.addAll([\'/static/index.js\', \'/static/index.css\', \'/static/mashroom.jpg\'])\n    })\n  )\n})\n\nself.addEventListener(\'fetch\', e => {\n  // 缓存中能找到就返回，找不到就网络请求，之后再写入缓存并返回。\n  // 这个称为 CacheFirst 的缓存策略。\n  return e.respondWith(\n    caches.open(\'service-worker-test-precache\').then(cache => {\n      return cache.match(e.request).then(matchedResponse => {\n        return matchedResponse || fetch(e.request).then(fetchedResponse => {\n          cache.put(e.request, fetchedResponse.clone())\n          return fetchedResponse\n        })\n      })\n    })\n  )\n})\n```\n\n注册 SW 的代码这里就不赘述了。此外我们还给服务器设置 `Cache-Control: max-age=86400` 来开启 disk cache。我们的目的是看看两者的优先级。\n\n\\1. 当我们首次访问时，会看到常规请求之外，浏览器(确切地说是 Service Worker)额外发出了 3 个请求。这来自预缓存的代码。\n\n![img](https://user-gold-cdn.xitu.io/2018/9/29/1662370520b2a625?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n\n\\2. 第二次访问(无论关闭 TAB 重新打开，还是直接按 F5 刷新)都能看到所有的请求标记为 `from SerciceWorker`。\n\n![img](https://user-gold-cdn.xitu.io/2018/9/29/166237052946888c?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n\n`from ServiceWorker` 只表示请求通过了 Service Worker，至于到底是命中了缓存，还是继续 `fetch()` 方法光看这一条记录其实无从知晓。因此我们还得配合后续的 Network 记录来看。因为之后没有额外的请求了，因此判定是命中了缓存。\n\n![img](https://user-gold-cdn.xitu.io/2018/9/29/166237052973ec60?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n\n从服务器的日志也能很明显地看到，3 个资源都没有被重新请求，即命中了 Service Worker 内部的缓存。\n\n\\3. 如果修改 `serviceWorker.js` 的 `fetch` 事件监听代码，改为如下：\n\n```\n// 这个也叫做 NetworkOnly 的缓存策略。 \nself.addEventListener(\'fetch\', e => {\n   return e.respondWith(fetch(e.request)) \n})\n```\n\n可以发现在后续访问时的效果和修改前是 **完全一致的**。(即 Network 仅有标记为 `from ServiceWorker` 的几个请求，而服务器也不打印 3 个资源的访问日志)\n很明显 Service Worker 这层并没有去读取自己的缓存，而是直接使用 `fetch()` 进行请求。所以此时其实是 `Cache-Control: max-age=86400` 的设置起了作用，也就是 memory/disk cache。但具体是 memory 还是 disk 这个只有浏览器自己知道了，因为它并没有显式的告诉我们。(个人猜测是 memory，因为不论从耗时 0ms 还是从不关闭 TAB 来看，都更像是 memory cache)\n\n## 浏览器的行为\n\n所谓浏览器的行为，指的就是用户在浏览器如何操作时，会触发怎样的缓存策略。主要有 3 种：\n\n- 打开网页，地址栏输入地址： 查找 disk cache 中是否有匹配。如有则使用；如没有则发送网络请求。\n- 普通刷新 (F5)：因为 TAB 并没有关闭，因此 memory cache 是可用的，会被优先使用(如果匹配的话)。其次才是 disk cache。\n- 强制刷新 (Ctrl + F5)：浏览器不使用缓存，因此发送的请求头部均带有 `Cache-control: no-cache`(为了兼容，还带了 `Pragma: no-cache`)。服务器直接返回 200 和最新内容。\n\n## 缓存的应用模式\n\n了解了缓存的原理，我们可能更加关心如何在实际项目中使用它们，才能更好的让用户缩短加载时间，节约流量等。这里有几个常用的模式，供大家参考\n\n## 模式 1：不常变化的资源\n\n```\nCache-Control: max-age=31536000\n```\n\n通常在处理这类资源资源时，给它们的 `Cache-Control` 配置一个很大的 `max-age=31536000` (一年)，这样浏览器之后请求相同的 URL 会命中强制缓存。而为了解决更新的问题，就需要在文件名(或者路径)中添加 hash， 版本号等动态字符，之后更改动态字符，达到更改引用 URL 的目的，从而让之前的强制缓存失效 (其实并未立即失效，只是不再使用了而已)。\n\n在线提供的类库 (如 jquery-3.3.1.min.js, lodash.min.js 等) 均采用这个模式。如果配置中还增加 `public` 的话，CDN 也可以缓存起来，效果拔群。\n\n这个模式的一个变体是在引用 URL 后面添加参数 (例如 `?v=xxx` 或者 `?_=xxx`)，这样就不必在文件名或者路径中包含动态参数，满足某些完美主义者的喜好。在项目每次构建时，更新额外的参数 (例如设置为构建时的当前时间)，则能保证每次构建后总能让浏览器请求最新的内容。\n\n**特别注意：** 在处理 Service Worker 时，对待 `sw-register.js`(注册 Service Worker) 和 `serviceWorker.js` (Service Worker 本身) 需要格外的谨慎。如果这两个文件也使用这种模式，你必须多多考虑日后可能的更新及对策。\n\n## 模式 2：经常变化的资源\n\n```\nCache-Control: no-cache\n```\n\n这里的资源不单单指静态资源，也可能是网页资源，例如博客文章。这类资源的特点是：URL 不能变化，但内容可以(且经常)变化。我们可以设置 `Cache-Control: no-cache` 来迫使浏览器每次请求都必须找服务器验证资源是否有效。\n\n既然提到了验证，就必须 `ETag` 或者 `Last-Modified` 出场。这些字段都会由专门处理静态资源的常用类库(例如 `koa-static`)自动添加，无需开发者过多关心。\n\n也正如上文中提到协商缓存那样，这种模式下，节省的并不是请求数，而是请求体的大小。所以它的优化效果不如模式 1 来的显著。\n\n## 模式 3：非常危险的模式 1 和 2 的结合 （反例）\n\n```\nCache-Control: max-age=600, must-revalidate\n```\n\n不知道是否有开发者从模式 1 和 2 获得一些启发：模式 2 中，设置了 `no-cache`，相当于 `max-age=0, must-revalidate`。我的应用时效性没有那么强，但又不想做过于长久的强制缓存，我能不能配置例如 `max-age=600, must-revalidate` 这样折中的设置呢？\n\n表面上看这很美好：资源可以缓存 10 分钟，10 分钟内读取缓存，10 分钟后和服务器进行一次验证，集两种模式之大成，但实际线上暗存风险。因为上面提过，浏览器的缓存有自动清理机制，开发者并不能控制。\n\n举个例子：当我们有 3 种资源： `index.html`, `index.js`, `index.css`。我们对这 3 者进行上述配置之后，假设在某次访问时，`index.js` 已经被缓存清理而不存在，但 `index.html`, `index.css` 仍然存在于缓存中。这时候浏览器会向服务器请求新的 `index.js`，然后配上老的`index.html`, `index.css` 展现给用户。这其中的风险显而易见：不同版本的资源组合在一起，报错是极有可能的结局。\n\n除了自动清理引发问题，不同资源的请求时间不同也能导致问题。例如 A 页面请求的是 `A.js` 和 `all.css`，而 B 页面是 `B.js` 和 `all.css`。如果我们以 A -> B 的顺序访问页面，势必导致 `all.css` 的缓存时间早于 `B.js`。那么以后访问 B 页面就同样存在资源版本失配的隐患。\n\n## 后记\n\n这篇文章真心有点长，但已经囊括了前端缓存的绝大部分，包括 HTTP 协议中的缓存，Service Worker，以及 Chrome 浏览器的一些优化 (Memory Cache)。希望开发者们善用缓存，因为它往往是最容易想到，提升也最大的性能优化策略。\n\n## 参考文章\n\n[A Tale of Four Caches](https://link.juejin.im/?target=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fcalendar.perfplanet.com%2F2016%2Fa-tale-of-four-caches%2F) (但这篇文章把 Service Worker 的优先级排在 memory cache 和 disk cache 之间，跟我实验效果并不相符。怀疑可能是 2 年来 chrome 策略的修改？)\n\n[Caching best practices & max-age gotchas](https://link.juejin.im/?target=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fjakearchibald.com%2F2016%2Fcaching-best-practices%2F)' },
    key: undefined } ] 'results'
[2019-03-05 20:41:01.787] [INFO] http - ::ffff:127.0.0.1 - - "POST /posts/update HTTP/1.1" 200 32034 "http://localhost:9000/project/detail" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-05 20:41:06.645] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: 
     { content: '\n\n大家都知道缓存的英文叫做-- `cache`。但我发现一个有趣的现象：这个单词在不同人的口中有不同的读音。为了全面了解缓存，我们得先从读音开始，这样才能够在和其他同事(例如 PM)交(zhuāng)流(bī)时体现自己的修(bī)养(gé)。\n\n友情提示：文章有些长，您可能需要分批次读完，当中可以喝个咖啡或者啤酒当作中场休息。\n\n## cache 怎么念\n\n在国外 IT 圈和大部分国外视频中，cache 的发音是 `/kæʃ/`(同 `cash`)，这也是一个广泛认可的发音。但我发现在中国的 IT 圈还有相当一部分程序员(比如我自己……)读作 `/kætʃ/`(同 `catch`)。虽然不太正确，但并不妨碍互相交流。(不过为了纯正，还是应该向正确的方向靠拢)\n\n此外还有一些小众的读法，例如 `/keɪʃ/`(同 `kaysh`)，甚至 `/kæʃeɪ/`(像个法语发音，重音在后面)。这些因为太小众了，可能会引起沟通障碍，估计只有在特定场合或者特定圈子才能顺畅使用。\n\n## 前端缓存/后端缓存\n\n扯了些没用的，我们先进入定义环节：什么是前端缓存？与之相对的什么又是后端缓存？\n\n![img](https://user-gold-cdn.xitu.io/2018/9/29/16623704e6f63949?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n基本的网络请求就是三个步骤：请求，处理，响应。\n\n后端缓存主要集中于“处理”步骤，通过保留数据库连接，存储处理结果等方式缩短处理时间，尽快进入“响应”步骤。当然这不在本文的讨论范围之内。\n\n而前端缓存则可以在剩下的两步：“请求”和“响应”中进行。在“请求”步骤中，浏览器也可以通过存储结果的方式直接使用资源，直接省去了发送请求；而“响应”步骤需要浏览器和服务器共同配合，通过减少响应内容来缩短传输时间。这些都会在下面进行讨论。\n\n本文主要包含\n\n- 按缓存位置分类 (memory cache, disk cache, Service Worker 等)\n- 按失效策略分类 (`Cache-Control`, `ETag` 等)\n- 帮助理解原理的一些案例\n- 缓存的应用模式\n\n## 按缓存位置分类\n\n我看过的大部分讨论缓存的文章会直接从 HTTP 协议头中的缓存字段开始，例如 `Cache-Control`, `ETag`, `max-age` 等。但偶尔也会听到别人讨论 memory cache, disk cache 等。**那这两种分类体系究竟有何关联？是否有交叉？**(我个人认为这是本文的最大价值所在，因为在写之前我自己也是被两种分类体系搞的一团糟)\n\n实际上，HTTP 协议头的那些字段，都属于 disk cache 的范畴，是几个缓存位置的其中之一。因此本着从全局到局部的原则，我们应当先从缓存位置开始讨论。等讲到 disk cache 时，才会详细讲述这些协议头的字段及其作用。\n\n我们可以在 Chrome 的开发者工具中，Network -> Size 一列看到一个请求最终的处理方式：如果是大小 (多少 K， 多少 M 等) 就表示是网络请求，否则会列出 `from memory cache`, `from disk cache` 和 `from ServiceWorker`。\n\n它们的优先级是：(由上到下寻找，找到即返回；找不到则继续)\n\n1. Service Worker\n2. Memory Cache\n3. Disk Cache\n4. 网络请求\n\n## memory cache\n\nmemory cache 是内存中的缓存，(与之相对 disk cache 就是硬盘上的缓存)。按照操作系统的常理：先读内存，再读硬盘。disk cache 将在后面介绍 (因为它的优先级更低一些)，这里先讨论 memory cache。\n\n几乎所有的网络请求资源都会被浏览器自动加入到 memory cache 中。但是也正因为数量很大但是浏览器占用的内存不能无限扩大这样两个因素，memory cache 注定只能是个“短期存储”。常规情况下，浏览器的 TAB 关闭后该次浏览的 memory cache 便告失效 (为了给其他 TAB 腾出位置)。而如果极端情况下 (例如一个页面的缓存就占用了超级多的内存)，那可能在 TAB 没关闭之前，排在前面的缓存就已经失效了。\n\n刚才提过，**几乎所有的请求资源** 都能进入 memory cache，这里细分一下主要有两块：\n\n1. preloader。如果你对这个机制不太了解，这里做一个简单的介绍，详情可以参阅[这篇文章](https://link.juejin.im/?target=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fcalendar.perfplanet.com%2F2013%2Fbig-bad-preloader%2F)。\n   熟悉浏览器处理流程的同学们应该了解，在浏览器打开网页的过程中，会先请求 HTML 然后解析。之后如果浏览器发现了 js, css 等需要解析和执行的资源时，它会使用 CPU 资源对它们进行解析和执行。在古老的年代(大约 2007 年以前)，“请求 js/css - 解析执行 - 请求下一个 js/css - 解析执行下一个 js/css” 这样的“串行”操作模式在每次打开页面之前进行着。很明显在解析执行的时候，网络请求是空闲的，这就有了发挥的空间：我们能不能一边解析执行 js/css，一边去请求下一个(或下一批)资源呢？\n   这就是 preloader 要做的事情。不过 preloader 没有一个官方标准，所以每个浏览器的处理都略有区别。例如有些浏览器还会下载 css 中的 `@import` 内容或者 `<video>` 的 `poster`等。\n   而这些被 preloader 请求过来的资源就会被放入 memory cache 中，供之后的解析执行操作使用。\n2. preload (虽然看上去和刚才的 preloader 就差了俩字母)。实际上这个大家应该更加熟悉一些，例如 `<link rel="preload">`。这些显式指定的预加载资源，也会被放入 memory cache 中。\n\nmemory cache 机制保证了一个页面中如果有两个相同的请求 (例如两个 `src` 相同的 `<img>`，两个 `href` 相同的 `<link>`) 都实际只会被请求最多一次，避免浪费。\n\n不过在匹配缓存时，除了匹配完全相同的 URL 之外，还会比对他们的类型，CORS 中的域名规则等。因此一个作为脚本 (script) 类型被缓存的资源是不能用在图片 (image) 类型的请求中的，即便他们 `src` 相等。\n\n在从 memory cache 获取缓存内容时，浏览器会忽视例如 `max-age=0`, `no-cache` 等头部配置。例如页面上存在几个相同 `src` 的图片，即便它们可能被设置为不缓存，但依然会从 memory cache 中读取。这是因为 memory cache 只是短期使用，大部分情况生命周期只有一次浏览而已。而 `max-age=0` 在语义上普遍被解读为“不要在下次浏览时使用”，所以和 memory cache 并不冲突。\n\n但如果站长是真心不想让一个资源进入缓存，就连短期也不行，那就需要使用 `no-store`。存在这个头部配置的话，即便是 memory cache 也不会存储，自然也不会从中读取了。(后面的第二个示例有关于这点的体现)\n\n## disk cache\n\ndisk cache 也叫 HTTP cache，顾名思义是存储在硬盘上的缓存，因此它是持久存储的，是实际存在于文件系统中的。而且它允许相同的资源在跨会话，甚至跨站点的情况下使用，例如两个站点都使用了同一张图片。\n\ndisk cache 会严格根据 HTTP 头信息中的各类字段来判定哪些资源可以缓存，哪些资源不可以缓存；哪些资源是仍然可用的，哪些资源是过时需要重新请求的。当命中缓存之后，浏览器会从硬盘中读取资源，虽然比起从内存中读取慢了一些，但比起网络请求还是快了不少的。绝大部分的缓存都来自 disk cache。\n\n关于 HTTP 的协议头中的缓存字段，我们会在稍后进行详细讨论。\n\n凡是持久性存储都会面临容量增长的问题，disk cache 也不例外。在浏览器自动清理时，会有神秘的算法去把“最老的”或者“最可能过时的”资源删除，因此是一个一个删除的。不过每个浏览器识别“最老的”和“最可能过时的”资源的算法不尽相同，可能也是它们差异性的体现。\n\n## Service Worker\n\n上述的缓存策略以及缓存/读取/失效的动作都是由浏览器内部判断 & 进行的，我们只能设置响应头的某些字段来告诉浏览器，而不能自己操作。举个生活中去银行存/取钱的例子来说，你只能告诉银行职员，我要存/取多少钱，然后把由他们会经过一系列的记录和手续之后，把钱放到金库中去，或者从金库中取出钱来交给你。\n\n但 Service Worker 的出现，给予了我们另外一种更加灵活，更加直接的操作方式。依然以存/取钱为例，我们现在可以绕开银行职员，自己走到金库前(当然是有别于上述金库的一个单独的小金库)，自己把钱放进去或者取出来。因此我们可以选择放哪些钱(缓存哪些文件)，什么情况把钱取出来(路由匹配规则)，取哪些钱出来(缓存匹配并返回)。**当然现实中银行没有给我们开放这样的服务**。\n\nService Worker 能够操作的缓存是有别于浏览器内部的 memory cache 或者 disk cache 的。我们可以从 Chrome 的 F12 中，Application -> Cache Storage 找到这个单独的“小金库”。除了位置不同之外，这个缓存是永久性的，即关闭 TAB 或者浏览器，下次打开依然还在(而 memory cache 不是)。有两种情况会导致这个缓存中的资源被清除：手动调用 API `cache.delete(resource)` 或者容量超过限制，被浏览器全部清空。\n\n如果 Service Worker 没能命中缓存，一般情况会使用 `fetch()` 方法继续获取资源。这时候，浏览器就去 memory cache 或者 disk cache 进行下一次找缓存的工作了。注意：经过 Service Worker 的 `fetch()` 方法获取的资源，即便它并没有命中 Service Worker 缓存，甚至实际走了网络请求，也会标注为 `from ServiceWorker`。这个情况在后面的第三个示例中有所体现。\n\n## 请求网络\n\n如果一个请求在上述 3 个位置都没有找到缓存，那么浏览器会正式发送网络请求去获取内容。之后容易想到，为了提升之后请求的缓存命中率，自然要把这个资源添加到缓存中去。具体来说：\n\n1. 根据 Service Worker 中的 handler 决定是否存入 Cache Storage (额外的缓存位置)。\n2. 根据 HTTP 头部的相关字段(`Cache-control`, `Pragma` 等)决定是否存入 disk cache\n3. memory cache 保存一份资源 **的引用**，以备下次使用。\n\n## 按失效策略分类\n\nmemory cache 是浏览器为了加快读取缓存速度而进行的自身的优化行为，不受开发者控制，也不受 HTTP 协议头的约束，算是一个黑盒。Service Worker 是由开发者编写的额外的脚本，且缓存位置独立，出现也较晚，使用还不算太广泛。所以我们平时最为熟悉的其实是 disk cache，也叫 HTTP cache (因为不像 memory cache，它遵守 HTTP 协议头中的字段)。平时所说的强制缓存，对比缓存，以及 `Cache-Control` 等，也都归于此类。\n\n## 强制缓存 (也叫强缓存)\n\n强制缓存的含义是，当客户端请求后，会先访问缓存数据库看缓存是否存在。如果存在则直接返回；不存在则请求真的服务器，响应后再写入缓存数据库。\n\n**强制缓存直接减少请求数，是提升最大的缓存策略。** 它的优化覆盖了文章开头提到过的请求数据的全部三个步骤。如果考虑使用缓存来优化网页性能的话，强制缓存应该是首先被考虑的。\n\n可以造成强制缓存的字段是 `Cache-control` 和 `Expires`。\n\n## Expires\n\n这是 HTTP 1.0 的字段，表示缓存到期时间，是一个绝对的时间 (当前时间+缓存时间)，如\n\n```\nExpires: Thu, 10 Nov 2017 08:45:11 GMT\n```\n\n在响应消息头中，设置这个字段之后，就可以告诉浏览器，在未过期之前不需要再次请求。\n\n但是，这个字段设置时有两个缺点：\n\n1. 由于是绝对时间，用户可能会将客户端本地的时间进行修改，而导致浏览器判断缓存失效，重新请求该资源。此外，即使不考虑自信修改，时差或者误差等因素也可能造成客户端与服务端的时间不一致，致使缓存失效。\n2. 写法太复杂了。表示时间的字符串多个空格，少个字母，都会导致非法属性从而设置失效。\n\n## Cache-control\n\n已知Expires的缺点之后，在HTTP/1.1中，增加了一个字段Cache-control，该字段表示资源缓存的最大有效时间，在该时间内，客户端不需要向服务器发送请求\n\n这两者的区别就是前者是绝对时间，而后者是相对时间。如下：\n\n```\nCache-control: max-age=2592000\n```\n\n下面列举一些 `Cache-control` 字段常用的值：(完整的列表可以查看 [MDN](https://link.juejin.im/?target=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fdeveloper.mozilla.org%2Fzh-CN%2Fdocs%2FWeb%2FHTTP%2FHeaders%2FCache-Control))\n\n- `max-age`：即最大有效时间，在上面的例子中我们可以看到\n- `must-revalidate`：如果超过了 `max-age` 的时间，浏览器必须向服务器发送请求，验证资源是否还有效。\n- `no-cache`：虽然字面意思是“不要缓存”，但实际上还是要求客户端缓存内容的，只是是否使用这个内容由后续的对比来决定。\n- `no-store`: 真正意义上的“不要缓存”。所有内容都不走缓存，包括强制和对比。\n- `public`：所有的内容都可以被缓存 (包括客户端和代理服务器， 如 CDN)\n- `private`：所有的内容只有客户端才可以缓存，代理服务器不能缓存。默认值。\n\n这些值可以混合使用，例如 `Cache-control:public, max-age=2592000`。在混合使用时，它们的优先级如下图：(图片来自 [developers.google.com/web/fundame…](https://link.juejin.im/?target=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fdevelopers.google.com%2Fweb%2Ffundamentals%2Fperformance%2Foptimizing-content-efficiency%2Fhttp-caching%253Fhl%253Dzh-cn))\n\n![img](https://user-gold-cdn.xitu.io/2018/9/29/16623704e9096b45?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n这里有一个疑问：`max-age=0` 和 `no-cache` 等价吗？从规范的字面意思来说，`max-age` 到期是 **应该(SHOULD)** 重新验证，而 `no-cache` 是 **必须(MUST)** 重新验证。但实际情况以浏览器实现为准，大部分情况他们俩的行为还是一致的。（如果是 `max-age=0, must-revalidate` 就和 `no-cache` 等价了）\n\n顺带一提，在 HTTP/1.1 之前，如果想使用 `no-cache`，通常是使用 `Pragma` 字段，如 `Pragma: no-cache`(这也是 `Pragma` 字段唯一的取值)。但是这个字段只是浏览器约定俗成的实现，并没有确切规范，因此缺乏可靠性。它应该只作为一个兼容字段出现，在当前的网络环境下其实用处已经很小。\n\n总结一下，自从 HTTP/1.1 开始，`Expires` 逐渐被 `Cache-control` 取代。`Cache-control` 是一个相对时间，即使客户端时间发生改变，相对时间也不会随之改变，这样可以保持服务器和客户端的时间一致性。而且 `Cache-control` 的可配置性比较强大。\n\n**Cache-control 的优先级高于 Expires**，为了兼容 HTTP/1.0 和 HTTP/1.1，实际项目中两个字段我们都会设置。\n\n## 对比缓存 (也叫协商缓存)\n\n当强制缓存失效(超过规定时间)时，就需要使用对比缓存，由服务器决定缓存内容是否失效。\n\n流程上说，浏览器先请求缓存数据库，返回一个缓存标识。之后浏览器拿这个标识和服务器通讯。如果缓存未失效，则返回 HTTP 状态码 304 表示继续使用，于是客户端继续使用缓存；如果失效，则返回新的数据和缓存规则，浏览器响应数据后，再把规则写入到缓存数据库。\n\n**对比缓存在请求数上和没有缓存是一致的**，但如果是 304 的话，返回的仅仅是一个状态码而已，并没有实际的文件内容，因此 **在响应体体积上的节省是它的优化点**。它的优化覆盖了文章开头提到过的请求数据的三个步骤中的最后一个：“响应”。通过减少响应体体积，来缩短网络传输时间。所以和强制缓存相比提升幅度较小，但总比没有缓存好。\n\n对比缓存是可以和强制缓存一起使用的，作为在强制缓存失效后的一种后备方案。实际项目中他们也的确经常一同出现。\n\n对比缓存有 2 组字段(不是两个)：\n\n## Last-Modified & If-Modified-Since\n\n1. 服务器通过 `Last-Modified` 字段告知客户端，资源最后一次被修改的时间，例如\n   `Last-Modified: Mon, 10 Nov 2018 09:10:11 GMT`\n2. 浏览器将这个值和内容一起记录在缓存数据库中。\n3. 下一次请求相同资源时时，浏览器从自己的缓存中找出“不确定是否过期的”缓存。因此在请求头中将上次的 `Last-Modified` 的值写入到请求头的 `If-Modified-Since` 字段\n4. 服务器会将 `If-Modified-Since` 的值与 `Last-Modified` 字段进行对比。如果相等，则表示未修改，响应 304；反之，则表示修改了，响应 200 状态码，并返回数据。\n\n但是他还是有一定缺陷的：\n\n- 如果资源更新的速度是秒以下单位，那么该缓存是不能被使用的，因为它的时间单位最低是秒。\n- 如果文件是通过服务器动态生成的，那么该方法的更新时间永远是生成的时间，尽管文件可能没有变化，所以起不到缓存的作用。\n\n## Etag & If-None-Match\n\n为了解决上述问题，出现了一组新的字段 `Etag` 和 `If-None-Match`\n\n`Etag` 存储的是文件的特殊标识(一般都是 hash 生成的)，服务器存储着文件的 `Etag` 字段。之后的流程和 `Last-Modified` 一致，只是 `Last-Modified` 字段和它所表示的更新时间改变成了 `Etag` 字段和它所表示的文件 hash，把 `If-Modified-Since` 变成了 `If-None-Match`。服务器同样进行比较，命中返回 304, 不命中返回新资源和 200。\n\n**Etag 的优先级高于 Last-Modified**\n\n## 缓存小结\n\n当浏览器要请求资源时\n\n1. 调用 Service Worker 的 `fetch` 事件响应\n\n2. 查看 memory cache\n\n3. 查看 disk cache。这里又细分：\n\n4. 1. 如果有强制缓存且未失效，则使用强制缓存，不请求服务器。这时的状态码全部是 200\n   2. 如果有强制缓存但已失效，使用对比缓存，比较后确定 304 还是 200\n\n1. 发送网络请求，等待网络响应\n2. 把响应内容存入 disk cache (如果 HTTP 头信息配置可以存的话)\n3. 把响应内容 **的引用** 存入 memory cache (无视 HTTP 头信息的配置)\n4. 把响应内容存入 Service Worker 的 Cache Storage (如果 Service Worker 的脚本调用了 `cache.put()`)\n\n## 一些案例\n\n光看原理不免枯燥。我们编写一些简单的网页，通过案例来深刻理解上面的那些原理。\n\n## 1. memory cache & disk cache\n\n我们写一个简单的 `index.html`，然后引用 3 种资源，分别是 `index.js`, `index.css` 和 `mashroom.jpg`。\n\n我们给这三种资源都设置上 `Cache-control: max-age=86400`，表示强制缓存 24 小时。以下截图全部使用 Chrome 的隐身模式。\n\n\\1. 首次请求\n\n![img](https://user-gold-cdn.xitu.io/2018/9/29/16623704e713586b?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n\n毫无意外的全部走网络请求，因为什么缓存都还没有。\n\n\\2. 再次请求 (F5)\n\n![img](https://user-gold-cdn.xitu.io/2018/9/29/16623704e804c0b8?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n\n第二次请求，三个请求都来自 memory cache。因为我们没有关闭 TAB，所以浏览器把缓存的应用加到了 memory cache。(耗时 0ms，也就是 1ms 以内)\n\n\\3. 关闭 TAB，打开新 TAB 并再次请求\n\n![img](https://user-gold-cdn.xitu.io/2018/9/29/1662370505e68bb1?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n\n因为关闭了 TAB，memory cache 也随之清空。但是 disk cache 是持久的，于是所有资源来自 disk cache。(大约耗时 3ms，因为文件有点小)\n而且对比 2 和 3，很明显看到 memory cache 还是比 disk cache 快得多的。\n\n## 2. no-cache & no-store\n\n我们在 `index.html` 里面一些代码，完成两个目标：\n\n- 每种资源都(同步)请求两次\n- 增加脚本异步请求图片\n\n```\n<!-- 把3种资源都改成请求两次 -->\n<link rel="stylesheet" href="/static/index.css">\n<link rel="stylesheet" href="/static/index.css">\n<script src="/static/index.js"></script>\n<script src="/static/index.js"></script>\n<img src="/static/mashroom.jpg">\n<img src="/static/mashroom.jpg">\n\n<!-- 异步请求图片 -->\n<script>\n    setTimeout(function () {\n        let img = document.createElement(\'img\')\n        img.src = \'/static/mashroom.jpg\'\n        document.body.appendChild(img)\n    }, 1000)\n</script>\n```\n\n\\1. 当把服务器响应设置为 `Cache-Control: no-cache` 时，我们发现打开页面之后，三种资源都只被请求 **1** 次。\n\n![img](https://user-gold-cdn.xitu.io/2018/9/29/16623704e713586b?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n\n\n![img](https://user-gold-cdn.xitu.io/2018/9/29/166237050c5ad602?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n\n这说明两个问题：\n\n- - 同步请求方面，浏览器会自动把当次 HTML 中的资源存入到缓存 (memory cache)，这样碰到相同 `src` 的图片就会自动读取缓存(但不会在 Network 中显示出来)\n  - 异步请求方面，浏览器同样是不发请求而直接读取缓存返回。但同样不会在 Network 中显示。\n\n总体来说，如上面原理所述，`no-cache` 从语义上表示下次请求不要直接使用缓存而需要比对，并不对本次请求进行限制。因此浏览器在处理当前页面时，可以放心使用缓存。\n\n\\2. 当把服务器响应设置为 `Cache-Control: no-store` 时，情况发生了变化，三种资源都被请求了 **2** 次。而图片因为还多一次异步请求，总计 **3** 次。(红框中的都是那一次异步请求)\n\n![img](https://user-gold-cdn.xitu.io/2018/9/29/166237050dbd0dda?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n\n\n![img](https://user-gold-cdn.xitu.io/2018/9/29/166237050dfb47d1?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n\n这同样说明：\n\n- - 如之前原理所述，虽然 memory cache 是无视 HTTP 头信息的，但是 `no-store` 是特别的。在这个设置下，memory cache 也不得不每次都请求资源。\n  - 异步请求和同步遵循相同的规则，在 `no-store` 情况下，依然是每次都发送请求，不进行任何缓存。\n\n## 3. Service Worker & memory (disk) cache\n\n我们尝试把 Service Worker 也加入进去。我们编写一个 `serviceWorker.js`，并编写如下内容：(主要是预缓存 3 个资源，并在实际请求时匹配缓存并返回)\n\n```\n// serviceWorker.js\nself.addEventListener(\'install\', e => {\n  // 当确定要访问某些资源时，提前请求并添加到缓存中。\n  // 这个模式叫做“预缓存”\n  e.waitUntil(\n    caches.open(\'service-worker-test-precache\').then(cache => {\n      return cache.addAll([\'/static/index.js\', \'/static/index.css\', \'/static/mashroom.jpg\'])\n    })\n  )\n})\n\nself.addEventListener(\'fetch\', e => {\n  // 缓存中能找到就返回，找不到就网络请求，之后再写入缓存并返回。\n  // 这个称为 CacheFirst 的缓存策略。\n  return e.respondWith(\n    caches.open(\'service-worker-test-precache\').then(cache => {\n      return cache.match(e.request).then(matchedResponse => {\n        return matchedResponse || fetch(e.request).then(fetchedResponse => {\n          cache.put(e.request, fetchedResponse.clone())\n          return fetchedResponse\n        })\n      })\n    })\n  )\n})\n```\n\n注册 SW 的代码这里就不赘述了。此外我们还给服务器设置 `Cache-Control: max-age=86400` 来开启 disk cache。我们的目的是看看两者的优先级。\n\n\\1. 当我们首次访问时，会看到常规请求之外，浏览器(确切地说是 Service Worker)额外发出了 3 个请求。这来自预缓存的代码。\n\n![img](https://user-gold-cdn.xitu.io/2018/9/29/1662370520b2a625?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n\n\\2. 第二次访问(无论关闭 TAB 重新打开，还是直接按 F5 刷新)都能看到所有的请求标记为 `from SerciceWorker`。\n\n![img](https://user-gold-cdn.xitu.io/2018/9/29/166237052946888c?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n\n`from ServiceWorker` 只表示请求通过了 Service Worker，至于到底是命中了缓存，还是继续 `fetch()` 方法光看这一条记录其实无从知晓。因此我们还得配合后续的 Network 记录来看。因为之后没有额外的请求了，因此判定是命中了缓存。\n\n![img](https://user-gold-cdn.xitu.io/2018/9/29/166237052973ec60?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n\n从服务器的日志也能很明显地看到，3 个资源都没有被重新请求，即命中了 Service Worker 内部的缓存。\n\n\\3. 如果修改 `serviceWorker.js` 的 `fetch` 事件监听代码，改为如下：\n\n```\n// 这个也叫做 NetworkOnly 的缓存策略。 \nself.addEventListener(\'fetch\', e => {\n   return e.respondWith(fetch(e.request)) \n})\n```\n\n可以发现在后续访问时的效果和修改前是 **完全一致的**。(即 Network 仅有标记为 `from ServiceWorker` 的几个请求，而服务器也不打印 3 个资源的访问日志)\n很明显 Service Worker 这层并没有去读取自己的缓存，而是直接使用 `fetch()` 进行请求。所以此时其实是 `Cache-Control: max-age=86400` 的设置起了作用，也就是 memory/disk cache。但具体是 memory 还是 disk 这个只有浏览器自己知道了，因为它并没有显式的告诉我们。(个人猜测是 memory，因为不论从耗时 0ms 还是从不关闭 TAB 来看，都更像是 memory cache)\n\n## 浏览器的行为\n\n所谓浏览器的行为，指的就是用户在浏览器如何操作时，会触发怎样的缓存策略。主要有 3 种：\n\n- 打开网页，地址栏输入地址： 查找 disk cache 中是否有匹配。如有则使用；如没有则发送网络请求。\n- 普通刷新 (F5)：因为 TAB 并没有关闭，因此 memory cache 是可用的，会被优先使用(如果匹配的话)。其次才是 disk cache。\n- 强制刷新 (Ctrl + F5)：浏览器不使用缓存，因此发送的请求头部均带有 `Cache-control: no-cache`(为了兼容，还带了 `Pragma: no-cache`)。服务器直接返回 200 和最新内容。\n\n## 缓存的应用模式\n\n了解了缓存的原理，我们可能更加关心如何在实际项目中使用它们，才能更好的让用户缩短加载时间，节约流量等。这里有几个常用的模式，供大家参考\n\n## 模式 1：不常变化的资源\n\n```\nCache-Control: max-age=31536000\n```\n\n通常在处理这类资源资源时，给它们的 `Cache-Control` 配置一个很大的 `max-age=31536000` (一年)，这样浏览器之后请求相同的 URL 会命中强制缓存。而为了解决更新的问题，就需要在文件名(或者路径)中添加 hash， 版本号等动态字符，之后更改动态字符，达到更改引用 URL 的目的，从而让之前的强制缓存失效 (其实并未立即失效，只是不再使用了而已)。\n\n在线提供的类库 (如 jquery-3.3.1.min.js, lodash.min.js 等) 均采用这个模式。如果配置中还增加 `public` 的话，CDN 也可以缓存起来，效果拔群。\n\n这个模式的一个变体是在引用 URL 后面添加参数 (例如 `?v=xxx` 或者 `?_=xxx`)，这样就不必在文件名或者路径中包含动态参数，满足某些完美主义者的喜好。在项目每次构建时，更新额外的参数 (例如设置为构建时的当前时间)，则能保证每次构建后总能让浏览器请求最新的内容。\n\n**特别注意：** 在处理 Service Worker 时，对待 `sw-register.js`(注册 Service Worker) 和 `serviceWorker.js` (Service Worker 本身) 需要格外的谨慎。如果这两个文件也使用这种模式，你必须多多考虑日后可能的更新及对策。\n\n## 模式 2：经常变化的资源\n\n```\nCache-Control: no-cache\n```\n\n这里的资源不单单指静态资源，也可能是网页资源，例如博客文章。这类资源的特点是：URL 不能变化，但内容可以(且经常)变化。我们可以设置 `Cache-Control: no-cache` 来迫使浏览器每次请求都必须找服务器验证资源是否有效。\n\n既然提到了验证，就必须 `ETag` 或者 `Last-Modified` 出场。这些字段都会由专门处理静态资源的常用类库(例如 `koa-static`)自动添加，无需开发者过多关心。\n\n也正如上文中提到协商缓存那样，这种模式下，节省的并不是请求数，而是请求体的大小。所以它的优化效果不如模式 1 来的显著。\n\n## 模式 3：非常危险的模式 1 和 2 的结合 （反例）\n\n```\nCache-Control: max-age=600, must-revalidate\n```\n\n不知道是否有开发者从模式 1 和 2 获得一些启发：模式 2 中，设置了 `no-cache`，相当于 `max-age=0, must-revalidate`。我的应用时效性没有那么强，但又不想做过于长久的强制缓存，我能不能配置例如 `max-age=600, must-revalidate` 这样折中的设置呢？\n\n表面上看这很美好：资源可以缓存 10 分钟，10 分钟内读取缓存，10 分钟后和服务器进行一次验证，集两种模式之大成，但实际线上暗存风险。因为上面提过，浏览器的缓存有自动清理机制，开发者并不能控制。\n\n举个例子：当我们有 3 种资源： `index.html`, `index.js`, `index.css`。我们对这 3 者进行上述配置之后，假设在某次访问时，`index.js` 已经被缓存清理而不存在，但 `index.html`, `index.css` 仍然存在于缓存中。这时候浏览器会向服务器请求新的 `index.js`，然后配上老的`index.html`, `index.css` 展现给用户。这其中的风险显而易见：不同版本的资源组合在一起，报错是极有可能的结局。\n\n除了自动清理引发问题，不同资源的请求时间不同也能导致问题。例如 A 页面请求的是 `A.js` 和 `all.css`，而 B 页面是 `B.js` 和 `all.css`。如果我们以 A -> B 的顺序访问页面，势必导致 `all.css` 的缓存时间早于 `B.js`。那么以后访问 B 页面就同样存在资源版本失配的隐患。\n\n## 后记\n\n这篇文章真心有点长，但已经囊括了前端缓存的绝大部分，包括 HTTP 协议中的缓存，Service Worker，以及 Chrome 浏览器的一些优化 (Memory Cache)。希望开发者们善用缓存，因为它往往是最容易想到，提升也最大的性能优化策略。\n\n## 参考文章\n\n[A Tale of Four Caches](https://link.juejin.im/?target=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fcalendar.perfplanet.com%2F2016%2Fa-tale-of-four-caches%2F) (但这篇文章把 Service Worker 的优先级排在 memory cache 和 disk cache 之间，跟我实验效果并不相符。怀疑可能是 2 年来 chrome 策略的修改？)\n\n[Caching best practices & max-age gotchas](https://link.juejin.im/?target=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fjakearchibald.com%2F2016%2Fcaching-best-practices%2F)' },
    key: undefined } ] 'results'
[2019-03-05 20:41:06.657] [INFO] http - ::ffff:127.0.0.1 - - "POST /posts/update HTTP/1.1" 200 32032 "http://localhost:9000/project/detail" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-06 09:09:45.229] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-06 09:09:45.237] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 68 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-06 09:09:47.350] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-06 09:09:47.368] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 125 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-06 09:09:47.483] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-06 09:09:47.483] [INFO] console - will check 1551836387360 1551834587483
[2019-03-06 09:09:47.483] [INFO] console - will update 1551836387483 1551834587483
[2019-03-06 09:09:47.497] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 717 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-06 09:09:52.546] [INFO] console - will check 1551836387483 1551834592546
[2019-03-06 09:09:52.547] [INFO] console - will update 1551836392546 1551834592546
[2019-03-06 09:09:52.547] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-06 09:09:52.553] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e69804018ef371601e30a HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-06 09:10:55.040] [INFO] console - will check 1551836392546 1551834655040
[2019-03-06 09:10:55.041] [INFO] console - will update 1551836455040 1551834655040
[2019-03-06 09:10:55.041] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-06 09:10:55.043] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e68ba4018ef371601e307 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-06 09:11:39.049] [INFO] console - will check 1551836455040 1551834699049
[2019-03-06 09:11:39.049] [INFO] console - will update 1551836499049 1551834699049
[2019-03-06 09:11:39.050] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-06 09:11:39.056] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c7e68e94018ef371601e308 HTTP/1.1" 200 32007 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-06 09:11:40.273] [INFO] console - will check 1551836499049 1551834700273
[2019-03-06 09:11:40.273] [INFO] console - will update 1551836500273 1551834700273
[2019-03-06 09:11:40.274] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-06 09:11:40.281] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e68ba4018ef371601e307 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-06 09:13:13.927] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-06 09:13:13.927] [INFO] console - will check 1551836500273 1551834793927
[2019-03-06 09:13:13.928] [INFO] console - will update 1551836593927 1551834793927
[2019-03-06 09:13:13.938] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-06 09:13:15.268] [INFO] console - will check 1551836593927 1551834795268
[2019-03-06 09:13:15.268] [INFO] console - will update 1551836595268 1551834795268
[2019-03-06 09:13:15.269] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-06 09:13:15.276] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e69804018ef371601e30a HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-06 09:13:15.992] [INFO] console - will check 1551836595268 1551834795992
[2019-03-06 09:13:15.992] [INFO] console - will update 1551836595992 1551834795992
[2019-03-06 09:13:15.992] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-06 09:13:15.995] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e68e94018ef371601e308 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-06 09:13:16.701] [INFO] console - will check 1551836595992 1551834796701
[2019-03-06 09:13:16.701] [INFO] console - will update 1551836596701 1551834796701
[2019-03-06 09:13:16.701] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-06 09:13:16.705] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e68ba4018ef371601e307 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-06 09:13:17.681] [INFO] console - will check 1551836596701 1551834797681
[2019-03-06 09:13:17.681] [INFO] console - will update 1551836597681 1551834797681
[2019-03-06 09:13:17.681] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-06 09:13:17.683] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e68914018ef371601e306 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-06 09:13:18.161] [INFO] console - will check 1551836597681 1551834798161
[2019-03-06 09:13:18.161] [INFO] console - will update 1551836598161 1551834798161
[2019-03-06 09:13:18.161] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-06 09:13:18.168] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e68ba4018ef371601e307 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-06 09:13:18.985] [INFO] console - will check 1551836598161 1551834798985
[2019-03-06 09:13:18.985] [INFO] console - will update 1551836598985 1551834798985
[2019-03-06 09:13:18.986] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-06 09:13:18.990] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e68e94018ef371601e308 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-06 09:13:21.356] [INFO] console - will check 1551836598985 1551834801356
[2019-03-06 09:13:21.357] [INFO] console - will update 1551836601356 1551834801356
[2019-03-06 09:13:21.357] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-06 09:13:21.360] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e69804018ef371601e30a HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-06 09:13:22.094] [INFO] console - will check 1551836601356 1551834802094
[2019-03-06 09:13:22.097] [INFO] console - will update 1551836602094 1551834802094
[2019-03-06 09:13:22.097] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-06 09:13:22.099] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e68e94018ef371601e308 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-06 09:13:23.006] [INFO] console - will check 1551836602094 1551834803006
[2019-03-06 09:13:23.006] [INFO] console - will update 1551836603006 1551834803006
[2019-03-06 09:13:23.009] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-06 09:13:23.012] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e68ba4018ef371601e307 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-06 09:13:26.162] [INFO] console - will check 1551836603006 1551834806162
[2019-03-06 09:13:26.163] [INFO] console - will update 1551836606162 1551834806162
[2019-03-06 09:13:26.163] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-06 09:13:26.166] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e68914018ef371601e306 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-06 09:14:07.713] [INFO] console - will check 1551836606162 1551834847713
[2019-03-06 09:14:07.713] [INFO] console - will update 1551836647713 1551834847713
[2019-03-06 09:14:07.713] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-06 09:14:07.718] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e68ba4018ef371601e307 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-06 09:14:26.144] [INFO] console - will check 1551836647713 1551834866144
[2019-03-06 09:14:26.145] [INFO] console - will update 1551836666144 1551834866144
[2019-03-06 09:14:26.145] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-06 09:14:26.147] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e68914018ef371601e306 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-06 09:14:26.919] [INFO] console - will check 1551836666144 1551834866919
[2019-03-06 09:14:26.919] [INFO] console - will update 1551836666919 1551834866919
[2019-03-06 09:14:26.919] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-06 09:14:26.926] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e68ba4018ef371601e307 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-06 09:14:41.000] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-06 09:14:41.000] [INFO] console - will check 1551836666919 1551834881000
[2019-03-06 09:14:41.000] [INFO] console - will update 1551836681000 1551834881000
[2019-03-06 09:14:41.007] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-06 09:14:45.712] [INFO] console - will check 1551836681000 1551834885712
[2019-03-06 09:14:45.712] [INFO] console - will update 1551836685712 1551834885712
[2019-03-06 09:14:45.712] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-06 09:14:45.831] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e68ba4018ef371601e307 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-06 09:14:46.523] [INFO] console - will check 1551836685712 1551834886523
[2019-03-06 09:14:46.524] [INFO] console - will update 1551836686523 1551834886523
[2019-03-06 09:14:46.524] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-06 09:14:46.527] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e68914018ef371601e306 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-06 09:14:47.119] [INFO] console - will check 1551836686523 1551834887119
[2019-03-06 09:14:47.120] [INFO] console - will update 1551836687119 1551834887119
[2019-03-06 09:14:47.120] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-06 09:14:47.123] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e68ba4018ef371601e307 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-06 09:14:47.721] [INFO] console - will check 1551836687119 1551834887721
[2019-03-06 09:14:47.721] [INFO] console - will update 1551836687721 1551834887721
[2019-03-06 09:14:47.721] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-06 09:14:47.725] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e68e94018ef371601e308 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-06 09:14:49.347] [INFO] console - will check 1551836687721 1551834889347
[2019-03-06 09:14:49.347] [INFO] console - will update 1551836689347 1551834889347
[2019-03-06 09:14:49.347] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-06 09:14:49.351] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e69804018ef371601e30a HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-06 09:14:49.843] [INFO] console - will check 1551836689347 1551834889843
[2019-03-06 09:14:49.843] [INFO] console - will update 1551836689843 1551834889843
[2019-03-06 09:14:49.843] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-06 09:14:49.846] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e68e94018ef371601e308 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-06 09:14:50.307] [INFO] console - will check 1551836689843 1551834890307
[2019-03-06 09:14:50.308] [INFO] console - will update 1551836690307 1551834890307
[2019-03-06 09:14:50.308] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-06 09:14:50.311] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e68ba4018ef371601e307 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-06 09:14:50.865] [INFO] console - will check 1551836690307 1551834890865
[2019-03-06 09:14:50.865] [INFO] console - will update 1551836690865 1551834890865
[2019-03-06 09:14:50.865] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-06 09:14:50.867] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e68914018ef371601e306 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-06 09:14:51.573] [INFO] console - will check 1551836690865 1551834891573
[2019-03-06 09:14:51.573] [INFO] console - will update 1551836691573 1551834891573
[2019-03-06 09:14:51.573] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-06 09:14:51.577] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e68e94018ef371601e308 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-06 09:14:52.090] [INFO] console - will check 1551836691573 1551834892090
[2019-03-06 09:14:52.090] [INFO] console - will update 1551836692090 1551834892090
[2019-03-06 09:14:52.091] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-06 09:14:52.096] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e69804018ef371601e30a HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-06 09:14:52.921] [INFO] console - will check 1551836692090 1551834892921
[2019-03-06 09:14:52.923] [INFO] console - will update 1551836692921 1551834892921
[2019-03-06 09:14:52.923] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-06 09:14:52.925] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e68ba4018ef371601e307 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-06 09:14:54.064] [INFO] console - will check 1551836692921 1551834894064
[2019-03-06 09:14:54.064] [INFO] console - will update 1551836694064 1551834894064
[2019-03-06 09:14:54.065] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-06 09:14:54.067] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e68914018ef371601e306 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-06 09:17:16.919] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-06 09:17:16.919] [INFO] console - will check 1551836694064 1551835036919
[2019-03-06 09:17:16.920] [INFO] console - will update 1551836836919 1551835036919
[2019-03-06 09:17:16.967] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-06 09:17:18.049] [INFO] console - will check 1551836836919 1551835038049
[2019-03-06 09:17:18.050] [INFO] console - will update 1551836838049 1551835038049
[2019-03-06 09:17:18.050] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-06 09:17:18.055] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e68ba4018ef371601e307 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-06 09:18:08.866] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-06 09:18:08.876] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-06 09:18:15.971] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-06 09:18:15.971] [INFO] console - will check 1551836838049 1551835095971
[2019-03-06 09:18:15.971] [INFO] console - will update 1551836895971 1551835095971
[2019-03-06 09:18:15.975] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-06 09:31:20.377] [INFO] console - will check 1551836895971 1551835880376
[2019-03-06 09:31:20.377] [INFO] console - will update 1551837680376 1551835880376
[2019-03-06 09:31:20.378] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-06 09:31:20.388] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e69804018ef371601e30a HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-06 09:33:01.737] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-06 09:33:01.738] [INFO] console - will check 1551837680376 1551835981738
[2019-03-06 09:33:01.738] [INFO] console - will update 1551837781738 1551835981738
[2019-03-06 09:33:01.742] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-06 09:33:04.983] [INFO] console - will check 1551837781738 1551835984983
[2019-03-06 09:33:04.984] [INFO] console - will update 1551837784983 1551835984983
[2019-03-06 09:33:04.984] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-06 09:33:04.988] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e69804018ef371601e30a HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-06 10:33:00.091] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-06 10:33:00.096] [INFO] console - will check 1551837784983 1551839580096
[2019-03-06 10:33:00.104] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 71 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-06 10:33:01.802] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-06 10:33:01.819] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 125 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-06 10:33:01.913] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-06 10:33:01.914] [INFO] console - will check 1551841381815 1551839581914
[2019-03-06 10:33:01.914] [INFO] console - will update 1551841381914 1551839581914
[2019-03-06 10:33:01.934] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 717 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-06 14:01:30.158] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-06 14:01:30.212] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 399 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-06 14:08:04.147] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-06 14:08:04.158] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-06 14:08:21.931] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-06 14:08:21.945] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-06 14:08:24.840] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-06 14:08:24.870] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-06 14:09:13.493] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-06 14:09:13.500] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-06 14:09:14.700] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-06 14:09:14.708] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-06 14:09:39.395] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-06 14:09:39.420] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-06 14:09:43.405] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-06 14:09:43.416] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-06 14:12:30.075] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-06 14:12:30.124] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-06 14:12:33.868] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-06 14:12:33.886] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-06 14:13:27.180] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-06 14:13:27.188] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-06 14:18:05.947] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-06 14:18:05.961] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-06 14:18:18.193] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-06 14:18:18.226] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-06 14:18:45.900] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-06 14:18:45.910] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-06 14:18:46.746] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-06 14:18:46.803] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-06 14:19:03.053] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-06 14:19:03.061] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-06 14:19:21.601] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-06 14:19:21.619] [INFO] http - ::ffff:127.0.0.1 - - "POST /groups/rename HTTP/1.1" 200 49 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-06 14:19:21.635] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-06 14:19:21.701] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 408 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-06 14:19:28.828] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-06 14:19:28.831] [INFO] http - ::ffff:127.0.0.1 - - "POST /groups/rename HTTP/1.1" 200 49 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-06 14:19:28.846] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-06 14:19:28.854] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 408 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-06 14:19:40.598] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-06 14:19:40.604] [INFO] http - ::ffff:127.0.0.1 - - "POST /groups/rename HTTP/1.1" 200 49 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-06 14:19:40.617] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-06 14:19:40.629] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 405 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-06 14:19:53.060] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-06 14:19:53.073] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-06 14:21:07.314] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-06 14:21:07.322] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-06 14:21:16.860] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-06 14:21:16.872] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-06 14:21:24.299] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-06 14:21:24.309] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-06 14:21:33.386] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-06 14:21:33.390] [INFO] http - ::ffff:127.0.0.1 - - "POST /groups/rename HTTP/1.1" 200 49 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-06 14:21:33.407] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-06 14:21:33.432] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 402 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-06 14:21:39.120] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-06 14:21:39.123] [INFO] http - ::ffff:127.0.0.1 - - "POST /groups/rename HTTP/1.1" 200 49 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-06 14:21:39.140] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-06 14:21:39.146] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 405 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-06 14:21:45.984] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-06 14:21:45.988] [INFO] http - ::ffff:127.0.0.1 - - "POST /groups/rename HTTP/1.1" 200 49 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-06 14:21:46.007] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-06 14:21:46.016] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 399 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-06 15:14:48.936] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-06 15:14:48.955] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-06 15:14:51.800] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-06 15:14:51.833] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
[2019-03-14 09:09:57.652] [INFO] console - redis server connect success!
[2019-03-14 09:09:57.654] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-14 09:10:47.753] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:10:47.821] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 125 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:10:47.966] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:10:47.968] [INFO] console - will check 1552527647796 1552525847968
[2019-03-14 09:10:47.968] [INFO] console - will update 1552527647968 1552525847968
[2019-03-14 09:10:47.985] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 717 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:10:49.504] [INFO] console - will check 1552527647968 1552525849504
[2019-03-14 09:10:49.504] [INFO] console - will update 1552527649504 1552525849504
[2019-03-14 09:10:49.504] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:10:49.530] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c7e69804018ef371601e30a HTTP/1.1" 200 94157 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:10:50.667] [INFO] console - will check 1552527649504 1552525850667
[2019-03-14 09:10:50.667] [INFO] console - will update 1552527650667 1552525850667
[2019-03-14 09:10:50.668] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:10:50.672] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c7e68e94018ef371601e308 HTTP/1.1" 200 32007 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:10:51.570] [INFO] console - will check 1552527650667 1552525851570
[2019-03-14 09:10:51.570] [INFO] console - will update 1552527651570 1552525851570
[2019-03-14 09:10:51.571] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:10:51.574] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c7e68ba4018ef371601e307 HTTP/1.1" 200 21195 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:10:52.500] [INFO] console - will check 1552527651570 1552525852500
[2019-03-14 09:10:52.500] [INFO] console - will update 1552527652500 1552525852500
[2019-03-14 09:10:52.500] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:10:52.503] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c7e68914018ef371601e306 HTTP/1.1" 200 6558 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:10:53.269] [INFO] console - will check 1552527652500 1552525853269
[2019-03-14 09:10:53.269] [INFO] console - will update 1552527653269 1552525853269
[2019-03-14 09:10:53.269] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:10:53.274] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e68ba4018ef371601e307 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:10:53.920] [INFO] console - will check 1552527653269 1552525853920
[2019-03-14 09:10:53.920] [INFO] console - will update 1552527653920 1552525853920
[2019-03-14 09:10:53.921] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:10:53.925] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e68e94018ef371601e308 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:10:54.477] [INFO] console - will check 1552527653920 1552525854477
[2019-03-14 09:10:54.477] [INFO] console - will update 1552527654477 1552525854477
[2019-03-14 09:10:54.478] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:10:54.482] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e69804018ef371601e30a HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:10:55.004] [INFO] console - will check 1552527654477 1552525855004
[2019-03-14 09:10:55.005] [INFO] console - will update 1552527655004 1552525855004
[2019-03-14 09:10:55.005] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:10:55.008] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e68e94018ef371601e308 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:10:55.655] [INFO] console - will check 1552527655004 1552525855655
[2019-03-14 09:10:55.656] [INFO] console - will update 1552527655655 1552525855655
[2019-03-14 09:10:55.656] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:10:55.659] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e68ba4018ef371601e307 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:11:00.624] [INFO] console - will check 1552527655655 1552525860624
[2019-03-14 09:11:00.624] [INFO] console - will update 1552527660624 1552525860624
[2019-03-14 09:11:00.625] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:11:00.629] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e68e94018ef371601e308 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:11:01.233] [INFO] console - will check 1552527660624 1552525861233
[2019-03-14 09:11:01.234] [INFO] console - will update 1552527661233 1552525861233
[2019-03-14 09:11:01.234] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:11:01.237] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e69804018ef371601e30a HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:11:03.728] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:11:03.729] [INFO] console - will check 1552527661233 1552525863729
[2019-03-14 09:11:03.729] [INFO] console - will update 1552527663729 1552525863729
[2019-03-14 09:11:03.735] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:11:05.881] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:11:05.902] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 399 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:16:09.385] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:16:09.409] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:17:57.682] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:17:57.682] [INFO] console - will check 1552527663729 1552526277682
[2019-03-14 09:17:57.683] [INFO] console - will update 1552528077682 1552526277682
[2019-03-14 09:17:57.687] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:17:59.580] [INFO] console - will check 1552528077682 1552526279580
[2019-03-14 09:17:59.581] [INFO] console - will update 1552528079580 1552526279580
[2019-03-14 09:17:59.581] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:17:59.587] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e69804018ef371601e30a HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:18:00.182] [INFO] console - will check 1552528079580 1552526280182
[2019-03-14 09:18:00.182] [INFO] console - will update 1552528080182 1552526280182
[2019-03-14 09:18:00.182] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:18:00.187] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e68e94018ef371601e308 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:18:00.636] [INFO] console - will check 1552528080182 1552526280636
[2019-03-14 09:18:00.636] [INFO] console - will update 1552528080636 1552526280636
[2019-03-14 09:18:00.636] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:18:00.640] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e68ba4018ef371601e307 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:18:01.276] [INFO] console - will check 1552528080636 1552526281276
[2019-03-14 09:18:01.277] [INFO] console - will update 1552528081276 1552526281276
[2019-03-14 09:18:01.277] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:18:01.280] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e68914018ef371601e306 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:18:02.230] [INFO] console - will check 1552528081276 1552526282230
[2019-03-14 09:18:02.230] [INFO] console - will update 1552528082230 1552526282230
[2019-03-14 09:18:02.230] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:18:02.234] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e68ba4018ef371601e307 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:18:17.966] [INFO] console - will check 1552528082230 1552526297966
[2019-03-14 09:18:17.966] [INFO] console - will update 1552528097966 1552526297966
[2019-03-14 09:18:17.966] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:18:17.971] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e68914018ef371601e306 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:20:05.877] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:20:05.879] [INFO] console - will check 1552528097966 1552526405879
[2019-03-14 09:20:05.880] [INFO] console - will update 1552528205879 1552526405879
[2019-03-14 09:20:05.894] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:20:13.418] [INFO] console - will check 1552528205879 1552526413418
[2019-03-14 09:20:13.419] [INFO] console - will update 1552528213418 1552526413418
[2019-03-14 09:20:13.419] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:20:13.428] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e68ba4018ef371601e307 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:20:15.463] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:20:15.463] [INFO] console - will check 1552528213418 1552526415463
[2019-03-14 09:20:15.463] [INFO] console - will update 1552528215463 1552526415463
[2019-03-14 09:20:15.475] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:20:16.518] [INFO] console - will check 1552528215463 1552526416518
[2019-03-14 09:20:16.518] [INFO] console - will update 1552528216518 1552526416518
[2019-03-14 09:20:16.518] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:20:16.521] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e68ba4018ef371601e307 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:20:17.927] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:20:17.927] [INFO] console - will check 1552528216518 1552526417927
[2019-03-14 09:20:17.928] [INFO] console - will update 1552528217927 1552526417927
[2019-03-14 09:20:17.931] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:20:20.579] [INFO] console - will check 1552528217927 1552526420579
[2019-03-14 09:20:20.579] [INFO] console - will update 1552528220579 1552526420579
[2019-03-14 09:20:20.579] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:20:20.589] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e68ba4018ef371601e307 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:21:29.931] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:21:29.931] [INFO] console - will check 1552528220579 1552526489931
[2019-03-14 09:21:29.932] [INFO] console - will update 1552528289931 1552526489931
[2019-03-14 09:21:29.938] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:21:30.770] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:21:30.771] [INFO] console - will check 1552528289931 1552526490771
[2019-03-14 09:21:30.771] [INFO] console - will update 1552528290771 1552526490771
[2019-03-14 09:21:30.789] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:21:32.029] [INFO] console - will check 1552528290771 1552526492029
[2019-03-14 09:21:32.029] [INFO] console - will update 1552528292029 1552526492029
[2019-03-14 09:21:32.030] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:21:32.033] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e68ba4018ef371601e307 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:23:09.471] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:23:09.472] [INFO] console - will check 1552528292029 1552526589472
[2019-03-14 09:23:09.472] [INFO] console - will update 1552528389472 1552526589472
[2019-03-14 09:23:09.475] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:23:10.785] [INFO] console - will check 1552528389472 1552526590785
[2019-03-14 09:23:10.785] [INFO] console - will update 1552528390785 1552526590785
[2019-03-14 09:23:10.786] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:23:10.789] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e68e94018ef371601e308 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:23:31.165] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:23:31.165] [INFO] console - will check 1552528390785 1552526611165
[2019-03-14 09:23:31.166] [INFO] console - will update 1552528411165 1552526611165
[2019-03-14 09:23:31.172] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:23:35.042] [INFO] console - will check 1552528411165 1552526615042
[2019-03-14 09:23:35.043] [INFO] console - will update 1552528415042 1552526615042
[2019-03-14 09:23:35.043] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:23:35.046] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e69804018ef371601e30a HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:23:36.209] [INFO] console - will check 1552528415042 1552526616209
[2019-03-14 09:23:36.209] [INFO] console - will update 1552528416209 1552526616209
[2019-03-14 09:23:36.209] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:23:36.214] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e68e94018ef371601e308 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:25:56.317] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:25:56.317] [INFO] console - will check 1552528416209 1552526756317
[2019-03-14 09:25:56.318] [INFO] console - will update 1552528556317 1552526756317
[2019-03-14 09:25:56.322] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:25:59.005] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:25:59.006] [INFO] console - will check 1552528556317 1552526759006
[2019-03-14 09:25:59.006] [INFO] console - will update 1552528559006 1552526759006
[2019-03-14 09:25:59.011] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:26:01.722] [INFO] console - will check 1552528559006 1552526761722
[2019-03-14 09:26:01.722] [INFO] console - will update 1552528561722 1552526761722
[2019-03-14 09:26:01.723] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:26:01.771] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e68e94018ef371601e308 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:27:12.665] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:27:12.666] [INFO] console - will check 1552528561722 1552526832666
[2019-03-14 09:27:12.666] [INFO] console - will update 1552528632666 1552526832666
[2019-03-14 09:27:12.669] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:27:15.053] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:27:15.053] [INFO] console - will check 1552528632666 1552526835053
[2019-03-14 09:27:15.053] [INFO] console - will update 1552528635053 1552526835053
[2019-03-14 09:27:15.064] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:27:16.493] [INFO] console - will check 1552528635053 1552526836493
[2019-03-14 09:27:16.494] [INFO] console - will update 1552528636493 1552526836493
[2019-03-14 09:27:16.494] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:27:16.499] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e68e94018ef371601e308 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:29:07.324] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:29:07.324] [INFO] console - will check 1552528636493 1552526947324
[2019-03-14 09:29:07.324] [INFO] console - will update 1552528747324 1552526947324
[2019-03-14 09:29:07.327] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:29:10.822] [INFO] console - will check 1552528747324 1552526950822
[2019-03-14 09:29:10.822] [INFO] console - will update 1552528750822 1552526950822
[2019-03-14 09:29:10.822] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:29:10.825] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e68e94018ef371601e308 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:29:19.602] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:29:19.602] [INFO] console - will check 1552528750822 1552526959602
[2019-03-14 09:29:19.602] [INFO] console - will update 1552528759602 1552526959602
[2019-03-14 09:29:19.609] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:29:26.884] [INFO] console - will check 1552528759602 1552526966884
[2019-03-14 09:29:26.885] [INFO] console - will update 1552528766884 1552526966884
[2019-03-14 09:29:26.885] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:29:26.889] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e68e94018ef371601e308 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:30:54.038] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:30:54.038] [INFO] console - will check 1552528766884 1552527054038
[2019-03-14 09:30:54.039] [INFO] console - will update 1552528854038 1552527054038
[2019-03-14 09:30:54.042] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:30:55.273] [INFO] console - will check 1552528854038 1552527055273
[2019-03-14 09:30:55.274] [INFO] console - will update 1552528855273 1552527055273
[2019-03-14 09:30:55.274] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:30:55.284] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e68e94018ef371601e308 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:31:07.508] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:31:07.509] [INFO] console - will check 1552528855273 1552527067509
[2019-03-14 09:31:07.509] [INFO] console - will update 1552528867509 1552527067509
[2019-03-14 09:31:07.512] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:31:10.701] [INFO] console - will check 1552528867509 1552527070701
[2019-03-14 09:31:10.702] [INFO] console - will update 1552528870701 1552527070701
[2019-03-14 09:31:10.702] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:31:10.705] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e68e94018ef371601e308 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:31:17.252] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:31:17.252] [INFO] console - will check 1552528870701 1552527077252
[2019-03-14 09:31:17.253] [INFO] console - will update 1552528877252 1552527077252
[2019-03-14 09:31:17.258] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:31:18.214] [INFO] console - will check 1552528877252 1552527078214
[2019-03-14 09:31:18.214] [INFO] console - will update 1552528878214 1552527078214
[2019-03-14 09:31:18.216] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:31:18.222] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e68e94018ef371601e308 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:33:09.460] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:33:09.460] [INFO] console - will check 1552528878214 1552527189460
[2019-03-14 09:33:09.460] [INFO] console - will update 1552528989460 1552527189460
[2019-03-14 09:33:09.464] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:33:34.698] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:33:34.698] [INFO] console - will check 1552528989460 1552527214698
[2019-03-14 09:33:34.699] [INFO] console - will update 1552529014698 1552527214698
[2019-03-14 09:33:34.704] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:33:37.294] [INFO] console - will check 1552529014698 1552527217294
[2019-03-14 09:33:37.294] [INFO] console - will update 1552529017294 1552527217294
[2019-03-14 09:33:37.295] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:33:37.299] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e69804018ef371601e30a HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:36:22.049] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:36:22.051] [INFO] console - will check 1552529017294 1552527382051
[2019-03-14 09:36:22.052] [INFO] console - will update 1552529182051 1552527382051
[2019-03-14 09:36:22.072] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:36:23.475] [INFO] console - will check 1552529182051 1552527383475
[2019-03-14 09:36:23.475] [INFO] console - will update 1552529183475 1552527383475
[2019-03-14 09:36:23.476] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:36:23.484] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e69804018ef371601e30a HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:36:29.910] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:36:29.911] [INFO] console - will check 1552529183475 1552527389911
[2019-03-14 09:36:29.911] [INFO] console - will update 1552529189911 1552527389911
[2019-03-14 09:36:29.916] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:36:30.923] [INFO] console - will check 1552529189911 1552527390923
[2019-03-14 09:36:30.923] [INFO] console - will update 1552529190923 1552527390923
[2019-03-14 09:36:30.924] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:36:30.928] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e68e94018ef371601e308 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:37:22.528] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:37:22.529] [INFO] console - will check 1552529190923 1552527442529
[2019-03-14 09:37:22.529] [INFO] console - will update 1552529242529 1552527442529
[2019-03-14 09:37:22.539] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:37:28.286] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:37:28.286] [INFO] console - will check 1552529242529 1552527448286
[2019-03-14 09:37:28.286] [INFO] console - will update 1552529248286 1552527448286
[2019-03-14 09:37:28.302] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 717 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:37:30.765] [INFO] console - will check 1552529248286 1552527450765
[2019-03-14 09:37:30.765] [INFO] console - will update 1552529250765 1552527450765
[2019-03-14 09:37:30.766] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:37:30.771] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c7e68e94018ef371601e308 HTTP/1.1" 200 32007 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:38:04.137] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:38:04.138] [INFO] console - will check 1552529250765 1552527484137
[2019-03-14 09:38:04.138] [INFO] console - will update 1552529284137 1552527484137
[2019-03-14 09:38:04.147] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:38:05.967] [INFO] console - will check 1552529284137 1552527485967
[2019-03-14 09:38:05.967] [INFO] console - will update 1552529285967 1552527485967
[2019-03-14 09:38:05.968] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:38:05.973] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e68e94018ef371601e308 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:38:39.533] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:38:39.534] [INFO] console - will check 1552529285967 1552527519534
[2019-03-14 09:38:39.534] [INFO] console - will update 1552529319534 1552527519534
[2019-03-14 09:38:39.538] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:38:43.114] [INFO] console - will check 1552529319534 1552527523114
[2019-03-14 09:38:43.114] [INFO] console - will update 1552529323114 1552527523114
[2019-03-14 09:38:43.114] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:38:43.120] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e68e94018ef371601e308 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:39:50.251] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:39:50.251] [INFO] console - will check 1552529323114 1552527590251
[2019-03-14 09:39:50.251] [INFO] console - will update 1552529390251 1552527590251
[2019-03-14 09:39:50.256] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:39:52.616] [INFO] console - will check 1552529390251 1552527592616
[2019-03-14 09:39:52.616] [INFO] console - will update 1552529392616 1552527592616
[2019-03-14 09:39:52.617] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:39:52.624] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e68e94018ef371601e308 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:40:03.097] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: 
     { content: '\n\n大家都知道缓存的英文叫做-- `cache`。但我发现一个有趣的现象：这个单词在不同人的口中有不同的读音。为了全面了解缓存，我们得先从读音开始，这样才能够在和其他同事(例如 PM)交(zhuāng)流(bī)时体现自己的修(bī)养(gé)。\n\n友情提示：文章有些长，您可能需要分批次读完，当中可以喝个咖啡或者啤酒当作中场休息。\n\n## cache 怎么念\n\n在国外 IT 圈和大部分国外视频中，cache 的发音是 `/kæʃ/`(同 `cash`)，这也是一个广泛认可的发音。但我发现在中国的 IT 圈还有相当一部分程序员(比如我自己……)读作 `/kætʃ/`(同 `catch`)。虽然不太正确，但并不妨碍互相交流。(不过为了纯正，还是应该向正确的方向靠拢)\n\n此外还有一些小众的读法，例如 `/keɪʃ/`(同 `kaysh`)，甚至 `/kæʃeɪ/`(像个法语发音，重音在后面)。这些因为太小众了，可能会引起沟通障碍，估计只有在特定场合或者特定圈子才能顺畅使用。\n\n## 前端缓存/后端缓存\n\n扯了些没用的，我们先进入定义环节：什么是前端缓存？与之相对的什么又是后端缓存？\n\n![img](https://user-gold-cdn.xitu.io/2018/9/29/16623704e6f63949?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n基本的网络请求就是三个步骤：请求，处理，响应。\n\n后端缓存主要集中于“处理”步骤，通过保留数据库连接，存储处理结果等方式缩短处理时间，尽快进入“响应”步骤。当然这不在本文的讨论范围之内。\n\n而前端缓存则可以在剩下的两步：“请求”和“响应”中进行。在“请求”步骤中，浏览器也可以通过存储结果的方式直接使用资源，直接省去了发送请求；而“响应”步骤需要浏览器和服务器共同配合，通过减少响应内容来缩短传输时间。这些都会在下面进行讨论。\n\n本文主要包含\n\n- 按缓存位置分类 (memory cache, disk cache, Service Worker 等)\n- 按失效策略分类 (`Cache-Control`, `ETag` 等)\n- 帮助理解原理的一些案例\n- 缓存的应用模式\n\n## 按缓存位置分类\n\n我看过的大部分讨论缓存的文章会直接从 HTTP 协议头中的缓存字段开始，例如 `Cache-Control`, `ETag`, `max-age` 等。但偶尔也会听到别人讨论 memory cache, disk cache 等。**那这两种分类体系究竟有何关联？是否有交叉？**(我个人认为这是本文的最大价值所在，因为在写之前我自己也是被两种分类体系搞的一团糟)\n\n实际上，HTTP 协议头的那些字段，都属于 disk cache 的范畴，是几个缓存位置的其中之一。因此本着从全局到局部的原则，我们应当先从缓存位置开始讨论。等讲到 disk cache 时，才会详细讲述这些协议头的字段及其作用。\n\n我们可以在 Chrome 的开发者工具中，Network -> Size 一列看到一个请求最终的处理方式：如果是大小 (多少 K， 多少 M 等) 就表示是网络请求，否则会列出 `from memory cache`, `from disk cache` 和 `from ServiceWorker`。\n\n它们的优先级是：(由上到下寻找，找到即返回；找不到则继续)\n\n1. Service Worker\n2. Memory Cache\n3. Disk Cache\n4. 网络请求\n\n## memory cache\n\nmemory cache 是内存中的缓存，(与之相对 disk cache 就是硬盘上的缓存)。按照操作系统的常理：先读内存，再读硬盘。disk cache 将在后面介绍 (因为它的优先级更低一些)，这里先讨论 memory cache。\n\n几乎所有的网络请求资源都会被浏览器自动加入到 memory cache 中。但是也正因为数量很大但是浏览器占用的内存不能无限扩大这样两个因素，memory cache 注定只能是个“短期存储”。常规情况下，浏览器的 TAB 关闭后该次浏览的 memory cache 便告失效 (为了给其他 TAB 腾出位置)。而如果极端情况下 (例如一个页面的缓存就占用了超级多的内存)，那可能在 TAB 没关闭之前，排在前面的缓存就已经失效了。\n\n刚才提过，**几乎所有的请求资源** 都能进入 memory cache，这里细分一下主要有两块：\n\n1. preloader。如果你对这个机制不太了解，这里做一个简单的介绍，详情可以参阅[这篇文章](https://link.juejin.im/?target=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fcalendar.perfplanet.com%2F2013%2Fbig-bad-preloader%2F)。\n   熟悉浏览器处理流程的同学们应该了解，在浏览器打开网页的过程中，会先请求 HTML 然后解析。之后如果浏览器发现了 js, css 等需要解析和执行的资源时，它会使用 CPU 资源对它们进行解析和执行。在古老的年代(大约 2007 年以前)，“请求 js/css - 解析执行 - 请求下一个 js/css - 解析执行下一个 js/css” 这样的“串行”操作模式在每次打开页面之前进行着。很明显在解析执行的时候，网络请求是空闲的，这就有了发挥的空间：我们能不能一边解析执行 js/css，一边去请求下一个(或下一批)资源呢？\n   这就是 preloader 要做的事情。不过 preloader 没有一个官方标准，所以每个浏览器的处理都略有区别。例如有些浏览器还会下载 css 中的 `@import` 内容或者 `<video>` 的 `poster`等。\n   而这些被 preloader 请求过来的资源就会被放入 memory cache 中，供之后的解析执行操作使用。\n2. preload (虽然看上去和刚才的 preloader 就差了俩字母)。实际上这个大家应该更加熟悉一些，例如 `<link rel="preload">`。这些显式指定的预加载资源，也会被放入 memory cache 中。\n\nmemory cache 机制保证了一个页面中如果有两个相同的请求 (例如两个 `src` 相同的 `<img>`，两个 `href` 相同的 `<link>`) 都实际只会被请求最多一次，避免浪费。\n\n不过在匹配缓存时，除了匹配完全相同的 URL 之外，还会比对他们的类型，CORS 中的域名规则等。因此一个作为脚本 (script) 类型被缓存的资源是不能用在图片 (image) 类型的请求中的，即便他们 `src` 相等。\n\n在从 memory cache 获取缓存内容时，浏览器会忽视例如 `max-age=0`, `no-cache` 等头部配置。例如页面上存在几个相同 `src` 的图片，即便它们可能被设置为不缓存，但依然会从 memory cache 中读取。这是因为 memory cache 只是短期使用，大部分情况生命周期只有一次浏览而已。而 `max-age=0` 在语义上普遍被解读为“不要在下次浏览时使用”，所以和 memory cache 并不冲突。\n\n但如果站长是真心不想让一个资源进入缓存，就连短期也不行，那就需要使用 `no-store`。存在这个头部配置的话，即便是 memory cache 也不会存储，自然也不会从中读取了。(后面的第二个示例有关于这点的体现)\n\n## disk cache\n\ndisk cache 也叫 HTTP cache，顾名思义是存储在硬盘上的缓存，因此它是持久存储的，是实际存在于文件系统中的。而且它允许相同的资源在跨会话，甚至跨站点的情况下使用，例如两个站点都使用了同一张图片。\n\ndisk cache 会严格根据 HTTP 头信息中的各类字段来判定哪些资源可以缓存，哪些资源不可以缓存；哪些资源是仍然可用的，哪些资源是过时需要重新请求的。当命中缓存之后，浏览器会从硬盘中读取资源，虽然比起从内存中读取慢了一些，但比起网络请求还是快了不少的。绝大部分的缓存都来自 disk cache。\n\n关于 HTTP 的协议头中的缓存字段，我们会在稍后进行详细讨论。\n\n凡是持久性存储都会面临容量增长的问题，disk cache 也不例外。在浏览器自动清理时，会有神秘的算法去把“最老的”或者“最可能过时的”资源删除，因此是一个一个删除的。不过每个浏览器识别“最老的”和“最可能过时的”资源的算法不尽相同，可能也是它们差异性的体现。\n\n## Service Worker\n\n上述的缓存策略以及缓存/读取/失效的动作都是由浏览器内部判断 & 进行的，我们只能设置响应头的某些字段来告诉浏览器，而不能自己操作。举个生活中去银行存/取钱的例子来说，你只能告诉银行职员，我要存/取多少钱，然后把由他们会经过一系列的记录和手续之后，把钱放到金库中去，或者从金库中取出钱来交给你。\n\n但 Service Worker 的出现，给予了我们另外一种更加灵活，更加直接的操作方式。依然以存/取钱为例，我们现在可以绕开银行职员，自己走到金库前(当然是有别于上述金库的一个单独的小金库)，自己把钱放进去或者取出来。因此我们可以选择放哪些钱(缓存哪些文件)，什么情况把钱取出来(路由匹配规则)，取哪些钱出来(缓存匹配并返回)。**当然现实中银行没有给我们开放这样的服务**。\n\nService Worker 能够操作的缓存是有别于浏览器内部的 memory cache 或者 disk cache 的。我们可以从 Chrome 的 F12 中，Application -> Cache Storage 找到这个单独的“小金库”。除了位置不同之外，这个缓存是永久性的，即关闭 TAB 或者浏览器，下次打开依然还在(而 memory cache 不是)。有两种情况会导致这个缓存中的资源被清除：手动调用 API `cache.delete(resource)` 或者容量超过限制，被浏览器全部清空。\n\n如果 Service Worker 没能命中缓存，一般情况会使用 `fetch()` 方法继续获取资源。这时候，浏览器就去 memory cache 或者 disk cache 进行下一次找缓存的工作了。注意：经过 Service Worker 的 `fetch()` 方法获取的资源，即便它并没有命中 Service Worker 缓存，甚至实际走了网络请求，也会标注为 `from ServiceWorker`。这个情况在后面的第三个示例中有所体现。\n\n## 请求网络\n\n如果一个请求在上述 3 个位置都没有找到缓存，那么浏览器会正式发送网络请求去获取内容。之后容易想到，为了提升之后请求的缓存命中率，自然要把这个资源添加到缓存中去。具体来说：\n\n1. 根据 Service Worker 中的 handler 决定是否存入 Cache Storage (额外的缓存位置)。\n2. 根据 HTTP 头部的相关字段(`Cache-control`, `Pragma` 等)决定是否存入 disk cache\n3. memory cache 保存一份资源 **的引用**，以备下次使用。\n\n## 按失效策略分类\n\nmemory cache 是浏览器为了加快读取缓存速度而进行的自身的优化行为，不受开发者控制，也不受 HTTP 协议头的约束，算是一个黑盒。Service Worker 是由开发者编写的额外的脚本，且缓存位置独立，出现也较晚，使用还不算太广泛。所以我们平时最为熟悉的其实是 disk cache，也叫 HTTP cache (因为不像 memory cache，它遵守 HTTP 协议头中的字段)。平时所说的强制缓存，对比缓存，以及 `Cache-Control` 等，也都归于此类。\n\n## 强制缓存 (也叫强缓存)\n\n强制缓存的含义是，当客户端请求后，会先访问缓存数据库看缓存是否存在。如果存在则直接返回；不存在则请求真的服务器，响应后再写入缓存数据库。\n\n**强制缓存直接减少请求数，是提升最大的缓存策略。** 它的优化覆盖了文章开头提到过的请求数据的全部三个步骤。如果考虑使用缓存来优化网页性能的话，强制缓存应该是首先被考虑的。\n\n可以造成强制缓存的字段是 `Cache-control` 和 `Expires`。\n\n## Expires\n\n这是 HTTP 1.0 的字段，表示缓存到期时间，是一个绝对的时间 (当前时间+缓存时间)，如\n\n```\nExpires: Thu, 10 Nov 2017 08:45:11 GMT\n```\n\n在响应消息头中，设置这个字段之后，就可以告诉浏览器，在未过期之前不需要再次请求。\n\n但是，这个字段设置时有两个缺点：\n\n1. 由于是绝对时间，用户可能会将客户端本地的时间进行修改，而导致浏览器判断缓存失效，重新请求该资源。此外，即使不考虑自信修改，时差或者误差等因素也可能造成客户端与服务端的时间不一致，致使缓存失效。\n2. 写法太复杂了。表示时间的字符串多个空格，少个字母，都会导致非法属性从而设置失效。\n\n## Cache-control\n\n已知Expires的缺点之后，在HTTP/1.1中，增加了一个字段Cache-control，该字段表示资源缓存的最大有效时间，在该时间内，客户端不需要向服务器发送请求\n\n这两者的区别就是前者是绝对时间，而后者是相对时间。如下：\n\n```\nCache-control: max-age=2592000\n```\n\n下面列举一些 `Cache-control` 字段常用的值：(完整的列表可以查看 [MDN](https://link.juejin.im/?target=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fdeveloper.mozilla.org%2Fzh-CN%2Fdocs%2FWeb%2FHTTP%2FHeaders%2FCache-Control))\n\n- `max-age`：即最大有效时间，在上面的例子中我们可以看到\n- `must-revalidate`：如果超过了 `max-age` 的时间，浏览器必须向服务器发送请求，验证资源是否还有效。\n- `no-cache`：虽然字面意思是“不要缓存”，但实际上还是要求客户端缓存内容的，只是是否使用这个内容由后续的对比来决定。\n- `no-store`: 真正意义上的“不要缓存”。所有内容都不走缓存，包括强制和对比。\n- `public`：所有的内容都可以被缓存 (包括客户端和代理服务器， 如 CDN)\n- `private`：所有的内容只有客户端才可以缓存，代理服务器不能缓存。默认值。\n\n这些值可以混合使用，例如 `Cache-control:public, max-age=2592000`。在混合使用时，它们的优先级如下图：(图片来自 [developers.google.com/web/fundame…](https://link.juejin.im/?target=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fdevelopers.google.com%2Fweb%2Ffundamentals%2Fperformance%2Foptimizing-content-efficiency%2Fhttp-caching%253Fhl%253Dzh-cn))\n\n![img](https://user-gold-cdn.xitu.io/2018/9/29/16623704e9096b45?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n这里有一个疑问：`max-age=0` 和 `no-cache` 等价吗？从规范的字面意思来说，`max-age` 到期是 **应该(SHOULD)** 重新验证，而 `no-cache` 是 **必须(MUST)** 重新验证。但实际情况以浏览器实现为准，大部分情况他们俩的行为还是一致的。（如果是 `max-age=0, must-revalidate` 就和 `no-cache` 等价了）\n\n顺带一提，在 HTTP/1.1 之前，如果想使用 `no-cache`，通常是使用 `Pragma` 字段，如 `Pragma: no-cache`(这也是 `Pragma` 字段唯一的取值)。但是这个字段只是浏览器约定俗成的实现，并没有确切规范，因此缺乏可靠性。它应该只作为一个兼容字段出现，在当前的网络环境下其实用处已经很小。\n\n总结一下，自从 HTTP/1.1 开始，`Expires` 逐渐被 `Cache-control` 取代。`Cache-control` 是一个相对时间，即使客户端时间发生改变，相对时间也不会随之改变，这样可以保持服务器和客户端的时间一致性。而且 `Cache-control` 的可配置性比较强大。\n\n**Cache-control 的优先级高于 Expires**，为了兼容 HTTP/1.0 和 HTTP/1.1，实际项目中两个字段我们都会设置。\n\n## 对比缓存 (也叫协商缓存)\n\n当强制缓存失效(超过规定时间)时，就需要使用对比缓存，由服务器决定缓存内容是否失效。\n\n流程上说，浏览器先请求缓存数据库，返回一个缓存标识。之后浏览器拿这个标识和服务器通讯。如果缓存未失效，则返回 HTTP 状态码 304 表示继续使用，于是客户端继续使用缓存；如果失效，则返回新的数据和缓存规则，浏览器响应数据后，再把规则写入到缓存数据库。\n\n**对比缓存在请求数上和没有缓存是一致的**，但如果是 304 的话，返回的仅仅是一个状态码而已，并没有实际的文件内容，因此 **在响应体体积上的节省是它的优化点**。它的优化覆盖了文章开头提到过的请求数据的三个步骤中的最后一个：“响应”。通过减少响应体体积，来缩短网络传输时间。所以和强制缓存相比提升幅度较小，但总比没有缓存好。\n\n对比缓存是可以和强制缓存一起使用的，作为在强制缓存失效后的一种后备方案。实际项目中他们也的确经常一同出现。\n\n对比缓存有 2 组字段(不是两个)：\n\n## Last-Modified & If-Modified-Since\n\n1. 服务器通过 `Last-Modified` 字段告知客户端，资源最后一次被修改的时间，例如\n   `Last-Modified: Mon, 10 Nov 2018 09:10:11 GMT`\n2. 浏览器将这个值和内容一起记录在缓存数据库中。\n3. 下一次请求相同资源时时，浏览器从自己的缓存中找出“不确定是否过期的”缓存。因此在请求头中将上次的 `Last-Modified` 的值写入到请求头的 `If-Modified-Since` 字段\n4. 服务器会将 `If-Modified-Since` 的值与 `Last-Modified` 字段进行对比。如果相等，则表示未修改，响应 304；反之，则表示修改了，响应 200 状态码，并返回数据。\n\n但是他还是有一定缺陷的：\n\n- 如果资源更新的速度是秒以下单位，那么该缓存是不能被使用的，因为它的时间单位最低是秒。\n- 如果文件是通过服务器动态生成的，那么该方法的更新时间永远是生成的时间，尽管文件可能没有变化，所以起不到缓存的作用。\n\n## Etag & If-None-Match\n\n为了解决上述问题，出现了一组新的字段 `Etag` 和 `If-None-Match`\n\n`Etag` 存储的是文件的特殊标识(一般都是 hash 生成的)，服务器存储着文件的 `Etag` 字段。之后的流程和 `Last-Modified` 一致，只是 `Last-Modified` 字段和它所表示的更新时间改变成了 `Etag` 字段和它所表示的文件 hash，把 `If-Modified-Since` 变成了 `If-None-Match`。服务器同样进行比较，命中返回 304, 不命中返回新资源和 200。\n\n**Etag 的优先级高于 Last-Modified**\n\n## 缓存小结\n\n当浏览器要请求资源时\n\n1. 调用 Service Worker 的 `fetch` 事件响应\n\n2. 查看 memory cache\n\n3. 查看 disk cache。这里又细分：\n\n4. 1. 如果有强制缓存且未失效，则使用强制缓存，不请求服务器。这时的状态码全部是 200\n   2. 如果有强制缓存但已失效，使用对比缓存，比较后确定 304 还是 200\n\n1. 发送网络请求，等待网络响应\n2. 把响应内容存入 disk cache (如果 HTTP 头信息配置可以存的话)\n3. 把响应内容 **的引用** 存入 memory cache (无视 HTTP 头信息的配置)\n4. 把响应内容存入 Service Worker 的 Cache Storage (如果 Service Worker 的脚本调用了 `cache.put()`)\n\n## 一些案例\n\n光看原理不免枯燥。我们编写一些简单的网页，通过案例来深刻理解上面的那些原理。\n\n## 1. memory cache & disk cache\n\n我们写一个简单的 `index.html`，然后引用 3 种资源，分别是 `index.js`, `index.css` 和 `mashroom.jpg`。\n\n我们给这三种资源都设置上 `Cache-control: max-age=86400`，表示强制缓存 24 小时。以下截图全部使用 Chrome 的隐身模式。\n\n\\1. 首次请求\n\n![img](https://user-gold-cdn.xitu.io/2018/9/29/16623704e713586b?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n\n毫无意外的全部走网络请求，因为什么缓存都还没有。\n\n\\2. 再次请求 (F5)\n\n![img](https://user-gold-cdn.xitu.io/2018/9/29/16623704e804c0b8?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n\n第二次请求，三个请求都来自 memory cache。因为我们没有关闭 TAB，所以浏览器把缓存的应用加到了 memory cache。(耗时 0ms，也就是 1ms 以内)\n\n\\3. 关闭 TAB，打开新 TAB 并再次请求\n\n![img](https://user-gold-cdn.xitu.io/2018/9/29/1662370505e68bb1?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n\n因为关闭了 TAB，memory cache 也随之清空。但是 disk cache 是持久的，于是所有资源来自 disk cache。(大约耗时 3ms，因为文件有点小)\n而且对比 2 和 3，很明显看到 memory cache 还是比 disk cache 快得多的。\n\n## 2. no-cache & no-store\n\n我们在 `index.html` 里面一些代码，完成两个目标：\n\n- 每种资源都(同步)请求两次\n- 增加脚本异步请求图片\n\n```\n<!-- 把3种资源都改成请求两次 -->\n<link rel="stylesheet" href="/static/index.css">\n<link rel="stylesheet" href="/static/index.css">\n<script src="/static/index.js"></script>\n<script src="/static/index.js"></script>\n<img src="/static/mashroom.jpg">\n<img src="/static/mashroom.jpg">\n\n<!-- 异步请求图片 -->\n<script>\n    setTimeout(function () {\n        let img = document.createElement(\'img\')\n        img.src = \'/static/mashroom.jpg\'\n        document.body.appendChild(img)\n    }, 1000)\n</script>\n```\n\n\\1. 当把服务器响应设置为 `Cache-Control: no-cache` 时，我们发现打开页面之后，三种资源都只被请求 **1** 次。\n\n![img](https://user-gold-cdn.xitu.io/2018/9/29/16623704e713586b?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n\n\n![img](https://user-gold-cdn.xitu.io/2018/9/29/166237050c5ad602?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n\n这说明两个问题：\n\n- - 同步请求方面，浏览器会自动把当次 HTML 中的资源存入到缓存 (memory cache)，这样碰到相同 `src` 的图片就会自动读取缓存(但不会在 Network 中显示出来)\n  - 异步请求方面，浏览器同样是不发请求而直接读取缓存返回。但同样不会在 Network 中显示。\n\n总体来说，如上面原理所述，`no-cache` 从语义上表示下次请求不要直接使用缓存而需要比对，并不对本次请求进行限制。因此浏览器在处理当前页面时，可以放心使用缓存。\n\n\\2. 当把服务器响应设置为 `Cache-Control: no-store` 时，情况发生了变化，三种资源都被请求了 **2** 次。而图片因为还多一次异步请求，总计 **3** 次。(红框中的都是那一次异步请求)\n\n![img](https://user-gold-cdn.xitu.io/2018/9/29/166237050dbd0dda?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n\n\n![img](https://user-gold-cdn.xitu.io/2018/9/29/166237050dfb47d1?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n\n这同样说明：\n\n- - 如之前原理所述，虽然 memory cache 是无视 HTTP 头信息的，但是 `no-store` 是特别的。在这个设置下，memory cache 也不得不每次都请求资源。\n  - 异步请求和同步遵循相同的规则，在 `no-store` 情况下，依然是每次都发送请求，不进行任何缓存。\n\n## 3. Service Worker & memory (disk) cache\n\n我们尝试把 Service Worker 也加入进去。我们编写一个 `serviceWorker.js`，并编写如下内容：(主要是预缓存 3 个资源，并在实际请求时匹配缓存并返回)\n\n```\n// serviceWorker.js\nself.addEventListener(\'install\', e => {\n  // 当确定要访问某些资源时，提前请求并添加到缓存中。\n  // 这个模式叫做“预缓存”\n  e.waitUntil(\n    caches.open(\'service-worker-test-precache\').then(cache => {\n      return cache.addAll([\'/static/index.js\', \'/static/index.css\', \'/static/mashroom.jpg\'])\n    })\n  )\n})\n\nself.addEventListener(\'fetch\', e => {\n  // 缓存中能找到就返回，找不到就网络请求，之后再写入缓存并返回。\n  // 这个称为 CacheFirst 的缓存策略。\n  return e.respondWith(\n    caches.open(\'service-worker-test-precache\').then(cache => {\n      return cache.match(e.request).then(matchedResponse => {\n        return matchedResponse || fetch(e.request).then(fetchedResponse => {\n          cache.put(e.request, fetchedResponse.clone())\n          return fetchedResponse\n        })\n      })\n    })\n  )\n})\n```\n\n注册 SW 的代码这里就不赘述了。此外我们还给服务器设置 `Cache-Control: max-age=86400` 来开启 disk cache。我们的目的是看看两者的优先级。\n\n\\1. 当我们首次访问时，会看到常规请求之外，浏览器(确切地说是 Service Worker)额外发出了 3 个请求。这来自预缓存的代码。\n\n![img](https://user-gold-cdn.xitu.io/2018/9/29/1662370520b2a625?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n\n\\2. 第二次访问(无论关闭 TAB 重新打开，还是直接按 F5 刷新)都能看到所有的请求标记为 `from SerciceWorker`。\n\n![img](https://user-gold-cdn.xitu.io/2018/9/29/166237052946888c?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n\n`from ServiceWorker` 只表示请求通过了 Service Worker，至于到底是命中了缓存，还是继续 `fetch()` 方法光看这一条记录其实无从知晓。因此我们还得配合后续的 Network 记录来看。因为之后没有额外的请求了，因此判定是命中了缓存。\n\n![img](https://user-gold-cdn.xitu.io/2018/9/29/166237052973ec60?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n\n从服务器的日志也能很明显地看到，3 个资源都没有被重新请求，即命中了 Service Worker 内部的缓存。\n\n\\3. 如果修改 `serviceWorker.js` 的 `fetch` 事件监听代码，改为如下：\n\n```\n// 这个也叫做 NetworkOnly 的缓存策略。 \nself.addEventListener(\'fetch\', e => {\n   return e.respondWith(fetch(e.request)) \n})\n```\n\n可以发现在后续访问时的效果和修改前是 **完全一致的**。(即 Network 仅有标记为 `from ServiceWorker` 的几个请求，而服务器也不打印 3 个资源的访问日志)\n很明显 Service Worker 这层并没有去读取自己的缓存，而是直接使用 `fetch()` 进行请求。所以此时其实是 `Cache-Control: max-age=86400` 的设置起了作用，也就是 memory/disk cache。但具体是 memory 还是 disk 这个只有浏览器自己知道了，因为它并没有显式的告诉我们。(个人猜测是 memory，因为不论从耗时 0ms 还是从不关闭 TAB 来看，都更像是 memory cache)\n\n## 浏览器的行为\n\n所谓浏览器的行为，指的就是用户在浏览器如何操作时，会触发怎样的缓存策略。主要有 3 种：\n\n- 打开网页，地址栏输入地址： 查找 disk cache 中是否有匹配。如有则使用；如没有则发送网络请求。\n- 普通刷新 (F5)：因为 TAB 并没有关闭，因此 memory cache 是可用的，会被优先使用(如果匹配的话)。其次才是 disk cache。\n- 强制刷新 (Ctrl + F5)：浏览器不使用缓存，因此发送的请求头部均带有 `Cache-control: no-cache`(为了兼容，还带了 `Pragma: no-cache`)。服务器直接返回 200 和最新内容。\n\n## 缓存的应用模式\n\n了解了缓存的原理，我们可能更加关心如何在实际项目中使用它们，才能更好的让用户缩短加载时间，节约流量等。这里有几个常用的模式，供大家参考\n\n## 模式 1：不常变化的资源\n\n```\nCache-Control: max-age=31536000\n```\n\n通常在处理这类资源资源时，给它们的 `Cache-Control` 配置一个很大的 `max-age=31536000` (一年)，这样浏览器之后请求相同的 URL 会命中强制缓存。而为了解决更新的问题，就需要在文件名(或者路径)中添加 hash， 版本号等动态字符，之后更改动态字符，达到更改引用 URL 的目的，从而让之前的强制缓存失效 (其实并未立即失效，只是不再使用了而已)。\n\n在线提供的类库 (如 jquery-3.3.1.min.js, lodash.min.js 等) 均采用这个模式。如果配置中还增加 `public` 的话，CDN 也可以缓存起来，效果拔群。\n\n这个模式的一个变体是在引用 URL 后面添加参数 (例如 `?v=xxx` 或者 `?_=xxx`)，这样就不必在文件名或者路径中包含动态参数，满足某些完美主义者的喜好。在项目每次构建时，更新额外的参数 (例如设置为构建时的当前时间)，则能保证每次构建后总能让浏览器请求最新的内容。\n\n**特别注意：** 在处理 Service Worker 时，对待 `sw-register.js`(注册 Service Worker) 和 `serviceWorker.js` (Service Worker 本身) 需要格外的谨慎。如果这两个文件也使用这种模式，你必须多多考虑日后可能的更新及对策。\n\n## 模式 2：经常变化的资源\n\n```\nCache-Control: no-cache\n```\n\n这里的资源不单单指静态资源，也可能是网页资源，例如博客文章。这类资源的特点是：URL 不能变化，但内容可以(且经常)变化。我们可以设置 `Cache-Control: no-cache` 来迫使浏览器每次请求都必须找服务器验证资源是否有效。\n\n既然提到了验证，就必须 `ETag` 或者 `Last-Modified` 出场。这些字段都会由专门处理静态资源的常用类库(例如 `koa-static`)自动添加，无需开发者过多关心。\n\n也正如上文中提到协商缓存那样，这种模式下，节省的并不是请求数，而是请求体的大小。所以它的优化效果不如模式 1 来的显著。\n\n## 模式 3：非常危险的模式 1 和 2 的结合 （反例）\n\n```\nCache-Control: max-age=600, must-revalidate\n```\n\n不知道是否有开发者从模式 1 和 2 获得一些启发：模式 2 中，设置了 `no-cache`，相当于 `max-age=0, must-revalidate`。我的应用时效性没有那么强，但又不想做过于长久的强制缓存，我能不能配置例如 `max-age=600, must-revalidate` 这样折中的设置呢？\n\n表面上看这很美好：资源可以缓存 10 分钟，10 分钟内读取缓存，10 分钟后和服务器进行一次验证，集两种模式之大成，但实际线上暗存风险。因为上面提过，浏览器的缓存有自动清理机制，开发者并不能控制。\n\n举个例子：当我们有 3 种资源： `index.html`, `index.js`, `index.css`。我们对这 3 者进行上述配置之后，假设在某次访问时，`index.js` 已经被缓存清理而不存在，但 `index.html`, `index.css` 仍然存在于缓存中。这时候浏览器会向服务器请求新的 `index.js`，然后配上老的`index.html`, `index.css` 展现给用户。这其中的风险显而易见：不同版本的资源组合在一起，报错是极有可能的结局。\n\n除了自动清理引发问题，不同资源的请求时间不同也能导致问题。例如 A 页面请求的是 `A.js` 和 `all.css`，而 B 页面是 `B.js` 和 `all.css`。如果我们以 A -> B 的顺序访问页面，势必导致 `all.css` 的缓存时间早于 `B.js`。那么以后访问 B 页面就同样存在资源版本失配的隐患。\n\n## 后记\n\n这篇文章真心有点长，但已经囊括了前端缓存的绝大部分，包括 HTTP 协议中的缓存，Service Worker，以及 Chrome 浏览器的一些优化 (Memory Cache)。希望开发者们善用缓存，因为它往往是最容易想到，提升也最大的性能优化策略。\n\n## 参考文章\n\n[A Tale of Four Caches](https://link.juejin.im/?target=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fcalendar.perfplanet.com%2F2016%2Fa-tale-of-four-caches%2F) (但这篇文章把 Service Worker 的优先级排在 memory cache 和 disk cache 之间，跟我实验效果并不相符。怀疑可能是 2 年来 chrome 策略的修改？)\n\n[Caching best practices & max-age gotchas](https://link.juejin.im/?target=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fjakearchibald.com%2F2016%2Fcaching-best-practices%2F)' },
    key: undefined } ] 'results'
[2019-03-14 09:40:03.143] [INFO] http - ::ffff:127.0.0.1 - - "POST /posts/update HTTP/1.1" 200 32032 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:40:03.232] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:40:03.232] [INFO] console - will check 1552529392616 1552527603232
[2019-03-14 09:40:03.233] [INFO] console - will update 1552529403232 1552527603232
[2019-03-14 09:40:03.237] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:40:15.860] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:40:15.861] [INFO] console - will check 1552529403232 1552527615861
[2019-03-14 09:40:15.861] [INFO] console - will update 1552529415861 1552527615861
[2019-03-14 09:40:15.863] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:40:59.912] [INFO] console - will check 1552529415861 1552527659912
[2019-03-14 09:40:59.914] [INFO] console - will update 1552529459912 1552527659912
[2019-03-14 09:40:59.915] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:40:59.920] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e68e94018ef371601e308 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:41:06.663] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:41:06.664] [INFO] console - will check 1552529459912 1552527666664
[2019-03-14 09:41:06.664] [INFO] console - will update 1552529466664 1552527666664
[2019-03-14 09:41:06.675] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:41:07.879] [INFO] console - will check 1552529466664 1552527667879
[2019-03-14 09:41:07.879] [INFO] console - will update 1552529467879 1552527667879
[2019-03-14 09:41:07.879] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:41:07.886] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e68e94018ef371601e308 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:45:16.811] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:45:16.812] [INFO] console - will check 1552529467879 1552527916812
[2019-03-14 09:45:16.813] [INFO] console - will update 1552529716812 1552527916812
[2019-03-14 09:45:16.821] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:45:18.860] [INFO] console - will check 1552529716812 1552527918860
[2019-03-14 09:45:18.860] [INFO] console - will update 1552529718860 1552527918860
[2019-03-14 09:45:18.861] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:45:18.871] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e68e94018ef371601e308 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:45:34.244] [INFO] console - will check 1552529718860 1552527934244
[2019-03-14 09:45:34.244] [INFO] console - will update 1552529734244 1552527934244
[2019-03-14 09:45:34.244] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:45:34.247] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e68e94018ef371601e308 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:46:04.276] [INFO] console - will check 1552529734244 1552527964276
[2019-03-14 09:46:04.276] [INFO] console - will update 1552529764276 1552527964276
[2019-03-14 09:46:04.276] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:46:04.281] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e68e94018ef371601e308 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:46:05.424] [INFO] console - will check 1552529764276 1552527965424
[2019-03-14 09:46:05.424] [INFO] console - will update 1552529765424 1552527965424
[2019-03-14 09:46:05.424] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:46:05.426] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e68e94018ef371601e308 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:47:49.834] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:47:49.834] [INFO] console - will check 1552529765424 1552528069834
[2019-03-14 09:47:49.834] [INFO] console - will update 1552529869834 1552528069834
[2019-03-14 09:47:49.837] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:47:51.209] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:47:51.209] [INFO] console - will check 1552529869834 1552528071209
[2019-03-14 09:47:51.209] [INFO] console - will update 1552529871209 1552528071209
[2019-03-14 09:47:51.213] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:47:54.794] [INFO] console - will check 1552529871209 1552528074794
[2019-03-14 09:47:54.795] [INFO] console - will update 1552529874794 1552528074794
[2019-03-14 09:47:54.795] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:47:54.798] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e68e94018ef371601e308 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:48:36.201] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:48:36.201] [INFO] console - will check 1552529874794 1552528116201
[2019-03-14 09:48:36.201] [INFO] console - will update 1552529916201 1552528116201
[2019-03-14 09:48:36.204] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:48:38.385] [INFO] console - will check 1552529916201 1552528118385
[2019-03-14 09:48:38.385] [INFO] console - will update 1552529918385 1552528118385
[2019-03-14 09:48:38.385] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:48:38.392] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e68e94018ef371601e308 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:50:15.010] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:50:15.011] [INFO] console - will check 1552529918385 1552528215011
[2019-03-14 09:50:15.011] [INFO] console - will update 1552530015011 1552528215011
[2019-03-14 09:50:15.014] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:50:16.762] [INFO] console - will check 1552530015011 1552528216762
[2019-03-14 09:50:16.762] [INFO] console - will update 1552530016762 1552528216762
[2019-03-14 09:50:16.762] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:50:16.766] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e68e94018ef371601e308 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:50:51.768] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:50:51.768] [INFO] console - will check 1552530016762 1552528251768
[2019-03-14 09:50:51.770] [INFO] console - will update 1552530051768 1552528251768
[2019-03-14 09:50:51.773] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:50:53.013] [INFO] console - will check 1552530051768 1552528253013
[2019-03-14 09:50:53.013] [INFO] console - will update 1552530053013 1552528253013
[2019-03-14 09:50:53.013] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:50:53.018] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e68e94018ef371601e308 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:52:30.391] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:52:30.392] [INFO] console - will check 1552530053013 1552528350392
[2019-03-14 09:52:30.392] [INFO] console - will update 1552530150392 1552528350392
[2019-03-14 09:52:30.406] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:52:31.473] [INFO] console - will check 1552530150392 1552528351473
[2019-03-14 09:52:31.473] [INFO] console - will update 1552530151473 1552528351473
[2019-03-14 09:52:31.474] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:52:31.483] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e68e94018ef371601e308 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:53:00.420] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:53:00.420] [INFO] console - will check 1552530151473 1552528380420
[2019-03-14 09:53:00.422] [INFO] console - will update 1552530180420 1552528380420
[2019-03-14 09:53:00.433] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:53:03.536] [INFO] console - will check 1552530180420 1552528383536
[2019-03-14 09:53:03.536] [INFO] console - will update 1552530183536 1552528383536
[2019-03-14 09:53:03.537] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:53:03.542] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e68e94018ef371601e308 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:53:35.303] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:53:35.304] [INFO] console - will check 1552530183536 1552528415304
[2019-03-14 09:53:35.304] [INFO] console - will update 1552530215304 1552528415304
[2019-03-14 09:53:35.312] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:53:37.804] [INFO] console - will check 1552530215304 1552528417804
[2019-03-14 09:53:37.804] [INFO] console - will update 1552530217804 1552528417804
[2019-03-14 09:53:37.804] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:53:37.810] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e68e94018ef371601e308 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:56:43.818] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:56:43.818] [INFO] console - will check 1552530217804 1552528603818
[2019-03-14 09:56:43.819] [INFO] console - will update 1552530403818 1552528603818
[2019-03-14 09:56:43.824] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:56:46.945] [INFO] console - will check 1552530403818 1552528606945
[2019-03-14 09:56:46.945] [INFO] console - will update 1552530406945 1552528606945
[2019-03-14 09:56:46.946] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:56:46.950] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e68e94018ef371601e308 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:57:00.469] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:57:00.469] [INFO] console - will check 1552530406945 1552528620469
[2019-03-14 09:57:00.469] [INFO] console - will update 1552530420469 1552528620469
[2019-03-14 09:57:00.474] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:57:01.313] [INFO] console - will check 1552530420469 1552528621313
[2019-03-14 09:57:01.313] [INFO] console - will update 1552530421313 1552528621313
[2019-03-14 09:57:01.314] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:57:01.320] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e68e94018ef371601e308 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:57:45.801] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:57:45.802] [INFO] console - will check 1552530421313 1552528665802
[2019-03-14 09:57:45.802] [INFO] console - will update 1552530465802 1552528665802
[2019-03-14 09:57:45.806] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:58:11.190] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:58:11.190] [INFO] console - will check 1552530465802 1552528691190
[2019-03-14 09:58:11.190] [INFO] console - will update 1552530491190 1552528691190
[2019-03-14 09:58:11.196] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:58:13.780] [INFO] console - will check 1552530491190 1552528693780
[2019-03-14 09:58:13.780] [INFO] console - will update 1552530493780 1552528693780
[2019-03-14 09:58:13.781] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:58:13.786] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e68e94018ef371601e308 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:58:25.120] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:58:25.120] [INFO] console - will check 1552530493780 1552528705120
[2019-03-14 09:58:25.121] [INFO] console - will update 1552530505120 1552528705120
[2019-03-14 09:58:25.125] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:58:25.979] [INFO] console - will check 1552530505120 1552528705979
[2019-03-14 09:58:25.980] [INFO] console - will update 1552530505979 1552528705979
[2019-03-14 09:58:25.980] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:58:25.984] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e68e94018ef371601e308 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:59:13.590] [INFO] console - will check 1552530505979 1552528753590
[2019-03-14 09:59:13.590] [INFO] console - will update 1552530553590 1552528753590
[2019-03-14 09:59:13.590] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:59:13.594] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e68e94018ef371601e308 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:59:24.009] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:59:24.010] [INFO] console - will check 1552530553590 1552528764010
[2019-03-14 09:59:24.010] [INFO] console - will update 1552530564010 1552528764010
[2019-03-14 09:59:24.012] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:59:25.026] [INFO] console - will check 1552530564010 1552528765026
[2019-03-14 09:59:25.026] [INFO] console - will update 1552530565026 1552528765026
[2019-03-14 09:59:25.027] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:59:25.032] [WARN] http - undefined - - "GET /posts/getPost?id=5c7e68e94018ef371601e308 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 09:59:44.507] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 09:59:44.507] [INFO] console - will check 1552530565026 1552528784507
[2019-03-14 09:59:44.508] [INFO] console - will update 1552530584507 1552528784507
[2019-03-14 09:59:44.514] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 10:01:28.584] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 10:01:28.601] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 399 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 10:01:43.619] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 10:01:43.635] [INFO] http - ::ffff:127.0.0.1 - - "POST /groups/rename HTTP/1.1" 200 49 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 10:01:43.650] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 10:01:43.667] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 397 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 10:01:52.285] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 10:01:52.292] [INFO] http - ::ffff:127.0.0.1 - - "POST /groups/rename HTTP/1.1" 200 49 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 10:01:52.300] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 10:01:52.305] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 399 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 10:50:56.214] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 10:50:56.242] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 10:50:56.891] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 10:50:56.901] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 10:52:28.422] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 10:52:28.433] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 10:52:29.344] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 10:52:29.370] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 10:52:32.861] [INFO] http - ::ffff:127.0.0.1 - - "GET /signup/search?userId=5c50094c99d8808eaeaf39b1&title=z HTTP/1.1" 200 47 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 10:53:09.286] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 10:53:09.294] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 10:53:14.119] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/search?userId=5c50094c99d8808eaeaf39b1&title=z HTTP/1.1" 200 49 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 10:53:31.630] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 10:53:31.639] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 10:53:36.421] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 10:53:36.435] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/search?author=5c50094c99d8808eaeaf39b1&title=z HTTP/1.1" 200 23 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 10:53:38.394] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 10:53:38.396] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/search?author=5c50094c99d8808eaeaf39b1&title=zx HTTP/1.1" 200 23 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 10:53:39.468] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 10:53:39.471] [WARN] http - undefined - - "GET /posts/search?author=5c50094c99d8808eaeaf39b1&title=z HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 10:53:39.666] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 10:53:39.671] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/search?author=5c50094c99d8808eaeaf39b1&title= HTTP/1.1" 200 292 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 10:53:50.523] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 10:53:50.531] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 10:53:51.821] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 10:53:51.821] [INFO] console - will check 1552530584507 1552532031821
[2019-03-14 10:53:51.825] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 71 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 10:53:53.779] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 10:53:53.783] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 125 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 10:53:53.890] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 10:53:53.891] [INFO] console - will check 1552533833782 1552532033891
[2019-03-14 10:53:53.891] [INFO] console - will update 1552533833891 1552532033891
[2019-03-14 10:53:53.905] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 717 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 10:53:59.588] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 10:53:59.595] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 10:54:03.573] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 10:54:03.577] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/search?author=5c50094c99d8808eaeaf39b1&title=r HTTP/1.1" 200 79 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 10:55:38.070] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 10:55:38.079] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 10:55:38.274] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 10:55:38.293] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 10:55:51.502] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 10:55:51.510] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 10:55:56.337] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 10:55:56.339] [WARN] http - undefined - - "GET /posts/search?author=5c50094c99d8808eaeaf39b1&title=r HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 10:56:07.301] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 10:56:07.328] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/search?author=5c50094c99d8808eaeaf39b1&title=x HTTP/1.1" 200 23 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 10:56:07.497] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 10:56:07.500] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/search?author=5c50094c99d8808eaeaf39b1&title=xi HTTP/1.1" 200 23 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 10:56:07.656] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 10:56:07.659] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/search?author=5c50094c99d8808eaeaf39b1&title=xia HTTP/1.1" 200 23 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 10:56:07.711] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 10:56:07.713] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/search?author=5c50094c99d8808eaeaf39b1&title=xiao HTTP/1.1" 200 23 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 10:56:08.152] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 10:56:08.154] [WARN] http - undefined - - "GET /posts/search?author=5c50094c99d8808eaeaf39b1&title=xia HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 10:56:08.305] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 10:56:08.307] [WARN] http - undefined - - "GET /posts/search?author=5c50094c99d8808eaeaf39b1&title=xi HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 10:56:08.491] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 10:56:08.493] [WARN] http - undefined - - "GET /posts/search?author=5c50094c99d8808eaeaf39b1&title=x HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 10:56:08.701] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 10:56:08.703] [WARN] http - undefined - - "GET /posts/search?author=5c50094c99d8808eaeaf39b1&title= HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 10:56:09.162] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 10:56:09.168] [WARN] http - undefined - - "GET /posts/search?author=5c50094c99d8808eaeaf39b1&title=x HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 10:56:09.245] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 10:56:09.248] [WARN] http - undefined - - "GET /posts/search?author=5c50094c99d8808eaeaf39b1&title=xi HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 10:56:09.368] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 10:56:09.371] [WARN] http - undefined - - "GET /posts/search?author=5c50094c99d8808eaeaf39b1&title=xia HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 10:56:09.450] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 10:56:09.452] [WARN] http - undefined - - "GET /posts/search?author=5c50094c99d8808eaeaf39b1&title=xiao HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 10:56:10.004] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 10:56:10.009] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/search?author=5c50094c99d8808eaeaf39b1&title=%E5%B0%8F HTTP/1.1" 200 116 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:00:57.297] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 11:00:57.312] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:02:32.122] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 11:02:32.218] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:02:46.024] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 11:02:46.033] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:03:46.697] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 11:03:46.718] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:03:52.734] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 11:03:52.738] [WARN] http - undefined - - "GET /posts/search?author=5c50094c99d8808eaeaf39b1&title=r HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:04:54.747] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 11:04:54.767] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:06:02.828] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 11:06:02.836] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:06:04.016] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 11:06:04.040] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:06:46.979] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 11:06:47.087] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:06:48.369] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 11:06:48.376] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:07:34.484] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 11:07:35.486] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 11:07:35.499] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 399 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:08:48.942] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 11:08:48.953] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:08:50.036] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 11:08:50.065] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:08:56.357] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 11:08:56.365] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:08:57.084] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 11:08:57.091] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:09:15.212] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 11:09:15.219] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:09:20.925] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 11:09:20.928] [WARN] http - undefined - - "GET /posts/search?author=5c50094c99d8808eaeaf39b1&title=r HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:09:21.074] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 11:09:21.079] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/search?author=5c50094c99d8808eaeaf39b1&title=re HTTP/1.1" 200 79 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:09:48.598] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 11:09:48.607] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:10:03.581] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 11:10:03.590] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:10:17.356] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 11:10:17.359] [WARN] http - undefined - - "GET /posts/search?author=5c50094c99d8808eaeaf39b1&title=r HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:10:17.479] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 11:10:17.482] [WARN] http - undefined - - "GET /posts/search?author=5c50094c99d8808eaeaf39b1&title=re HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:11:13.731] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 11:11:13.741] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:11:22.111] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 11:11:22.115] [WARN] http - undefined - - "GET /posts/search?author=5c50094c99d8808eaeaf39b1&title=r HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:24:32.750] [INFO] console - redis server connect success!
[2019-03-14 11:24:32.752] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-14 11:26:39.256] [INFO] http - ::1 - - "POST /groups/update HTTP/1.1" 200 48 "" "PostmanRuntime/7.1.1"
[2019-03-14 11:27:57.337] [INFO] console - redis server connect success!
[2019-03-14 11:27:57.341] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-14 11:28:57.760] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 11:28:57.872] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:30:07.032] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 11:30:07.044] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:30:19.438] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 11:30:19.440] [WARN] http - undefined - - "GET /posts/search?author=5c50094c99d8808eaeaf39b1&title=r HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:30:22.723] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { key: undefined },
  { key: undefined } ] 'results'
[2019-03-14 11:30:22.747] [ERROR] console - API ERROR:   [0m[97m[41mError[0m[90m:[0m[37m [0m[97m{}[0m
[0m ReferenceError: Groups is not defined
    at _callee$ (/workspace/DESserver/api/actions/api/groups/update.js:6:16)
    at tryCatch (/workspace/DESserver/node_modules/regenerator-runtime/runtime.js:62:40)
    at Generator.invoke [as _invoke] (/workspace/DESserver/node_modules/regenerator-runtime/runtime.js:296:22)
    at Generator.prototype.(anonymous function) [as next] (/workspace/DESserver/node_modules/regenerator-runtime/runtime.js:114:21)
    at step (/workspace/DESserver/node_modules/babel-runtime/helpers/asyncToGenerator.js:17:30)
    at /workspace/DESserver/node_modules/babel-runtime/helpers/asyncToGenerator.js:28:13
    at <anonymous>
    at process._tickCallback (internal/process/next_tick.js:188:7)
[2019-03-14 11:30:22.754] [INFO] http - ::ffff:127.0.0.1 - - "POST /groups/update HTTP/1.1" 200 58 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:33:31.814] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 11:33:31.826] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:33:50.273] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 11:33:50.286] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:33:53.427] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 11:33:53.435] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:33:57.085] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 11:33:57.088] [WARN] http - undefined - - "GET /posts/search?author=5c50094c99d8808eaeaf39b1&title=r HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:34:00.334] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: { posts: [Array] }, key: undefined },
  { key: undefined } ] 'results'
[2019-03-14 11:34:00.339] [ERROR] console - API ERROR:   [0m[97m[41mError[0m[90m:[0m[37m [0m[97m{}[0m
[0m ReferenceError: Groups is not defined
    at _callee$ (/workspace/DESserver/api/actions/api/groups/update.js:6:16)
    at tryCatch (/workspace/DESserver/node_modules/regenerator-runtime/runtime.js:62:40)
    at Generator.invoke [as _invoke] (/workspace/DESserver/node_modules/regenerator-runtime/runtime.js:296:22)
    at Generator.prototype.(anonymous function) [as next] (/workspace/DESserver/node_modules/regenerator-runtime/runtime.js:114:21)
    at step (/workspace/DESserver/node_modules/babel-runtime/helpers/asyncToGenerator.js:17:30)
    at /workspace/DESserver/node_modules/babel-runtime/helpers/asyncToGenerator.js:28:13
    at <anonymous>
    at process._tickCallback (internal/process/next_tick.js:188:7)
[2019-03-14 11:34:00.340] [INFO] http - ::ffff:127.0.0.1 - - "POST /groups/update HTTP/1.1" 200 58 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:34:37.588] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 11:34:37.595] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:34:41.345] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 11:34:41.348] [WARN] http - undefined - - "GET /posts/search?author=5c50094c99d8808eaeaf39b1&title=r HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:34:42.968] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: { posts: [Array] }, key: undefined },
  { key: undefined } ] 'results'
[2019-03-14 11:34:42.972] [ERROR] console - API ERROR:   [0m[97m[41mError[0m[90m:[0m[37m [0m[97m{}[0m
[0m ReferenceError: Groups is not defined
    at _callee$ (/workspace/DESserver/api/actions/api/groups/update.js:6:16)
    at tryCatch (/workspace/DESserver/node_modules/regenerator-runtime/runtime.js:62:40)
    at Generator.invoke [as _invoke] (/workspace/DESserver/node_modules/regenerator-runtime/runtime.js:296:22)
    at Generator.prototype.(anonymous function) [as next] (/workspace/DESserver/node_modules/regenerator-runtime/runtime.js:114:21)
    at step (/workspace/DESserver/node_modules/babel-runtime/helpers/asyncToGenerator.js:17:30)
    at /workspace/DESserver/node_modules/babel-runtime/helpers/asyncToGenerator.js:28:13
    at <anonymous>
    at process._tickCallback (internal/process/next_tick.js:188:7)
[2019-03-14 11:34:42.973] [INFO] http - ::ffff:127.0.0.1 - - "POST /groups/update HTTP/1.1" 200 58 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:34:58.507] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: { posts: [Array] }, key: undefined },
  { key: undefined } ] 'results'
[2019-03-14 11:34:58.511] [ERROR] console - API ERROR:   [0m[97m[41mError[0m[90m:[0m[37m [0m[97m{}[0m
[0m ReferenceError: Groups is not defined
    at _callee$ (/workspace/DESserver/api/actions/api/groups/update.js:6:16)
    at tryCatch (/workspace/DESserver/node_modules/regenerator-runtime/runtime.js:62:40)
    at Generator.invoke [as _invoke] (/workspace/DESserver/node_modules/regenerator-runtime/runtime.js:296:22)
    at Generator.prototype.(anonymous function) [as next] (/workspace/DESserver/node_modules/regenerator-runtime/runtime.js:114:21)
    at step (/workspace/DESserver/node_modules/babel-runtime/helpers/asyncToGenerator.js:17:30)
    at /workspace/DESserver/node_modules/babel-runtime/helpers/asyncToGenerator.js:28:13
    at <anonymous>
    at process._tickCallback (internal/process/next_tick.js:188:7)
[2019-03-14 11:34:58.513] [INFO] http - ::ffff:127.0.0.1 - - "POST /groups/update HTTP/1.1" 200 58 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:35:39.598] [INFO] console - redis server connect success!
[2019-03-14 11:35:39.599] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-14 11:35:45.538] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: { posts: [Array] }, key: undefined },
  { key: undefined } ] 'results'
[2019-03-14 11:35:45.554] [INFO] console - { _id: 5c7e692b4018ef371601e309,
  members: [ '5c4a6c2548c1d7686ca5e112', '5c4a6bb648c1d7686ca5e111' ],
  posts: [ '5c7e68e94018ef371601e308' ] } 'detail'
[2019-03-14 11:35:45.574] [ERROR] console - API ERROR:   [0m[97m[41mError[0m[90m:[0m[37m [0m[97m{}[0m
[0m TypeError: Cannot read property 'forEach' of undefined
    at _callee$ (/workspace/DESserver/api/actions/api/groups/update.js:27:16)
    at tryCatch (/workspace/DESserver/node_modules/regenerator-runtime/runtime.js:62:40)
    at Generator.invoke [as _invoke] (/workspace/DESserver/node_modules/regenerator-runtime/runtime.js:296:22)
    at Generator.prototype.(anonymous function) [as next] (/workspace/DESserver/node_modules/regenerator-runtime/runtime.js:114:21)
    at step (/workspace/DESserver/node_modules/babel-runtime/helpers/asyncToGenerator.js:17:30)
    at /workspace/DESserver/node_modules/babel-runtime/helpers/asyncToGenerator.js:28:13
    at <anonymous>
    at process._tickCallback (internal/process/next_tick.js:188:7)
[2019-03-14 11:35:45.594] [INFO] http - ::ffff:127.0.0.1 - - "POST /groups/update HTTP/1.1" 200 58 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:36:36.173] [INFO] console - redis server connect success!
[2019-03-14 11:36:36.174] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-14 11:36:43.519] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: { posts: [Array] }, key: undefined },
  { key: undefined } ] 'results'
[2019-03-14 11:36:43.538] [INFO] console - { _id: 5c7e692b4018ef371601e309,
  members: [ '5c4a6c2548c1d7686ca5e112', '5c4a6bb648c1d7686ca5e111' ],
  posts: [ '5c7e68e94018ef371601e308' ] } 'detail'
[2019-03-14 11:36:43.540] [INFO] console - { _id: 5c7e692b4018ef371601e309,
  members: [ '5c4a6c2548c1d7686ca5e112', '5c4a6bb648c1d7686ca5e111' ],
  posts: [ '5c7e68e94018ef371601e308', '5c7e69804018ef371601e30a' ] } 'new detail'
[2019-03-14 11:36:43.549] [INFO] http - undefined - - "POST /groups/update HTTP/1.1" 200 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:37:34.964] [INFO] console - redis server connect success!
[2019-03-14 11:37:34.966] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-14 11:38:26.020] [INFO] console - redis server connect success!
[2019-03-14 11:38:26.023] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-14 11:39:22.188] [INFO] console - redis server connect success!
[2019-03-14 11:39:22.190] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-14 11:39:25.258] [INFO] console - redis server connect success!
[2019-03-14 11:39:25.260] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-14 11:39:39.403] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 11:39:39.447] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:39:50.676] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 11:39:50.684] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/detail?_id=5c7e692b4018ef371601e309 HTTP/1.1" 200 373 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:39:52.288] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 11:39:52.299] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:39:57.074] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 11:39:57.078] [WARN] http - undefined - - "GET /posts/search?author=5c50094c99d8808eaeaf39b1&title=r HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:39:59.007] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: { posts: [Array] }, key: undefined },
  { key: undefined } ] 'results'
[2019-03-14 11:39:59.022] [INFO] http - ::ffff:127.0.0.1 - - "POST /groups/update HTTP/1.1" 200 49 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:40:02.253] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 11:40:02.262] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 456 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:40:04.575] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 11:40:04.581] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/detail?_id=5c7e692b4018ef371601e309 HTTP/1.1" 200 430 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:40:05.850] [INFO] console - will check 1552533833891 1552534805850
[2019-03-14 11:40:05.852] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c7e69804018ef371601e30a HTTP/1.1" 200 71 "http://localhost:9000/project/detail" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:40:07.854] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 11:40:07.859] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 125 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:40:07.973] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 11:40:07.974] [INFO] console - will check 1552536607856 1552534807974
[2019-03-14 11:40:07.974] [INFO] console - will update 1552536607974 1552534807974
[2019-03-14 11:40:07.978] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:40:13.287] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 11:40:13.299] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:40:17.782] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 11:40:17.784] [WARN] http - undefined - - "GET /posts/search?author=5c50094c99d8808eaeaf39b1&title=r HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:40:21.167] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: { posts: [Array] }, key: undefined },
  { key: undefined } ] 'results'
[2019-03-14 11:40:21.171] [INFO] http - ::ffff:127.0.0.1 - - "POST /groups/update HTTP/1.1" 200 49 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:40:25.731] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 11:40:25.738] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:40:30.251] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 11:40:30.254] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/search?author=5c50094c99d8808eaeaf39b1&title=u HTTP/1.1" 200 116 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:40:32.360] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: { posts: [Array] }, key: undefined },
  { key: undefined } ] 'results'
[2019-03-14 11:40:32.366] [INFO] http - ::ffff:127.0.0.1 - - "POST /groups/update HTTP/1.1" 200 49 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:40:56.794] [INFO] console - redis server connect success!
[2019-03-14 11:40:56.796] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-14 11:42:27.661] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 11:42:27.797] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 550 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:44:10.071] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 11:44:10.074] [INFO] http - ::ffff:127.0.0.1 - - "GET /signup/search?name=z HTTP/1.1" 200 70 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:44:11.234] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 11:44:11.238] [INFO] http - ::ffff:127.0.0.1 - - "GET /signup/search?name= HTTP/1.1" 200 221 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:44:11.669] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 11:44:11.674] [WARN] http - undefined - - "GET /signup/search?name=z HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:44:11.832] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 11:44:11.835] [INFO] http - ::ffff:127.0.0.1 - - "GET /signup/search?name=zh HTTP/1.1" 200 23 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:44:11.938] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 11:44:11.941] [INFO] http - ::ffff:127.0.0.1 - - "GET /signup/search?name=zha HTTP/1.1" 200 23 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:44:12.072] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 11:44:12.076] [INFO] http - ::ffff:127.0.0.1 - - "GET /signup/search?name=zhao HTTP/1.1" 200 23 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:44:14.518] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 11:44:14.521] [INFO] http - ::ffff:127.0.0.1 - - "GET /signup/search?name=zhao+l HTTP/1.1" 200 23 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:44:14.736] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 11:44:14.738] [INFO] http - ::ffff:127.0.0.1 - - "GET /signup/search?name=zhao+li HTTP/1.1" 200 23 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:44:14.886] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 11:44:14.888] [INFO] http - ::ffff:127.0.0.1 - - "GET /signup/search?name=zhao+lin HTTP/1.1" 200 23 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:44:15.631] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 11:44:15.634] [INFO] http - ::ffff:127.0.0.1 - - "GET /signup/search?name=zhao+lin+x HTTP/1.1" 200 23 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:44:16.087] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 11:44:16.090] [INFO] http - ::ffff:127.0.0.1 - - "GET /signup/search?name=%E8%B5%B5%E6%9E%97%E8%82%96 HTTP/1.1" 200 76 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:44:21.977] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: { posts: [Array] }, key: undefined },
  { key: undefined } ] 'results'
[2019-03-14 11:44:21.990] [INFO] http - ::ffff:127.0.0.1 - - "POST /groups/update HTTP/1.1" 200 13 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:44:29.714] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 11:44:29.947] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 555 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:45:57.314] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 11:45:57.325] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/detail?_id=5c7e692b4018ef371601e309 HTTP/1.1" 200 529 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:46:02.705] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 11:46:02.735] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:46:19.146] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 11:46:19.150] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 47 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:46:30.050] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 11:46:30.053] [WARN] http - undefined - - "GET /signup/search?name=z HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:46:38.581] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 11:46:38.584] [WARN] http - undefined - - "GET /posts/search?author=5c50094c99d8808eaeaf39b1&title=z HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:46:40.305] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 11:46:40.308] [WARN] http - undefined - - "GET /posts/search?author=5c50094c99d8808eaeaf39b1&title= HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:46:40.539] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 11:46:40.541] [WARN] http - undefined - - "GET /posts/search?author=5c50094c99d8808eaeaf39b1&title=r HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:46:42.755] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: { posts: [Array] }, key: undefined },
  { object: { members: [Array] }, key: undefined } ] 'results'
[2019-03-14 11:46:42.795] [INFO] http - ::ffff:127.0.0.1 - - "POST /groups/create HTTP/1.1" 200 13 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:46:42.822] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 11:46:42.830] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 639 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:47:30.893] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 11:47:30.906] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:47:38.834] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 11:47:38.836] [INFO] http - ::ffff:127.0.0.1 - - "GET /signup/search?name=h HTTP/1.1" 200 119 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:47:44.483] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { key: undefined },
  { object: { members: [Array] }, key: undefined } ] 'results'
[2019-03-14 11:47:44.492] [INFO] http - ::ffff:127.0.0.1 - - "POST /groups/update HTTP/1.1" 200 13 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:47:46.515] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 11:47:46.534] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 833 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:47:52.268] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 11:47:52.270] [WARN] http - undefined - - "GET /posts/search?author=5c50094c99d8808eaeaf39b1&title=u HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:47:54.458] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: { posts: [Array] }, key: undefined },
  { key: undefined } ] 'results'
[2019-03-14 11:47:54.463] [INFO] http - ::ffff:127.0.0.1 - - "POST /groups/update HTTP/1.1" 200 13 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:47:57.502] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 11:47:57.513] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 1021 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:47:58.911] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 11:47:58.918] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/detail?_id=5c89cea221a8442480b2ce2e HTTP/1.1" 200 508 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:48:00.411] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 11:48:00.430] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 11:48:08.848] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 11:48:08.869] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 14:45:53.405] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 14:45:53.637] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 14:45:56.238] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 14:45:56.250] [WARN] http - undefined - - "GET /groups/detail?_id=5c89cea221a8442480b2ce2e HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 14:45:57.139] [INFO] console - will check 1552536607974 1552545957139
[2019-03-14 14:45:57.146] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c7e68ba4018ef371601e307 HTTP/1.1" 200 71 "http://localhost:9000/project/detail" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 14:45:59.134] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 14:45:59.154] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 125 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 14:45:59.277] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 14:45:59.278] [INFO] console - will check 1552547759139 1552545959278
[2019-03-14 14:45:59.278] [INFO] console - will update 1552547759278 1552545959278
[2019-03-14 14:45:59.284] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 17:45:59.276] [INFO] console - redis server connect success!
[2019-03-14 17:45:59.277] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-14 17:48:24.425] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 17:48:24.455] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 125 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 17:48:24.720] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 17:48:24.722] [INFO] console - will check 1552558704444 1552556904722
[2019-03-14 17:48:24.723] [INFO] console - will update 1552558704722 1552556904722
[2019-03-14 17:48:24.738] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 17:48:28.304] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 17:48:28.336] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 17:49:25.709] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 17:49:25.734] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 17:49:30.908] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 17:49:30.915] [WARN] http - undefined - - "GET /groups/detail?_id=5c89cea221a8442480b2ce2e HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 17:49:32.524] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 17:49:32.546] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 17:49:41.875] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 17:49:41.877] [WARN] http - undefined - - "GET /posts/search?author=5c50094c99d8808eaeaf39b1&title=z HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 17:49:42.938] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 17:49:42.941] [WARN] http - undefined - - "GET /posts/search?author=5c50094c99d8808eaeaf39b1&title= HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 17:49:43.284] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 17:49:43.286] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/search?author=5c50094c99d8808eaeaf39b1&title=1 HTTP/1.1" 200 23 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 17:49:44.001] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 17:49:44.004] [WARN] http - undefined - - "GET /posts/search?author=5c50094c99d8808eaeaf39b1&title= HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 17:50:16.886] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: { posts: [Array] }, key: undefined },
  { key: undefined } ] 'results'
[2019-03-14 17:50:16.900] [INFO] http - ::ffff:127.0.0.1 - - "POST /groups/update HTTP/1.1" 200 13 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 17:50:16.914] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 17:50:16.941] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 1149 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 17:50:20.734] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 17:50:20.741] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/detail?_id=5c89cea221a8442480b2ce2e HTTP/1.1" 200 572 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 17:50:23.058] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 17:50:23.079] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 17:50:26.549] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 17:50:26.551] [WARN] http - undefined - - "GET /posts/search?author=5c50094c99d8808eaeaf39b1&title=x HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 17:50:27.222] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 17:50:27.224] [WARN] http - undefined - - "GET /posts/search?author=5c50094c99d8808eaeaf39b1&title=xi HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 17:50:27.350] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 17:50:27.351] [WARN] http - undefined - - "GET /posts/search?author=5c50094c99d8808eaeaf39b1&title=xia HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 17:50:27.439] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 17:50:27.442] [WARN] http - undefined - - "GET /posts/search?author=5c50094c99d8808eaeaf39b1&title=xiao HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 17:50:28.076] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 17:50:28.078] [WARN] http - undefined - - "GET /posts/search?author=5c50094c99d8808eaeaf39b1&title=xia HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 17:50:28.218] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 17:50:28.220] [WARN] http - undefined - - "GET /posts/search?author=5c50094c99d8808eaeaf39b1&title=xi HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 17:50:28.372] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 17:50:28.374] [WARN] http - undefined - - "GET /posts/search?author=5c50094c99d8808eaeaf39b1&title=x HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 17:50:28.610] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 17:50:28.613] [WARN] http - undefined - - "GET /posts/search?author=5c50094c99d8808eaeaf39b1&title= HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 17:50:32.056] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: { posts: [Array] }, key: undefined },
  { key: undefined } ] 'results'
[2019-03-14 17:50:32.061] [INFO] http - ::ffff:127.0.0.1 - - "POST /groups/update HTTP/1.1" 200 13 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 17:50:32.076] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 17:50:32.181] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 17:50:33.686] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 17:50:33.694] [WARN] http - undefined - - "GET /groups/detail?_id=5c89cea221a8442480b2ce2e HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 17:50:36.016] [INFO] console - will check 1552558704722 1552557036016
[2019-03-14 17:50:36.018] [INFO] console - will update 1552558836016 1552557036016
[2019-03-14 17:50:36.018] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 17:50:36.022] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c7e68ba4018ef371601e307 HTTP/1.1" 200 21195 "http://localhost:9000/project/detail" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 17:50:44.461] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 17:50:44.478] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 17:51:29.193] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 17:51:29.226] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 17:51:41.933] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 17:51:41.939] [INFO] http - ::ffff:127.0.0.1 - - "GET /signup/search?name=s HTTP/1.1" 200 119 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 17:51:42.013] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 17:51:42.016] [INFO] http - ::ffff:127.0.0.1 - - "GET /signup/search?name=sd HTTP/1.1" 200 23 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 17:51:42.052] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 17:51:42.057] [INFO] http - ::ffff:127.0.0.1 - - "GET /signup/search?name=sda HTTP/1.1" 200 23 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 17:51:42.132] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 17:51:42.138] [INFO] http - ::ffff:127.0.0.1 - - "GET /signup/search?name=sdad HTTP/1.1" 200 23 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 17:51:42.372] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 17:51:42.374] [WARN] http - undefined - - "GET /signup/search?name=sda HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 17:51:42.548] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 17:51:42.552] [WARN] http - undefined - - "GET /signup/search?name=sd HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 17:51:42.700] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 17:51:42.704] [WARN] http - undefined - - "GET /signup/search?name=s HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 17:51:42.918] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 17:51:42.920] [WARN] http - undefined - - "GET /signup/search?name= HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 17:53:05.951] [INFO] console - redis server connect success!
[2019-03-14 17:53:05.953] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-14 17:53:24.321] [INFO] console - redis server connect success!
[2019-03-14 17:53:24.325] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-14 17:53:25.028] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 17:53:25.155] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 17:53:30.247] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 17:53:30.253] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/search?author=5c50094c99d8808eaeaf39b1&title=s HTTP/1.1" 200 23 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 17:53:30.323] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 17:53:30.325] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/search?author=5c50094c99d8808eaeaf39b1&title=sd HTTP/1.1" 200 23 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 17:53:30.466] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 17:53:30.469] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/search?author=5c50094c99d8808eaeaf39b1&title=sds HTTP/1.1" 200 23 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 17:53:30.475] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 17:53:30.478] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/search?author=5c50094c99d8808eaeaf39b1&title=sdsa HTTP/1.1" 200 23 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 17:53:30.888] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 17:53:30.890] [WARN] http - undefined - - "GET /posts/search?author=5c50094c99d8808eaeaf39b1&title=sds HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 17:53:31.049] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 17:53:31.051] [WARN] http - undefined - - "GET /posts/search?author=5c50094c99d8808eaeaf39b1&title=sd HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 17:53:31.195] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 17:53:31.197] [WARN] http - undefined - - "GET /posts/search?author=5c50094c99d8808eaeaf39b1&title=s HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 17:53:31.567] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 17:53:31.568] [INFO] http - undefined - - "GET /posts/search?author=5c50094c99d8808eaeaf39b1&title= HTTP/1.1" 200 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 17:53:35.150] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 17:53:35.152] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/search?author=5c50094c99d8808eaeaf39b1&title=i HTTP/1.1" 200 23 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 17:53:35.784] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 17:53:35.786] [INFO] http - undefined - - "GET /posts/search?author=5c50094c99d8808eaeaf39b1&title= HTTP/1.1" 200 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 17:53:36.108] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 17:53:36.110] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/search?author=5c50094c99d8808eaeaf39b1&title=a HTTP/1.1" 200 79 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 17:53:37.908] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-14 17:53:37.909] [INFO] http - undefined - - "GET /posts/search?author=5c50094c99d8808eaeaf39b1&title= HTTP/1.1" 200 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-14 17:53:44.662] [INFO] console - redis server connect success!
[2019-03-14 17:53:44.664] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-14 17:54:54.957] [INFO] console - redis server connect success!
[2019-03-14 17:54:54.958] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-15 09:09:13.533] [ERROR] console - API ERROR:   [0m[97m[41mError[0m[90m:[0m[37m [0m[97m{}[0m
[0m TypeError: Cannot read property 'filename' of undefined
    at /workspace/DESserver/api/actions/api/file/upload.js:13:21
    at new Promise (<anonymous>)
    at new F (/workspace/DESserver/node_modules/core-js/library/modules/_export.js:36:28)
    at exports.default (/workspace/DESserver/api/actions/api/file/upload.js:10:10)
    at /workspace/DESserver/api/api.js:91:7
    at Layer.handle [as handle_request] (/workspace/DESserver/node_modules/express/lib/router/layer.js:95:5)
    at trim_prefix (/workspace/DESserver/node_modules/express/lib/router/index.js:317:13)
    at /workspace/DESserver/node_modules/express/lib/router/index.js:284:7
    at Function.process_params (/workspace/DESserver/node_modules/express/lib/router/index.js:335:12)
    at next (/workspace/DESserver/node_modules/express/lib/router/index.js:275:10)
    at multerMiddleware (/workspace/DESserver/node_modules/multer/lib/make-middleware.js:18:41)
    at Layer.handle [as handle_request] (/workspace/DESserver/node_modules/express/lib/router/layer.js:95:5)
    at trim_prefix (/workspace/DESserver/node_modules/express/lib/router/index.js:317:13)
    at /workspace/DESserver/node_modules/express/lib/router/index.js:284:7
    at Function.process_params (/workspace/DESserver/node_modules/express/lib/router/index.js:335:12)
    at next (/workspace/DESserver/node_modules/express/lib/router/index.js:275:10)
[2019-03-15 09:09:13.542] [INFO] http - ::1 - - "POST /file/upload HTTP/1.1" 200 58 "" "PostmanRuntime/7.1.1"
[2019-03-15 09:09:48.534] [INFO] console - redis server connect success!
[2019-03-15 09:09:48.536] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-15 09:09:53.651] [INFO] console - undefined 'file1212121'
[2019-03-15 09:09:53.677] [ERROR] console - API ERROR:   [0m[97m[41mError[0m[90m:[0m[37m [0m[97m{}[0m
[0m TypeError: Cannot read property 'filename' of undefined
    at /workspace/DESserver/api/actions/api/file/upload.js:14:21
    at new Promise (<anonymous>)
    at new F (/workspace/DESserver/node_modules/core-js/library/modules/_export.js:36:28)
    at exports.default (/workspace/DESserver/api/actions/api/file/upload.js:10:10)
    at /workspace/DESserver/api/api.js:91:7
    at Layer.handle [as handle_request] (/workspace/DESserver/node_modules/express/lib/router/layer.js:95:5)
    at trim_prefix (/workspace/DESserver/node_modules/express/lib/router/index.js:317:13)
    at /workspace/DESserver/node_modules/express/lib/router/index.js:284:7
    at Function.process_params (/workspace/DESserver/node_modules/express/lib/router/index.js:335:12)
    at next (/workspace/DESserver/node_modules/express/lib/router/index.js:275:10)
    at multerMiddleware (/workspace/DESserver/node_modules/multer/lib/make-middleware.js:18:41)
    at Layer.handle [as handle_request] (/workspace/DESserver/node_modules/express/lib/router/layer.js:95:5)
    at trim_prefix (/workspace/DESserver/node_modules/express/lib/router/index.js:317:13)
    at /workspace/DESserver/node_modules/express/lib/router/index.js:284:7
    at Function.process_params (/workspace/DESserver/node_modules/express/lib/router/index.js:335:12)
    at next (/workspace/DESserver/node_modules/express/lib/router/index.js:275:10)
[2019-03-15 09:09:53.682] [INFO] http - ::1 - - "POST /file/upload HTTP/1.1" 200 58 "" "PostmanRuntime/7.1.1"
[2019-03-15 09:10:19.174] [INFO] console - redis server connect success!
[2019-03-15 09:10:19.176] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-15 09:11:05.155] [ERROR] http - ::1 - - "POST /file/upload HTTP/1.1" 500 244 "" "PostmanRuntime/7.1.1"
[2019-03-15 09:11:05.155] [ERROR] console - Error: ENOENT: no such file or directory, open '/workspace/DESserver/api/uploads/1552612265149-i0s4g4cp.jpeg'
[2019-03-15 09:11:32.712] [ERROR] http - ::1 - - "POST /file/upload HTTP/1.1" 500 244 "" "PostmanRuntime/7.1.1"
[2019-03-15 09:11:32.712] [ERROR] console - Error: ENOENT: no such file or directory, open '/workspace/DESserver/api/uploads/1552612292711-l3logarf.jpeg'
[2019-03-15 09:24:11.897] [INFO] console - redis server connect success!
[2019-03-15 09:24:11.899] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-15 09:28:43.232] [INFO] console - { fieldname: 'file',
  originalname: 'logo.jpg',
  encoding: '7bit',
  mimetype: 'image/jpeg',
  destination: '/workspace/DESserver/api/uploads',
  filename: '1552613323217-kq2g0lak.jpeg',
  path: '/workspace/DESserver/api/uploads/1552613323217-kq2g0lak.jpeg',
  size: 8052 } 'file1212121'
[2019-03-15 09:28:43.352] [INFO] console - null
[2019-03-15 09:28:43.358] [INFO] http - ::1 - - "POST /file/upload HTTP/1.1" 200 286 "" "PostmanRuntime/7.1.1"
[2019-03-15 09:29:53.286] [ERROR] http - ::1 - - "GET /uploads/1552613323217-kq2g0lak.jpeg HTTP/1.1" 404 - "" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 09:29:53.577] [ERROR] http - ::1 - - "GET /favicon.ico HTTP/1.1" 404 - "http://localhost:3060/uploads/1552613323217-kq2g0lak.jpeg" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 09:29:58.697] [ERROR] http - ::1 - - "GET /api/uploads/1552613323217-kq2g0lak.jpeg HTTP/1.1" 404 - "" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 09:30:00.661] [ERROR] http - ::1 - - "GET /api/uploads/1552613323217-kq2g0lak.jpeg HTTP/1.1" 404 - "" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 09:30:20.183] [ERROR] http - ::1 - - "GET /workspace/DESserver/api/uploads/1552613323217-kq2g0lak.jpeg HTTP/1.1" 404 - "" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 09:32:27.738] [ERROR] http - ::1 - - "GET /uploads/1552613323217-kq2g0lak.jpeg HTTP/1.1" 404 - "" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 09:33:14.633] [ERROR] http - ::1 - - "GET /uploads/1552613323217-kq2g0lak.jpeg HTTP/1.1" 404 - "" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 09:38:50.125] [INFO] console - redis server connect success!
[2019-03-15 09:38:50.127] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-15 09:38:52.929] [ERROR] http - ::1 - - "GET /uploads/1552613323217-kq2g0lak.jpeg HTTP/1.1" 404 - "" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 09:39:02.977] [INFO] console - redis server connect success!
[2019-03-15 09:39:02.979] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-15 09:39:05.045] [ERROR] http - ::1 - - "GET /uploads/1552613323217-kq2g0lak.jpeg HTTP/1.1" 404 - "" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 09:40:08.729] [INFO] console - redis server connect success!
[2019-03-15 09:40:08.730] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-15 09:40:17.312] [INFO] console - redis server connect success!
[2019-03-15 09:40:17.313] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-15 09:41:02.218] [INFO] console - { fieldname: 'file',
  originalname: 'md.jpg',
  encoding: '7bit',
  mimetype: 'image/jpeg',
  destination: '/workspace/DESserver/api/uploads',
  filename: '1552614062216-koxr8dct.jpeg',
  path: '/workspace/DESserver/api/uploads/1552614062216-koxr8dct.jpeg',
  size: 127803 } 'file1212121'
[2019-03-15 09:41:02.237] [INFO] console - null
[2019-03-15 09:41:02.242] [INFO] http - ::1 - - "POST /file/upload HTTP/1.1" 200 286 "" "PostmanRuntime/7.1.1"
[2019-03-15 09:41:22.274] [ERROR] http - ::1 - - "GET /workspace/DESserver/api/uploads/1552614062216-koxr8dct.jpeg HTTP/1.1" 404 - "" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 09:41:27.662] [ERROR] http - ::1 - - "GET /api/uploads/1552614062216-koxr8dct.jpeg HTTP/1.1" 404 - "" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 09:41:32.604] [ERROR] http - ::1 - - "GET /uploads/1552614062216-koxr8dct.jpeg HTTP/1.1" 404 - "" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 09:41:36.094] [INFO] http - ::1 - - "GET /1552614062216-koxr8dct.jpeg HTTP/1.1" 200 127803 "" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 09:41:44.678] [INFO] http - ::1 - - "GET /1552613323217-kq2g0lak.jpeg HTTP/1.1" 200 8052 "" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 09:45:03.627] [INFO] console - redis server connect success!
[2019-03-15 09:45:03.628] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-15 09:46:00.627] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 09:46:00.704] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 125 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 09:46:00.883] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 09:46:00.886] [INFO] console - will check 1552616160660 1552614360886
[2019-03-15 09:46:00.886] [INFO] console - will update 1552616160886 1552614360886
[2019-03-15 09:46:00.901] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 09:46:13.358] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 09:46:13.402] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 10:03:06.761] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 10:03:06.762] [INFO] console - will check 1552616160886 1552615386762
[2019-03-15 10:03:06.763] [INFO] console - will update 1552617186762 1552615386762
[2019-03-15 10:03:06.776] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 10:03:13.504] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 10:03:13.532] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 10:04:10.596] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 10:04:10.626] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 10:04:19.064] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 10:04:19.083] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 10:04:56.961] [ERROR] http - ::1 - - "POST /file/sadsad HTTP/1.1" 404 - "" "PostmanRuntime/7.1.1"
[2019-03-15 10:05:28.632] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 10:05:28.729] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 10:05:56.501] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 10:05:56.523] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 10:05:58.275] [ERROR] http - undefined - - "GET /posts/list1?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 404 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 10:06:39.128] [ERROR] http - undefined - - "GET /posts/list1?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 404 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 10:06:39.278] [ERROR] http - undefined - - "GET /posts/list1?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 404 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 10:06:54.548] [ERROR] http - undefined - - "GET /posts/list1?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 404 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 10:06:55.425] [ERROR] http - undefined - - "GET /posts/list1?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 404 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 10:07:25.647] [ERROR] http - undefined - - "GET /posts/list1?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 404 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 10:11:36.418] [ERROR] http - undefined - - "GET /posts/list1?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 404 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 10:12:01.250] [ERROR] http - undefined - - "GET /posts/list1?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 404 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 10:14:22.178] [ERROR] http - undefined - - "GET /posts/list1?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 404 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 10:14:38.732] [ERROR] http - undefined - - "GET /posts/list1?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 404 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 10:14:47.192] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 10:14:47.194] [INFO] console - will check 1552617186762 1552616087194
[2019-03-15 10:14:47.194] [INFO] console - will update 1552617887194 1552616087194
[2019-03-15 10:14:47.209] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 10:14:48.952] [INFO] console - will check 1552617887194 1552616088952
[2019-03-15 10:14:48.953] [INFO] console - will update 1552617888952 1552616088952
[2019-03-15 10:14:48.953] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 10:14:48.963] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c7e68e94018ef371601e308 HTTP/1.1" 200 32007 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 11:02:06.789] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 11:02:06.792] [INFO] console - will check 1552617888952 1552618926792
[2019-03-15 11:02:06.829] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 71 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 11:03:05.186] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 11:03:05.220] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 125 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 11:03:05.431] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 11:03:05.432] [INFO] console - will check 1552620785202 1552618985432
[2019-03-15 11:03:05.432] [INFO] console - will update 1552620785432 1552618985432
[2019-03-15 11:03:05.438] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 717 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 11:03:21.197] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 11:03:21.224] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 11:03:22.837] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 11:03:22.853] [WARN] http - undefined - - "GET /groups/detail?_id=5c89cea221a8442480b2ce2e HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 11:03:25.317] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 11:03:25.338] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 11:17:39.120] [WARN] http - ::1 - - "GET /1552613323217-kq2g0lak.jpeg HTTP/1.1" 304 - "" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 11:17:52.103] [WARN] http - ::1 - - "GET /1552613323217-kq2g0lak.jpeg HTTP/1.1" 304 - "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 11:37:32.901] [WARN] http - ::1 - - "GET /1552613323217-kq2g0lak.jpeg HTTP/1.1" 304 - "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 11:40:34.011] [WARN] http - ::1 - - "GET /1552613323217-kq2g0lak.jpeg HTTP/1.1" 304 - "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 11:40:52.590] [ERROR] http - ::1 - - "GET /1552613323217-kq2g0lak.jpeg HTTP/1.1" 404 - "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 11:41:52.214] [ERROR] http - ::1 - - "GET /1552613323217-kq2g0lak.jpeg HTTP/1.1" 404 - "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 11:42:33.944] [ERROR] http - ::1 - - "GET /1552613323217-kq2g0lak.jpeg HTTP/1.1" 404 - "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 11:42:48.063] [INFO] console - { fieldname: 'file',
  originalname: 'logo.jpg',
  encoding: '7bit',
  mimetype: 'image/jpeg',
  destination: '/workspace/DESserver/api/uploads',
  filename: '1552621368054-v073bbyg.jpeg',
  path: '/workspace/DESserver/api/uploads/1552621368054-v073bbyg.jpeg',
  size: 8052 } 'file1212121'
[2019-03-15 11:42:48.216] [INFO] console - null
[2019-03-15 11:42:48.217] [INFO] http - ::ffff:127.0.0.1 - - "POST /file/upload HTTP/1.1" 200 286 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 11:43:05.408] [ERROR] http - ::1 - - "GET /1552613323217-kq2g0lak.jpeg HTTP/1.1" 404 - "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 11:43:46.832] [ERROR] http - ::1 - - "GET /1552613323217-kq2g0lak.jpeg HTTP/1.1" 404 - "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 11:43:52.759] [INFO] console - { fieldname: 'file',
  originalname: 'logo.jpg',
  encoding: '7bit',
  mimetype: 'image/jpeg',
  destination: '/workspace/DESserver/api/uploads',
  filename: '1552621432758-mmgfka1e.jpeg',
  path: '/workspace/DESserver/api/uploads/1552621432758-mmgfka1e.jpeg',
  size: 8052 } 'file1212121'
[2019-03-15 11:43:52.775] [INFO] console - null
[2019-03-15 11:43:52.776] [INFO] http - ::ffff:127.0.0.1 - - "POST /file/upload HTTP/1.1" 200 286 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 13:58:10.493] [INFO] console - redis server connect success!
[2019-03-15 13:58:10.497] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-15 13:58:39.980] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 13:58:40.005] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 125 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 13:58:40.121] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 13:58:40.123] [INFO] console - will check 1552631319997 1552629520123
[2019-03-15 13:58:40.123] [INFO] console - will update 1552631320123 1552629520123
[2019-03-15 13:58:40.138] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 717 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 14:00:57.777] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 14:00:57.780] [INFO] console - will check 1552631320123 1552629657780
[2019-03-15 14:00:57.780] [INFO] console - will update 1552631457780 1552629657780
[2019-03-15 14:00:57.918] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 14:03:49.655] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 14:03:49.665] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 125 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 14:03:49.848] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 14:03:49.849] [INFO] console - will check 1552631629661 1552629829849
[2019-03-15 14:03:49.849] [INFO] console - will update 1552631629849 1552629829849
[2019-03-15 14:03:49.854] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 717 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 14:04:32.403] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 14:04:32.403] [INFO] console - will check 1552631629849 1552629872403
[2019-03-15 14:04:32.404] [INFO] console - will update 1552631672403 1552629872403
[2019-03-15 14:04:32.407] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 14:04:43.588] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 14:04:43.590] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 125 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 14:04:43.679] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 14:04:43.679] [INFO] console - will check 1552631683589 1552629883679
[2019-03-15 14:04:43.680] [INFO] console - will update 1552631683679 1552629883679
[2019-03-15 14:04:43.720] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 14:08:31.902] [INFO] console - redis server connect success!
[2019-03-15 14:08:31.904] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-15 14:08:35.146] [INFO] console - redis server connect success!
[2019-03-15 14:08:35.148] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-15 14:09:50.713] [INFO] console - redis server connect success!
[2019-03-15 14:09:50.714] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-15 14:09:55.333] [INFO] console - redis server connect success!
[2019-03-15 14:09:55.334] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-15 14:10:05.723] [INFO] console - redis server connect success!
[2019-03-15 14:10:05.725] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-15 14:45:48.370] [INFO] console - redis server connect success!
[2019-03-15 14:45:48.371] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-15 14:46:00.060] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 14:46:00.063] [INFO] console - will check 1552631683679 1552632360063
[2019-03-15 14:46:00.072] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 71 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 14:46:01.962] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 14:46:01.989] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 125 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 14:46:02.092] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 14:46:02.094] [INFO] console - will check 1552634161980 1552632362094
[2019-03-15 14:46:02.094] [INFO] console - will update 1552634162094 1552632362094
[2019-03-15 14:46:02.100] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 717 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 14:46:04.706] [ERROR] http - ::1 - - "GET /1552613323217-kq2g0lak.jpeg HTTP/1.1" 404 - "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 14:46:23.424] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 14:46:23.441] [INFO] console - { _id: 5c50094c99d8808eaeaf39b1 } 'userUpdate'
[2019-03-15 14:46:23.470] [INFO] http - undefined - - "POST /file/uploadAvatar HTTP/1.1" 200 - "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 14:47:58.265] [INFO] console - redis server connect success!
[2019-03-15 14:47:58.266] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-15 14:48:12.658] [INFO] http - ::ffff:127.0.0.1 - - "POST /file/uploadAvatar HTTP/1.1" 200 49 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 14:48:59.586] [INFO] console - redis server connect success!
[2019-03-15 14:48:59.587] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-15 14:49:12.524] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 14:49:12.548] [INFO] console - { _id: 5c50094c99d8808eaeaf39b1,
  avatar: '1552632383419-lkly1ar.jpeg' } 'userUpdate'
[2019-03-15 14:49:12.586] [INFO] http - undefined - - "POST /file/uploadAvatar HTTP/1.1" 200 - "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 14:53:47.189] [INFO] console - redis server connect success!
[2019-03-15 14:53:47.190] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-15 14:53:48.513] [ERROR] http - ::1 - - "GET /1552613323217-kq2g0lak.jpeg HTTP/1.1" 404 - "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 14:54:03.339] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 14:54:03.394] [INFO] console - { _id: 5c50094c99d8808eaeaf39b1,
  avatar: '1552632843330-bk44u7sl.jpeg' } 'userUpdate'
[2019-03-15 14:54:03.407] [ERROR] console - API ERROR:   [0m[97m[41mError[0m[90m:[0m[37m [0m[97m{}[0m
[0m ReferenceError: code is not defined
    at _callee$ (/workspace/DESserver/api/actions/api/file/uploadAvatar.js:34:11)
    at tryCatch (/workspace/DESserver/node_modules/regenerator-runtime/runtime.js:62:40)
    at Generator.invoke [as _invoke] (/workspace/DESserver/node_modules/regenerator-runtime/runtime.js:296:22)
    at Generator.prototype.(anonymous function) [as next] (/workspace/DESserver/node_modules/regenerator-runtime/runtime.js:114:21)
    at step (/workspace/DESserver/node_modules/babel-runtime/helpers/asyncToGenerator.js:17:30)
    at /workspace/DESserver/node_modules/babel-runtime/helpers/asyncToGenerator.js:28:13
    at <anonymous>
    at process._tickCallback (internal/process/next_tick.js:188:7)
[2019-03-15 14:54:03.413] [INFO] http - ::ffff:127.0.0.1 - - "POST /file/uploadAvatar HTTP/1.1" 200 58 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 14:54:29.502] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 14:54:29.513] [INFO] console - { _id: 5c50094c99d8808eaeaf39b1,
  avatar: '1552632869501-uxvh5bdo.jpeg' } 'userUpdate'
[2019-03-15 14:54:29.516] [ERROR] console - API ERROR:   [0m[97m[41mError[0m[90m:[0m[37m [0m[97m{}[0m
[0m ReferenceError: code is not defined
    at _callee$ (/workspace/DESserver/api/actions/api/file/uploadAvatar.js:34:11)
    at tryCatch (/workspace/DESserver/node_modules/regenerator-runtime/runtime.js:62:40)
    at Generator.invoke [as _invoke] (/workspace/DESserver/node_modules/regenerator-runtime/runtime.js:296:22)
    at Generator.prototype.(anonymous function) [as next] (/workspace/DESserver/node_modules/regenerator-runtime/runtime.js:114:21)
    at step (/workspace/DESserver/node_modules/babel-runtime/helpers/asyncToGenerator.js:17:30)
    at /workspace/DESserver/node_modules/babel-runtime/helpers/asyncToGenerator.js:28:13
    at <anonymous>
    at process._tickCallback (internal/process/next_tick.js:188:7)
[2019-03-15 14:54:29.518] [INFO] http - ::ffff:127.0.0.1 - - "POST /file/uploadAvatar HTTP/1.1" 200 58 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 14:54:54.218] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 14:54:54.230] [INFO] console - { _id: 5c50094c99d8808eaeaf39b1,
  avatar: '1552632894212-m6ylw2md.jpeg' } 'userUpdate'
[2019-03-15 14:54:54.234] [ERROR] console - API ERROR:   [0m[97m[41mError[0m[90m:[0m[37m [0m[97m{}[0m
[0m ReferenceError: code is not defined
    at _callee$ (/workspace/DESserver/api/actions/api/file/uploadAvatar.js:34:11)
    at tryCatch (/workspace/DESserver/node_modules/regenerator-runtime/runtime.js:62:40)
    at Generator.invoke [as _invoke] (/workspace/DESserver/node_modules/regenerator-runtime/runtime.js:296:22)
    at Generator.prototype.(anonymous function) [as next] (/workspace/DESserver/node_modules/regenerator-runtime/runtime.js:114:21)
    at step (/workspace/DESserver/node_modules/babel-runtime/helpers/asyncToGenerator.js:17:30)
    at /workspace/DESserver/node_modules/babel-runtime/helpers/asyncToGenerator.js:28:13
    at <anonymous>
    at process._tickCallback (internal/process/next_tick.js:188:7)
[2019-03-15 14:54:54.237] [INFO] http - ::ffff:127.0.0.1 - - "POST /file/uploadAvatar HTTP/1.1" 200 58 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 14:55:18.031] [INFO] console - redis server connect success!
[2019-03-15 14:55:18.033] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-15 14:55:25.416] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 14:55:25.483] [INFO] console - { _id: 5c50094c99d8808eaeaf39b1,
  avatar: '1552632925411-7n13qkp.jpeg' } 'userUpdate'
[2019-03-15 14:55:25.508] [INFO] http - ::ffff:127.0.0.1 - - "POST /file/uploadAvatar HTTP/1.1" 200 93 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 14:55:53.979] [INFO] http - ::1 - - "GET /1552632925411-7n13qkp.jpeg HTTP/1.1" 200 8052 "" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 14:55:54.024] [ERROR] http - ::1 - - "GET /favicon.ico HTTP/1.1" 404 - "http://localhost:3060/1552632925411-7n13qkp.jpeg" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 14:56:04.183] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 14:56:04.195] [INFO] console - { _id: 5c50094c99d8808eaeaf39b1,
  avatar: '1552632964180-29vw7lws.jpeg' } 'userUpdate'
[2019-03-15 14:56:04.197] [INFO] http - ::ffff:127.0.0.1 - - "POST /file/uploadAvatar HTTP/1.1" 200 94 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 14:56:22.746] [INFO] http - ::1 - - "GET /1552632964180-29vw7lws.jpeg HTTP/1.1" 200 127803 "" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 14:56:44.416] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 14:56:44.426] [INFO] console - { _id: 5c50094c99d8808eaeaf39b1,
  avatar: '1552633004414-opukaasj.jpeg' } 'userUpdate'
[2019-03-15 14:56:44.427] [INFO] http - ::ffff:127.0.0.1 - - "POST /file/uploadAvatar HTTP/1.1" 200 94 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 14:56:56.289] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 14:56:56.295] [INFO] console - { _id: 5c50094c99d8808eaeaf39b1,
  avatar: '1552633016285-w6kf4o6n.jpeg' } 'userUpdate'
[2019-03-15 14:56:56.296] [INFO] http - ::ffff:127.0.0.1 - - "POST /file/uploadAvatar HTTP/1.1" 200 94 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 14:57:57.540] [INFO] console - redis server connect success!
[2019-03-15 14:57:57.542] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-15 14:58:02.747] [ERROR] http - ::1 - - "GET /1552613323217-kq2g0lak.jpeg HTTP/1.1" 404 - "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 14:58:11.358] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 14:58:11.381] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 125 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 14:58:11.488] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 14:58:11.490] [INFO] console - will check 1552634891373 1552633091490
[2019-03-15 14:58:11.491] [INFO] console - will update 1552634891490 1552633091490
[2019-03-15 14:58:11.508] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 14:58:21.513] [ERROR] http - ::1 - - "GET /1552613323217-kq2g0lak.jpeg HTTP/1.1" 404 - "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 14:58:44.810] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 14:58:44.840] [INFO] console - old avatar { _id: 5c50094c99d8808eaeaf39b1,
  avatar: '1552633016285-w6kf4o6n.jpeg' }
[2019-03-15 14:58:44.845] [INFO] console - { _id: 5c50094c99d8808eaeaf39b1,
  avatar: '1552633124805-8zxsehu.jpeg' } 'userUpdate'
[2019-03-15 14:58:44.847] [INFO] http - ::ffff:127.0.0.1 - - "POST /file/uploadAvatar HTTP/1.1" 200 93 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 15:01:10.121] [INFO] console - redis server connect success!
[2019-03-15 15:01:10.122] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-15 15:01:41.659] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 15:01:41.699] [INFO] console - old avatar { _id: 5c50094c99d8808eaeaf39b1,
  avatar: '1552633124805-8zxsehu.jpeg' }
[2019-03-15 15:01:41.726] [ERROR] console - API ERROR:   [0m[97m[41mError[0m[90m:[0m[37m [0m[97m{"message":"Cast to ObjectId failed for value \"1552633124805-8zxsehu.jpeg\" at path \"_id\"","name":"CastError","kind":"ObjectId","value":"1552633124805-8zxsehu.jpeg","[0m  [0m[97mpath":"_id"}[0m
[0m { CastError: Cast to ObjectId failed for value "1552633124805-8zxsehu.jpeg" at path "_id"
    at new CastError (/workspace/DESserver/node_modules/mongoose/lib/error/cast.js:19:11)
    at ObjectId.cast (/workspace/DESserver/node_modules/mongoose/lib/schema/objectid.js:147:13)
    at ObjectId.castForQuery (/workspace/DESserver/node_modules/mongoose/lib/schema/objectid.js:187:15)
    at cast (/workspace/DESserver/node_modules/mongoose/lib/cast.js:182:32)
    at model.Query.Query.cast (/workspace/DESserver/node_modules/mongoose/lib/query.js:2650:10)
    at model.Query.Query.find (/workspace/DESserver/node_modules/mongoose/lib/query.js:1130:10)
    at /workspace/DESserver/node_modules/mongoose/lib/query.js:2227:21
    at new Promise (<anonymous>)
    at model.Query.exec (/workspace/DESserver/node_modules/mongoose/lib/query.js:2220:10)
    at model.Query.Query.then (/workspace/DESserver/node_modules/mongoose/lib/query.js:2250:15)
    at process._tickCallback (internal/process/next_tick.js:188:7)
  message: 'Cast to ObjectId failed for value "1552633124805-8zxsehu.jpeg" at path "_id"',
  name: 'CastError',
  kind: 'ObjectId',
  value: '1552633124805-8zxsehu.jpeg',
  path: '_id',
  reason: undefined }
[2019-03-15 15:01:41.737] [INFO] http - ::ffff:127.0.0.1 - - "POST /file/uploadAvatar HTTP/1.1" 200 58 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 15:07:29.399] [ERROR] http - ::1 - - "GET /1552613323217-kq2g0lak.jpeg HTTP/1.1" 404 - "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 15:07:49.407] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 15:07:49.416] [INFO] console - old avatar { _id: 5c50094c99d8808eaeaf39b1 }
[2019-03-15 15:07:49.430] [INFO] console - { _id: 5c50094c99d8808eaeaf39b1,
  avatar: '5c8b4f45efccf75abcb84f1f' } 'userUpdate'
[2019-03-15 15:07:49.432] [INFO] http - ::ffff:127.0.0.1 - - "POST /file/uploadAvatar HTTP/1.1" 200 91 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 15:08:06.187] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 15:08:06.200] [INFO] console - old avatar { _id: 5c50094c99d8808eaeaf39b1,
  avatar: '5c8b4f45efccf75abcb84f1f' }
[2019-03-15 15:08:06.203] [INFO] console - { _id: 5c50094c99d8808eaeaf39b1,
  avatar: '5c8b4f56efccf75abcb84f20' } 'userUpdate'
[2019-03-15 15:08:06.204] [INFO] http - ::ffff:127.0.0.1 - - "POST /file/uploadAvatar HTTP/1.1" 200 91 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 15:09:41.931] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 15:09:41.938] [INFO] console - old avatar { _id: 5c50094c99d8808eaeaf39b1,
  avatar: '5c8b4f56efccf75abcb84f20' }
[2019-03-15 15:09:41.943] [INFO] console - { _id: 5c50094c99d8808eaeaf39b1,
  avatar: '5c8b4fb5efccf75abcb84f21' } 'userUpdate'
[2019-03-15 15:09:41.944] [INFO] http - ::ffff:127.0.0.1 - - "POST /file/uploadAvatar HTTP/1.1" 200 91 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 15:13:42.376] [INFO] console - redis server connect success!
[2019-03-15 15:13:42.378] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-15 15:16:24.965] [INFO] console - redis server connect success!
[2019-03-15 15:16:24.967] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-15 15:16:51.568] [INFO] console - redis server connect success!
[2019-03-15 15:16:51.570] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-15 15:17:24.744] [INFO] console - redis server connect success!
[2019-03-15 15:17:24.745] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-15 15:17:41.590] [ERROR] http - ::1 - - "GET /1552613323217-kq2g0lak.jpeg HTTP/1.1" 404 - "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 15:18:00.514] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 15:18:00.549] [INFO] console - { __v: 0,
  name: '1552634280505-gnhaopdm.jpeg',
  path: '/workspace/DESserver/api/uploads/1552634280505-gnhaopdm.jpeg',
  size: 8052,
  type: 'image/jpeg',
  original_name: 'logo.jpg',
  _id: 5c8b51a86a56143abd164e59,
  create_time: 2019-03-15T07:18:00.520Z,
  deleted: false } 'objobjobjobj'
[2019-03-15 15:18:00.561] [INFO] console - old avatar { _id: 5c50094c99d8808eaeaf39b1,
  avatar: '5c8b4fb5efccf75abcb84f21' }
[2019-03-15 15:18:00.571] [INFO] console - { _id: 5c50094c99d8808eaeaf39b1,
  avatar: '5c8b51a86a56143abd164e59' } 'userUpdate'
[2019-03-15 15:18:00.574] [INFO] http - ::ffff:127.0.0.1 - - "POST /file/uploadAvatar HTTP/1.1" 200 91 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 15:19:00.493] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 15:19:00.500] [INFO] console - { __v: 0,
  name: '1552634340487-df5i2sqf.jpeg',
  path: '/workspace/DESserver/api/uploads/1552634340487-df5i2sqf.jpeg',
  size: 127803,
  type: 'image/jpeg',
  original_name: 'md.jpg',
  _id: 5c8b51e46a56143abd164e5a,
  create_time: 2019-03-15T07:19:00.494Z,
  deleted: false } 'objobjobjobj'
[2019-03-15 15:19:00.502] [INFO] console - old avatar { _id: 5c50094c99d8808eaeaf39b1,
  avatar: '5c8b51a86a56143abd164e59' }
[2019-03-15 15:19:00.509] [INFO] console - { _id: 5c50094c99d8808eaeaf39b1,
  avatar: '5c8b51e46a56143abd164e5a' } 'userUpdate'
[2019-03-15 15:19:00.517] [INFO] http - ::ffff:127.0.0.1 - - "POST /file/uploadAvatar HTTP/1.1" 200 91 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 15:21:13.393] [INFO] console - redis server connect success!
[2019-03-15 15:21:13.395] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-15 15:23:52.344] [INFO] console - redis server connect success!
[2019-03-15 15:23:52.348] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-15 15:23:53.860] [ERROR] http - ::1 - - "GET /1552613323217-kq2g0lak.jpeg HTTP/1.1" 404 - "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 15:24:03.840] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 15:24:03.889] [INFO] console - { __v: 0,
  name: '1552634643830-qqtfeai.jpeg',
  path: '/workspace/DESserver/api/uploads/1552634643830-qqtfeai.jpeg',
  size: 8052,
  type: 'image/jpeg',
  original_name: 'logo.jpg',
  _id: 5c8b531357f9157ebd36963d,
  create_time: 2019-03-15T07:24:03.845Z,
  deleted: false } 'objobjobjobj'
[2019-03-15 15:24:03.910] [INFO] console - old user { _id: 5c50094c99d8808eaeaf39b1,
  avatar: '5c8b51e46a56143abd164e5a' }
[2019-03-15 15:24:03.911] [INFO] console - old avatar { _id: 5c8b51e46a56143abd164e5a,
  name: '1552634340487-df5i2sqf.jpeg',
  path: '/workspace/DESserver/api/uploads/1552634340487-df5i2sqf.jpeg' }
[2019-03-15 15:24:03.922] [INFO] console - { _id: 5c50094c99d8808eaeaf39b1,
  avatar: '5c8b531357f9157ebd36963d' } 'userUpdate'
[2019-03-15 15:24:03.935] [INFO] http - ::ffff:127.0.0.1 - - "POST /file/uploadAvatar HTTP/1.1" 200 91 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 15:25:17.634] [INFO] console - redis server connect success!
[2019-03-15 15:25:17.635] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-15 15:25:51.610] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 15:25:51.647] [INFO] console - { __v: 0,
  name: '1552634751604-t7mtrhas.jpeg',
  path: '/workspace/DESserver/api/uploads/1552634751604-t7mtrhas.jpeg',
  size: 8052,
  type: 'image/jpeg',
  original_name: 'logo.jpg',
  _id: 5c8b537f8a55d090bdd9209f,
  create_time: 2019-03-15T07:25:51.615Z,
  deleted: false } 'objobjobjobj'
[2019-03-15 15:25:51.663] [INFO] console - old user { _id: 5c50094c99d8808eaeaf39b1,
  avatar: '5c8b531357f9157ebd36963d' }
[2019-03-15 15:25:51.664] [INFO] console - old avatar null
[2019-03-15 15:25:51.695] [ERROR] console - API ERROR:   [0m[97m[41mError[0m[90m:[0m[37m [0m[97m{}[0m
[0m TypeError: Cannot read property 'path' of null
    at _callee$ (/workspace/DESserver/api/actions/api/file/uploadAvatar.js:32:28)
    at tryCatch (/workspace/DESserver/node_modules/regenerator-runtime/runtime.js:62:40)
    at Generator.invoke [as _invoke] (/workspace/DESserver/node_modules/regenerator-runtime/runtime.js:296:22)
    at Generator.prototype.(anonymous function) [as next] (/workspace/DESserver/node_modules/regenerator-runtime/runtime.js:114:21)
    at step (/workspace/DESserver/node_modules/babel-runtime/helpers/asyncToGenerator.js:17:30)
    at /workspace/DESserver/node_modules/babel-runtime/helpers/asyncToGenerator.js:28:13
    at <anonymous>
[2019-03-15 15:25:51.706] [INFO] http - ::ffff:127.0.0.1 - - "POST /file/uploadAvatar HTTP/1.1" 200 58 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 15:26:26.681] [INFO] console - redis server connect success!
[2019-03-15 15:26:26.682] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-15 15:26:49.695] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 15:26:49.722] [INFO] console - { __v: 0,
  name: '1552634809687-x5tihf0p.jpeg',
  path: '/workspace/DESserver/api/uploads/1552634809687-x5tihf0p.jpeg',
  size: 8052,
  type: 'image/jpeg',
  original_name: 'logo.jpg',
  _id: 5c8b53b9edce05aabdc1df0d,
  create_time: 2019-03-15T07:26:49.698Z,
  deleted: false } 'objobjobjobj'
[2019-03-15 15:26:49.737] [INFO] console - old user { _id: 5c50094c99d8808eaeaf39b1,
  avatar: '5c8b531357f9157ebd36963d' }
[2019-03-15 15:26:49.737] [INFO] console - old avatar null
[2019-03-15 15:26:49.749] [INFO] console - { _id: 5c50094c99d8808eaeaf39b1,
  avatar: '5c8b53b9edce05aabdc1df0d' } 'userUpdate'
[2019-03-15 15:26:49.773] [INFO] http - ::ffff:127.0.0.1 - - "POST /file/uploadAvatar HTTP/1.1" 200 91 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 15:27:05.674] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 15:27:05.680] [INFO] console - { __v: 0,
  name: '1552634825670-6or0u2w8.jpeg',
  path: '/workspace/DESserver/api/uploads/1552634825670-6or0u2w8.jpeg',
  size: 127803,
  type: 'image/jpeg',
  original_name: 'md.jpg',
  _id: 5c8b53c9edce05aabdc1df0e,
  create_time: 2019-03-15T07:27:05.674Z,
  deleted: false } 'objobjobjobj'
[2019-03-15 15:27:05.684] [INFO] console - old user { _id: 5c50094c99d8808eaeaf39b1,
  avatar: '5c8b53b9edce05aabdc1df0d' }
[2019-03-15 15:27:05.685] [INFO] console - old avatar { _id: 5c8b53b9edce05aabdc1df0d,
  name: '1552634809687-x5tihf0p.jpeg',
  path: '/workspace/DESserver/api/uploads/1552634809687-x5tihf0p.jpeg' }
[2019-03-15 15:27:05.693] [INFO] console - { _id: 5c50094c99d8808eaeaf39b1,
  avatar: '5c8b53c9edce05aabdc1df0e' } 'userUpdate'
[2019-03-15 15:27:05.701] [INFO] http - ::ffff:127.0.0.1 - - "POST /file/uploadAvatar HTTP/1.1" 200 91 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 15:27:17.983] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 15:27:17.994] [INFO] console - { __v: 0,
  name: '1552634837981-3doe2nq3.jpeg',
  path: '/workspace/DESserver/api/uploads/1552634837981-3doe2nq3.jpeg',
  size: 8052,
  type: 'image/jpeg',
  original_name: 'logo.jpg',
  _id: 5c8b53d5edce05aabdc1df0f,
  create_time: 2019-03-15T07:27:17.984Z,
  deleted: false } 'objobjobjobj'
[2019-03-15 15:27:18.003] [INFO] console - old user { _id: 5c50094c99d8808eaeaf39b1,
  avatar: '5c8b53c9edce05aabdc1df0e' }
[2019-03-15 15:27:18.003] [INFO] console - old avatar { _id: 5c8b53c9edce05aabdc1df0e,
  name: '1552634825670-6or0u2w8.jpeg',
  path: '/workspace/DESserver/api/uploads/1552634825670-6or0u2w8.jpeg' }
[2019-03-15 15:27:18.007] [INFO] console - { _id: 5c50094c99d8808eaeaf39b1,
  avatar: '5c8b53d5edce05aabdc1df0f' } 'userUpdate'
[2019-03-15 15:27:18.009] [INFO] http - ::ffff:127.0.0.1 - - "POST /file/uploadAvatar HTTP/1.1" 200 91 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 15:27:35.247] [INFO] console - redis server connect success!
[2019-03-15 15:27:35.249] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-15 15:29:53.044] [INFO] console - redis server connect success!
[2019-03-15 15:29:53.046] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-15 15:30:29.896] [INFO] console - redis server connect success!
[2019-03-15 15:30:29.898] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-15 15:31:00.165] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 15:31:00.192] [INFO] console - { __v: 0,
  name: '1552635060159-qd20bz.jpeg',
  path: '/workspace/DESserver/api/uploads/1552635060159-qd20bz.jpeg',
  size: 8052,
  type: 'image/jpeg',
  original_name: 'logo.jpg',
  _id: 5c8b54b49989a1f1bda7b5b2,
  create_time: 2019-03-15T07:31:00.169Z,
  deleted: false } 'objobjobjobj'
[2019-03-15 15:31:00.220] [INFO] http - ::ffff:127.0.0.1 - - "POST /file/uploadAvatar HTTP/1.1" 200 57 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 15:31:39.821] [ERROR] http - ::1 - - "GET /1552613323217-kq2g0lak.jpeg HTTP/1.1" 404 - "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 15:31:48.009] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 15:31:48.015] [INFO] console - { __v: 0,
  name: '1552635108007-b6eei2h.jpeg',
  path: '/workspace/DESserver/api/uploads/1552635108007-b6eei2h.jpeg',
  size: 8052,
  type: 'image/jpeg',
  original_name: 'logo.jpg',
  _id: 5c8b54e49989a1f1bda7b5b3,
  create_time: 2019-03-15T07:31:48.010Z,
  deleted: false } 'objobjobjobj'
[2019-03-15 15:31:48.027] [INFO] http - ::ffff:127.0.0.1 - - "POST /file/uploadAvatar HTTP/1.1" 200 58 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 15:58:42.826] [ERROR] http - ::1 - - "GET /1552613323217-kq2g0lak.jpeg HTTP/1.1" 404 - "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 15:58:52.779] [ERROR] http - ::1 - - "GET /1552613323217-kq2g0lak.jpeg HTTP/1.1" 404 - "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 15:58:59.198] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 15:58:59.209] [INFO] console - { __v: 0,
  name: '1552636739193-9hgwb1ag.jpeg',
  path: '/workspace/DESserver/api/uploads/1552636739193-9hgwb1ag.jpeg',
  size: 8052,
  type: 'image/jpeg',
  original_name: 'logo.jpg',
  _id: 5c8b5b439989a1f1bda7b5b4,
  create_time: 2019-03-15T07:58:59.199Z,
  deleted: false } 'objobjobjobj'
[2019-03-15 15:58:59.221] [INFO] http - ::ffff:127.0.0.1 - - "POST /file/uploadAvatar HTTP/1.1" 200 59 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 15:59:25.599] [ERROR] http - ::1 - - "GET /1552613323217-kq2g0lak.jpeg HTTP/1.1" 404 - "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 15:59:33.397] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 15:59:33.402] [INFO] console - { __v: 0,
  name: '1552636773395-ifpu78it.jpeg',
  path: '/workspace/DESserver/api/uploads/1552636773395-ifpu78it.jpeg',
  size: 8052,
  type: 'image/jpeg',
  original_name: 'logo.jpg',
  _id: 5c8b5b659989a1f1bda7b5b5,
  create_time: 2019-03-15T07:59:33.398Z,
  deleted: false } 'objobjobjobj'
[2019-03-15 15:59:33.411] [INFO] http - ::ffff:127.0.0.1 - - "POST /file/uploadAvatar HTTP/1.1" 200 59 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 16:00:23.504] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 16:00:23.508] [INFO] console - { __v: 0,
  name: '1552636823503-557a7u09.jpeg',
  path: '/workspace/DESserver/api/uploads/1552636823503-557a7u09.jpeg',
  size: 8052,
  type: 'image/jpeg',
  original_name: 'logo.jpg',
  _id: 5c8b5b979989a1f1bda7b5b6,
  create_time: 2019-03-15T08:00:23.505Z,
  deleted: false } 'objobjobjobj'
[2019-03-15 16:00:23.530] [INFO] http - ::ffff:127.0.0.1 - - "POST /file/uploadAvatar HTTP/1.1" 200 59 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 16:01:02.017] [INFO] console - redis server connect success!
[2019-03-15 16:01:02.020] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-15 16:01:08.801] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 16:01:08.820] [INFO] console - { __v: 0,
  name: '1552636868794-poerpr4g.jpeg',
  path: '/workspace/DESserver/api/uploads/1552636868794-poerpr4g.jpeg',
  size: 8052,
  type: 'image/jpeg',
  original_name: 'logo.jpg',
  _id: 5c8b5bc496849baebe3b1ae7,
  create_time: 2019-03-15T08:01:08.803Z,
  deleted: false } 'objobjobjobj'
[2019-03-15 16:01:08.848] [INFO] http - ::ffff:127.0.0.1 - - "POST /file/uploadAvatar HTTP/1.1" 200 129 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 16:03:57.489] [INFO] console - redis server connect success!
[2019-03-15 16:03:57.491] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-15 16:04:09.527] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 16:04:09.530] [INFO] console - { fieldname: 'file',
  originalname: 'logo.jpg',
  encoding: '7bit',
  mimetype: 'image/jpeg',
  destination: '/workspace/DESserver/api/uploads',
  filename: '1552637049518-mxg9l2g.jpeg',
  path: '/workspace/DESserver/api/uploads/1552637049518-mxg9l2g.jpeg',
  size: 8052 } 'filefilefile'
[2019-03-15 16:04:09.558] [INFO] console - { __v: 0,
  name: '1552637049518-mxg9l2g.jpeg',
  path: '/workspace/DESserver/api/uploads/1552637049518-mxg9l2g.jpeg',
  size: 8052,
  type: 'image/jpeg',
  original_name: 'logo.jpg',
  _id: 5c8b5c79cf54a7c5beb10e06,
  create_time: 2019-03-15T08:04:09.531Z,
  deleted: false } 'objobjobjobj'
[2019-03-15 16:04:09.587] [INFO] http - ::ffff:127.0.0.1 - - "POST /file/uploadAvatar HTTP/1.1" 200 127 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 16:13:50.792] [INFO] console - redis server connect success!
[2019-03-15 16:13:50.794] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-15 16:14:32.136] [INFO] console - redis server connect success!
[2019-03-15 16:14:32.138] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-15 16:18:07.671] [INFO] console - redis server connect success!
[2019-03-15 16:18:07.672] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-15 16:18:45.299] [ERROR] http - undefined - - "GET /undefined HTTP/1.1" 404 - "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 16:18:51.164] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 16:18:51.168] [INFO] console - { fieldname: 'file',
  originalname: 'logo.jpg',
  encoding: '7bit',
  mimetype: 'image/jpeg',
  destination: '/workspace/DESserver/api/uploads',
  filename: '1552637931155-59t3l99.jpeg',
  path: '/workspace/DESserver/api/uploads/1552637931155-59t3l99.jpeg',
  size: 8052 } 'filefilefile'
[2019-03-15 16:18:51.199] [INFO] console - { __v: 0,
  name: '1552637931155-59t3l99.jpeg',
  path: '/workspace/DESserver/api/uploads/1552637931155-59t3l99.jpeg',
  size: 8052,
  type: 'image/jpeg',
  original_name: 'logo.jpg',
  _id: 5c8b5feb7ca96d02bf02d935,
  create_time: 2019-03-15T08:18:51.169Z,
  deleted: false } 'objobjobjobj'
[2019-03-15 16:18:51.225] [INFO] http - ::ffff:127.0.0.1 - - "POST /file/uploadAvatar HTTP/1.1" 200 127 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 16:18:51.260] [INFO] http - undefined - - "GET /1552637931155-59t3l99.jpeg HTTP/1.1" 200 8052 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 16:20:32.103] [ERROR] http - undefined - - "GET /undefined HTTP/1.1" 404 - "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 16:20:38.166] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 16:20:38.167] [INFO] console - { fieldname: 'file',
  originalname: '461551230460_.pic.jpg',
  encoding: '7bit',
  mimetype: 'image/jpeg',
  destination: '/workspace/DESserver/api/uploads',
  filename: '1552638038161-ef9k8ddhn.jpeg',
  path: '/workspace/DESserver/api/uploads/1552638038161-ef9k8ddhn.jpeg',
  size: 95785 } 'filefilefile'
[2019-03-15 16:20:38.182] [INFO] console - { __v: 0,
  name: '1552638038161-ef9k8ddhn.jpeg',
  path: '/workspace/DESserver/api/uploads/1552638038161-ef9k8ddhn.jpeg',
  size: 95785,
  type: 'image/jpeg',
  original_name: '461551230460_.pic.jpg',
  _id: 5c8b60567ca96d02bf02d936,
  create_time: 2019-03-15T08:20:38.174Z,
  deleted: false } 'objobjobjobj'
[2019-03-15 16:20:38.191] [INFO] http - ::ffff:127.0.0.1 - - "POST /file/uploadAvatar HTTP/1.1" 200 131 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 16:20:38.217] [INFO] http - undefined - - "GET /1552638038161-ef9k8ddhn.jpeg HTTP/1.1" 200 95785 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 16:21:17.453] [INFO] console - redis server connect success!
[2019-03-15 16:21:17.455] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-15 16:21:36.402] [INFO] console - redis server connect success!
[2019-03-15 16:21:36.404] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-15 16:21:50.197] [INFO] console - redis server connect success!
[2019-03-15 16:21:50.198] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-15 16:21:52.236] [INFO] console - redis server connect success!
[2019-03-15 16:21:52.237] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-15 16:21:59.359] [INFO] console - redis server connect success!
[2019-03-15 16:21:59.361] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-15 16:23:07.597] [INFO] console - redis server connect success!
[2019-03-15 16:23:07.598] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-15 16:24:12.266] [INFO] console - redis server connect success!
[2019-03-15 16:24:12.267] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-15 16:24:19.725] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 16:24:19.756] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 165 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 16:24:19.896] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 16:24:19.899] [INFO] console - will check 1552640059746 1552638259899
[2019-03-15 16:24:19.899] [INFO] console - will update 1552640059899 1552638259899
[2019-03-15 16:24:19.918] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 16:25:45.836] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 16:25:45.837] [INFO] console - will check 1552640059899 1552638345837
[2019-03-15 16:25:45.837] [INFO] console - will update 1552640145837 1552638345837
[2019-03-15 16:25:45.849] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 16:26:15.050] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 16:26:15.051] [INFO] console - will check 1552640145837 1552638375051
[2019-03-15 16:26:15.051] [INFO] console - will update 1552640175051 1552638375051
[2019-03-15 16:26:15.054] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 16:26:23.145] [WARN] http - undefined - - "GET /1552638038161-ef9k8ddhn.jpeg HTTP/1.1" 304 - "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 16:27:49.714] [WARN] http - undefined - - "GET /1552638038161-ef9k8ddhn.jpeg HTTP/1.1" 304 - "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 16:27:56.483] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 16:27:56.487] [INFO] console - { fieldname: 'file',
  originalname: 'logo.jpg',
  encoding: '7bit',
  mimetype: 'image/jpeg',
  destination: '/workspace/DESserver/api/uploads',
  filename: '1552638476478-uj8hj0w.jpeg',
  path: '/workspace/DESserver/api/uploads/1552638476478-uj8hj0w.jpeg',
  size: 8052 } 'filefilefile'
[2019-03-15 16:27:56.520] [INFO] console - { __v: 0,
  name: '1552638476478-uj8hj0w.jpeg',
  path: '/workspace/DESserver/api/uploads/1552638476478-uj8hj0w.jpeg',
  size: 8052,
  type: 'image/jpeg',
  original_name: 'logo.jpg',
  _id: 5c8b620c4d81836fbf48f235,
  create_time: 2019-03-15T08:27:56.488Z,
  deleted: false } 'objobjobjobj'
[2019-03-15 16:27:56.536] [INFO] http - ::ffff:127.0.0.1 - - "POST /file/uploadAvatar HTTP/1.1" 200 58 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 16:27:56.573] [INFO] http - undefined - - "GET /1552638476478-uj8hj0w.jpeg HTTP/1.1" 200 8052 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 16:32:17.530] [ERROR] http - undefined - - "GET /1552638038161-ef9k8ddhn.jpeg HTTP/1.1" 404 - "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 16:32:48.627] [ERROR] http - undefined - - "GET /1552638038161-ef9k8ddhn.jpeg HTTP/1.1" 404 - "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 16:34:30.941] [ERROR] http - undefined - - "GET /1552638038161-ef9k8ddhn.jpeg HTTP/1.1" 404 - "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 16:34:32.098] [ERROR] http - undefined - - "GET /1552638038161-ef9k8ddhn.jpeg HTTP/1.1" 404 - "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 16:38:46.983] [ERROR] http - undefined - - "GET /1552638038161-ef9k8ddhn.jpeg HTTP/1.1" 404 - "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 16:39:22.102] [ERROR] http - undefined - - "GET /1552638038161-ef9k8ddhn.jpeg HTTP/1.1" 404 - "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 16:39:45.591] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 16:39:45.592] [INFO] console - { fieldname: 'file',
  originalname: 'md.jpg',
  encoding: '7bit',
  mimetype: 'image/jpeg',
  destination: '/workspace/DESserver/api/uploads',
  filename: '1552639185587-ypjkwia.jpeg',
  path: '/workspace/DESserver/api/uploads/1552639185587-ypjkwia.jpeg',
  size: 127803 } 'filefilefile'
[2019-03-15 16:39:45.604] [INFO] console - { __v: 0,
  name: '1552639185587-ypjkwia.jpeg',
  path: '/workspace/DESserver/api/uploads/1552639185587-ypjkwia.jpeg',
  size: 127803,
  type: 'image/jpeg',
  original_name: 'md.jpg',
  _id: 5c8b64d14d81836fbf48f236,
  create_time: 2019-03-15T08:39:45.593Z,
  deleted: false } 'objobjobjobj'
[2019-03-15 16:39:45.613] [INFO] http - ::ffff:127.0.0.1 - - "POST /file/uploadAvatar HTTP/1.1" 200 58 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 16:39:45.648] [INFO] http - undefined - - "GET /1552639185587-ypjkwia.jpeg HTTP/1.1" 200 127803 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 16:39:58.686] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 16:39:58.693] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 163 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 16:39:58.808] [INFO] http - undefined - - "GET /1552639185587-ypjkwia.jpeg HTTP/1.1" 200 127803 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 16:39:58.815] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 16:39:58.815] [INFO] console - will check 1552640998690 1552639198815
[2019-03-15 16:39:58.815] [INFO] console - will update 1552640998815 1552639198815
[2019-03-15 16:39:58.819] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 717 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 16:44:22.231] [WARN] http - undefined - - "GET /1552639185587-ypjkwia.jpeg HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 16:44:22.402] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 16:44:22.403] [INFO] console - will check 1552640998815 1552639462403
[2019-03-15 16:44:22.404] [INFO] console - will update 1552641262403 1552639462403
[2019-03-15 16:44:22.467] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 16:45:11.273] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 16:45:11.273] [INFO] console - will check 1552641262403 1552639511273
[2019-03-15 16:45:11.276] [INFO] console - will update 1552641311273 1552639511273
[2019-03-15 16:45:11.279] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 16:45:50.592] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 16:45:50.593] [INFO] console - will check 1552641311273 1552639550593
[2019-03-15 16:45:50.594] [INFO] console - will update 1552641350593 1552639550593
[2019-03-15 16:45:50.605] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 16:45:51.477] [WARN] http - undefined - - "GET /1552639185587-ypjkwia.jpeg HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 16:45:51.679] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 16:45:51.680] [INFO] console - will check 1552641350593 1552639551680
[2019-03-15 16:45:51.680] [INFO] console - will update 1552641351680 1552639551680
[2019-03-15 16:45:51.683] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 16:46:17.153] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 16:46:17.154] [INFO] console - will check 1552641351680 1552639577154
[2019-03-15 16:46:17.154] [INFO] console - will update 1552641377154 1552639577154
[2019-03-15 16:46:17.161] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 16:46:55.698] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 16:46:55.698] [INFO] console - will check 1552641377154 1552639615698
[2019-03-15 16:46:55.699] [INFO] console - will update 1552641415698 1552639615698
[2019-03-15 16:46:55.701] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 16:46:57.956] [WARN] http - undefined - - "GET /1552639185587-ypjkwia.jpeg HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 16:46:58.153] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 16:46:58.153] [INFO] console - will check 1552641415698 1552639618153
[2019-03-15 16:46:58.154] [INFO] console - will update 1552641418153 1552639618153
[2019-03-15 16:46:58.157] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 16:47:29.756] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 16:47:29.757] [INFO] console - will check 1552641418153 1552639649757
[2019-03-15 16:47:29.757] [INFO] console - will update 1552641449757 1552639649757
[2019-03-15 16:47:29.769] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 16:47:51.285] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 16:47:51.285] [INFO] console - will check 1552641449757 1552639671285
[2019-03-15 16:47:51.286] [INFO] console - will update 1552641471285 1552639671285
[2019-03-15 16:47:51.300] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 16:48:19.375] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 16:48:19.376] [INFO] console - will check 1552641471285 1552639699376
[2019-03-15 16:48:19.377] [INFO] console - will update 1552641499376 1552639699376
[2019-03-15 16:48:19.380] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 16:48:48.216] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 16:48:48.216] [INFO] console - will check 1552641499376 1552639728216
[2019-03-15 16:48:48.217] [INFO] console - will update 1552641528216 1552639728216
[2019-03-15 16:48:48.224] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 16:51:39.282] [WARN] http - undefined - - "GET /1552639185587-ypjkwia.jpeg HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 16:51:39.290] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 16:51:39.291] [INFO] console - will check 1552641528216 1552639899291
[2019-03-15 16:51:39.291] [INFO] console - will update 1552641699291 1552639899291
[2019-03-15 16:51:39.295] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 16:51:40.924] [WARN] http - undefined - - "GET /1552639185587-ypjkwia.jpeg HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 16:51:40.957] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 16:51:40.957] [INFO] console - will check 1552641699291 1552639900957
[2019-03-15 16:51:40.957] [INFO] console - will update 1552641700957 1552639900957
[2019-03-15 16:51:40.961] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 16:51:57.242] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 16:51:57.243] [INFO] console - will check 1552641700957 1552639917243
[2019-03-15 16:51:57.243] [INFO] console - will update 1552641717243 1552639917243
[2019-03-15 16:51:57.250] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 16:52:00.444] [INFO] http - undefined - - "GET /1552639185587-ypjkwia.jpeg HTTP/1.1" 200 127803 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 16:52:00.611] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 16:52:00.611] [INFO] console - will check 1552641717243 1552639920611
[2019-03-15 16:52:00.611] [INFO] console - will update 1552641720611 1552639920611
[2019-03-15 16:52:00.616] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 717 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 16:55:04.599] [WARN] http - undefined - - "GET /1552639185587-ypjkwia.jpeg HTTP/1.1" 304 - "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 16:58:48.805] [WARN] http - undefined - - "GET /1552639185587-ypjkwia.jpeg HTTP/1.1" 304 - "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 16:59:26.015] [INFO] http - undefined - - "GET /1552639185587-ypjkwia.jpeg HTTP/1.1" 200 127803 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 16:59:30.254] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 16:59:30.302] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 1149 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 17:01:20.883] [INFO] http - undefined - - "GET /1552639185587-ypjkwia.jpeg HTTP/1.1" 200 127803 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 17:01:34.605] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 17:01:34.627] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 1149 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 17:02:54.060] [WARN] http - undefined - - "GET /1552639185587-ypjkwia.jpeg HTTP/1.1" 304 - "http://localhost:9000/document/new" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 17:02:56.137] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 17:02:56.140] [INFO] console - will check 1552641720611 1552640576140
[2019-03-15 17:02:56.140] [INFO] console - will update 1552642376140 1552640576140
[2019-03-15 17:02:56.149] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 717 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 17:02:57.805] [WARN] http - undefined - - "GET /1552639185587-ypjkwia.jpeg HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 17:02:57.838] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 17:02:57.839] [INFO] console - will check 1552642376140 1552640577839
[2019-03-15 17:02:57.839] [INFO] console - will update 1552642377839 1552640577839
[2019-03-15 17:02:57.843] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 17:03:04.671] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 17:03:04.672] [INFO] console - { fieldname: 'file',
  originalname: 'logo.jpg',
  encoding: '7bit',
  mimetype: 'image/jpeg',
  destination: '/workspace/DESserver/api/uploads',
  filename: '1552640584670-a9g74bjs.jpeg',
  path: '/workspace/DESserver/api/uploads/1552640584670-a9g74bjs.jpeg',
  size: 8052 } 'filefilefile'
[2019-03-15 17:03:04.680] [INFO] console - { __v: 0,
  name: '1552640584670-a9g74bjs.jpeg',
  path: '/workspace/DESserver/api/uploads/1552640584670-a9g74bjs.jpeg',
  size: 8052,
  type: 'image/jpeg',
  original_name: 'logo.jpg',
  _id: 5c8b6a484d81836fbf48f237,
  create_time: 2019-03-15T09:03:04.673Z,
  deleted: false } 'objobjobjobj'
[2019-03-15 17:03:04.693] [INFO] http - ::ffff:127.0.0.1 - - "POST /file/uploadAvatar HTTP/1.1" 200 59 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 17:03:04.744] [INFO] http - undefined - - "GET /1552640584670-a9g74bjs.jpeg HTTP/1.1" 200 8052 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 17:04:48.005] [INFO] http - undefined - - "GET /1552640584670-a9g74bjs.jpeg HTTP/1.1" 200 8052 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 17:04:52.561] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 17:04:52.596] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 1149 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 17:05:00.568] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 17:05:00.569] [INFO] console - { fieldname: 'file',
  originalname: 'md.jpg',
  encoding: '7bit',
  mimetype: 'image/jpeg',
  destination: '/workspace/DESserver/api/uploads',
  filename: '1552640700566-0tinycgm.jpeg',
  path: '/workspace/DESserver/api/uploads/1552640700566-0tinycgm.jpeg',
  size: 127803 } 'filefilefile'
[2019-03-15 17:05:00.572] [INFO] console - { __v: 0,
  name: '1552640700566-0tinycgm.jpeg',
  path: '/workspace/DESserver/api/uploads/1552640700566-0tinycgm.jpeg',
  size: 127803,
  type: 'image/jpeg',
  original_name: 'md.jpg',
  _id: 5c8b6abc4d81836fbf48f238,
  create_time: 2019-03-15T09:05:00.569Z,
  deleted: false } 'objobjobjobj'
[2019-03-15 17:05:00.580] [INFO] http - ::ffff:127.0.0.1 - - "POST /file/uploadAvatar HTTP/1.1" 200 59 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 17:05:00.651] [INFO] http - undefined - - "GET /1552640700566-0tinycgm.jpeg HTTP/1.1" 200 127803 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 17:06:28.654] [INFO] http - undefined - - "GET /1552640700566-0tinycgm.jpeg HTTP/1.1" 200 127803 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 17:06:40.021] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 17:06:40.021] [INFO] console - { fieldname: 'file',
  originalname: 'logo.jpg',
  encoding: '7bit',
  mimetype: 'image/jpeg',
  destination: '/workspace/DESserver/api/uploads',
  filename: '1552640800017-1btl8fha.jpeg',
  path: '/workspace/DESserver/api/uploads/1552640800017-1btl8fha.jpeg',
  size: 8052 } 'filefilefile'
[2019-03-15 17:06:40.029] [INFO] console - { __v: 0,
  name: '1552640800017-1btl8fha.jpeg',
  path: '/workspace/DESserver/api/uploads/1552640800017-1btl8fha.jpeg',
  size: 8052,
  type: 'image/jpeg',
  original_name: 'logo.jpg',
  _id: 5c8b6b204d81836fbf48f239,
  create_time: 2019-03-15T09:06:40.023Z,
  deleted: false } 'objobjobjobj'
[2019-03-15 17:06:40.036] [INFO] http - ::ffff:127.0.0.1 - - "POST /file/uploadAvatar HTTP/1.1" 200 59 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 17:06:40.100] [INFO] http - undefined - - "GET /1552640800017-1btl8fha.jpeg HTTP/1.1" 200 8052 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 17:09:38.931] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 17:09:38.935] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 164 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 17:09:39.068] [WARN] http - undefined - - "GET /1552640800017-1btl8fha.jpeg HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 17:09:39.070] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 17:09:39.071] [INFO] console - will check 1552642778934 1552640979071
[2019-03-15 17:09:39.071] [INFO] console - will update 1552642779071 1552640979071
[2019-03-15 17:09:39.074] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 717 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 17:09:44.175] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 17:09:44.182] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 164 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 17:09:44.345] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 17:09:44.346] [INFO] console - will check 1552642784179 1552640984346
[2019-03-15 17:09:44.347] [INFO] console - will update 1552642784346 1552640984346
[2019-03-15 17:09:44.350] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 17:09:54.952] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 17:09:54.953] [INFO] console - { fieldname: 'file',
  originalname: 'md.jpg',
  encoding: '7bit',
  mimetype: 'image/jpeg',
  destination: '/workspace/DESserver/api/uploads',
  filename: '1552640994950-1ay9cd0e.jpeg',
  path: '/workspace/DESserver/api/uploads/1552640994950-1ay9cd0e.jpeg',
  size: 127803 } 'filefilefile'
[2019-03-15 17:09:54.956] [INFO] console - { __v: 0,
  name: '1552640994950-1ay9cd0e.jpeg',
  path: '/workspace/DESserver/api/uploads/1552640994950-1ay9cd0e.jpeg',
  size: 127803,
  type: 'image/jpeg',
  original_name: 'md.jpg',
  _id: 5c8b6be24d81836fbf48f23a,
  create_time: 2019-03-15T09:09:54.953Z,
  deleted: false } 'objobjobjobj'
[2019-03-15 17:09:54.965] [INFO] http - ::ffff:127.0.0.1 - - "POST /file/uploadAvatar HTTP/1.1" 200 59 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 17:09:55.028] [INFO] http - undefined - - "GET /1552640994950-1ay9cd0e.jpeg HTTP/1.1" 200 127803 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 17:10:01.743] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 17:10:01.749] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 164 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 17:10:01.886] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-15 17:10:01.887] [INFO] console - will check 1552642801747 1552641001887
[2019-03-15 17:10:01.887] [INFO] console - will update 1552642801887 1552641001887
[2019-03-15 17:10:01.894] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-15 17:15:59.906] [INFO] console - redis server connect success!
[2019-03-15 17:15:59.908] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-16 10:01:05.687] [INFO] console - redis server connect success!
[2019-03-16 10:01:05.689] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-16 10:01:08.083] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 10:01:08.127] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 164 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:01:08.258] [WARN] http - undefined - - "GET /1552640994950-1ay9cd0e.jpeg HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:01:08.270] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 10:01:08.272] [INFO] console - will check 1552703468115 1552701668272
[2019-03-16 10:01:08.272] [INFO] console - will update 1552703468272 1552701668272
[2019-03-16 10:01:08.281] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:01:20.647] [WARN] http - undefined - - "GET /1552640994950-1ay9cd0e.jpeg HTTP/1.1" 304 - "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:03:07.793] [WARN] http - undefined - - "GET /1552640994950-1ay9cd0e.jpeg HTTP/1.1" 304 - "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:03:08.730] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 10:03:08.738] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 164 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:03:08.886] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 10:03:08.886] [INFO] console - will check 1552703588735 1552701788886
[2019-03-16 10:03:08.886] [INFO] console - will update 1552703588886 1552701788886
[2019-03-16 10:03:08.892] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:03:54.357] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 10:03:54.357] [INFO] console - will check 1552703588886 1552701834357
[2019-03-16 10:03:54.358] [INFO] console - will update 1552703634357 1552701834357
[2019-03-16 10:03:54.366] [WARN] http - undefined - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:04:00.153] [INFO] console - will check 1552703634357 1552701840153
[2019-03-16 10:04:00.154] [INFO] console - will update 1552703640153 1552701840153
[2019-03-16 10:04:00.154] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 10:04:00.162] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c7e69804018ef371601e30a HTTP/1.1" 200 94157 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:04:11.621] [INFO] console - will check 1552703640153 1552701851621
[2019-03-16 10:04:11.622] [INFO] console - will update 1552703651621 1552701851621
[2019-03-16 10:04:11.622] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 10:04:11.625] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c7e68e94018ef371601e308 HTTP/1.1" 200 32007 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:04:34.626] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 10:04:34.664] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 1149 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:04:37.811] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 10:04:37.823] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/detail?_id=5c89cea221a8442480b2ce2e HTTP/1.1" 200 572 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:04:39.965] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 10:04:39.982] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:05:13.499] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 10:05:13.528] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:05:17.967] [WARN] http - undefined - - "GET /1552640994950-1ay9cd0e.jpeg HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:05:17.996] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 10:05:18.020] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:05:53.283] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 10:05:53.315] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:06:01.301] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 10:06:01.320] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:06:16.902] [WARN] http - undefined - - "GET /1552640994950-1ay9cd0e.jpeg HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:06:16.934] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 10:06:16.965] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:06:38.765] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 10:06:38.784] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:06:53.516] [WARN] http - undefined - - "GET /1552640994950-1ay9cd0e.jpeg HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:06:53.587] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 10:06:53.666] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:07:45.646] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 10:07:45.670] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:08:33.508] [WARN] http - undefined - - "GET /1552640994950-1ay9cd0e.jpeg HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:08:33.541] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 10:08:33.652] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:09:31.214] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 10:09:31.238] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:09:35.213] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 10:09:35.230] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:09:36.483] [WARN] http - undefined - - "GET /1552640994950-1ay9cd0e.jpeg HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:09:36.512] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 10:09:36.612] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:10:12.390] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 10:10:12.439] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:10:14.689] [WARN] http - undefined - - "GET /1552640994950-1ay9cd0e.jpeg HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:10:14.720] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 10:10:14.822] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:10:23.628] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 10:10:23.633] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/search?author=5c50094c99d8808eaeaf39b1&title=a HTTP/1.1" 200 79 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:10:26.660] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: { posts: [Array] }, key: undefined },
  { key: undefined } ] 'results'
[2019-03-16 10:10:26.675] [INFO] http - ::ffff:127.0.0.1 - - "POST /groups/update HTTP/1.1" 200 13 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:10:26.689] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 10:10:26.719] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:10:35.976] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 10:10:35.987] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:13:36.374] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 10:13:36.400] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:15:22.509] [WARN] http - undefined - - "GET /1552640994950-1ay9cd0e.jpeg HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:15:22.753] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 10:15:22.775] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:17:46.616] [WARN] http - undefined - - "GET /1552640994950-1ay9cd0e.jpeg HTTP/1.1" 304 - "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:18:42.502] [INFO] console - redis server connect success!
[2019-03-16 10:18:42.504] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-16 10:19:00.881] [INFO] console - redis server connect success!
[2019-03-16 10:19:00.883] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-16 10:22:34.848] [INFO] console - redis server connect success!
[2019-03-16 10:22:34.849] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-16 10:25:08.112] [INFO] console - redis server connect success!
[2019-03-16 10:25:08.114] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-16 10:25:14.315] [INFO] console - redis server connect success!
[2019-03-16 10:25:14.316] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-16 10:28:19.220] [WARN] http - undefined - - "GET /1552640994950-1ay9cd0e.jpeg HTTP/1.1" 304 - "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:28:22.349] [WARN] http - undefined - - "GET /1552640994950-1ay9cd0e.jpeg HTTP/1.1" 304 - "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:29:11.127] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 10:29:11.168] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:29:43.723] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 10:29:43.745] [ERROR] console - API ERROR:   [0m[97m[41mError[0m[90m:[0m[37m [0m[97m{}[0m
[0m TypeError: Signup.findOne(...).filter is not a function
    at _callee$ (/workspace/DESserver/api/actions/api/signup/update.js:14:5)
    at tryCatch (/workspace/DESserver/node_modules/regenerator-runtime/runtime.js:62:40)
    at Generator.invoke [as _invoke] (/workspace/DESserver/node_modules/regenerator-runtime/runtime.js:296:22)
    at Generator.prototype.(anonymous function) [as next] (/workspace/DESserver/node_modules/regenerator-runtime/runtime.js:114:21)
    at step (/workspace/DESserver/node_modules/babel-runtime/helpers/asyncToGenerator.js:17:30)
    at /workspace/DESserver/node_modules/babel-runtime/helpers/asyncToGenerator.js:28:13
    at <anonymous>
    at process._tickCallback (internal/process/next_tick.js:188:7)
[2019-03-16 10:29:43.754] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/update HTTP/1.1" 200 58 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:30:48.046] [INFO] console - redis server connect success!
[2019-03-16 10:30:48.048] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-16 10:30:53.382] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 10:30:53.402] [ERROR] console - API ERROR:   [0m[97m[41mError[0m[90m:[0m[37m [0m[97m{}[0m
[0m TypeError: Signup.find(...).filter is not a function
    at _callee$ (/workspace/DESserver/api/actions/api/signup/update.js:14:5)
    at tryCatch (/workspace/DESserver/node_modules/regenerator-runtime/runtime.js:62:40)
    at Generator.invoke [as _invoke] (/workspace/DESserver/node_modules/regenerator-runtime/runtime.js:296:22)
    at Generator.prototype.(anonymous function) [as next] (/workspace/DESserver/node_modules/regenerator-runtime/runtime.js:114:21)
    at step (/workspace/DESserver/node_modules/babel-runtime/helpers/asyncToGenerator.js:17:30)
    at /workspace/DESserver/node_modules/babel-runtime/helpers/asyncToGenerator.js:28:13
    at <anonymous>
    at process._tickCallback (internal/process/next_tick.js:188:7)
[2019-03-16 10:30:53.410] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/update HTTP/1.1" 200 58 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:31:16.994] [INFO] console - redis server connect success!
[2019-03-16 10:31:16.995] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-16 10:31:20.751] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 10:31:20.771] [INFO] console - [ { _id: 5c50094c99d8808eaeaf39b1,
    name: 'zlx',
    role: 'superadmin',
    pass: '6ed7e9a926ea015b',
    type: '0',
    __v: 0,
    avatar: '5c8b6be24d81836fbf48f23a',
    create_time: 1548749132946,
    deleted: false } ] 'uuuu'
[2019-03-16 10:31:20.779] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/update HTTP/1.1" 200 43 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:36:08.989] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 10:36:08.994] [INFO] console - [ { _id: 5c50094c99d8808eaeaf39b1,
    name: 'zlx',
    role: 'superadmin',
    pass: '6ed7e9a926ea015b',
    type: '0',
    __v: 0,
    avatar: '5c8b6be24d81836fbf48f23a',
    create_time: 1548749132946,
    deleted: false } ] 'uuuu'
[2019-03-16 10:36:08.999] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/update HTTP/1.1" 200 43 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:37:28.874] [INFO] console - redis server connect success!
[2019-03-16 10:37:28.876] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-16 10:37:34.056] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 10:37:34.073] [INFO] console - [] 'uuuu1'
[2019-03-16 10:37:34.084] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/update HTTP/1.1" 200 43 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:37:52.496] [INFO] console - redis server connect success!
[2019-03-16 10:37:52.497] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-16 10:37:55.978] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 10:37:55.992] [INFO] console - null 'uuuu1'
[2019-03-16 10:37:56.006] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/update HTTP/1.1" 200 25 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:38:19.082] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 10:38:19.090] [INFO] console - { _id: 5c4a6c2548c1d7686ca5e112,
  name: 'hsq',
  role: 'auth',
  type: '0',
  __v: 0,
  create_time: 1548381221725,
  deleted: false } 'uuuu1'
[2019-03-16 10:38:19.094] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/update HTTP/1.1" 200 43 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:38:24.692] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 10:38:24.695] [INFO] console - null 'uuuu1'
[2019-03-16 10:38:24.698] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/update HTTP/1.1" 200 25 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:38:50.237] [INFO] console - redis server connect success!
[2019-03-16 10:38:50.240] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-16 10:38:51.579] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 10:38:51.609] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/update HTTP/1.1" 200 69 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:41:03.145] [INFO] http - undefined - - "GET /1552640994950-1ay9cd0e.jpeg HTTP/1.1" 200 127803 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:41:06.302] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 10:41:06.340] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 1151 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:41:10.902] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 10:41:10.908] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/update HTTP/1.1" 200 69 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:41:17.104] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 10:41:17.108] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/update HTTP/1.1" 200 69 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:41:26.433] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 10:41:26.445] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/update HTTP/1.1" 200 69 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:41:29.724] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 10:41:29.760] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 1151 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:41:31.616] [WARN] http - undefined - - "GET /1552640994950-1ay9cd0e.jpeg HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:41:31.649] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 10:41:31.666] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:44:15.019] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 10:44:15.025] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/update HTTP/1.1" 200 69 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:45:09.187] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 10:45:09.203] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 1151 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:45:11.794] [WARN] http - undefined - - "GET /1552640994950-1ay9cd0e.jpeg HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:45:11.823] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 10:45:11.955] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:46:12.000] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 10:46:12.000] [INFO] console - { fieldname: 'file',
  originalname: 'md.jpg',
  encoding: '7bit',
  mimetype: 'image/jpeg',
  destination: '/workspace/DESserver/api/uploads',
  filename: '1552704371997-1z0ormme.jpeg',
  path: '/workspace/DESserver/api/uploads/1552704371997-1z0ormme.jpeg',
  size: 127803 } 'filefilefile'
[2019-03-16 10:46:12.019] [INFO] console - { __v: 0,
  name: '1552704371997-1z0ormme.jpeg',
  path: '/workspace/DESserver/api/uploads/1552704371997-1z0ormme.jpeg',
  size: 127803,
  type: 'image/jpeg',
  original_name: 'md.jpg',
  _id: 5c8c6374733d21de0c6970d4,
  create_time: 2019-03-16T02:46:12.000Z,
  deleted: false } 'objobjobjobj'
[2019-03-16 10:46:12.028] [INFO] http - ::ffff:127.0.0.1 - - "POST /file/uploadAvatar HTTP/1.1" 200 59 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:46:12.071] [INFO] http - undefined - - "GET /1552704371997-1z0ormme.jpeg HTTP/1.1" 200 127803 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:46:17.772] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 10:46:17.772] [INFO] console - { fieldname: 'file',
  originalname: '451551230300_.pic_hd.jpg',
  encoding: '7bit',
  mimetype: 'image/jpeg',
  destination: '/workspace/DESserver/api/uploads',
  filename: '1552704377770-a2e9znu6.jpeg',
  path: '/workspace/DESserver/api/uploads/1552704377770-a2e9znu6.jpeg',
  size: 138229 } 'filefilefile'
[2019-03-16 10:46:17.776] [INFO] console - { __v: 0,
  name: '1552704377770-a2e9znu6.jpeg',
  path: '/workspace/DESserver/api/uploads/1552704377770-a2e9znu6.jpeg',
  size: 138229,
  type: 'image/jpeg',
  original_name: '451551230300_.pic_hd.jpg',
  _id: 5c8c6379733d21de0c6970d5,
  create_time: 2019-03-16T02:46:17.772Z,
  deleted: false } 'objobjobjobj'
[2019-03-16 10:46:17.783] [INFO] http - ::ffff:127.0.0.1 - - "POST /file/uploadAvatar HTTP/1.1" 200 59 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:46:17.823] [INFO] http - undefined - - "GET /1552704377770-a2e9znu6.jpeg HTTP/1.1" 200 138229 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:46:22.330] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 10:46:22.350] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:46:29.621] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 10:46:29.625] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/update HTTP/1.1" 200 69 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:46:32.775] [WARN] http - undefined - - "GET /1552704377770-a2e9znu6.jpeg HTTP/1.1" 304 - "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:46:38.686] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 10:46:38.711] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 1151 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:47:51.239] [WARN] http - undefined - - "GET /1552704377770-a2e9znu6.jpeg HTTP/1.1" 304 - "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:48:06.088] [WARN] http - undefined - - "GET /1552704377770-a2e9znu6.jpeg HTTP/1.1" 304 - "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:50:02.088] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 10:50:02.093] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/update HTTP/1.1" 200 70 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:50:35.769] [INFO] http - undefined - - "GET /1552704377770-a2e9znu6.jpeg HTTP/1.1" 200 138229 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:50:38.933] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 10:50:38.954] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 1153 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:50:44.252] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 10:50:44.254] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/update HTTP/1.1" 200 69 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:51:35.652] [WARN] http - undefined - - "GET /1552704377770-a2e9znu6.jpeg HTTP/1.1" 304 - "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:51:43.186] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 10:51:43.203] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 1151 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:51:50.715] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 10:51:50.722] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/update HTTP/1.1" 200 68 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:52:20.469] [WARN] http - undefined - - "GET /1552704377770-a2e9znu6.jpeg HTTP/1.1" 304 - "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:52:22.231] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 10:52:22.250] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 1149 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:52:27.138] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 10:52:27.142] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/update HTTP/1.1" 200 69 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:52:52.918] [WARN] http - undefined - - "GET /1552704377770-a2e9znu6.jpeg HTTP/1.1" 304 - "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:52:54.607] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 10:52:54.628] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 1151 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:52:59.837] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 10:52:59.840] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/update HTTP/1.1" 200 70 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:53:05.365] [WARN] http - undefined - - "GET /1552704377770-a2e9znu6.jpeg HTTP/1.1" 304 - "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:53:17.287] [WARN] http - undefined - - "GET /1552704377770-a2e9znu6.jpeg HTTP/1.1" 304 - "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:53:27.798] [WARN] http - undefined - - "GET /1552704377770-a2e9znu6.jpeg HTTP/1.1" 304 - "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:54:53.123] [INFO] http - undefined - - "GET /1552704377770-a2e9znu6.jpeg HTTP/1.1" 200 138229 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:54:57.074] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 10:54:57.078] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/update HTTP/1.1" 200 68 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:55:03.642] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 10:55:03.646] [INFO] console - will check 1552703651621 1552704903646
[2019-03-16 10:55:03.649] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 71 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:55:07.129] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 10:55:07.133] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 164 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:55:07.234] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 10:55:07.234] [INFO] console - will check 1552706707132 1552704907234
[2019-03-16 10:55:07.234] [INFO] console - will update 1552706707234 1552704907234
[2019-03-16 10:55:07.250] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 717 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:55:17.202] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 10:55:17.207] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/update HTTP/1.1" 200 43 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:55:25.829] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 10:55:25.833] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/update HTTP/1.1" 200 69 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:55:28.281] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 10:55:28.283] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/update HTTP/1.1" 200 68 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:56:55.290] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 10:56:55.320] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 1149 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:57:04.628] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 10:57:04.636] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/detail?_id=5c89cea221a8442480b2ce2e HTTP/1.1" 200 572 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:57:06.315] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 10:57:06.334] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:57:09.305] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 10:57:09.317] [WARN] http - undefined - - "GET /groups/detail?_id=5c89cea221a8442480b2ce2e HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:57:11.063] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 10:57:11.089] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:57:37.240] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 10:57:37.256] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:58:31.222] [WARN] http - undefined - - "GET /1552704377770-a2e9znu6.jpeg HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:58:31.252] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 10:58:31.295] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:58:37.561] [WARN] http - undefined - - "GET /1552704377770-a2e9znu6.jpeg HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:58:37.590] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 10:58:37.718] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:59:50.120] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 10:59:50.139] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:59:53.891] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 10:59:53.900] [WARN] http - undefined - - "GET /groups/detail?_id=5c89cea221a8442480b2ce2e HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 10:59:55.936] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 10:59:55.956] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 11:00:46.597] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 11:00:46.607] [WARN] http - undefined - - "GET /groups/detail?_id=5c89cea221a8442480b2ce2e HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 11:00:48.636] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 11:00:48.656] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 11:01:24.940] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 11:01:24.955] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 11:02:41.488] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 11:02:41.501] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 11:02:44.849] [WARN] http - undefined - - "GET /1552704377770-a2e9znu6.jpeg HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 11:02:44.883] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 11:02:45.010] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 11:02:49.768] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: { posts: [] }, key: undefined },
  { object: { members: [] }, key: undefined } ] 'results'
[2019-03-16 11:02:49.776] [INFO] http - ::ffff:127.0.0.1 - - "POST /groups/create HTTP/1.1" 200 13 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 11:02:49.811] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 11:02:49.833] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 1341 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 11:02:54.539] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 11:02:54.542] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/detail?_id=5c8c6759733d21de0c6970d6 HTTP/1.1" 200 212 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 11:02:56.065] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 11:02:56.086] [WARN] http - undefined - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 11:03:04.161] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 11:03:04.164] [INFO] http - ::ffff:127.0.0.1 - - "GET /signup/search?name=z HTTP/1.1" 200 70 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 11:03:06.360] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { key: undefined },
  { object: { members: [Array] }, key: undefined } ] 'results'
[2019-03-16 11:03:06.371] [INFO] http - ::ffff:127.0.0.1 - - "POST /groups/update HTTP/1.1" 200 13 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 11:03:06.385] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 11:03:06.444] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 1627 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 11:24:48.358] [INFO] console - redis server connect success!
[2019-03-16 11:24:48.360] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-16 11:27:25.015] [INFO] console - redis server connect success!
[2019-03-16 11:27:25.017] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-16 11:28:30.229] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 11:28:30.252] [INFO] http - ::1 - - "POST /signup/login HTTP/1.1" 200 201 "" "PostmanRuntime/7.1.1"
[2019-03-16 11:31:15.545] [INFO] console - redis server connect success!
[2019-03-16 11:31:15.547] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-16 11:31:29.153] [WARN] http - undefined - - "GET /1552704377770-a2e9znu6.jpeg HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 11:31:29.179] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 11:31:29.195] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c50094c99d8808eaeaf39b1 HTTP/1.1" 200 47 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 11:31:42.545] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { key: undefined } ] 'results'
[2019-03-16 11:31:42.577] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/account HTTP/1.1" 200 13 "http://localhost:9000/signup" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 11:31:47.486] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 11:31:47.494] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 145 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 11:32:03.164] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 11:32:03.170] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 145 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 11:32:29.358] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 11:32:29.362] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 145 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 11:32:44.382] [INFO] console - redis server connect success!
[2019-03-16 11:32:44.383] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-16 11:33:01.156] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 11:33:01.190] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 119 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 11:33:01.323] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 11:33:01.325] [INFO] console - will check 1552708981179 1552707181325
[2019-03-16 11:33:01.326] [INFO] console - will update 1552708981325 1552707181325
[2019-03-16 11:33:01.335] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c8c6e1e453a08c319b8ef5a HTTP/1.1" 200 32 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 11:33:14.742] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 11:33:14.773] [INFO] http - ::ffff:127.0.0.1 - - "POST /file/uploadAvatar HTTP/1.1" 200 59 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 11:33:14.813] [INFO] http - undefined - - "GET /1552707194739-3hgslxkl.jpeg HTTP/1.1" 200 138229 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 11:33:23.488] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 11:33:23.501] [INFO] http - ::1 - - "POST /signup/login HTTP/1.1" 200 37 "" "PostmanRuntime/7.1.1"
[2019-03-16 11:33:42.676] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 11:33:42.684] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 144 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 11:33:42.793] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 11:33:42.793] [INFO] console - will check 1552709022682 1552707222793
[2019-03-16 11:33:42.794] [INFO] console - will update 1552709022793 1552707222793
[2019-03-16 11:33:42.798] [WARN] http - undefined - - "GET /posts/list?author=5c8c6e1e453a08c319b8ef5a HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 11:34:03.735] [INFO] console - redis server connect success!
[2019-03-16 11:34:03.737] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-16 11:34:05.599] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 11:34:05.631] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 181 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 11:34:34.704] [INFO] console - redis server connect success!
[2019-03-16 11:34:34.705] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-16 11:34:38.463] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 11:34:38.493] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 181 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 11:35:26.116] [INFO] console - redis server connect success!
[2019-03-16 11:35:26.118] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-16 11:35:28.497] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 11:35:28.535] [ERROR] console - API ERROR:   [0m[97m[41mError[0m[90m:[0m[37m [0m[97m{"message":"Cast to ObjectId failed for value \"zlx\" at path \"_id\"","name":"CastError","kind":"ObjectId","value":"zlx","path":"_id"}[0m
[0m { CastError: Cast to ObjectId failed for value "zlx" at path "_id"
    at new CastError (/workspace/DESserver/node_modules/mongoose/lib/error/cast.js:19:11)
    at ObjectId.cast (/workspace/DESserver/node_modules/mongoose/lib/schema/objectid.js:147:13)
    at ObjectId.castForQuery (/workspace/DESserver/node_modules/mongoose/lib/schema/objectid.js:187:15)
    at /workspace/DESserver/node_modules/mongoose/lib/schematype.js:866:18
    at Array.map (<anonymous>)
    at ObjectId.handleArray (/workspace/DESserver/node_modules/mongoose/lib/schematype.js:865:14)
    at ObjectId.castForQuery (/workspace/DESserver/node_modules/mongoose/lib/schema/objectid.js:185:20)
    at cast (/workspace/DESserver/node_modules/mongoose/lib/cast.js:177:39)
    at model.Query.Query.cast (/workspace/DESserver/node_modules/mongoose/lib/query.js:2650:10)
    at model.Query.Query.find (/workspace/DESserver/node_modules/mongoose/lib/query.js:1130:10)
    at /workspace/DESserver/node_modules/mongoose/lib/query.js:2227:21
    at new Promise (<anonymous>)
    at model.Query.exec (/workspace/DESserver/node_modules/mongoose/lib/query.js:2220:10)
    at populate (/workspace/DESserver/node_modules/mongoose/lib/model.js:2670:11)
    at _populate (/workspace/DESserver/node_modules/mongoose/lib/model.js:2576:5)
    at Function.Model.populate (/workspace/DESserver/node_modules/mongoose/lib/model.js:2536:5)
  message: 'Cast to ObjectId failed for value "zlx" at path "_id"',
  name: 'CastError',
  kind: 'ObjectId',
  value: 'zlx',
  path: '_id',
  reason: undefined }
[2019-03-16 11:35:28.540] [ERROR] console - (node:6645) UnhandledPromiseRejectionWarning: CastError: Cast to ObjectId failed for value "zlx" at path "_id"
    at new CastError (/workspace/DESserver/node_modules/mongoose/lib/error/cast.js:19:11)
    at ObjectId.cast (/workspace/DESserver/node_modules/mongoose/lib/schema/objectid.js:147:13)
    at ObjectId.castForQuery (/workspace/DESserver/node_modules/mongoose/lib/schema/objectid.js:187:15)
    at /workspace/DESserver/node_modules/mongoose/lib/schematype.js:866:18
    at Array.map (<anonymous>)
    at ObjectId.handleArray (/workspace/DESserver/node_modules/mongoose/lib/schematype.js:865:14)
    at ObjectId.castForQuery (/workspace/DESserver/node_modules/mongoose/lib/schema/objectid.js:185:20)
    at cast (/workspace/DESserver/node_modules/mongoose/lib/cast.js:177:39)
    at model.Query.Query.cast (/workspace/DESserver/node_modules/mongoose/lib/query.js:2650:10)
    at model.Query.Query.find (/workspace/DESserver/node_modules/mongoose/lib/query.js:1130:10)
    at /workspace/DESserver/node_modules/mongoose/lib/query.js:2227:21
    at new Promise (<anonymous>)
    at model.Query.exec (/workspace/DESserver/node_modules/mongoose/lib/query.js:2220:10)
    at populate (/workspace/DESserver/node_modules/mongoose/lib/model.js:2670:11)
    at _populate (/workspace/DESserver/node_modules/mongoose/lib/model.js:2576:5)
    at Function.Model.populate (/workspace/DESserver/node_modules/mongoose/lib/model.js:2536:5)
[2019-03-16 11:35:28.540] [ERROR] console - (node:6645) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). (rejection id: 1)
[2019-03-16 11:35:28.541] [ERROR] console - (node:6645) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code.
[2019-03-16 11:35:28.543] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 58 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 11:35:46.712] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 11:35:46.722] [ERROR] console - API ERROR:   [0m[97m[41mError[0m[90m:[0m[37m [0m[97m{"message":"Cast to ObjectId failed for value \"zlx\" at path \"_id\"","name":"CastError","kind":"ObjectId","value":"zlx","path":"_id"}[0m
[0m { CastError: Cast to ObjectId failed for value "zlx" at path "_id"
    at new CastError (/workspace/DESserver/node_modules/mongoose/lib/error/cast.js:19:11)
    at ObjectId.cast (/workspace/DESserver/node_modules/mongoose/lib/schema/objectid.js:147:13)
    at ObjectId.castForQuery (/workspace/DESserver/node_modules/mongoose/lib/schema/objectid.js:187:15)
    at /workspace/DESserver/node_modules/mongoose/lib/schematype.js:866:18
    at Array.map (<anonymous>)
    at ObjectId.handleArray (/workspace/DESserver/node_modules/mongoose/lib/schematype.js:865:14)
    at ObjectId.castForQuery (/workspace/DESserver/node_modules/mongoose/lib/schema/objectid.js:185:20)
    at cast (/workspace/DESserver/node_modules/mongoose/lib/cast.js:177:39)
    at model.Query.Query.cast (/workspace/DESserver/node_modules/mongoose/lib/query.js:2650:10)
    at model.Query.Query.find (/workspace/DESserver/node_modules/mongoose/lib/query.js:1130:10)
    at /workspace/DESserver/node_modules/mongoose/lib/query.js:2227:21
    at new Promise (<anonymous>)
    at model.Query.exec (/workspace/DESserver/node_modules/mongoose/lib/query.js:2220:10)
    at populate (/workspace/DESserver/node_modules/mongoose/lib/model.js:2670:11)
    at _populate (/workspace/DESserver/node_modules/mongoose/lib/model.js:2576:5)
    at Function.Model.populate (/workspace/DESserver/node_modules/mongoose/lib/model.js:2536:5)
  message: 'Cast to ObjectId failed for value "zlx" at path "_id"',
  name: 'CastError',
  kind: 'ObjectId',
  value: 'zlx',
  path: '_id',
  reason: undefined }
[2019-03-16 11:35:46.725] [ERROR] console - (node:6645) UnhandledPromiseRejectionWarning: CastError: Cast to ObjectId failed for value "zlx" at path "_id"
    at new CastError (/workspace/DESserver/node_modules/mongoose/lib/error/cast.js:19:11)
    at ObjectId.cast (/workspace/DESserver/node_modules/mongoose/lib/schema/objectid.js:147:13)
    at ObjectId.castForQuery (/workspace/DESserver/node_modules/mongoose/lib/schema/objectid.js:187:15)
    at /workspace/DESserver/node_modules/mongoose/lib/schematype.js:866:18
    at Array.map (<anonymous>)
    at ObjectId.handleArray (/workspace/DESserver/node_modules/mongoose/lib/schematype.js:865:14)
    at ObjectId.castForQuery (/workspace/DESserver/node_modules/mongoose/lib/schema/objectid.js:185:20)
    at cast (/workspace/DESserver/node_modules/mongoose/lib/cast.js:177:39)
    at model.Query.Query.cast (/workspace/DESserver/node_modules/mongoose/lib/query.js:2650:10)
    at model.Query.Query.find (/workspace/DESserver/node_modules/mongoose/lib/query.js:1130:10)
    at /workspace/DESserver/node_modules/mongoose/lib/query.js:2227:21
    at new Promise (<anonymous>)
    at model.Query.exec (/workspace/DESserver/node_modules/mongoose/lib/query.js:2220:10)
    at populate (/workspace/DESserver/node_modules/mongoose/lib/model.js:2670:11)
    at _populate (/workspace/DESserver/node_modules/mongoose/lib/model.js:2576:5)
    at Function.Model.populate (/workspace/DESserver/node_modules/mongoose/lib/model.js:2536:5)
[2019-03-16 11:35:46.728] [ERROR] console - (node:6645) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). (rejection id: 2)
[2019-03-16 11:35:46.736] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 58 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 11:39:54.481] [INFO] console - redis server connect success!
[2019-03-16 11:39:54.482] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-16 11:39:58.823] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 11:39:58.856] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 181 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 11:41:16.842] [INFO] console - redis server connect success!
[2019-03-16 11:41:16.844] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-16 11:41:17.867] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 11:41:17.912] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 226 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 11:42:08.308] [INFO] console - redis server connect success!
[2019-03-16 11:42:08.311] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-16 11:42:09.966] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 11:42:10.009] [ERROR] console - API ERROR:   [0m[97m[41mError[0m[90m:[0m[37m [0m[97m{"message":"Cast to ObjectId failed for value \"zlx\" at path \"_id\"","name":"CastError","kind":"ObjectId","value":"zlx","path":"_id"}[0m
[0m { CastError: Cast to ObjectId failed for value "zlx" at path "_id"
    at new CastError (/workspace/DESserver/node_modules/mongoose/lib/error/cast.js:19:11)
    at ObjectId.cast (/workspace/DESserver/node_modules/mongoose/lib/schema/objectid.js:147:13)
    at ObjectId.castForQuery (/workspace/DESserver/node_modules/mongoose/lib/schema/objectid.js:187:15)
    at /workspace/DESserver/node_modules/mongoose/lib/schematype.js:866:18
    at Array.map (<anonymous>)
    at ObjectId.handleArray (/workspace/DESserver/node_modules/mongoose/lib/schematype.js:865:14)
    at ObjectId.castForQuery (/workspace/DESserver/node_modules/mongoose/lib/schema/objectid.js:185:20)
    at cast (/workspace/DESserver/node_modules/mongoose/lib/cast.js:177:39)
    at model.Query.Query.cast (/workspace/DESserver/node_modules/mongoose/lib/query.js:2650:10)
    at model.Query.Query.find (/workspace/DESserver/node_modules/mongoose/lib/query.js:1130:10)
    at /workspace/DESserver/node_modules/mongoose/lib/query.js:2227:21
    at new Promise (<anonymous>)
    at model.Query.exec (/workspace/DESserver/node_modules/mongoose/lib/query.js:2220:10)
    at populate (/workspace/DESserver/node_modules/mongoose/lib/model.js:2670:11)
    at _populate (/workspace/DESserver/node_modules/mongoose/lib/model.js:2576:5)
    at Function.Model.populate (/workspace/DESserver/node_modules/mongoose/lib/model.js:2536:5)
  message: 'Cast to ObjectId failed for value "zlx" at path "_id"',
  name: 'CastError',
  kind: 'ObjectId',
  value: 'zlx',
  path: '_id',
  reason: undefined }
[2019-03-16 11:42:10.021] [ERROR] console - (node:6680) UnhandledPromiseRejectionWarning: CastError: Cast to ObjectId failed for value "zlx" at path "_id"
    at new CastError (/workspace/DESserver/node_modules/mongoose/lib/error/cast.js:19:11)
    at ObjectId.cast (/workspace/DESserver/node_modules/mongoose/lib/schema/objectid.js:147:13)
    at ObjectId.castForQuery (/workspace/DESserver/node_modules/mongoose/lib/schema/objectid.js:187:15)
    at /workspace/DESserver/node_modules/mongoose/lib/schematype.js:866:18
    at Array.map (<anonymous>)
    at ObjectId.handleArray (/workspace/DESserver/node_modules/mongoose/lib/schematype.js:865:14)
    at ObjectId.castForQuery (/workspace/DESserver/node_modules/mongoose/lib/schema/objectid.js:185:20)
    at cast (/workspace/DESserver/node_modules/mongoose/lib/cast.js:177:39)
    at model.Query.Query.cast (/workspace/DESserver/node_modules/mongoose/lib/query.js:2650:10)
    at model.Query.Query.find (/workspace/DESserver/node_modules/mongoose/lib/query.js:1130:10)
    at /workspace/DESserver/node_modules/mongoose/lib/query.js:2227:21
    at new Promise (<anonymous>)
    at model.Query.exec (/workspace/DESserver/node_modules/mongoose/lib/query.js:2220:10)
    at populate (/workspace/DESserver/node_modules/mongoose/lib/model.js:2670:11)
    at _populate (/workspace/DESserver/node_modules/mongoose/lib/model.js:2576:5)
    at Function.Model.populate (/workspace/DESserver/node_modules/mongoose/lib/model.js:2536:5)
[2019-03-16 11:42:10.021] [ERROR] console - (node:6680) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). (rejection id: 1)
[2019-03-16 11:42:10.021] [ERROR] console - (node:6680) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code.
[2019-03-16 11:42:10.044] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 58 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 11:42:17.702] [INFO] console - redis server connect success!
[2019-03-16 11:42:17.705] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-16 11:42:23.150] [INFO] console - redis server connect success!
[2019-03-16 11:42:23.152] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-16 11:42:27.386] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 11:42:27.431] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 438 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 11:42:41.246] [INFO] console - redis server connect success!
[2019-03-16 11:42:41.248] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-16 11:42:58.587] [INFO] console - redis server connect success!
[2019-03-16 11:42:58.589] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-16 11:43:02.705] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 11:43:02.736] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 226 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 11:44:11.179] [INFO] console - redis server connect success!
[2019-03-16 11:44:11.181] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-16 11:44:13.954] [INFO] console - redis server connect success!
[2019-03-16 11:44:13.955] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-16 11:44:16.518] [INFO] console - redis server connect success!
[2019-03-16 11:44:16.519] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-16 11:44:20.381] [INFO] console - redis server connect success!
[2019-03-16 11:44:20.384] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-16 11:45:32.931] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 11:45:32.968] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 144 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 11:45:33.064] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 11:45:33.067] [INFO] console - will check 1552709732959 1552707933067
[2019-03-16 11:45:33.068] [INFO] console - will update 1552709733067 1552707933067
[2019-03-16 11:45:33.074] [WARN] http - undefined - - "GET /posts/list?author=5c8c6e1e453a08c319b8ef5a HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 11:45:39.770] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 11:45:39.780] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c8c6e1e453a08c319b8ef5a HTTP/1.1" 200 47 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-16 11:45:43.185] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-16 11:45:43.185] [INFO] console - will check 1552709733067 1552707943185
[2019-03-16 11:45:43.186] [INFO] console - will update 1552709743185 1552707943185
[2019-03-16 11:45:43.190] [WARN] http - undefined - - "GET /posts/list?author=5c8c6e1e453a08c319b8ef5a HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-18 09:31:46.723] [INFO] console - redis server connect success!
[2019-03-18 09:31:46.725] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-18 09:34:34.282] [WARN] http - undefined - - "GET /1552707194739-3hgslxkl.jpeg HTTP/1.1" 304 - "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-18 09:34:36.370] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-18 09:34:36.457] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 144 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-18 09:34:36.721] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-18 09:34:36.723] [INFO] console - will check 1552874676449 1552872876723
[2019-03-18 09:34:36.723] [INFO] console - will update 1552874676723 1552872876723
[2019-03-18 09:34:36.729] [WARN] http - undefined - - "GET /posts/list?author=5c8c6e1e453a08c319b8ef5a HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-18 09:34:41.169] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-18 09:34:41.181] [WARN] http - undefined - - "GET /groups/list?creator_id=5c8c6e1e453a08c319b8ef5a HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-18 09:34:43.227] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-18 09:34:43.228] [INFO] console - will check 1552874676723 1552872883228
[2019-03-18 09:34:43.228] [INFO] console - will update 1552874683228 1552872883228
[2019-03-18 09:34:43.233] [WARN] http - undefined - - "GET /posts/list?author=5c8c6e1e453a08c319b8ef5a HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-18 09:35:12.755] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: 
     { content: '> asfnsdf\n\n```\nvar a . = function() {\nconsole.log(123)\n}\n```' },
    key: undefined } ] 'results'
[2019-03-18 09:35:12.796] [INFO] http - ::ffff:127.0.0.1 - - "POST /posts/create HTTP/1.1" 200 13 "http://localhost:9000/document/new" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-18 09:35:14.062] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-18 09:35:14.065] [WARN] http - undefined - - "GET /groups/list?creator_id=5c8c6e1e453a08c319b8ef5a HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-18 09:35:15.519] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-18 09:35:15.520] [INFO] console - will check 1552874683228 1552872915520
[2019-03-18 09:35:15.520] [INFO] console - will update 1552874715520 1552872915520
[2019-03-18 09:35:15.530] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c8c6e1e453a08c319b8ef5a HTTP/1.1" 200 185 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-18 09:35:16.417] [INFO] console - will check 1552874715520 1552872916417
[2019-03-18 09:35:16.417] [INFO] console - will update 1552874716417 1552872916417
[2019-03-18 09:35:16.417] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-18 09:35:16.422] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c8ef5d0b2cafcdb1e08e82b HTTP/1.1" 200 160 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-18 09:35:46.603] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-18 09:35:46.603] [INFO] console - will check 1552874716417 1552872946603
[2019-03-18 09:35:46.603] [INFO] console - will update 1552874746603 1552872946603
[2019-03-18 09:35:46.610] [WARN] http - undefined - - "GET /posts/list?author=5c8c6e1e453a08c319b8ef5a HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-18 09:35:50.176] [INFO] console - will check 1552874746603 1552872950176
[2019-03-18 09:35:50.176] [INFO] console - will update 1552874750176 1552872950176
[2019-03-18 09:35:50.176] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-18 09:35:50.180] [WARN] http - undefined - - "GET /posts/getPost?id=5c8ef5d0b2cafcdb1e08e82b HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-18 09:36:12.540] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: 
     { content: '> asfnsdf\n\n```javascript\nvar a . = function() {\nconsole.log(123)\n}\n```' },
    key: undefined } ] 'results'
[2019-03-18 09:36:12.563] [INFO] http - ::ffff:127.0.0.1 - - "POST /posts/update HTTP/1.1" 200 195 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-18 09:36:12.615] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-18 09:36:12.616] [INFO] console - will check 1552874750176 1552872972616
[2019-03-18 09:36:12.617] [INFO] console - will update 1552874772616 1552872972616
[2019-03-18 09:36:12.619] [WARN] http - undefined - - "GET /posts/list?author=5c8c6e1e453a08c319b8ef5a HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-18 09:36:43.933] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-18 09:36:43.934] [INFO] console - will check 1552874772616 1552873003934
[2019-03-18 09:36:43.934] [INFO] console - will update 1552874803934 1552873003934
[2019-03-18 09:36:43.936] [WARN] http - undefined - - "GET /posts/list?author=5c8c6e1e453a08c319b8ef5a HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-18 09:36:44.923] [INFO] console - will check 1552874803934 1552873004923
[2019-03-18 09:36:44.924] [INFO] console - will update 1552874804923 1552873004923
[2019-03-18 09:36:44.924] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-18 09:36:44.928] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c8ef5d0b2cafcdb1e08e82b HTTP/1.1" 200 170 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-18 09:37:07.450] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-18 09:37:07.451] [INFO] console - will check 1552874804923 1552873027451
[2019-03-18 09:37:07.451] [INFO] console - will update 1552874827451 1552873027451
[2019-03-18 09:37:07.454] [WARN] http - undefined - - "GET /posts/list?author=5c8c6e1e453a08c319b8ef5a HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-18 09:37:09.100] [INFO] console - will check 1552874827451 1552873029100
[2019-03-18 09:37:09.101] [INFO] console - will update 1552874829100 1552873029100
[2019-03-18 09:37:09.101] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-18 09:37:09.104] [WARN] http - undefined - - "GET /posts/getPost?id=5c8ef5d0b2cafcdb1e08e82b HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-18 09:37:19.296] [WARN] http - undefined - - "GET /1552707194739-3hgslxkl.jpeg HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-18 09:37:19.330] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-18 09:37:19.331] [INFO] console - will check 1552874829100 1552873039331
[2019-03-18 09:37:19.331] [INFO] console - will update 1552874839331 1552873039331
[2019-03-18 09:37:19.333] [WARN] http - undefined - - "GET /posts/list?author=5c8c6e1e453a08c319b8ef5a HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-18 09:37:21.494] [INFO] console - will check 1552874839331 1552873041494
[2019-03-18 09:37:21.495] [INFO] console - will update 1552874841494 1552873041494
[2019-03-18 09:37:21.495] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-18 09:37:21.499] [WARN] http - undefined - - "GET /posts/getPost?id=5c8ef5d0b2cafcdb1e08e82b HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-18 09:41:26.849] [WARN] http - undefined - - "GET /1552707194739-3hgslxkl.jpeg HTTP/1.1" 304 - "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-18 09:41:28.318] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-18 09:41:28.323] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 144 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-18 09:41:28.455] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-18 09:41:28.455] [INFO] console - will check 1552875088322 1552873288455
[2019-03-18 09:41:28.455] [INFO] console - will update 1552875088455 1552873288455
[2019-03-18 09:41:28.458] [WARN] http - undefined - - "GET /posts/list?author=5c8c6e1e453a08c319b8ef5a HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-18 09:41:34.669] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-18 09:41:34.669] [INFO] console - will check 1552875088455 1552873294669
[2019-03-18 09:41:34.670] [INFO] console - will update 1552875094669 1552873294669
[2019-03-18 09:41:34.674] [WARN] http - undefined - - "GET /posts/list?author=5c8c6e1e453a08c319b8ef5a HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-18 09:41:35.611] [INFO] console - will check 1552875094669 1552873295611
[2019-03-18 09:41:35.612] [INFO] console - will update 1552875095611 1552873295611
[2019-03-18 09:41:35.613] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-18 09:41:35.615] [WARN] http - undefined - - "GET /posts/getPost?id=5c8ef5d0b2cafcdb1e08e82b HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-18 09:41:38.194] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: 
     { content: '> asfnsdf\n\n```javascript\nvar a . = function() {\nconsole.log(123)\n}\n```' },
    key: undefined } ] 'results'
[2019-03-18 09:41:38.197] [INFO] http - ::ffff:127.0.0.1 - - "POST /posts/update HTTP/1.1" 200 195 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-18 09:41:38.220] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-18 09:41:38.221] [INFO] console - will check 1552875095611 1552873298221
[2019-03-18 09:41:38.221] [INFO] console - will update 1552875098221 1552873298221
[2019-03-18 09:41:38.225] [WARN] http - undefined - - "GET /posts/list?author=5c8c6e1e453a08c319b8ef5a HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-18 09:41:40.473] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-18 09:41:40.478] [WARN] http - undefined - - "GET /groups/list?creator_id=5c8c6e1e453a08c319b8ef5a HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-18 09:41:44.872] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: { posts: [] }, key: undefined },
  { object: { members: [] }, key: undefined } ] 'results'
[2019-03-18 09:41:44.880] [INFO] http - ::ffff:127.0.0.1 - - "POST /groups/create HTTP/1.1" 200 13 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-18 09:41:44.903] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-18 09:41:44.922] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c8c6e1e453a08c319b8ef5a HTTP/1.1" 200 237 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-18 09:41:48.920] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-18 09:41:48.927] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/search?author=5c8c6e1e453a08c319b8ef5a&title=a HTTP/1.1" 200 72 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-18 09:41:51.691] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: { posts: [Array] }, key: undefined },
  { key: undefined } ] 'results'
[2019-03-18 09:41:51.706] [INFO] http - ::ffff:127.0.0.1 - - "POST /groups/update HTTP/1.1" 200 13 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-18 09:41:51.735] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-18 09:41:51.744] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c8c6e1e453a08c319b8ef5a HTTP/1.1" 200 286 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-18 09:41:53.231] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-18 09:41:53.235] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/detail?_id=5c8ef758b2cafcdb1e08e82c HTTP/1.1" 200 260 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-18 09:41:54.528] [INFO] console - will check 1552875098221 1552873314528
[2019-03-18 09:41:54.528] [INFO] console - will update 1552875114528 1552873314528
[2019-03-18 09:41:54.529] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-18 09:41:54.531] [WARN] http - undefined - - "GET /posts/getPost?id=5c8ef5d0b2cafcdb1e08e82b HTTP/1.1" 304 - "http://localhost:9000/project/detail" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-18 09:41:59.202] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-18 09:41:59.212] [WARN] http - undefined - - "GET /groups/list?creator_id=5c8c6e1e453a08c319b8ef5a HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-18 10:15:10.251] [WARN] http - undefined - - "GET /1552707194739-3hgslxkl.jpeg HTTP/1.1" 304 - "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-18 10:15:12.253] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-18 10:15:12.273] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 144 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-18 10:15:12.410] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-18 10:15:12.410] [INFO] console - will check 1552877112269 1552875312410
[2019-03-18 10:15:12.410] [INFO] console - will update 1552877112410 1552875312410
[2019-03-18 10:15:12.413] [WARN] http - undefined - - "GET /posts/list?author=5c8c6e1e453a08c319b8ef5a HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-18 10:15:28.622] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-18 10:15:28.634] [WARN] http - undefined - - "GET /groups/list?creator_id=5c8c6e1e453a08c319b8ef5a HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-18 10:15:51.938] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-18 10:15:51.939] [INFO] console - will check 1552877112410 1552875351939
[2019-03-18 10:15:51.939] [INFO] console - will update 1552877151939 1552875351939
[2019-03-18 10:15:51.943] [WARN] http - undefined - - "GET /posts/list?author=5c8c6e1e453a08c319b8ef5a HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-18 10:15:53.237] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-18 10:15:53.237] [INFO] console - will check 1552877151939 1552875353237
[2019-03-18 10:15:53.237] [INFO] console - will update 1552877153237 1552875353237
[2019-03-18 10:15:53.242] [WARN] http - undefined - - "GET /posts/list?author=5c8c6e1e453a08c319b8ef5a HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-18 10:15:56.142] [INFO] console - will check 1552877153237 1552875356142
[2019-03-18 10:15:56.142] [INFO] console - will update 1552877156142 1552875356142
[2019-03-18 10:15:56.142] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-18 10:15:56.146] [WARN] http - undefined - - "GET /posts/getPost?id=5c8ef5d0b2cafcdb1e08e82b HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-18 10:15:58.561] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-18 10:15:58.578] [WARN] http - undefined - - "GET /groups/list?creator_id=5c8c6e1e453a08c319b8ef5a HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-18 10:39:45.526] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: { content: 'eval(alert(1))' }, key: undefined } ] 'results'
[2019-03-18 10:39:45.552] [INFO] http - ::ffff:127.0.0.1 - - "POST /posts/create HTTP/1.1" 200 13 "http://localhost:9000/document/new" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-18 10:39:47.400] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-18 10:39:47.401] [INFO] console - will check 1552877156142 1552876787401
[2019-03-18 10:39:47.402] [INFO] console - will update 1552878587401 1552876787401
[2019-03-18 10:39:47.410] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c8c6e1e453a08c319b8ef5a HTTP/1.1" 200 340 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-18 10:39:48.902] [INFO] console - will check 1552878587401 1552876788902
[2019-03-18 10:39:48.902] [INFO] console - will update 1552878588902 1552876788902
[2019-03-18 10:39:48.904] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-18 10:39:48.909] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c8f04f1b2cafcdb1e08e82d HTTP/1.1" 200 109 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-18 10:39:49.979] [INFO] console - will check 1552878588902 1552876789979
[2019-03-18 10:39:49.979] [INFO] console - will update 1552878589979 1552876789979
[2019-03-18 10:39:49.980] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-18 10:39:49.982] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c8ef5d0b2cafcdb1e08e82b HTTP/1.1" 200 170 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-18 10:39:51.224] [INFO] console - will check 1552878589979 1552876791224
[2019-03-18 10:39:51.224] [INFO] console - will update 1552878591224 1552876791224
[2019-03-18 10:39:51.225] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-18 10:39:51.227] [WARN] http - undefined - - "GET /posts/getPost?id=5c8f04f1b2cafcdb1e08e82d HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-18 10:39:52.857] [INFO] console - will check 1552878591224 1552876792857
[2019-03-18 10:39:52.857] [INFO] console - will update 1552878592857 1552876792857
[2019-03-18 10:39:52.857] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-18 10:39:52.860] [WARN] http - undefined - - "GET /posts/getPost?id=5c8ef5d0b2cafcdb1e08e82b HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-18 10:39:53.678] [INFO] console - will check 1552878592857 1552876793678
[2019-03-18 10:39:53.678] [INFO] console - will update 1552878593678 1552876793678
[2019-03-18 10:39:53.678] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-18 10:39:53.681] [WARN] http - undefined - - "GET /posts/getPost?id=5c8f04f1b2cafcdb1e08e82d HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-18 10:39:54.180] [INFO] console - will check 1552878593678 1552876794180
[2019-03-18 10:39:54.181] [INFO] console - will update 1552878594180 1552876794180
[2019-03-18 10:39:54.181] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-18 10:39:54.183] [WARN] http - undefined - - "GET /posts/getPost?id=5c8ef5d0b2cafcdb1e08e82b HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-18 10:39:54.709] [INFO] console - will check 1552878594180 1552876794709
[2019-03-18 10:39:54.709] [INFO] console - will update 1552878594709 1552876794709
[2019-03-18 10:39:54.709] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-18 10:39:54.712] [WARN] http - undefined - - "GET /posts/getPost?id=5c8f04f1b2cafcdb1e08e82d HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-18 10:39:55.991] [INFO] console - will check 1552878594709 1552876795990
[2019-03-18 10:39:55.991] [INFO] console - will update 1552878595990 1552876795990
[2019-03-18 10:39:55.992] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-18 10:39:55.994] [WARN] http - undefined - - "GET /posts/getPost?id=5c8ef5d0b2cafcdb1e08e82b HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-18 10:39:57.374] [INFO] console - will check 1552878595990 1552876797374
[2019-03-18 10:39:57.374] [INFO] console - will update 1552878597374 1552876797374
[2019-03-18 10:39:57.375] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-18 10:39:57.378] [WARN] http - undefined - - "GET /posts/getPost?id=5c8f04f1b2cafcdb1e08e82d HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-18 10:39:58.802] [INFO] console - will check 1552878597374 1552876798802
[2019-03-18 10:39:58.803] [INFO] console - will update 1552878598802 1552876798802
[2019-03-18 10:39:58.803] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-18 10:39:58.805] [WARN] http - undefined - - "GET /posts/getPost?id=5c8ef5d0b2cafcdb1e08e82b HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-18 10:39:59.483] [INFO] console - will check 1552878598802 1552876799483
[2019-03-18 10:39:59.483] [INFO] console - will update 1552878599483 1552876799483
[2019-03-18 10:39:59.483] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-18 10:39:59.486] [WARN] http - undefined - - "GET /posts/getPost?id=5c8f04f1b2cafcdb1e08e82d HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-18 10:40:01.213] [INFO] console - will check 1552878599483 1552876801213
[2019-03-18 10:40:01.214] [INFO] console - will update 1552878601213 1552876801213
[2019-03-18 10:40:01.214] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-18 10:40:01.216] [WARN] http - undefined - - "GET /posts/getPost?id=5c8ef5d0b2cafcdb1e08e82b HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-18 10:40:01.896] [INFO] console - will check 1552878601213 1552876801896
[2019-03-18 10:40:01.896] [INFO] console - will update 1552878601896 1552876801896
[2019-03-18 10:40:01.897] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-18 10:40:01.899] [WARN] http - undefined - - "GET /posts/getPost?id=5c8f04f1b2cafcdb1e08e82d HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-18 10:40:02.698] [INFO] console - will check 1552878601896 1552876802698
[2019-03-18 10:40:02.698] [INFO] console - will update 1552878602698 1552876802698
[2019-03-18 10:40:02.699] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-18 10:40:02.702] [WARN] http - undefined - - "GET /posts/getPost?id=5c8ef5d0b2cafcdb1e08e82b HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-18 10:40:03.365] [INFO] console - will check 1552878602698 1552876803365
[2019-03-18 10:40:03.365] [INFO] console - will update 1552878603365 1552876803365
[2019-03-18 10:40:03.366] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-18 10:40:03.368] [WARN] http - undefined - - "GET /posts/getPost?id=5c8f04f1b2cafcdb1e08e82d HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-18 10:40:03.968] [INFO] console - will check 1552878603365 1552876803968
[2019-03-18 10:40:03.968] [INFO] console - will update 1552878603968 1552876803968
[2019-03-18 10:40:03.969] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-18 10:40:03.971] [WARN] http - undefined - - "GET /posts/getPost?id=5c8ef5d0b2cafcdb1e08e82b HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-18 10:40:04.337] [INFO] console - will check 1552878603968 1552876804337
[2019-03-18 10:40:04.337] [INFO] console - will update 1552878604337 1552876804337
[2019-03-18 10:40:04.337] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-18 10:40:04.339] [WARN] http - undefined - - "GET /posts/getPost?id=5c8ef5d0b2cafcdb1e08e82b HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-18 10:40:05.037] [INFO] console - will check 1552878604337 1552876805037
[2019-03-18 10:40:05.037] [INFO] console - will update 1552878605037 1552876805037
[2019-03-18 10:40:05.037] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-18 10:40:05.041] [WARN] http - undefined - - "GET /posts/getPost?id=5c8f04f1b2cafcdb1e08e82d HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-18 10:40:05.666] [INFO] console - will check 1552878605037 1552876805666
[2019-03-18 10:40:05.666] [INFO] console - will update 1552878605666 1552876805666
[2019-03-18 10:40:05.666] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-18 10:40:05.669] [WARN] http - undefined - - "GET /posts/getPost?id=5c8ef5d0b2cafcdb1e08e82b HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-18 10:40:08.142] [INFO] console - will check 1552878605666 1552876808142
[2019-03-18 10:40:08.142] [INFO] console - will update 1552878608142 1552876808142
[2019-03-18 10:40:08.142] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-18 10:40:08.144] [WARN] http - undefined - - "GET /posts/getPost?id=5c8f04f1b2cafcdb1e08e82d HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-18 10:40:08.759] [INFO] console - will check 1552878608142 1552876808759
[2019-03-18 10:40:08.759] [INFO] console - will update 1552878608759 1552876808759
[2019-03-18 10:40:08.760] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-18 10:40:08.762] [WARN] http - undefined - - "GET /posts/getPost?id=5c8ef5d0b2cafcdb1e08e82b HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-18 10:40:10.840] [INFO] console - will check 1552878608759 1552876810840
[2019-03-18 10:40:10.840] [INFO] console - will update 1552878610840 1552876810840
[2019-03-18 10:40:10.841] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-18 10:40:10.844] [WARN] http - undefined - - "GET /posts/getPost?id=5c8f04f1b2cafcdb1e08e82d HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-18 10:53:28.657] [INFO] http - undefined - - "GET /1552707194739-3hgslxkl.jpeg HTTP/1.1" 200 138229 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-18 10:53:28.659] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-18 10:53:28.660] [INFO] console - will check 1552878610840 1552877608660
[2019-03-18 10:53:28.660] [INFO] console - will update 1552879408660 1552877608660
[2019-03-18 10:53:28.665] [WARN] http - undefined - - "GET /posts/list?author=5c8c6e1e453a08c319b8ef5a HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-18 10:55:23.216] [WARN] http - undefined - - "GET /1552707194739-3hgslxkl.jpeg HTTP/1.1" 304 - "http://localhost:9000/document/new" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-18 10:56:30.822] [INFO] http - undefined - - "GET /1552707194739-3hgslxkl.jpeg HTTP/1.1" 200 138229 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-18 10:56:53.456] [WARN] http - undefined - - "GET /1552707194739-3hgslxkl.jpeg HTTP/1.1" 304 - "http://localhost:9000/document/new" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-18 10:58:04.106] [WARN] http - undefined - - "GET /1552707194739-3hgslxkl.jpeg HTTP/1.1" 304 - "http://localhost:9000/document/new" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-18 11:18:28.627] [INFO] console - redis server connect success!
[2019-03-18 11:18:28.630] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-18 11:18:32.224] [INFO] console - redis server connect success!
[2019-03-18 11:18:32.226] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-18 11:18:36.729] [INFO] console - redis server connect success!
[2019-03-18 11:18:36.731] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-18 11:18:41.498] [INFO] console - redis server connect success!
[2019-03-18 11:18:41.500] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-18 11:18:45.649] [INFO] console - redis server connect success!
[2019-03-18 11:18:45.651] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-18 11:25:44.260] [INFO] console - redis server connect success!
[2019-03-18 11:25:44.263] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-18 11:26:12.844] [INFO] console - redis server connect success!
[2019-03-18 11:26:12.845] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-18 15:41:12.145] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-18 15:41:12.207] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c8c6e1e453a08c319b8ef5a HTTP/1.1" 200 286 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-18 15:41:13.894] [INFO] http - undefined - - "GET /1552707194739-3hgslxkl.jpeg HTTP/1.1" 200 138229 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-18 15:41:18.849] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-18 15:41:18.855] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c8c6e1e453a08c319b8ef5a HTTP/1.1" 200 68 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-18 15:41:21.387] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-18 15:41:21.416] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 144 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-18 15:41:21.522] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-18 15:41:21.523] [INFO] console - will check 1552896681401 1552894881523
[2019-03-18 15:41:21.523] [INFO] console - will update 1552896681523 1552894881523
[2019-03-18 15:41:21.531] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c8c6e1e453a08c319b8ef5a HTTP/1.1" 200 340 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-18 15:41:27.811] [INFO] console - will check 1552896681523 1552894887811
[2019-03-18 15:41:27.812] [INFO] console - will update 1552896687811 1552894887811
[2019-03-18 15:41:27.812] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-18 15:41:27.816] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c8f04f1b2cafcdb1e08e82d HTTP/1.1" 200 109 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-18 15:41:28.646] [INFO] console - will check 1552896687811 1552894888646
[2019-03-18 15:41:28.646] [INFO] console - will update 1552896688646 1552894888646
[2019-03-18 15:41:28.647] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-18 15:41:28.650] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c8ef5d0b2cafcdb1e08e82b HTTP/1.1" 200 170 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-18 15:41:30.990] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-18 15:41:30.998] [WARN] http - undefined - - "GET /groups/list?creator_id=5c8c6e1e453a08c319b8ef5a HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-18 15:50:14.202] [INFO] console - redis server connect success!
[2019-03-18 15:50:14.205] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-18 15:54:12.303] [INFO] http - ::1 - - "POST /signup/login HTTP/1.1" 200 47 "" "PostmanRuntime/7.1.1"
[2019-03-18 15:54:18.465] [INFO] console - redis server connect success!
[2019-03-18 15:54:18.467] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-18 15:54:19.813] [ERROR] console - API ERROR:   [0m[97m[41mError[0m[90m:[0m[37m [0m[97m{}[0m
[0m ReferenceError: args is not defined
    at _callee$ (/workspace/DESserver/api/actions/api/signup/login.js:11:43)
    at tryCatch (/workspace/DESserver/node_modules/regenerator-runtime/runtime.js:62:40)
    at Generator.invoke [as _invoke] (/workspace/DESserver/node_modules/regenerator-runtime/runtime.js:296:22)
    at Generator.prototype.(anonymous function) [as next] (/workspace/DESserver/node_modules/regenerator-runtime/runtime.js:114:21)
    at step (/workspace/DESserver/node_modules/babel-runtime/helpers/asyncToGenerator.js:17:30)
    at /workspace/DESserver/node_modules/babel-runtime/helpers/asyncToGenerator.js:35:14
    at new Promise (<anonymous>)
    at new F (/workspace/DESserver/node_modules/core-js/library/modules/_export.js:36:28)
    at /workspace/DESserver/node_modules/babel-runtime/helpers/asyncToGenerator.js:14:12
    at /workspace/DESserver/api/actions/api/signup/login.js:82:17
    at /workspace/DESserver/api/api.js:90:7
    at Layer.handle [as handle_request] (/workspace/DESserver/node_modules/express/lib/router/layer.js:95:5)
    at trim_prefix (/workspace/DESserver/node_modules/express/lib/router/index.js:317:13)
    at /workspace/DESserver/node_modules/express/lib/router/index.js:284:7
    at Function.process_params (/workspace/DESserver/node_modules/express/lib/router/index.js:335:12)
    at next (/workspace/DESserver/node_modules/express/lib/router/index.js:275:10)
[2019-03-18 15:54:19.818] [INFO] http - ::1 - - "POST /signup/login HTTP/1.1" 200 58 "" "PostmanRuntime/7.1.1"
[2019-03-18 15:54:36.714] [INFO] console - redis server connect success!
[2019-03-18 15:54:36.715] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-18 15:54:36.870] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-18 15:54:36.898] [INFO] http - ::1 - - "POST /signup/login HTTP/1.1" 200 37 "" "PostmanRuntime/7.1.1"
[2019-03-18 15:55:01.695] [INFO] console - redis server connect success!
[2019-03-18 15:55:01.698] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-18 15:55:01.873] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-18 15:55:01.894] [INFO] http - ::1 - - "POST /signup/login HTTP/1.1" 200 144 "" "PostmanRuntime/7.1.1"
[2019-03-18 15:55:24.475] [INFO] console - redis server connect success!
[2019-03-18 15:55:24.477] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-18 15:55:25.329] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-18 15:55:25.354] [INFO] http - ::1 - - "POST /signup/login HTTP/1.1" 200 398 "" "PostmanRuntime/7.1.1"
[2019-03-18 16:01:03.473] [INFO] console - redis server connect success!
[2019-03-18 16:01:03.475] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-19 13:56:38.253] [INFO] console - redis server connect success!
[2019-03-19 13:56:38.255] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-19 13:56:49.056] [ERROR] http - undefined - - "GET /1552974726583-y5wccipb.jpeg HTTP/1.1" 404 - "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 13:57:00.173] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 13:57:00.227] [INFO] http - ::ffff:127.0.0.1 - - "POST /file/uploadAvatar HTTP/1.1" 200 58 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 13:57:00.285] [INFO] http - undefined - - "GET /1552975020167-a6whhea.jpeg HTTP/1.1" 200 8052 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 13:57:21.412] [INFO] console - redis server connect success!
[2019-03-19 13:57:21.413] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-19 14:03:52.874] [INFO] console - redis server connect success!
[2019-03-19 14:03:52.876] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-19 14:04:36.536] [INFO] console - redis server connect success!
[2019-03-19 14:04:36.538] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-19 14:04:37.811] [WARN] http - undefined - - "GET /1552975020167-a6whhea.jpeg HTTP/1.1" 304 - "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:04:56.020] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: 
     { content: '> test some posts\n\n\n| Head | Head | Head |\n| --- | --- | --- |\n| Data | Data | Data |\n| Data | Data | Data |\n' },
    key: undefined } ] 'results'
[2019-03-19 14:04:56.056] [INFO] http - ::ffff:127.0.0.1 - - "POST /posts/create HTTP/1.1" 200 13 "http://localhost:9000/document/new" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:04:57.473] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:04:57.474] [INFO] console - { _id: '5c8f641c7ef233df27cb6c07',
  name: 'zlx',
  pass: '6ed7e9a926ea015b',
  type: '0',
  __v: 0,
  avatar: 
   { _id: '5c90836839416124328c0faa',
     name: '1552974696873-o8ee2kxl.jpeg' },
  create_time: 1552901148294,
  deleted: false } 'req.session.user'
[2019-03-19 14:04:57.476] [INFO] console - will check 1552976515712 1552975497476
[2019-03-19 14:04:57.476] [INFO] console - will update 1552977297476 1552975497476
[2019-03-19 14:04:57.489] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c8f641c7ef233df27cb6c07 HTTP/1.1" 200 186 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:04:58.238] [INFO] console - will check 1552977297476 1552975498238
[2019-03-19 14:04:58.238] [INFO] console - will update 1552977298238 1552975498238
[2019-03-19 14:04:58.239] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:04:58.246] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c9086881cb391a63c7990bf HTTP/1.1" 200 211 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:05:28.406] [INFO] console - redis server connect success!
[2019-03-19 14:05:28.409] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-19 14:07:19.955] [INFO] console - redis server connect success!
[2019-03-19 14:07:19.957] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-19 14:08:15.103] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:08:15.125] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c8f641c7ef233df27cb6c07 HTTP/1.1" 200 47 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:08:22.664] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:08:22.673] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/search?author=5c8f641c7ef233df27cb6c07&title=t HTTP/1.1" 200 23 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:08:23.985] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:08:23.986] [INFO] http - undefined - - "GET /posts/search?author=5c8f641c7ef233df27cb6c07&title= HTTP/1.1" 200 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:08:24.829] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:08:24.832] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/search?author=5c8f641c7ef233df27cb6c07&title=q HTTP/1.1" 200 23 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:08:25.737] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:08:25.739] [INFO] http - undefined - - "GET /posts/search?author=5c8f641c7ef233df27cb6c07&title= HTTP/1.1" 200 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:08:26.453] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:08:26.456] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/search?author=5c8f641c7ef233df27cb6c07&title=s HTTP/1.1" 200 23 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:08:27.828] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:08:27.829] [INFO] http - undefined - - "GET /posts/search?author=5c8f641c7ef233df27cb6c07&title= HTTP/1.1" 200 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:08:31.061] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:08:31.061] [INFO] console - { _id: '5c8f641c7ef233df27cb6c07',
  name: 'zlx',
  pass: '6ed7e9a926ea015b',
  type: '0',
  __v: 0,
  avatar: 
   { _id: '5c90836839416124328c0faa',
     name: '1552974696873-o8ee2kxl.jpeg' },
  create_time: 1552901148294,
  deleted: false } 'req.session.user'
[2019-03-19 14:08:31.064] [INFO] console - will check 1552977298238 1552975711064
[2019-03-19 14:08:31.064] [INFO] console - will update 1552977511064 1552975711064
[2019-03-19 14:08:31.070] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c8f641c7ef233df27cb6c07 HTTP/1.1" 200 32 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:08:34.281] [WARN] http - undefined - - "GET /1552975020167-a6whhea.jpeg HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:08:34.311] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:08:34.311] [INFO] console - { _id: '5c8f641c7ef233df27cb6c07',
  name: 'zlx',
  pass: '6ed7e9a926ea015b',
  type: '0',
  __v: 0,
  avatar: 
   { _id: '5c90836839416124328c0faa',
     name: '1552974696873-o8ee2kxl.jpeg' },
  create_time: 1552901148294,
  deleted: false } 'req.session.user'
[2019-03-19 14:08:34.313] [INFO] console - will check 1552977511064 1552975714313
[2019-03-19 14:08:34.313] [INFO] console - will update 1552977514313 1552975714313
[2019-03-19 14:08:34.316] [WARN] http - undefined - - "GET /posts/list?author=5c8f641c7ef233df27cb6c07 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:10:39.428] [INFO] console - redis server connect success!
[2019-03-19 14:10:39.429] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-19 14:11:57.711] [INFO] console - redis server connect success!
[2019-03-19 14:11:57.713] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-19 14:12:08.145] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: { content: '> renrwer' }, key: undefined } ] 'results'
[2019-03-19 14:12:08.188] [INFO] http - ::ffff:127.0.0.1 - - "POST /posts/create HTTP/1.1" 200 13 "http://localhost:9000/document/new" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:12:10.799] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:12:10.800] [INFO] console - { _id: '5c8f641c7ef233df27cb6c07',
  name: 'zlx',
  pass: '6ed7e9a926ea015b',
  type: '0',
  __v: 0,
  avatar: 
   { _id: '5c90836839416124328c0faa',
     name: '1552974696873-o8ee2kxl.jpeg' },
  create_time: 1552901148294,
  deleted: false } 'req.session.user'
[2019-03-19 14:12:10.802] [INFO] console - will check 1552977514313 1552975930802
[2019-03-19 14:12:10.802] [INFO] console - will update 1552977730802 1552975930802
[2019-03-19 14:12:10.812] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c8f641c7ef233df27cb6c07 HTTP/1.1" 200 185 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:12:11.947] [INFO] console - will check 1552977730802 1552975931947
[2019-03-19 14:12:11.947] [INFO] console - will update 1552977731947 1552975931947
[2019-03-19 14:12:11.948] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:12:11.954] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c908838a39d15ca3c11813b HTTP/1.1" 200 103 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:12:14.154] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:12:14.160] [WARN] http - undefined - - "GET /groups/list?creator_id=5c8f641c7ef233df27cb6c07 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:12:17.690] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:12:17.698] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/search?author=5c8f641c7ef233df27cb6c07&title=1 HTTP/1.1" 200 23 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:12:18.724] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:12:18.726] [INFO] http - undefined - - "GET /posts/search?author=5c8f641c7ef233df27cb6c07&title= HTTP/1.1" 200 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:12:19.252] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:12:19.256] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/search?author=5c8f641c7ef233df27cb6c07&title=e HTTP/1.1" 200 23 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:12:21.362] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:12:21.365] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/search?author=5c8f641c7ef233df27cb6c07&title=w HTTP/1.1" 200 23 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:12:22.386] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:12:22.388] [INFO] http - undefined - - "GET /posts/search?author=5c8f641c7ef233df27cb6c07&title= HTTP/1.1" 200 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:12:23.752] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:12:23.755] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/search?author=5c8f641c7ef233df27cb6c07&title=s HTTP/1.1" 200 72 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:12:25.410] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: { posts: [Array] }, key: undefined },
  { object: { members: [] }, key: undefined } ] 'results'
[2019-03-19 14:12:25.421] [INFO] http - ::ffff:127.0.0.1 - - "POST /groups/create HTTP/1.1" 200 13 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:12:25.463] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:12:25.473] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c8f641c7ef233df27cb6c07 HTTP/1.1" 200 285 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:13:22.159] [INFO] console - redis server connect success!
[2019-03-19 14:13:22.163] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-19 14:13:26.014] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:13:26.018] [INFO] console - { _id: '5c8f641c7ef233df27cb6c07',
  name: 'zlx',
  pass: '6ed7e9a926ea015b',
  type: '0',
  __v: 0,
  avatar: 
   { _id: '5c90836839416124328c0faa',
     name: '1552974696873-o8ee2kxl.jpeg' },
  create_time: 1552901148294,
  deleted: false } 'req.session.user'
[2019-03-19 14:13:26.022] [INFO] console - will check 1552977731947 1552976006022
[2019-03-19 14:13:26.022] [INFO] console - will update 1552977806022 1552976006022
[2019-03-19 14:13:26.048] [ERROR] console - API ERROR:   [0m[97m[41mError[0m[90m:[0m[37m [0m[97m{}[0m
[0m TypeError: Post.find(...).populate(...).exec(...).sort is not a function
    at _callee$ (/workspace/DESserver/api/actions/api/posts/list.js:14:111)
    at tryCatch (/workspace/DESserver/node_modules/regenerator-runtime/runtime.js:62:40)
    at Generator.invoke [as _invoke] (/workspace/DESserver/node_modules/regenerator-runtime/runtime.js:296:22)
    at Generator.prototype.(anonymous function) [as next] (/workspace/DESserver/node_modules/regenerator-runtime/runtime.js:114:21)
    at step (/workspace/DESserver/node_modules/babel-runtime/helpers/asyncToGenerator.js:17:30)
    at /workspace/DESserver/node_modules/babel-runtime/helpers/asyncToGenerator.js:28:13
    at <anonymous>
    at process._tickCallback (internal/process/next_tick.js:188:7)
[2019-03-19 14:13:26.070] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c8f641c7ef233df27cb6c07 HTTP/1.1" 200 58 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:13:45.151] [INFO] console - redis server connect success!
[2019-03-19 14:13:45.153] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-19 14:13:51.857] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:13:51.860] [INFO] console - { _id: '5c8f641c7ef233df27cb6c07',
  name: 'zlx',
  pass: '6ed7e9a926ea015b',
  type: '0',
  __v: 0,
  avatar: 
   { _id: '5c90836839416124328c0faa',
     name: '1552974696873-o8ee2kxl.jpeg' },
  create_time: 1552901148294,
  deleted: false } 'req.session.user'
[2019-03-19 14:13:51.861] [INFO] console - will check 1552977806022 1552976031861
[2019-03-19 14:13:51.861] [INFO] console - will update 1552977831861 1552976031861
[2019-03-19 14:13:51.890] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c8f641c7ef233df27cb6c07 HTTP/1.1" 200 331 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:14:15.720] [INFO] console - redis server connect success!
[2019-03-19 14:14:15.721] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-19 14:14:18.980] [WARN] http - undefined - - "GET /1552975020167-a6whhea.jpeg HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:14:18.994] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:14:18.996] [INFO] console - { _id: '5c8f641c7ef233df27cb6c07',
  name: 'zlx',
  pass: '6ed7e9a926ea015b',
  type: '0',
  __v: 0,
  avatar: 
   { _id: '5c90836839416124328c0faa',
     name: '1552974696873-o8ee2kxl.jpeg' },
  create_time: 1552901148294,
  deleted: false } 'req.session.user'
[2019-03-19 14:14:18.998] [INFO] console - will check 1552977831861 1552976058998
[2019-03-19 14:14:18.998] [INFO] console - will update 1552977858998 1552976058998
[2019-03-19 14:14:19.038] [WARN] http - undefined - - "GET /posts/list?author=5c8f641c7ef233df27cb6c07 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:14:31.418] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:14:31.439] [WARN] http - undefined - - "GET /groups/list?creator_id=5c8f641c7ef233df27cb6c07 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:14:32.701] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:14:32.701] [INFO] console - { _id: '5c8f641c7ef233df27cb6c07',
  name: 'zlx',
  pass: '6ed7e9a926ea015b',
  type: '0',
  __v: 0,
  avatar: 
   { _id: '5c90836839416124328c0faa',
     name: '1552974696873-o8ee2kxl.jpeg' },
  create_time: 1552901148294,
  deleted: false } 'req.session.user'
[2019-03-19 14:14:32.702] [INFO] console - will check 1552977858998 1552976072702
[2019-03-19 14:14:32.702] [INFO] console - will update 1552977872702 1552976072702
[2019-03-19 14:14:32.708] [WARN] http - undefined - - "GET /posts/list?author=5c8f641c7ef233df27cb6c07 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:14:35.411] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:14:35.425] [WARN] http - undefined - - "GET /groups/list?creator_id=5c8f641c7ef233df27cb6c07 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:14:36.543] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:14:36.544] [INFO] console - { _id: '5c8f641c7ef233df27cb6c07',
  name: 'zlx',
  pass: '6ed7e9a926ea015b',
  type: '0',
  __v: 0,
  avatar: 
   { _id: '5c90836839416124328c0faa',
     name: '1552974696873-o8ee2kxl.jpeg' },
  create_time: 1552901148294,
  deleted: false } 'req.session.user'
[2019-03-19 14:14:36.544] [INFO] console - will check 1552977872702 1552976076544
[2019-03-19 14:14:36.545] [INFO] console - will update 1552977876544 1552976076544
[2019-03-19 14:14:36.552] [WARN] http - undefined - - "GET /posts/list?author=5c8f641c7ef233df27cb6c07 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:14:39.457] [INFO] console - will check 1552977876544 1552976079457
[2019-03-19 14:14:39.458] [INFO] console - will update 1552977879457 1552976079457
[2019-03-19 14:14:39.458] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:14:39.461] [WARN] http - undefined - - "GET /posts/getPost?id=5c908838a39d15ca3c11813b HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:14:53.820] [INFO] console - redis server connect success!
[2019-03-19 14:14:53.822] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-19 14:15:22.459] [INFO] console - redis server connect success!
[2019-03-19 14:15:22.461] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-19 14:20:53.621] [INFO] console - redis server connect success!
[2019-03-19 14:20:53.622] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-19 14:20:59.829] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:20:59.853] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator=5c8f641c7ef233df27cb6c07 HTTP/1.1" 200 47 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:21:19.546] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: { posts: [] }, key: undefined },
  { object: { members: [] }, key: undefined } ] 'results'
[2019-03-19 14:21:19.588] [INFO] http - ::ffff:127.0.0.1 - - "POST /groups/create HTTP/1.1" 200 13 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:21:19.623] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:21:19.629] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator=5c8f641c7ef233df27cb6c07 HTTP/1.1" 200 213 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:24:08.203] [INFO] console - redis server connect success!
[2019-03-19 14:24:08.205] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-19 14:24:09.043] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:24:09.064] [INFO] http - undefined - - "GET /1552975020167-a6whhea.jpeg HTTP/1.1" 200 8052 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:24:09.081] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator=5c8f641c7ef233df27cb6c07 HTTP/1.1" 200 359 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:24:38.914] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:24:38.918] [INFO] http - ::ffff:127.0.0.1 - - "GET /signup/search?name=z HTTP/1.1" 200 70 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:24:40.507] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { key: undefined },
  { object: { members: [Array] }, key: undefined } ] 'results'
[2019-03-19 14:24:40.525] [INFO] http - ::ffff:127.0.0.1 - - "POST /groups/update HTTP/1.1" 200 13 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:24:40.548] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:24:40.562] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator=5c8f641c7ef233df27cb6c07 HTTP/1.1" 200 619 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:26:11.968] [INFO] console - redis server connect success!
[2019-03-19 14:26:11.971] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-19 14:26:24.121] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:26:24.178] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator=5c8f641c7ef233df27cb6c07 HTTP/1.1" 200 494 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:26:29.671] [WARN] http - undefined - - "GET /1552975020167-a6whhea.jpeg HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:26:29.704] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:26:29.855] [WARN] http - undefined - - "GET /groups/list?creator=5c8f641c7ef233df27cb6c07 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:27:20.439] [INFO] console - redis server connect success!
[2019-03-19 14:27:20.441] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-19 14:27:24.444] [WARN] http - undefined - - "GET /1552975020167-a6whhea.jpeg HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:27:24.487] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:27:24.542] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator=5c8f641c7ef233df27cb6c07 HTTP/1.1" 200 515 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:27:32.645] [WARN] http - undefined - - "GET /1552975020167-a6whhea.jpeg HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:27:32.681] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:27:32.765] [WARN] http - undefined - - "GET /groups/list?creator=5c8f641c7ef233df27cb6c07 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:28:09.808] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:28:09.825] [WARN] http - undefined - - "GET /groups/list?creator=5c8f641c7ef233df27cb6c07 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:28:33.306] [INFO] console - redis server connect success!
[2019-03-19 14:28:33.308] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-19 14:32:18.087] [INFO] console - redis server connect success!
[2019-03-19 14:32:18.088] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-19 14:32:24.688] [INFO] console - redis server connect success!
[2019-03-19 14:32:24.690] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-19 14:33:36.520] [INFO] console - redis server connect success!
[2019-03-19 14:33:36.522] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-19 14:37:28.742] [INFO] console - redis server connect success!
[2019-03-19 14:37:28.744] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-19 14:38:04.083] [INFO] console - redis server connect success!
[2019-03-19 14:38:04.085] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-19 14:38:07.961] [WARN] http - undefined - - "GET /1552975020167-a6whhea.jpeg HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:38:08.120] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:38:08.182] [WARN] http - undefined - - "GET /groups/list?creator=5c8f641c7ef233df27cb6c07 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:38:11.496] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:38:11.496] [INFO] console - { _id: '5c8f641c7ef233df27cb6c07',
  name: 'zlx',
  pass: '6ed7e9a926ea015b',
  type: '0',
  __v: 0,
  avatar: 
   { _id: '5c90836839416124328c0faa',
     name: '1552974696873-o8ee2kxl.jpeg' },
  create_time: 1552901148294,
  deleted: false } 'req.session.user'
[2019-03-19 14:38:11.499] [INFO] console - will check 1552977879457 1552977491499
[2019-03-19 14:38:11.500] [INFO] console - will update 1552979291499 1552977491499
[2019-03-19 14:38:11.513] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c8f641c7ef233df27cb6c07 HTTP/1.1" 200 185 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:38:12.560] [INFO] console - will check 1552979291499 1552977492560
[2019-03-19 14:38:12.561] [INFO] console - will update 1552979292560 1552977492560
[2019-03-19 14:38:12.562] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:38:12.568] [WARN] http - undefined - - "GET /posts/getPost?id=5c908838a39d15ca3c11813b HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:38:14.576] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:38:14.595] [WARN] http - undefined - - "GET /groups/list?creator=5c8f641c7ef233df27cb6c07 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:38:22.596] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:38:22.600] [WARN] http - undefined - - "GET /posts/search?author=5c8f641c7ef233df27cb6c07&title=s HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:38:24.253] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: { posts: [Array] }, key: undefined },
  { key: undefined } ] 'results'
[2019-03-19 14:38:24.261] [INFO] http - ::ffff:127.0.0.1 - - "POST /groups/update HTTP/1.1" 200 13 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:38:24.279] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:38:24.304] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator=5c8f641c7ef233df27cb6c07 HTTP/1.1" 200 613 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:38:25.834] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:38:25.840] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/detail?_id=5c908a5f3a3b06093d4fc909 HTTP/1.1" 200 283 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:38:26.603] [INFO] console - will check 1552979292560 1552977506603
[2019-03-19 14:38:26.603] [INFO] console - will update 1552979306603 1552977506603
[2019-03-19 14:38:26.604] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:38:26.608] [WARN] http - undefined - - "GET /posts/getPost?id=5c908838a39d15ca3c11813b HTTP/1.1" 304 - "http://localhost:9000/project/detail" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:38:43.787] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: 
     { content: '> renrwerweqe\n\n\n\n\n| Head | Head | Head | Head |\n| --- | --- | --- | --- |\n| Data | Data | Data | Data |\n| Data | Data | Data | Data |\n| Data | Data | Data | Data |\n' },
    key: undefined } ] 'results'
[2019-03-19 14:38:43.801] [INFO] http - ::ffff:127.0.0.1 - - "POST /posts/update HTTP/1.1" 200 296 "http://localhost:9000/project/detail" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:38:46.572] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:38:46.572] [INFO] console - { _id: '5c8f641c7ef233df27cb6c07',
  name: 'zlx',
  pass: '6ed7e9a926ea015b',
  type: '0',
  __v: 0,
  avatar: 
   { _id: '5c90836839416124328c0faa',
     name: '1552974696873-o8ee2kxl.jpeg' },
  create_time: 1552901148294,
  deleted: false } 'req.session.user'
[2019-03-19 14:38:46.573] [INFO] console - will check 1552979306603 1552977526573
[2019-03-19 14:38:46.573] [INFO] console - will update 1552979326573 1552977526573
[2019-03-19 14:38:46.577] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c8f641c7ef233df27cb6c07 HTTP/1.1" 200 188 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:38:47.501] [INFO] console - will check 1552979326573 1552977527501
[2019-03-19 14:38:47.502] [INFO] console - will update 1552979327501 1552977527501
[2019-03-19 14:38:47.502] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:38:47.506] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c908838a39d15ca3c11813b HTTP/1.1" 200 271 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:38:49.303] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:38:49.316] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator=5c8f641c7ef233df27cb6c07 HTTP/1.1" 200 619 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:39:00.477] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: { content: '## dsfndsf' }, key: undefined } ] 'results'
[2019-03-19 14:39:00.505] [INFO] http - ::ffff:127.0.0.1 - - "POST /posts/create HTTP/1.1" 200 13 "http://localhost:9000/document/new" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:39:01.809] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:39:01.824] [WARN] http - undefined - - "GET /groups/list?creator=5c8f641c7ef233df27cb6c07 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:39:07.671] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:39:07.672] [INFO] console - { _id: '5c8f641c7ef233df27cb6c07',
  name: 'zlx',
  pass: '6ed7e9a926ea015b',
  type: '0',
  __v: 0,
  avatar: 
   { _id: '5c90836839416124328c0faa',
     name: '1552974696873-o8ee2kxl.jpeg' },
  create_time: 1552901148294,
  deleted: false } 'req.session.user'
[2019-03-19 14:39:07.672] [INFO] console - will check 1552979327501 1552977547672
[2019-03-19 14:39:07.672] [INFO] console - will update 1552979347672 1552977547672
[2019-03-19 14:39:07.680] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c8f641c7ef233df27cb6c07 HTTP/1.1" 200 342 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:39:09.486] [INFO] console - will check 1552979347672 1552977549486
[2019-03-19 14:39:09.486] [INFO] console - will update 1552979349486 1552977549486
[2019-03-19 14:39:09.486] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:39:09.489] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c908e8447a5445c3d126fa2 HTTP/1.1" 200 104 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:39:11.573] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:39:11.587] [WARN] http - undefined - - "GET /groups/list?creator=5c8f641c7ef233df27cb6c07 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:39:14.860] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:39:14.864] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/search?author=5c8f641c7ef233df27cb6c07&title=s HTTP/1.1" 200 75 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:39:15.073] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:39:15.076] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/search?author=5c8f641c7ef233df27cb6c07&title=ss HTTP/1.1" 200 23 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:39:15.259] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:39:15.261] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/search?author=5c8f641c7ef233df27cb6c07&title=sss HTTP/1.1" 200 23 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:39:16.305] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:39:16.308] [WARN] http - undefined - - "GET /posts/search?author=5c8f641c7ef233df27cb6c07&title=ss HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:39:16.560] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:39:16.562] [WARN] http - undefined - - "GET /posts/search?author=5c8f641c7ef233df27cb6c07&title=s HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:39:18.753] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: { posts: [Array] }, key: undefined },
  { key: undefined } ] 'results'
[2019-03-19 14:39:18.758] [INFO] http - ::ffff:127.0.0.1 - - "POST /groups/update HTTP/1.1" 200 13 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:39:18.779] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:39:18.794] [WARN] http - undefined - - "GET /groups/list?creator=5c8f641c7ef233df27cb6c07 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:39:24.566] [WARN] http - undefined - - "GET /1552975020167-a6whhea.jpeg HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:39:24.605] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:39:24.616] [WARN] http - undefined - - "GET /groups/list?creator=5c8f641c7ef233df27cb6c07 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:39:34.140] [WARN] http - undefined - - "GET /1552975020167-a6whhea.jpeg HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:39:34.171] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:39:34.186] [WARN] http - undefined - - "GET /groups/list?creator=5c8f641c7ef233df27cb6c07 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:39:54.908] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:39:54.914] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/detail?_id=5c908a5f3a3b06093d4fc909 HTTP/1.1" 200 286 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:39:56.006] [INFO] console - will check 1552979349486 1552977596006
[2019-03-19 14:39:56.007] [INFO] console - will update 1552979396006 1552977596006
[2019-03-19 14:39:56.007] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:39:56.011] [WARN] http - undefined - - "GET /posts/getPost?id=5c908838a39d15ca3c11813b HTTP/1.1" 304 - "http://localhost:9000/project/detail" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:39:57.709] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:39:57.723] [WARN] http - undefined - - "GET /groups/list?creator=5c8f641c7ef233df27cb6c07 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:40:01.085] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:40:01.085] [INFO] console - { _id: '5c8f641c7ef233df27cb6c07',
  name: 'zlx',
  pass: '6ed7e9a926ea015b',
  type: '0',
  __v: 0,
  avatar: 
   { _id: '5c90836839416124328c0faa',
     name: '1552974696873-o8ee2kxl.jpeg' },
  create_time: 1552901148294,
  deleted: false } 'req.session.user'
[2019-03-19 14:40:01.085] [INFO] console - will check 1552979396006 1552977601085
[2019-03-19 14:40:01.086] [INFO] console - will update 1552979401085 1552977601085
[2019-03-19 14:40:01.092] [WARN] http - undefined - - "GET /posts/list?author=5c8f641c7ef233df27cb6c07 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:40:03.549] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:40:03.569] [WARN] http - undefined - - "GET /groups/list?creator=5c8f641c7ef233df27cb6c07 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:40:08.240] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:40:08.242] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/search?author=5c8f641c7ef233df27cb6c07&title=f HTTP/1.1" 200 72 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:40:10.416] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: { posts: [Array] }, key: undefined },
  { key: undefined } ] 'results'
[2019-03-19 14:40:10.419] [INFO] http - ::ffff:127.0.0.1 - - "POST /groups/update HTTP/1.1" 200 13 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:40:10.447] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:40:10.483] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator=5c8f641c7ef233df27cb6c07 HTTP/1.1" 200 719 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:40:11.722] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:40:11.728] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/detail?_id=5c908a5f3a3b06093d4fc909 HTTP/1.1" 200 336 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:40:12.767] [INFO] console - will check 1552979401085 1552977612767
[2019-03-19 14:40:12.768] [INFO] console - will update 1552979412767 1552977612767
[2019-03-19 14:40:12.768] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:40:12.771] [WARN] http - undefined - - "GET /posts/getPost?id=5c908e8447a5445c3d126fa2 HTTP/1.1" 304 - "http://localhost:9000/project/detail" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:40:13.530] [INFO] console - will check 1552979412767 1552977613529
[2019-03-19 14:40:13.530] [INFO] console - will update 1552979413529 1552977613529
[2019-03-19 14:40:13.530] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:40:13.533] [WARN] http - undefined - - "GET /posts/getPost?id=5c908838a39d15ca3c11813b HTTP/1.1" 304 - "http://localhost:9000/project/detail" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:40:17.245] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:40:17.263] [WARN] http - undefined - - "GET /groups/list?creator=5c8f641c7ef233df27cb6c07 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:40:19.216] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:40:19.217] [INFO] console - { _id: '5c8f641c7ef233df27cb6c07',
  name: 'zlx',
  pass: '6ed7e9a926ea015b',
  type: '0',
  __v: 0,
  avatar: 
   { _id: '5c90836839416124328c0faa',
     name: '1552974696873-o8ee2kxl.jpeg' },
  create_time: 1552901148294,
  deleted: false } 'req.session.user'
[2019-03-19 14:40:19.217] [INFO] console - will check 1552979413529 1552977619217
[2019-03-19 14:40:19.218] [INFO] console - will update 1552979419217 1552977619217
[2019-03-19 14:40:19.223] [WARN] http - undefined - - "GET /posts/list?author=5c8f641c7ef233df27cb6c07 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:40:23.281] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:40:23.309] [WARN] http - undefined - - "GET /groups/list?creator=5c8f641c7ef233df27cb6c07 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:40:25.792] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:40:25.798] [WARN] http - undefined - - "GET /groups/detail?_id=5c908a5f3a3b06093d4fc909 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:41:31.864] [INFO] console - redis server connect success!
[2019-03-19 14:41:31.865] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-19 14:41:36.206] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:41:36.209] [INFO] console - { _id: '5c8f641c7ef233df27cb6c07',
  name: 'zlx',
  pass: '6ed7e9a926ea015b',
  type: '0',
  __v: 0,
  avatar: 
   { _id: '5c90836839416124328c0faa',
     name: '1552974696873-o8ee2kxl.jpeg' },
  create_time: 1552901148294,
  deleted: false } 'req.session.user'
[2019-03-19 14:41:36.212] [INFO] console - will check 1552979419217 1552977696212
[2019-03-19 14:41:36.213] [INFO] console - will update 1552979496212 1552977696212
[2019-03-19 14:41:36.242] [WARN] http - undefined - - "GET /posts/list?author=5c8f641c7ef233df27cb6c07 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:41:39.565] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:41:39.605] [WARN] http - undefined - - "GET /groups/list?creator=5c8f641c7ef233df27cb6c07 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:41:40.664] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:41:40.677] [WARN] http - undefined - - "GET /groups/detail?_id=5c908a5f3a3b06093d4fc909 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:41:48.536] [INFO] console - redis server connect success!
[2019-03-19 14:41:48.538] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-19 14:42:32.565] [INFO] console - redis server connect success!
[2019-03-19 14:42:32.567] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-19 14:42:35.213] [WARN] http - undefined - - "GET /1552975020167-a6whhea.jpeg HTTP/1.1" 304 - "http://localhost:9000/project/detail" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:42:37.429] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:42:37.481] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator=5c8f641c7ef233df27cb6c07 HTTP/1.1" 200 831 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:42:43.393] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:42:43.405] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/detail?_id=5c908a5f3a3b06093d4fc909 HTTP/1.1" 200 392 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:44:03.529] [INFO] console - redis server connect success!
[2019-03-19 14:44:03.531] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-19 14:44:04.889] [WARN] http - undefined - - "GET /1552975020167-a6whhea.jpeg HTTP/1.1" 304 - "http://localhost:9000/project/detail" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:44:07.481] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:44:07.520] [WARN] http - undefined - - "GET /groups/list?creator=5c8f641c7ef233df27cb6c07 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:44:09.240] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:44:09.249] [WARN] http - undefined - - "GET /groups/detail?_id=5c908a5f3a3b06093d4fc909 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:44:58.789] [INFO] console - redis server connect success!
[2019-03-19 14:44:58.791] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-19 14:45:02.237] [INFO] http - undefined - - "GET /1552975020167-a6whhea.jpeg HTTP/1.1" 200 8052 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:45:02.242] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:45:02.303] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator=5c8f641c7ef233df27cb6c07 HTTP/1.1" 200 831 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:45:10.727] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:45:10.740] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/detail?_id=5c908a5f3a3b06093d4fc909 HTTP/1.1" 200 392 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:45:37.788] [INFO] console - redis server connect success!
[2019-03-19 14:45:37.791] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-19 14:45:45.567] [INFO] console - redis server connect success!
[2019-03-19 14:45:45.568] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-19 14:46:57.343] [INFO] console - redis server connect success!
[2019-03-19 14:46:57.344] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-03-19 14:46:59.134] [INFO] console - will check 1552979496212 1552978019134
[2019-03-19 14:46:59.134] [INFO] console - will update 1552979819134 1552978019134
[2019-03-19 14:46:59.137] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:46:59.161] [WARN] http - undefined - - "GET /posts/getPost?id=5c908e8447a5445c3d126fa2 HTTP/1.1" 304 - "http://localhost:9000/project/detail" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:46:59.885] [INFO] console - will check 1552979819134 1552978019885
[2019-03-19 14:46:59.886] [INFO] console - will update 1552979819885 1552978019885
[2019-03-19 14:46:59.886] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:46:59.891] [WARN] http - undefined - - "GET /posts/getPost?id=5c908838a39d15ca3c11813b HTTP/1.1" 304 - "http://localhost:9000/project/detail" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:48:23.787] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:48:23.794] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 40 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:48:30.560] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { key: undefined } ] 'results'
[2019-03-19 14:48:30.597] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/account HTTP/1.1" 200 13 "http://localhost:9000/signup" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:48:34.465] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:48:34.476] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 143 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:48:34.597] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:48:34.597] [INFO] console - { _id: '5c8f641c7ef233df27cb6c07',
  name: 'zlx',
  pass: '6ed7e9a926ea015b',
  type: '0',
  __v: 0,
  avatar: 
   { _id: '5c9084ac9451a1fa38c65dbb',
     name: '1552975020167-a6whhea.jpeg' },
  create_time: 1552901148294,
  deleted: false } 'req.session.user'
[2019-03-19 14:48:34.597] [INFO] console - will check 1552979914475 1552978114597
[2019-03-19 14:48:34.598] [INFO] console - will update 1552979914597 1552978114597
[2019-03-19 14:48:34.606] [WARN] http - undefined - - "GET /posts/list?author=5c8f641c7ef233df27cb6c07 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:48:42.186] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:48:42.191] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 106 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:48:42.292] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:48:42.292] [INFO] console - { _id: '5c9090be7880757c3d007763',
  name: 'zlx1',
  pass: '6ed7e9a926ea015b',
  type: '0',
  __v: 0,
  create_time: 1552978110564,
  deleted: false } 'req.session.user'
[2019-03-19 14:48:42.293] [INFO] console - will check 1552979922190 1552978122293
[2019-03-19 14:48:42.293] [INFO] console - will update 1552979922293 1552978122293
[2019-03-19 14:48:42.296] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c9090be7880757c3d007763 HTTP/1.1" 200 32 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:48:47.782] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:48:47.783] [INFO] console - { _id: '5c9090be7880757c3d007763',
  name: 'zlx1',
  pass: '6ed7e9a926ea015b',
  type: '0',
  __v: 0,
  create_time: 1552978110564,
  deleted: false } 'req.session.user'
[2019-03-19 14:48:47.783] [INFO] console - will check 1552979922293 1552978127783
[2019-03-19 14:48:47.784] [INFO] console - will update 1552979927783 1552978127783
[2019-03-19 14:48:47.787] [WARN] http - undefined - - "GET /posts/list?author=5c9090be7880757c3d007763 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:48:49.166] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:48:49.183] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator=5c9090be7880757c3d007763 HTTP/1.1" 200 47 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:48:59.851] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:48:59.865] [WARN] http - undefined - - "GET /groups/list?creator=5c9090be7880757c3d007763 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:49:05.814] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: { posts: [] }, key: undefined },
  { object: { members: [] }, key: undefined } ] 'results'
[2019-03-19 14:49:05.833] [INFO] http - ::ffff:127.0.0.1 - - "POST /groups/create HTTP/1.1" 200 13 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:49:05.876] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:49:05.885] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator=5c9090be7880757c3d007763 HTTP/1.1" 200 234 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:49:18.275] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: { content: '## kfwe' }, key: undefined } ] 'results'
[2019-03-19 14:49:18.284] [INFO] http - ::ffff:127.0.0.1 - - "POST /posts/create HTTP/1.1" 200 13 "http://localhost:9000/document/new" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:49:19.319] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:49:19.320] [INFO] console - { _id: '5c9090be7880757c3d007763',
  name: 'zlx1',
  pass: '6ed7e9a926ea015b',
  type: '0',
  __v: 0,
  create_time: 1552978110564,
  deleted: false } 'req.session.user'
[2019-03-19 14:49:19.321] [INFO] console - will check 1552979927783 1552978159321
[2019-03-19 14:49:19.321] [INFO] console - will update 1552979959321 1552978159321
[2019-03-19 14:49:19.327] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/list?author=5c9090be7880757c3d007763 HTTP/1.1" 200 183 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:49:20.395] [INFO] console - will check 1552979959321 1552978160395
[2019-03-19 14:49:20.396] [INFO] console - will update 1552979960395 1552978160395
[2019-03-19 14:49:20.396] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:49:20.403] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost?id=5c9090ee7880757c3d007765 HTTP/1.1" 200 99 "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:49:21.625] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:49:21.634] [WARN] http - undefined - - "GET /groups/list?creator=5c9090be7880757c3d007763 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:49:25.873] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:49:25.877] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/search?author=5c9090be7880757c3d007763&title=q HTTP/1.1" 200 70 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:49:28.475] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  { object: { posts: [Array] }, key: undefined },
  { key: undefined } ] 'results'
[2019-03-19 14:49:28.486] [INFO] http - ::ffff:127.0.0.1 - - "POST /groups/update HTTP/1.1" 200 13 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:49:28.507] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:49:28.525] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator=5c9090be7880757c3d007763 HTTP/1.1" 200 309 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:49:34.030] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:49:34.034] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/detail?_id=5c9090e17880757c3d007764 HTTP/1.1" 200 261 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:49:34.965] [INFO] console - will check 1552979960395 1552978174965
[2019-03-19 14:49:34.965] [INFO] console - will update 1552979974965 1552978174965
[2019-03-19 14:49:34.965] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:49:34.968] [WARN] http - undefined - - "GET /posts/getPost?id=5c9090ee7880757c3d007765 HTTP/1.1" 304 - "http://localhost:9000/project/detail" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:49:36.361] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:49:36.370] [WARN] http - undefined - - "GET /groups/list?creator=5c9090be7880757c3d007763 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:49:51.569] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:49:51.585] [INFO] http - ::ffff:127.0.0.1 - - "POST /file/uploadAvatar HTTP/1.1" 200 58 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:49:51.643] [INFO] http - undefined - - "GET /1552978191552-eatuh4n.jpeg HTTP/1.1" 200 273130 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:49:57.536] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:49:57.549] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/update HTTP/1.1" 200 69 "http://localhost:9000/setting/user" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:50:01.741] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:50:01.741] [INFO] console - { _id: '5c9090be7880757c3d007763',
  name: 'zlx1',
  pass: '6ed7e9a926ea015b',
  type: '0',
  __v: 0,
  create_time: 1552978110564,
  deleted: false } 'req.session.user'
[2019-03-19 14:50:01.742] [INFO] console - will check 1552979974965 1552978201742
[2019-03-19 14:50:01.742] [INFO] console - will update 1552980001742 1552978201742
[2019-03-19 14:50:01.747] [WARN] http - undefined - - "GET /posts/list?author=5c9090be7880757c3d007763 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:50:02.832] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:50:02.842] [WARN] http - undefined - - "GET /groups/list?creator=5c9090be7880757c3d007763 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:50:06.903] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:50:06.915] [WARN] http - undefined - - "GET /groups/list?creator=5c9090be7880757c3d007763 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:52:49.048] [INFO] http - ::ffff:127.0.0.1 - - "GET /groups/list?creator_id=5c9090be7880757c3d007763 HTTP/1.1" 200 50 "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:52:49.927] [WARN] http - undefined - - "GET /1552978191552-eatuh4n.jpeg HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:52:49.965] [WARN] http - undefined - - "GET /groups/list?creator_id=5c9090be7880757c3d007763 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 14:52:53.246] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 14:52:53.341] [WARN] http - undefined - - "GET /groups/list?creator=5c9090be7880757c3d007763 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 15:07:23.269] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ],
  [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 15:07:23.289] [INFO] http - ::ffff:127.0.0.1 - - "POST /signup/login HTTP/1.1" 200 143 "http://localhost:9000/login" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 15:07:23.437] [WARN] http - undefined - - "GET /1552975020167-a6whhea.jpeg HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 15:07:23.448] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 15:07:23.449] [INFO] console - { _id: '5c8f641c7ef233df27cb6c07',
  name: 'zlx',
  pass: '6ed7e9a926ea015b',
  type: '0',
  __v: 0,
  avatar: 
   { _id: '5c9084ac9451a1fa38c65dbb',
     name: '1552975020167-a6whhea.jpeg' },
  create_time: 1552901148294,
  deleted: false } 'req.session.user'
[2019-03-19 15:07:23.449] [INFO] console - will check 1552981043287 1552979243449
[2019-03-19 15:07:23.450] [INFO] console - will update 1552981043449 1552979243449
[2019-03-19 15:07:23.465] [WARN] http - undefined - - "GET /posts/list?author=5c8f641c7ef233df27cb6c07 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 15:07:26.266] [INFO] console - will check 1552981043449 1552979246266
[2019-03-19 15:07:26.266] [INFO] console - will update 1552981046266 1552979246266
[2019-03-19 15:07:26.266] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 15:07:26.271] [WARN] http - undefined - - "GET /posts/getPost?id=5c908e8447a5445c3d126fa2 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 15:07:26.945] [INFO] console - will check 1552981046266 1552979246945
[2019-03-19 15:07:26.945] [INFO] console - will update 1552981046945 1552979246945
[2019-03-19 15:07:26.946] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 15:07:26.949] [WARN] http - undefined - - "GET /posts/getPost?id=5c908838a39d15ca3c11813b HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 15:07:27.779] [INFO] console - will check 1552981046945 1552979247779
[2019-03-19 15:07:27.780] [INFO] console - will update 1552981047779 1552979247779
[2019-03-19 15:07:27.780] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 15:07:27.784] [WARN] http - undefined - - "GET /posts/getPost?id=5c908e8447a5445c3d126fa2 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 15:07:28.627] [INFO] console - will check 1552981047779 1552979248627
[2019-03-19 15:07:28.627] [INFO] console - will update 1552981048627 1552979248627
[2019-03-19 15:07:28.627] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 15:07:28.630] [WARN] http - undefined - - "GET /posts/getPost?id=5c908838a39d15ca3c11813b HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 15:07:29.232] [INFO] console - will check 1552981048627 1552979249232
[2019-03-19 15:07:29.232] [INFO] console - will update 1552981049232 1552979249232
[2019-03-19 15:07:29.233] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 15:07:29.236] [WARN] http - undefined - - "GET /posts/getPost?id=5c908e8447a5445c3d126fa2 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 15:07:33.940] [INFO] console - will check 1552981049232 1552979253940
[2019-03-19 15:07:33.940] [INFO] console - will update 1552981053940 1552979253940
[2019-03-19 15:07:33.941] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 15:07:33.944] [WARN] http - undefined - - "GET /posts/getPost?id=5c908e8447a5445c3d126fa2 HTTP/1.1" 304 - "http://localhost:9000/document/my" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-19 15:07:46.560] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-03-19 15:07:46.584] [WARN] http - undefined - - "GET /groups/list?creator=5c8f641c7ef233df27cb6c07 HTTP/1.1" 304 - "http://localhost:9000/project/all" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"
[2019-03-20 14:03:57.915] [INFO] console - redis server connect success!
[2019-03-20 14:03:57.916] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-08-08 14:36:03.078] [ERROR] console - Error: connect ECONNREFUSED 127.0.0.1:27017
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1161:14)
[2019-08-08 14:36:05.084] [ERROR] console - Error: connect ECONNREFUSED 127.0.0.1:27017
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1161:14)
[2019-08-08 14:36:06.576] [ERROR] console - Error: connect ECONNREFUSED 127.0.0.1:27017
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1161:14)
[2019-08-08 14:36:07.954] [ERROR] console - Error: connect ECONNREFUSED 127.0.0.1:27017
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1161:14)
[2019-08-08 14:36:09.331] [ERROR] console - Error: connect ECONNREFUSED 127.0.0.1:27017
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1161:14)
[2019-08-08 14:36:10.817] [ERROR] console - Error: connect ECONNREFUSED 127.0.0.1:27017
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1161:14)
[2019-08-08 14:36:12.277] [ERROR] console - Error: connect ECONNREFUSED 127.0.0.1:27017
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1161:14)
[2019-08-08 14:36:13.823] [ERROR] console - Error: connect ECONNREFUSED 127.0.0.1:27017
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1161:14)
[2019-08-08 14:36:15.286] [ERROR] console - Error: connect ECONNREFUSED 127.0.0.1:27017
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1161:14)
[2019-08-08 14:36:16.955] [ERROR] console - Error: connect ECONNREFUSED 127.0.0.1:27017
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1161:14)
[2019-08-08 14:36:18.454] [ERROR] console - Error: connect ECONNREFUSED 127.0.0.1:27017
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1161:14)
[2019-08-08 14:36:19.855] [ERROR] console - Error: connect ECONNREFUSED 127.0.0.1:27017
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1161:14)
[2019-08-08 14:36:21.254] [ERROR] console - Error: connect ECONNREFUSED 127.0.0.1:27017
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1161:14)
[2019-08-08 14:36:22.673] [ERROR] console - Error: connect ECONNREFUSED 127.0.0.1:27017
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1161:14)
[2019-08-08 14:36:24.036] [ERROR] console - Error: connect ECONNREFUSED 127.0.0.1:27017
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1161:14)
[2019-08-08 14:36:25.746] [ERROR] console - Error: connect ECONNREFUSED 127.0.0.1:27017
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1161:14)
[2019-08-08 14:36:27.395] [ERROR] console - Error: connect ECONNREFUSED 127.0.0.1:27017
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1161:14)
[2019-08-08 14:36:28.882] [ERROR] console - Error: connect ECONNREFUSED 127.0.0.1:27017
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1161:14)
[2019-08-08 14:36:30.352] [ERROR] console - Error: connect ECONNREFUSED 127.0.0.1:27017
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1161:14)
[2019-08-08 14:36:32.067] [ERROR] console - Error: connect ECONNREFUSED 127.0.0.1:27017
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1161:14)
[2019-08-08 14:36:33.460] [ERROR] console - Error: connect ECONNREFUSED 127.0.0.1:27017
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1161:14)
[2019-08-08 14:36:34.866] [ERROR] console - Error: connect ECONNREFUSED 127.0.0.1:27017
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1161:14)
[2019-08-08 14:36:36.402] [ERROR] console - Error: connect ECONNREFUSED 127.0.0.1:27017
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1161:14)
[2019-08-08 14:36:37.854] [ERROR] console - Error: connect ECONNREFUSED 127.0.0.1:27017
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1161:14)
[2019-08-08 14:36:39.274] [ERROR] console - Error: connect ECONNREFUSED 127.0.0.1:27017
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1161:14)
[2019-08-08 14:36:40.785] [ERROR] console - Error: connect ECONNREFUSED 127.0.0.1:27017
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1161:14)
[2019-08-08 14:36:42.260] [ERROR] console - Error: connect ECONNREFUSED 127.0.0.1:27017
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1161:14)
[2019-08-08 14:36:43.662] [ERROR] console - Error: connect ECONNREFUSED 127.0.0.1:27017
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1161:14)
[2019-08-08 14:36:44.971] [ERROR] console - Error: connect ECONNREFUSED 127.0.0.1:27017
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1161:14)
[2019-08-08 14:36:46.357] [ERROR] console - Error: connect ECONNREFUSED 127.0.0.1:27017
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1161:14)
[2019-08-08 14:36:47.771] [ERROR] console - Error: connect ECONNREFUSED 127.0.0.1:27017
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1161:14)
[2019-08-08 14:36:49.192] [ERROR] console - Error: connect ECONNREFUSED 127.0.0.1:27017
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1161:14)
[2019-08-08 14:36:50.566] [ERROR] console - Error: connect ECONNREFUSED 127.0.0.1:27017
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1161:14)
[2019-08-08 14:36:51.952] [ERROR] console - Error: connect ECONNREFUSED 127.0.0.1:27017
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1161:14)
[2019-08-08 14:36:53.324] [ERROR] console - Error: connect ECONNREFUSED 127.0.0.1:27017
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1161:14)
[2019-08-08 14:36:54.698] [ERROR] console - Error: connect ECONNREFUSED 127.0.0.1:27017
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1161:14)
[2019-08-08 14:36:56.223] [ERROR] console - Error: connect ECONNREFUSED 127.0.0.1:27017
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1161:14)
[2019-08-08 14:36:57.607] [ERROR] console - Error: connect ECONNREFUSED 127.0.0.1:27017
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1161:14)
[2019-08-08 14:36:59.111] [ERROR] console - Error: connect ECONNREFUSED 127.0.0.1:27017
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1161:14)
[2019-08-08 14:37:00.493] [ERROR] console - Error: connect ECONNREFUSED 127.0.0.1:27017
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1161:14)
[2019-08-08 14:37:01.863] [ERROR] console - Error: connect ECONNREFUSED 127.0.0.1:27017
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1161:14)
[2019-08-08 14:37:03.255] [ERROR] console - Error: connect ECONNREFUSED 127.0.0.1:27017
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1161:14)
[2019-08-08 14:37:04.594] [ERROR] console - Error: connect ECONNREFUSED 127.0.0.1:27017
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1161:14)
[2019-08-08 14:37:06.031] [ERROR] console - Error: connect ECONNREFUSED 127.0.0.1:27017
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1161:14)
[2019-08-08 14:37:07.502] [ERROR] console - Error: connect ECONNREFUSED 127.0.0.1:27017
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1161:14)
[2019-08-08 14:37:08.933] [ERROR] console - Error: connect ECONNREFUSED 127.0.0.1:27017
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1161:14)
[2019-08-08 14:37:10.345] [ERROR] console - Error: connect ECONNREFUSED 127.0.0.1:27017
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1161:14)
[2019-08-08 14:37:11.676] [ERROR] console - Error: connect ECONNREFUSED 127.0.0.1:27017
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1161:14)
[2019-08-08 14:37:13.110] [ERROR] console - Error: connect ECONNREFUSED 127.0.0.1:27017
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1161:14)
[2019-08-08 14:37:14.566] [ERROR] console - Error: connect ECONNREFUSED 127.0.0.1:27017
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1161:14)
[2019-08-08 14:37:15.910] [ERROR] console - Error: connect ECONNREFUSED 127.0.0.1:27017
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1161:14)
[2019-08-08 14:37:17.248] [ERROR] console - Error: connect ECONNREFUSED 127.0.0.1:27017
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1161:14)
[2019-08-08 14:37:18.544] [ERROR] console - Error: connect ECONNREFUSED 127.0.0.1:27017
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1161:14)
[2019-08-08 14:37:19.845] [ERROR] console - Error: connect ECONNREFUSED 127.0.0.1:27017
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1161:14)
[2019-08-08 14:37:21.154] [ERROR] console - Error: connect ECONNREFUSED 127.0.0.1:27017
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1161:14)
[2019-08-08 14:37:22.436] [ERROR] console - Error: connect ECONNREFUSED 127.0.0.1:27017
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1161:14)
[2019-08-08 14:37:23.755] [ERROR] console - Error: connect ECONNREFUSED 127.0.0.1:27017
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1161:14)
[2019-08-08 14:37:25.100] [ERROR] console - Error: connect ECONNREFUSED 127.0.0.1:27017
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1161:14)
[2019-08-08 14:37:26.420] [ERROR] console - Error: connect ECONNREFUSED 127.0.0.1:27017
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1161:14)
[2019-08-08 14:37:28.145] [ERROR] console - Error: connect ECONNREFUSED 127.0.0.1:27017
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1161:14)
[2019-08-08 14:37:29.471] [ERROR] console - Error: connect ECONNREFUSED 127.0.0.1:27017
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1161:14)
[2019-08-08 14:37:30.894] [ERROR] console - Error: connect ECONNREFUSED 127.0.0.1:27017
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1161:14)
[2019-08-08 14:37:32.265] [ERROR] console - Error: connect ECONNREFUSED 127.0.0.1:27017
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1161:14)
[2019-08-08 14:37:33.644] [ERROR] console - Error: connect ECONNREFUSED 127.0.0.1:27017
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1161:14)
[2019-08-08 14:37:35.038] [ERROR] console - Error: connect ECONNREFUSED 127.0.0.1:27017
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1161:14)
[2019-08-08 14:37:36.388] [ERROR] console - Error: connect ECONNREFUSED 127.0.0.1:27017
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1161:14)
[2019-08-08 14:37:37.720] [ERROR] console - Error: connect ECONNREFUSED 127.0.0.1:27017
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1161:14)
[2019-08-08 14:37:39.063] [ERROR] console - Error: connect ECONNREFUSED 127.0.0.1:27017
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1161:14)
[2019-08-08 14:37:40.376] [ERROR] console - Error: connect ECONNREFUSED 127.0.0.1:27017
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1161:14)
[2019-08-08 14:37:41.829] [ERROR] console - Error: connect ECONNREFUSED 127.0.0.1:27017
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1161:14)
[2019-08-08 14:37:43.429] [ERROR] console - Error: connect ECONNREFUSED 127.0.0.1:27017
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1161:14)
[2019-08-08 14:37:45.142] [ERROR] console - Error: connect ECONNREFUSED 127.0.0.1:27017
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1161:14)
[2019-08-08 14:37:46.540] [ERROR] console - Error: connect ECONNREFUSED 127.0.0.1:27017
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1161:14)
[2019-08-08 14:37:47.946] [ERROR] console - Error: connect ECONNREFUSED 127.0.0.1:27017
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1161:14)
[2019-08-08 14:37:49.261] [ERROR] console - Error: connect ECONNREFUSED 127.0.0.1:27017
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1161:14)
[2019-08-08 14:37:50.771] [ERROR] console - Error: connect ECONNREFUSED 127.0.0.1:27017
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1161:14)
[2019-08-08 14:37:52.130] [ERROR] console - Error: connect ECONNREFUSED 127.0.0.1:27017
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1161:14)
[2019-08-08 14:37:53.535] [ERROR] console - Error: connect ECONNREFUSED 127.0.0.1:27017
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1161:14)
[2019-08-08 14:37:54.940] [ERROR] console - Error: connect ECONNREFUSED 127.0.0.1:27017
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1161:14)
[2019-08-08 14:37:56.452] [ERROR] console - Error: connect ECONNREFUSED 127.0.0.1:27017
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1161:14)
[2019-08-08 14:37:57.849] [ERROR] console - Error: connect ECONNREFUSED 127.0.0.1:27017
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1161:14)
[2019-08-08 14:37:59.257] [ERROR] console - Error: connect ECONNREFUSED 127.0.0.1:27017
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1161:14)
[2019-08-08 14:38:00.701] [ERROR] console - Error: connect ECONNREFUSED 127.0.0.1:27017
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1161:14)
[2019-08-08 14:38:02.050] [ERROR] console - Error: connect ECONNREFUSED 127.0.0.1:27017
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1161:14)
[2019-08-08 14:38:03.381] [ERROR] console - Error: connect ECONNREFUSED 127.0.0.1:27017
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1161:14)
[2019-08-08 14:38:04.745] [ERROR] console - Error: connect ECONNREFUSED 127.0.0.1:27017
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1161:14)
[2019-08-08 14:38:06.083] [ERROR] console - Error: connect ECONNREFUSED 127.0.0.1:27017
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1161:14)
[2019-08-08 14:38:07.656] [INFO] console - redis server connect success!
[2019-08-08 14:38:07.657] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-08-08 14:38:28.296] [INFO] console - redis server connect success!
[2019-08-08 14:38:28.297] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-08-08 14:38:40.931] [ERROR] http - ::1 - - "POST /api/file/uploadAvatar HTTP/1.1" 404 - "http://127.0.0.1:65314/" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.87 Safari/537.36"
[2019-08-08 14:41:22.060] [INFO] console - redis server connect success!
[2019-08-08 14:41:22.062] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-08-08 14:41:35.813] [ERROR] http - ::1 - - "POST /api/file/uploadAvatar HTTP/1.1" 404 - "http://127.0.0.1:65314/" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.87 Safari/537.36"
[2019-08-08 14:42:24.411] [ERROR] http - ::1 - - "GET /api/login HTTP/1.1" 404 - "" "PostmanRuntime/7.1.1"
[2019-08-08 14:42:57.748] [ERROR] http - ::1 - - "GET /api/posts/create HTTP/1.1" 404 - "" "PostmanRuntime/7.1.1"
[2019-08-08 14:43:12.245] [ERROR] http - ::1 - - "GET / HTTP/1.1" 404 - "" "PostmanRuntime/7.1.1"
[2019-08-08 14:43:54.612] [ERROR] http - ::ffff:127.0.0.1 - - "GET /api/posts/create HTTP/1.1" 404 - "" "PostmanRuntime/7.1.1"
[2019-08-08 14:44:31.858] [ERROR] http - ::ffff:127.0.0.1 - - "GET / HTTP/1.1" 404 - "" "PostmanRuntime/7.1.1"
[2019-08-08 14:45:32.737] [ERROR] http - ::ffff:127.0.0.1 - - "GET /api/posts/getPost HTTP/1.1" 404 - "" "PostmanRuntime/7.1.1"
[2019-08-08 14:46:09.626] [ERROR] http - ::ffff:127.0.0.1 - - "GET /api/posts/getPost HTTP/1.1" 404 - "" "PostmanRuntime/7.1.1"
[2019-08-08 14:46:24.653] [ERROR] http - ::ffff:127.0.0.1 - - "GET /api/posts/getPost HTTP/1.1" 404 - "" "PostmanRuntime/7.1.1"
[2019-08-08 14:47:55.366] [INFO] http - ::ffff:127.0.0.1 - - "GET /posts/getPost HTTP/1.1" 200 68 "" "PostmanRuntime/7.1.1"
[2019-08-08 14:48:17.369] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-08-08 14:48:17.450] [ERROR] console - API ERROR:   [0m[97m[41mError[0m[90m:[0m[37m [0m[97m{}[0m
[0m TypeError: Cannot read property 'avatar' of null
    at _callee$ (/workspace/DESserver/api/actions/api/file/uploadAvatar.js:26:12)
    at tryCatch (/workspace/DESserver/node_modules/regenerator-runtime/runtime.js:62:40)
    at Generator.invoke [as _invoke] (/workspace/DESserver/node_modules/regenerator-runtime/runtime.js:296:22)
    at Generator.prototype.(anonymous function) [as next] (/workspace/DESserver/node_modules/regenerator-runtime/runtime.js:114:21)
    at step (/workspace/DESserver/node_modules/babel-runtime/helpers/asyncToGenerator.js:17:30)
    at /workspace/DESserver/node_modules/babel-runtime/helpers/asyncToGenerator.js:28:13
    at run (/workspace/DESserver/node_modules/core-js/library/modules/es6.promise.js:75:22)
    at /workspace/DESserver/node_modules/core-js/library/modules/es6.promise.js:92:30
    at flush (/workspace/DESserver/node_modules/core-js/library/modules/_microtask.js:18:9)
    at process._tickCallback (internal/process/next_tick.js:172:11)
[2019-08-08 14:48:17.451] [ERROR] console - (node:76547) [DEP0079] DeprecationWarning: Custom inspection function on Objects via .inspect() is deprecated
[2019-08-08 14:48:17.452] [INFO] http - ::1 - - "POST /file/uploadAvatar HTTP/1.1" 200 58 "http://127.0.0.1:65314/" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.87 Safari/537.36"
[2019-08-08 14:49:30.981] [INFO] console - redis server connect success!
[2019-08-08 14:49:30.983] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-08-08 14:49:39.791] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-08-08 14:49:39.823] [INFO] http - ::1 - - "POST /file/uploadAvatar HTTP/1.1" 200 60 "http://127.0.0.1:65314/" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.87 Safari/537.36"
[2019-08-08 14:51:08.853] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-08-08 14:51:08.869] [INFO] http - ::1 - - "POST /file/uploadAvatar HTTP/1.1" 200 58 "http://127.0.0.1:65314/" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.87 Safari/537.36"
[2019-08-08 14:53:38.330] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-08-08 14:53:38.335] [INFO] http - ::1 - - "POST /file/uploadAvatar HTTP/1.1" 200 70 "http://127.0.0.1:65314/" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.87 Safari/537.36"
[2019-08-08 14:53:57.994] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-08-08 14:53:57.998] [INFO] http - ::1 - - "POST /file/uploadAvatar HTTP/1.1" 200 70 "http://127.0.0.1:65314/" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.87 Safari/537.36"
[2019-08-08 14:56:40.971] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-08-08 14:56:40.981] [INFO] http - ::1 - - "POST /file/uploadAvatar HTTP/1.1" 200 58 "http://127.0.0.1:65314/" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.87 Safari/537.36"
[2019-08-08 14:58:38.844] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-08-08 14:58:38.848] [INFO] http - ::1 - - "POST /file/uploadAvatar HTTP/1.1" 200 57 "http://127.0.0.1:65314/" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.87 Safari/537.36"
[2019-08-08 15:02:24.615] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-08-08 15:02:24.628] [INFO] http - ::1 - - "POST /file/uploadAvatar HTTP/1.1" 200 57 "http://127.0.0.1:65314/" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.87 Safari/537.36"
[2019-08-08 15:07:29.934] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-08-08 15:07:29.941] [INFO] http - ::1 - - "POST /file/uploadAvatar HTTP/1.1" 200 57 "http://127.0.0.1:65314/" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.87 Safari/537.36"
[2019-08-08 15:08:18.178] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-08-08 15:08:18.187] [INFO] http - ::1 - - "POST /file/uploadAvatar HTTP/1.1" 200 58 "http://127.0.0.1:65314/" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.87 Safari/537.36"
[2019-08-08 15:09:14.289] [INFO] console - [ [ { object: [Object], key: undefined },
    { object: [Object], key: undefined } ] ] 'results'
[2019-08-08 15:09:14.301] [INFO] http - ::1 - - "POST /file/uploadAvatar HTTP/1.1" 200 57 "http://127.0.0.1:65314/" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.87 Safari/537.36"
[2019-08-08 15:21:08.876] [INFO] console - redis server connect success!
[2019-08-08 15:21:08.878] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-08-08 15:21:14.838] [INFO] console - redis server connect success!
[2019-08-08 15:21:14.839] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-08-08 15:21:53.868] [ERROR] http - ::1 - - "POST /file/uploadAvatar HTTP/1.1" 404 - "http://127.0.0.1:65314/" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.87 Safari/537.36"
[2019-08-08 15:24:32.553] [INFO] console - redis server connect success!
[2019-08-08 15:24:32.554] [WARN] console - node_redis: Warning: Redis server does not require a password, but a password was supplied.
[2019-08-08 15:24:42.537] [INFO] http - ::1 - - "POST /file/uploadAvatar HTTP/1.1" 200 59 "http://127.0.0.1:55790/" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.87 Safari/537.36"
